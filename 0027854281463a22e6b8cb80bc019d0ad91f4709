{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "93e75cd6_278c2dcd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-08-12T12:45:44Z",
      "side": 1,
      "message": "T",
      "revId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dee619b9_02dda730",
        "filename": "polygerrit-ui/app/elements/shared/gr-textarea/gr-textarea_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 413,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-08-12T12:55:03Z",
      "side": 1,
      "message": "why do these need to be set manually if it is auto updating when `:smi` is typed?",
      "range": {
        "startLine": 411,
        "startChar": 0,
        "endLine": 413,
        "endChar": 0
      },
      "revId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ac5bb90_034a4807",
        "filename": "polygerrit-ui/app/elements/shared/gr-textarea/gr-textarea_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 413,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-08-12T13:13:57Z",
      "side": 1,
      "message": "// Needed for Safari tests. selectionStart is not updated when text is\n// updated.\nFound this comment in some other usage, I guess this comment is not duplicated every time it is used.",
      "parentUuid": "dee619b9_02dda730",
      "range": {
        "startLine": 411,
        "startChar": 0,
        "endLine": 413,
        "endChar": 0
      },
      "revId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e04b63d0_28bd2510",
        "filename": "polygerrit-ui/app/elements/shared/gr-textarea/gr-textarea_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 424,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-08-12T12:55:03Z",
      "side": 1,
      "message": "what is the point of asserting something that is incorrect due to a test mechanism? It should just be a comment explaining that it is a test-only quirk",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 424,
        "endChar": 72
      },
      "revId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb910e1f_c3f6361a",
        "filename": "polygerrit-ui/app/elements/shared/gr-textarea/gr-textarea_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 424,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-08-12T13:13:57Z",
      "side": 1,
      "message": "Asserts allows the reader to verify this is indeed the case instead of reading a comment.",
      "parentUuid": "e04b63d0_28bd2510",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 424,
        "endChar": 72
      },
      "revId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e36e66c1_16ced00a",
        "filename": "polygerrit-ui/app/elements/shared/gr-textarea/gr-textarea_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 426,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-08-12T12:55:03Z",
      "side": 1,
      "message": "This comment is not clear what \"Reset condition\" means",
      "range": {
        "startLine": 426,
        "startChar": 7,
        "endLine": 426,
        "endChar": 22
      },
      "revId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4470f98f_35617151",
        "filename": "polygerrit-ui/app/elements/shared/gr-textarea/gr-textarea_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 428,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-08-12T12:55:03Z",
      "side": 1,
      "message": "set the cursor position before the colon",
      "range": {
        "startLine": 428,
        "startChar": 18,
        "endLine": 428,
        "endChar": 41
      },
      "revId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bed081f9_023d9096",
        "filename": "polygerrit-ui/app/elements/shared/gr-textarea/gr-textarea_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 428,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-08-12T13:13:57Z",
      "side": 1,
      "message": "Position wasn\u0027t technically before the colon, text length is 19 I think.",
      "parentUuid": "4470f98f_35617151",
      "range": {
        "startLine": 428,
        "startChar": 18,
        "endLine": 428,
        "endChar": 41
      },
      "revId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b5a63dc_60895681",
        "filename": "polygerrit-ui/app/elements/shared/gr-textarea/gr-textarea_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 430,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-08-12T12:45:44Z",
      "side": 1,
      "message": "Please make the test fail by having these lines not be present, otherwise I do not see what this is adding as value except for line 424.",
      "revId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b421c5c5_94f563fd",
        "filename": "polygerrit-ui/app/elements/shared/gr-textarea/gr-textarea_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 430,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-08-12T12:48:18Z",
      "side": 1,
      "message": "\u003e Please make the test fail by having these lines not be present\nI don\u0027t understand. I mentioned in the commit message why the test is passing even without these lines.\n\nHow do you propose to make the test fail? The dropdown will reset when text changes but that is not what is being tested here.\n\nI added this because currently the test was passing without explicitly checking the condition it was testing but the test passing is still code working as intended(even if it is not the test working as intended).",
      "parentUuid": "9b5a63dc_60895681",
      "revId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bad014f7_8befad69",
        "filename": "polygerrit-ui/app/elements/shared/gr-textarea/gr-textarea_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 430,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-08-12T12:51:18Z",
      "side": 1,
      "message": "Line 421, 429 and 430 add no value to this test.  This test can run without them and no assertions fail.\n\nEither we need more assertions or those lines should be removed as they are superfluous.",
      "parentUuid": "b421c5c5_94f563fd",
      "revId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49a4bfac_e601c411",
        "filename": "polygerrit-ui/app/elements/shared/gr-textarea/gr-textarea_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 430,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-08-12T12:51:50Z",
      "side": 1,
      "message": "Whoops, didn\u0027t mean to resolve.",
      "parentUuid": "bad014f7_8befad69",
      "revId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9982c0ab_a71f9467",
        "filename": "polygerrit-ui/app/elements/shared/gr-textarea/gr-textarea_test.ts",
        "patchSetId": 4
      },
      "lineNbr": 430,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-08-12T13:13:57Z",
      "side": 1,
      "message": "SG Personally for me this improves readability but doesn\u0027t contribute to the test since the test passes without it.\nSkipping the change then.",
      "parentUuid": "49a4bfac_e601c411",
      "revId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Change-Is-Forward-Compatible",
        "description": {
          "value": "Changes to NoteDb or entities packages require careful consideration. \t\t      Make sure your change is forward compatible and add the footer \t\t      \u0027Forward-Compatible: checked\u0027 to your commit message"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\" OR file:\"^java/com/google/gerrit/entities/.*\\\\.java$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Forward-Compatible\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\" OR file:\"^java/com/google/gerrit/entities/.*\\\\.java$\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\"","file:\"^java/com/google/gerrit/entities/.*\\\\.java$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Forward-Compatible\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Style",
        "description": {
          "value": "Code has correct style and format"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Style\u003dMAX AND -label:Code-Style\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Style=MAX AND -label:Code-Style=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Style=MAX"],"failingAtoms":["label:Code-Style=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Library-Compliance",
        "description": {
          "value": "Changes to specific library/metadata files require additional approval"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Library-Compliance\u003dMAX,user\u003dnon_uploader AND -label:Library-Compliance\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^lib/.*\"","file:\"^WORKSPACE$\"","file:\"^.gitmodule$\"","file:\"^tools/deps.bzl$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Library-Compliance=MAX,user=non_uploader AND -label:Library-Compliance=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:allow-unresolved-comments"]}
      },
      "patchSetCommitId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Release-Notes",
        "description": {
          "value": "Changes must include a \u0027Release-Notes\u0027 footer with a single sentence to mention in the release notes. Changes not worth mentioning in the release notes should put \u0027Release-Notes: skip\u0027"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Release-Notes\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Release-Notes\""},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["hasfooter:\"Release-Notes\""],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config -onlyextensions:txt -onlyextensions:md"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config -onlyextensions:txt -onlyextensions:md"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","onlyextensions:txt","onlyextensions:md"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0027854281463a22e6b8cb80bc019d0ad91f4709",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}