{
  "comments": [
    {
      "key": {
        "uuid": "138547d8_fc866f69",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-17T13:42:48Z",
      "side": 1,
      "message": "RFCs?",
      "range": {
        "startLine": 9,
        "startChar": 9,
        "endLine": 9,
        "endChar": 13
      },
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf2fc9b9_86360dec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1027112
      },
      "writtenOn": "2017-03-17T19:37:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "138547d8_fc866f69",
      "range": {
        "startLine": 9,
        "startChar": 9,
        "endLine": 9,
        "endChar": 13
      },
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "081afb72_95383e0d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 689,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-17T13:42:48Z",
      "side": 1,
      "message": "Why is this necessary? It\u0027s clearly not for RFC compliance, because the only caller of parseRequest consumes the request after processing.\n\nI\u0027m guessing it has to do with our TTFB/TTLB metrics, which aren\u0027t otherwise mentioned in this change. So maybe this deserves a comment?",
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9be94881_2d79aeee",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 689,
      "author": {
        "id": 1027112
      },
      "writtenOn": "2017-03-17T19:35:38Z",
      "side": 1,
      "message": "\u003e the only caller of parseRequest consumes the request after processing.\n\nI cannot see that. Can you give me a pointer?",
      "parentUuid": "081afb72_95383e0d",
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac38f33f_15d617f7",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 689,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-28T17:54:55Z",
      "side": 1,
      "message": "The only caller of parseRequest is line 376, and consumeRequestBody is called on line 378. I guess the difference is that consumeRequestBody is not in a finally block. (Should it be?)",
      "parentUuid": "9be94881_2d79aeee",
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67579644_1828af40",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 689,
      "author": {
        "id": 1027112
      },
      "writtenOn": "2017-03-28T18:02:08Z",
      "side": 1,
      "message": "Two reasons for this structure.\n\n1) If I want to drain the request body in consumeRequestBody, I cannot tell whether I should use HttpServletRequest.getReader() or HttpServletRequest.getInputStream().\n2) HttpServletRequest.getReader() is already closed in parseRequest, so I cannot open it again and drain the body in consumeRequestBody. (close doesn\u0027t mean the request body is discarded)",
      "parentUuid": "ac38f33f_15d617f7",
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76c0526d_8596388d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 689,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-28T18:11:24Z",
      "side": 1,
      "message": "\u003e Two reasons for this structure.\n\u003e \n\u003e 1) If I want to drain the request body in consumeRequestBody, I cannot tell whether I should use HttpServletRequest.getReader() or HttpServletRequest.getInputStream().\n\u003e 2) HttpServletRequest.getReader() is already closed in parseRequest, so I cannot open it again and drain the body in consumeRequestBody. (close doesn\u0027t mean the request body is discarded)\n\nOk, that explains the try/finally here, thanks.",
      "parentUuid": "67579644_1828af40",
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e497582b_673b5e19",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 693,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-17T13:42:48Z",
      "side": 1,
      "message": "Note that parseRawInput just returns a wrapper around req.getInputStream(), it doesn\u0027t consume it. If we care about draining the request before returning from this method, possibly we need to eagerly parse raw inputs as well. Not sure of the performance implications though. In most cases, raw input strings should be quite short, but you never know.\n\n(I think from a security perspective we don\u0027t (currently) have to worry about a maliciously large POST body sucking up all our memory, because we always eagerly parse in the JSON case, so it\u0027s trivial for an attacker to send well-formed but excessively-long JSON.)",
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9a55566_d1bf4820",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 693,
      "author": {
        "id": 1027112
      },
      "writtenOn": "2017-03-17T19:35:38Z",
      "side": 1,
      "message": "Please see consumeRequestBody below. It\u0027s a method that handles this case.",
      "parentUuid": "e497582b_673b5e19",
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cc466bc_b67cb0d5",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 693,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-28T17:54:55Z",
      "side": 1,
      "message": "Right, but that was exactly the source of my confusion in the previous comment.\n\nThere are 2 paths through this method:\n\n* JSON: request body is _consumed before returning_ by the br.skip on line 689.\n* Raw input: request body is _not consumed before returning_.\n\nIn both cases, consumeRequestBody is called after the method returns (modulo exceptions). So I am left wondering why there is a difference in the behavior within this method.",
      "parentUuid": "d9a55566_d1bf4820",
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bb227a4_e68447ec",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 693,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2017-03-28T17:59:47Z",
      "side": 1,
      "message": "consumeRequestBody is a no-op except in the raw input case.",
      "parentUuid": "9cc466bc_b67cb0d5",
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dea17506_90970c13",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 693,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-28T18:02:01Z",
      "side": 1,
      "message": "Ok, that is really hard to follow, but I guess I\u0027m convinced it\u0027s correct (except that maybe consumeRequestBody should be in a finally block).",
      "parentUuid": "2bb227a4_e68447ec",
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7003de76_273ea2ad",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 693,
      "author": {
        "id": 1027112
      },
      "writtenOn": "2017-03-28T18:02:08Z",
      "side": 1,
      "message": "Please see the other comment for this structure.",
      "parentUuid": "9cc466bc_b67cb0d5",
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92e0ae57_5ce08c1d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 693,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2017-03-28T18:06:11Z",
      "side": 1,
      "message": "The request only needs to be drained for responses with status \u003c 400. Exceptions are only thrown for cases that will produce a \u003e\u003d 400 response, so this doesn\u0027t need to be in a finally.\n\nIf an exception were used to produce a \u003c 400 response, we would need a finally in a nested try block to ensure that the request is drained before writing the response. Draining the request in the success path and relying on exceptions producing status \u003c 400 is simpler.",
      "parentUuid": "7003de76_273ea2ad",
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e42e712_66585e7d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 693,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-28T18:11:24Z",
      "side": 1,
      "message": "\u003e Exceptions are only thrown for cases that will produce a \u003e\u003d 400 response, so this doesn\u0027t need to be in a finally.\n\nAh, this is what I was missing. I was thinking about our servlet glue code where we do use exceptions to generate 302s, but we don\u0027t within Gerrit core. Thanks.\n\nPlease try to make the logic a little easier to follow:\n* explain some of the rationale from your comment above in the finally block\n* rename consumeRequestBody or add a comment so it\u0027s clearer *at the call site* that this method call is only useful for raw inputs.",
      "parentUuid": "92e0ae57_5ce08c1d",
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "febc03c5_24d7eef5",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 693,
      "author": {
        "id": 1027112
      },
      "writtenOn": "2017-03-28T18:22:39Z",
      "side": 1,
      "message": "Done. PTAL.",
      "parentUuid": "9e42e712_66585e7d",
      "revId": "019cb4e0b5a8b4ebffbbfa7863f3ace3cf9ff498",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}