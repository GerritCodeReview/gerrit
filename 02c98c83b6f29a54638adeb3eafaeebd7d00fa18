{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e765d564_6103727a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-12-08T12:13:19Z",
      "side": 1,
      "message": "ping",
      "revId": "02c98c83b6f29a54638adeb3eafaeebd7d00fa18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fca9f1d_3c345457",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-12-21T13:15:12Z",
      "side": 1,
      "message": "PTAL",
      "revId": "02c98c83b6f29a54638adeb3eafaeebd7d00fa18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c44acaf0_4456ee0b",
        "filename": "java/com/google/gerrit/httpd/raw/IndexHtmlUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-12-09T05:53:36Z",
      "side": 1,
      "message": "Document these keys in release notes in this series, and amend the change from change 288131?\n\nIs it really a good idea to declare patchset_comments as default experiment feature? What if we declare that feature as not production ready in release 3.3 yet (as it\u0027s breaking CI integrations) but still allow to enable it, using: \"experiments.enabled\" configuration section? This should be already possible without this change.\n\nThe majority of Gerrit sites use Jenkins Gerrit Trigger plugin or Zuul or similar CI integrations that rely on stream events. Until patch set comment feature fully supports those it can not replace change messages per default. I don\u0027t think it\u0027s a good idea to write in the release notes something like this:\n\n  Given that patchset_comments feature is activated per default but broke the\n  CI integration, you have to disable it to fix the CI integration again\n  in $gerrit_site/etc/gerrit.config:\n\n  [experiments]\n    disabled \u003d UiFeature__patchset_comments",
      "range": {
        "startLine": 54,
        "startChar": 10,
        "endLine": 54,
        "endChar": 88
      },
      "revId": "02c98c83b6f29a54638adeb3eafaeebd7d00fa18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1fe5f81_fe2afbd8",
        "filename": "java/com/google/gerrit/httpd/raw/IndexHtmlUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-12-09T08:22:53Z",
      "side": 1,
      "message": "\u003e Document these keys in release notes in this series, and amend the change from change 288131?\n\nYes. Will do. Since release notes are in the homepage repo, I\u0027ll send a separate change for that.\n\n\u003e Is it really a good idea to declare patchset_comments as default experiment feature?\n\nI understand your concern, but I feel strongly about avoiding having to tweak gerrit.config for any of these experiments. That\u0027s why we decided to go this way of declaring a set of defaults in the binary where we don\u0027t need any kind of migration and allow users to enable/disable in gerrit.config.\n\nThe experiment is already a default now in 3.3 right now because the keys were removed and hence the feature is in by default and you can\u0027t turn it off.\n\nI think that\u0027s the best way of getting people to migrate: Turn the new behavior on by default but allow them to revert using a simple setting. By that, they are forced to learn about a change that will break them in the next release when the setting will be gone and there\u0027s now way to revert. IMO this is better than release notes or other types of announcements that might or might not get read.\n\nWDYT?",
      "parentUuid": "c44acaf0_4456ee0b",
      "range": {
        "startLine": 54,
        "startChar": 10,
        "endLine": 54,
        "endChar": 88
      },
      "revId": "02c98c83b6f29a54638adeb3eafaeebd7d00fa18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f09f7cf0_8909b38f",
        "filename": "java/com/google/gerrit/httpd/raw/IndexHtmlUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-12-09T10:12:17Z",
      "side": 1,
      "message": "I also would like to see people migrating to new features ASAP.\n\nDon\u0027t get me wrong: I like patch set comment feature and I\u0027m looking forward to see performance improvement on change screen load. However, patch set comment feature is not complete yet: stream event integration part is still missing. And that why working change message feature cannot be replaced by default (!) with non complete feature.\n\nGerrit 3.3.0 is broken anyway, so that we have two options for upcoming 3.3.1 fix release:\n\n* 1. Fix mssing stream event integration for patch set comment feature and let it enabled per default (then we don\u0027t need this change)\n* 2. Disable patch set comment feature per default\n\nI don\u0027t see option 3, what this change is currently doing:\n\n* 3. Confirm that patch set comment feature is not complete, but enable it per default anyway and force gerrit users to disable it",
      "parentUuid": "f1fe5f81_fe2afbd8",
      "range": {
        "startLine": 54,
        "startChar": 10,
        "endLine": 54,
        "endChar": 88
      },
      "revId": "02c98c83b6f29a54638adeb3eafaeebd7d00fa18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "584f0de0_db6a12f4",
        "filename": "java/com/google/gerrit/httpd/raw/IndexHtmlUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-12-09T10:16:32Z",
      "side": 1,
      "message": "\u003e stream event integration part is still missing\n\nAh, sorry. I didn\u0027t know. Yeah, in that case let\u0027s not make it a default just yet. I was under the impression that the feature is 100% done.",
      "parentUuid": "f09f7cf0_8909b38f",
      "range": {
        "startLine": 54,
        "startChar": 10,
        "endLine": 54,
        "endChar": 88
      },
      "revId": "02c98c83b6f29a54638adeb3eafaeebd7d00fa18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2093d29_d293fb71",
        "filename": "java/com/google/gerrit/httpd/raw/IndexHtmlUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2020-12-09T13:41:52Z",
      "side": 1,
      "message": "For 1.) is it a given that if we add stream-event integration, it will work seamlessly with existing CI? I would expect not.\n\nI want to avoid a situation where someone upgrades to 3.4 and then wedges themselves in the same way they do with 3.3 today. Maybe we should have a schema migration that checks that the experiment is not disabled before the upgrade to 3.4 completes?",
      "parentUuid": "584f0de0_db6a12f4",
      "range": {
        "startLine": 54,
        "startChar": 10,
        "endLine": 54,
        "endChar": 88
      },
      "revId": "02c98c83b6f29a54638adeb3eafaeebd7d00fa18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0df81607_5a49b8da",
        "filename": "java/com/google/gerrit/httpd/raw/IndexHtmlUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-12-09T13:46:40Z",
      "side": 1,
      "message": "\u003e Maybe we should have a schema migration that checks that the experiment is not disabled before the upgrade to 3.4 completes?\n\nDon\u0027t we have that implicitly by disabling it on 3.3 (\u003d not enabling it by default)? On master we won\u0027t disable the experiment, so 3.4 will ship with it.\n\nI don\u0027t expect anyone to come in and tweak this setting on stable 3.3.",
      "parentUuid": "b2093d29_d293fb71",
      "range": {
        "startLine": 54,
        "startChar": 10,
        "endLine": 54,
        "endChar": 88
      },
      "revId": "02c98c83b6f29a54638adeb3eafaeebd7d00fa18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f4dc517_8783a314",
        "filename": "java/com/google/gerrit/httpd/raw/IndexHtmlUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-09T17:09:11Z",
      "side": 1,
      "message": "\u003e \u003e Maybe we should have a schema migration that checks that the experiment is not disabled before the upgrade to 3.4 completes?\n\u003e \n\u003e Don\u0027t we have that implicitly by disabling it on 3.3 (\u003d not enabling it by default)? On master we won\u0027t disable the experiment, so 3.4 will ship with it.\n\u003e \n\u003e I don\u0027t expect anyone to come in and tweak this setting on stable 3.3.\n\n+1\n\nI know that the feature is *incomplete* because we (all of us) missed the E2E testing side of the stream events, and I started working on filling the gap.\n\nI am planning to finalise that change, include the extra data into the stream events, and fix the Jenkins CI integration.\n\nIn that way, the feature can be left enabled in v3.3.1 and fully working.",
      "parentUuid": "0df81607_5a49b8da",
      "range": {
        "startLine": 54,
        "startChar": 10,
        "endLine": 54,
        "endChar": 88
      },
      "revId": "02c98c83b6f29a54638adeb3eafaeebd7d00fa18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4050be17_975f61fa",
        "filename": "java/com/google/gerrit/httpd/raw/IndexHtmlUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-12-09T21:29:29Z",
      "side": 1,
      "message": "Change 291144: is the first attempt to establish backwards compatibility in stream event between change message  and patch set level comment.",
      "parentUuid": "9f4dc517_8783a314",
      "range": {
        "startLine": 54,
        "startChar": 10,
        "endLine": 54,
        "endChar": 88
      },
      "revId": "02c98c83b6f29a54638adeb3eafaeebd7d00fa18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce39fbc1_da102182",
        "filename": "java/com/google/gerrit/httpd/raw/IndexHtmlUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-12-10T09:08:53Z",
      "side": 1,
      "message": "There is another missing feature SSH command support. I filed issue 13806.",
      "parentUuid": "4050be17_975f61fa",
      "range": {
        "startLine": 54,
        "startChar": 10,
        "endLine": 54,
        "endChar": 88
      },
      "revId": "02c98c83b6f29a54638adeb3eafaeebd7d00fa18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24ad0d71_ebbeb9cc",
        "filename": "java/com/google/gerrit/httpd/raw/IndexHtmlUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2020-12-10T18:19:09Z",
      "side": 1,
      "message": "the plan sounds OK.  But we will still submit this change, right? There might be other CI system that rely on this feature.\n\nMy earlier remark is just about upgrades: we want to avoid the situation where someone upgrades, and only then discovers their CI is broken, because they might not have way to downgrade gerrit again. Hence my idea to check if the feature is enabled.",
      "parentUuid": "ce39fbc1_da102182",
      "range": {
        "startLine": 54,
        "startChar": 10,
        "endLine": 54,
        "endChar": 88
      },
      "revId": "02c98c83b6f29a54638adeb3eafaeebd7d00fa18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a1f5262_cb224138",
        "filename": "java/com/google/gerrit/httpd/raw/IndexHtmlUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-12-21T13:14:45Z",
      "side": 1,
      "message": "Sounds like this code can stay as it is. Thanks all.",
      "parentUuid": "24ad0d71_ebbeb9cc",
      "range": {
        "startLine": 54,
        "startChar": 10,
        "endLine": 54,
        "endChar": 88
      },
      "revId": "02c98c83b6f29a54638adeb3eafaeebd7d00fa18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}