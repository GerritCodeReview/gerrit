{
  "comments": [
    {
      "key": {
        "uuid": "d065072b_1a46fd3c",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 12
      },
      "lineNbr": 2118,
      "author": {
        "id": 1017389
      },
      "writtenOn": "2014-09-10T12:07:37Z",
      "side": 1,
      "message": "12 shards might be an excessive default. Many (most?) sites will probably run a small number of nodes (perhaps just one) and/or not have copious amount of data.",
      "range": {
        "startLine": 2118,
        "startChar": 12,
        "endLine": 2118,
        "endChar": 14
      },
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d04c27b5_9c84c551",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 88,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "Expose these constants so they can be used from InitStep.\n\nIf you\u0027d rather not make ElasticsearchChangeIndex public, you can move them to a separate class.",
      "range": {
        "startLine": 88,
        "startChar": 2,
        "endLine": 88,
        "endChar": 9
      },
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d04c27b5_fc91898d",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 88,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "static",
      "range": {
        "startLine": 88,
        "startChar": 2,
        "endLine": 88,
        "endChar": 15
      },
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f03f6be6_dd1c8b85",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 89,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "INDEX_NAME?",
      "range": {
        "startLine": 89,
        "startChar": 41,
        "endLine": 89,
        "endChar": 49
      },
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f03f6be6_3d4bef75",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 105,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "Nit: logger comes first before all other constants",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f03f6be6_1d50b31c",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 127,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "Optional: checkArgument",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d04c27b5_dc8e4d6d",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 135,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "Avoid the deprecation warning, use LATEST",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d04c27b5_3c5db126",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 138,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "Per Ibed25695 should this be our custom analyzer?",
      "range": {
        "startLine": 138,
        "startChar": 20,
        "endLine": 138,
        "endChar": 36
      },
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f03f6be6_7d45775e",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 140,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "Left in debug logging?",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d04c27b5_1ccb958c",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 154,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "I am very leery of releasing this without online reindexing support. What are the plans for that?",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d04c27b5_5c5cfd26",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 191,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-flush.html\n\nLooks like if you don\u0027t set wait_if_ongoing, then concurrent writes will throw an exception?",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d04c27b5_bc70a1a7",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 203,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "Is this actually what you want to do? The flush docs above say it\u0027s mostly for freeing up memory. Sounds like you might want refresh:\nhttp://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-refresh.html",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "106cff13_9c516df0",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 203,
      "author": {
        "id": 1017389
      },
      "writtenOn": "2014-09-10T12:07:37Z",
      "side": 1,
      "message": "Flushing seems unnecessary (http://stackoverflow.com/questions/19963406/refresh-vs-flush), and I doubt we want an explicit refresh for each update operation. By default they take place once every second, and increasing the frequency will hurt performance. Unless we need the updates to be immediately searchable?",
      "parentUuid": "d04c27b5_bc70a1a7",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d065072b_1aaa7d73",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 203,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-10T12:19:04Z",
      "side": 1,
      "message": "\u003e Unless we need the updates to be immediately searchable?\n\nThis.\n\nIt is very easy to press \u0027u\u0027 or equivalent to go to a dashboard from the change screen after (or during) a submit, and it\u0027s a bad user experience to not reflect the fact that a change was just submitted. 1s latency is too much.\n\nWe go to great lengths in Lucene land to wait until the results of a particular write are available. Lucene makes this possible because its NRT reopen thread can read the same in-memory state of the IndexWriter that did the write, and it\u0027s cheap enough to spin every 10ms or so.\n\nThe distributed nature of ES makes this approach unlikely to work, unfortunately, but we\u0027ll have to see what the latency hit is. We could also make it configurable.\n\nFWIW on googlesource.com our median index update time is in the 10s of ms and people mostly don\u0027t complain.",
      "parentUuid": "106cff13_9c516df0",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "106cff13_fcbd019d",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 203,
      "author": {
        "id": 1017389
      },
      "writtenOn": "2014-09-10T13:15:43Z",
      "side": 1,
      "message": "The document will be available to GET requests right away, but I suppose we\u0027ll always be using the search/query APIs. The REST-based update API has an option to trigger a refresh directly after the update. If that\u0027s available through the Java API as well (if we indeed should use that API) it seems like a better option than a separate refresh call.\n\nhttp://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-index_.html#index-refresh",
      "parentUuid": "d065072b_1aaa7d73",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "106cff13_bce549b3",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 203,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-10T13:21:03Z",
      "side": 1,
      "message": "Yes, if this is available in a single call, let\u0027s skip the extra RTT. It\u0027s conceivable that the shard processing the update would even be able to take advantage of Lucene\u0027s NRT features.",
      "parentUuid": "106cff13_fcbd019d",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d04c27b5_1c6275e4",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 217,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "Does ES make it easy for these to be async? If so, do it. If not, don\u0027t worry about it.",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d04c27b5_9c6de5d1",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 281,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "Well that reminded me I need to kill a bunch of sortkey code in 2.11 or so :)",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d04c27b5_fc6a29b5",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 316,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "Use Ints.tryParse instead of using unchecked exceptions for control flow.",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f03f6be6_5d4a3b6e",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 325,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "Optional nit: unnecessary blank line",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d04c27b5_dc676ded",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 359,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "What about populating ChangeData fields from stored fields in the index? Does ES not provide a way to store fields and fetch them back?\n\nAt the very least, add a TODO",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d04c27b5_1c79d59c",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/init/InitIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 56,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "Optional nit: convention elsewhere is not to capitalize after the first word. (The solr block is inconsistent.)",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f03f6be6_9d120371",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/init/InitIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 58,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "Checking my understanding: an admin could do something like pointing multiple gerrit servers at the same set of elasticsearch servers, in which case they would want to vary this. Sound right?",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "106cff13_3cead9c4",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/init/InitIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 58,
      "author": {
        "id": 1017389
      },
      "writtenOn": "2014-09-10T12:07:37Z",
      "side": 1,
      "message": "While it\u0027s possible to have a single host be part of multiple ES clusters, it probably makes more sense to use different indexes in the same cluster. We should make the index name configurable.",
      "parentUuid": "f03f6be6_9d120371",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d065072b_1718964b",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/init/InitIndex.java",
        "patchSetId": 12
      },
      "lineNbr": 58,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-09-10T12:10:48Z",
      "side": 1,
      "message": "Yes.  The \"cluster\" setting can be specified in gerrit.config.",
      "parentUuid": "f03f6be6_9d120371",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d065072b_ba06e9ef",
        "filename": "lib/elasticsearch/BUCK",
        "patchSetId": 12
      },
      "lineNbr": 5,
      "author": {
        "id": 1017389
      },
      "writtenOn": "2014-09-10T12:07:37Z",
      "side": 1,
      "message": "So... we\u0027re going to use the native Java client after all? I think the dependency between the Java client and the ES version is a rather big issue. Are the downsides with the REST interface sufficiently large?",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "106cff13_7c0d710d",
        "filename": "lib/elasticsearch/BUCK",
        "patchSetId": 12
      },
      "lineNbr": 5,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-09-10T12:10:48Z",
      "side": 1,
      "message": "I found that the REST interface (jest) has a dependency on parts of the java client.",
      "parentUuid": "d065072b_ba06e9ef",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d065072b_7aaa915b",
        "filename": "lib/elasticsearch/BUCK",
        "patchSetId": 12
      },
      "lineNbr": 5,
      "author": {
        "id": 1017389
      },
      "writtenOn": "2014-09-10T13:15:43Z",
      "side": 1,
      "message": "Right, but isn\u0027t the problem that the Java API uses RMI and doesn\u0027t have any backward or forward compatibility guarantees? The REST API is stable. Whether or not we\u0027ll use parts of the Java API for constructing the REST requests seems immaterial.",
      "parentUuid": "106cff13_7c0d710d",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f03f6be6_fd1fc776",
        "filename": "lib/elasticsearch/BUCK",
        "patchSetId": 12
      },
      "lineNbr": 9,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-09T14:12:20Z",
      "side": 1,
      "message": "Optional nit: don\u0027t list deps if it\u0027s empty.",
      "revId": "02eb691a40daa8713398bee79534698be3cd984f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}