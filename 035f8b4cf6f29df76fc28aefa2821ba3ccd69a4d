{
  "comments": [
    {
      "key": {
        "uuid": "316b1d7d_66935547",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2020-09-09T09:14:55Z",
      "side": 1,
      "message": "AFAICT change to \u0027polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.js\u0027 is missing (compare against the 1 parent)",
      "revId": "035f8b4cf6f29df76fc28aefa2821ba3ccd69a4d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d8ed08c_ddc07ba2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-09-09T12:38:21Z",
      "side": 1,
      "message": "You are referring to the change [1] which is also preserved (applicable) in [2]. However, for this target stable-3.2 branch, that changed code is no longer there in that base: [3]. The reviewerId is no longer set in that send method. Starting from stable-3.2, it is used only in _mapReviewer. That is why the Auto Merge diff shows this automatic resolution ([3]).\n\nNow, there might be a need to redo this fix [1] again in a slightly different way, from this branch upwards. Meaning, maybe reviewerId needs to be a decoded one but from another line in that file. If so, that I think should be a follow-up change based on stable-3.2 and after these merge-ups. Unless it gets decided that another change is needed from downstream, say, if code that is common to all these branches gets amended rather (which would be another solution compared to the original one).\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/280956/-1..1/polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.js\n\n[2] https://gerrit-review.googlesource.com/c/gerrit/+/280957\n\n[3] https://gerrit-review.googlesource.com/c/gerrit/+/280958/1/polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.js",
      "parentUuid": "316b1d7d_66935547",
      "revId": "035f8b4cf6f29df76fc28aefa2821ba3ccd69a4d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f43dbe25_2dac9c54",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-09-10T12:28:04Z",
      "side": 1,
      "message": "@Jacek, does my explanation above make sense to you too? If so, would you be able to reconsider your CR-1 score? Thanks.",
      "parentUuid": "3d8ed08c_ddc07ba2",
      "revId": "035f8b4cf6f29df76fc28aefa2821ba3ccd69a4d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ec6ec70_df8604f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2020-09-10T14:19:57Z",
      "side": 1,
      "message": "Sorry I\u0027m not following :/ functionality was moved to \u0027_mapReviewer\u0027 method and I was under impression that fix will be applied there as a part of this merge commit.\n\nWhat\u0027s the point in merging stuff if some (one has no idea which) fixes have to be re-applied again as the follow ups? I mean if I was not reviewing it who would be responsible for capturing that the fix is not applied regardless of what is described in the commit message? IMHO that approach is prone to errors however if that is the way I can issue the follow-up fix for that... which will be later merged-up again to master...",
      "parentUuid": "f43dbe25_2dac9c54",
      "revId": "035f8b4cf6f29df76fc28aefa2821ba3ccd69a4d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "279a14cb_025f6fe2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-09-10T14:42:16Z",
      "side": 1,
      "message": "\u003e Sorry I\u0027m not following :/ functionality was moved to \u0027_mapReviewer\u0027 method and I was under impression that fix will be applied there as a part of this merge commit.\n\nNot \u0027moved\u0027 as such. If you think a fix makes sense in _mapReviewer or elsewhere similar, then that is a new fix to do, not directly related to this merged one. That\u0027s why I mentioned the eventuality of having to rework this fix downstream then up again. That would be a second iteration.\n\n\u003e What\u0027s the point in merging stuff if some (one has no idea which) fixes have to be re-applied again as the follow ups? I mean if I was not reviewing it who would be responsible for capturing that the fix is not applied regardless of what is described in the commit message? IMHO that approach is prone to errors however if that is the way I can issue the follow-up fix for that... which will be later merged-up again to master...\n\nIndeed. As I mention above, we\u0027re now discussing a possible rework of the original fix, as we (now) discover that _mapReviewer might need amends -but starting from downstream.\n\nBasically, when working on fixes or other changes, we try to check how they will be mergeable up. We strive for the downstream-most change that can be merged upstream as smoothly as possible. Some fixes may require different implementations across branches, depending on a specific version code-base.",
      "parentUuid": "1ec6ec70_df8604f3",
      "revId": "035f8b4cf6f29df76fc28aefa2821ba3ccd69a4d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be7fac14_6c6e9ef3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2020-09-11T08:42:58Z",
      "side": 1,
      "message": "\u003e Basically, when working on fixes or other changes, we try to check how they will be mergeable up. We strive for the downstream-most change that can be merged upstream as smoothly as possible. Some fixes may require different implementations across branches, depending on a specific version code-base.\n\nThat is nothing unusual. The approach to solve it is unusual to me. I would prefer to have this fix applied in this change rather than having another one describing the same. Otherwise what is the point in reviewing the merge commits as they are nothing but the automatic merge? To answer the other concern: indeed the fix for 3.2+ has to be applied in the _mapReviewer method (that is working since couple of weeks in our production) so I can apply it as a next PS to this change.",
      "parentUuid": "279a14cb_025f6fe2",
      "revId": "035f8b4cf6f29df76fc28aefa2821ba3ccd69a4d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80f5e1e0_2eee544f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-09-11T13:05:07Z",
      "side": 1,
      "message": "\u003e \u003e Basically, when working on fixes or other changes, we try to check how they will be mergeable up. We strive for the downstream-most change that can be merged upstream as smoothly as possible. Some fixes may require different implementations across branches, depending on a specific version code-base.\n\u003e \n\u003e That is nothing unusual. The approach to solve it is unusual to me. I would prefer to have this fix applied in this change rather than having another one describing the same. Otherwise what is the point in reviewing the merge commits as they are nothing but the automatic merge? To answer the other concern: indeed the fix for 3.2+ has to be applied in the _mapReviewer method (that is working since couple of weeks in our production) so I can apply it as a next PS to this change.\n\nSure, please do. You may amend this change or push a direct follow-up in this branch, at will. Let\u0027s wait for your upcoming patch and resume this review after.\n\nI will also abandon I83c183bbd so you have a chance to push an upstream merge based on this rework of yours. Thanks.",
      "parentUuid": "be7fac14_6c6e9ef3",
      "revId": "035f8b4cf6f29df76fc28aefa2821ba3ccd69a4d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "191fcb89_1cbce1d2",
        "filename": "Documentation/dev-e2e-tests.txt",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-09-11T17:58:40Z",
      "side": 1,
      "message": "These adaptations were dropped while patching. We basically need to add [1] before each such closing square bracket.\n\n[1] ,role\u003dexternal,window\u003d_blank",
      "range": {
        "startLine": 187,
        "startChar": 83,
        "endLine": 189,
        "endChar": 105
      },
      "revId": "035f8b4cf6f29df76fc28aefa2821ba3ccd69a4d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e89fc463_eec1bb0f",
        "filename": "Documentation/dev-e2e-tests.txt",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2020-09-12T05:53:48Z",
      "side": 1,
      "message": "Haven\u0027t noticed that. Should have probably not done it 5 mins before leaving for weekend ;). Thanks for pointing it out :D",
      "parentUuid": "191fcb89_1cbce1d2",
      "range": {
        "startLine": 187,
        "startChar": 83,
        "endLine": 189,
        "endChar": 105
      },
      "revId": "035f8b4cf6f29df76fc28aefa2821ba3ccd69a4d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}