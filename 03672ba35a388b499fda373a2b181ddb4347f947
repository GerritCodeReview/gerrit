{
  "comments": [
    {
      "key": {
        "uuid": "cd5481b3_03fa0ee9",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 4
      },
      "lineNbr": 296,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-01-14T19:48:59Z",
      "side": 0,
      "message": "Your newGson() doesn\u0027t include this does it?",
      "range": {
        "startLine": 296,
        "startChar": 8,
        "endLine": 296,
        "endChar": 77
      },
      "revId": "03672ba35a388b499fda373a2b181ddb4347f947",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad6aed63_ca2de3b0",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 4
      },
      "lineNbr": 296,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-01-14T20:11:03Z",
      "side": 0,
      "message": "Yes, it does. I borrowed the standard method from OutputFormat, that does just that:\n\n  GsonBuilder gb \u003d new GsonBuilder()\n      .setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES)\n      .registerTypeAdapter(Timestamp.class, new SqlTimestampDeserializer());",
      "parentUuid": "cd5481b3_03fa0ee9",
      "range": {
        "startLine": 296,
        "startChar": 8,
        "endLine": 296,
        "endChar": 77
      },
      "revId": "03672ba35a388b499fda373a2b181ddb4347f947",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}