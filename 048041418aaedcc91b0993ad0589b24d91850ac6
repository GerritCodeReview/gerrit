{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2c16fdba_6a7d5a72",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1140732
      },
      "writtenOn": "2022-04-28T02:39:49Z",
      "side": 1,
      "message": "Also updated command description and commit message.",
      "revId": "048041418aaedcc91b0993ad0589b24d91850ac6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fc5a935_f435e90a",
        "filename": "java/com/google/gerrit/sshd/commands/CheckProjectAccessCommand.java",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-04-28T07:44:36Z",
      "side": 1,
      "message": "Why not import org.eclipse.jgit.errors.ConfigInvalidException?",
      "range": {
        "startLine": 63,
        "startChar": 39,
        "endLine": 63,
        "endChar": 85
      },
      "revId": "048041418aaedcc91b0993ad0589b24d91850ac6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abb509cf_459cb267",
        "filename": "java/com/google/gerrit/sshd/commands/CheckProjectAccessCommand.java",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 1140732
      },
      "writtenOn": "2022-05-03T18:54:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fc5a935_f435e90a",
      "range": {
        "startLine": 63,
        "startChar": 39,
        "endLine": 63,
        "endChar": 85
      },
      "revId": "048041418aaedcc91b0993ad0589b24d91850ac6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4de46f5_01db26ff",
        "filename": "java/com/google/gerrit/sshd/commands/CheckProjectAccessCommand.java",
        "patchSetId": 8
      },
      "lineNbr": 92,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-04-28T07:44:36Z",
      "side": 1,
      "message": "I realize that it was part of my suggestion to catch this exception (my bad) but the permission back-end not being able to check permission [1] shouldn\u0027t be relayed to the caller as though the user doesn\u0027t have access. IMO it should be allowed to percolate to run() and be handled similarly as ConfigInvalidException, ResourceNotFoundException and IllegalArgumentException at catch on line 66.\n\n[1] \"Thrown when {@link PermissionBackend} cannot compute the result\"",
      "range": {
        "startLine": 92,
        "startChar": 13,
        "endLine": 92,
        "endChar": 41
      },
      "revId": "048041418aaedcc91b0993ad0589b24d91850ac6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ded57166_85a5dc5d",
        "filename": "java/com/google/gerrit/sshd/commands/CheckProjectAccessCommand.java",
        "patchSetId": 8
      },
      "lineNbr": 92,
      "author": {
        "id": 1140732
      },
      "writtenOn": "2022-05-03T18:54:00Z",
      "side": 1,
      "message": "Thank you for pointing out. The querying user\u0027s access level was assumed to be an admin level, so the Permission backend exception to check if querier has a limited access level was missing. I have released a new patch set so that only admin or user who has view access capability can have access to the command. \n\nOn the other hand, line 92\u0027s purpose is to check if the searched user by the given String has the access to the given project, not a querying user. Can I ask if it would be still desirable to be handled similarly to other exception caches on line 66 in this case?",
      "parentUuid": "a4de46f5_01db26ff",
      "range": {
        "startLine": 92,
        "startChar": 13,
        "endLine": 92,
        "endChar": 41
      },
      "revId": "048041418aaedcc91b0993ad0589b24d91850ac6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4848dd80_5ae55bc0",
        "filename": "java/com/google/gerrit/sshd/commands/CheckProjectAccessCommand.java",
        "patchSetId": 8
      },
      "lineNbr": 92,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-05-04T06:02:05Z",
      "side": 1,
      "message": "When PermissionBackendException is thrown it means that the permission backend has malfunctioned it says nothing about whether the user has access or not. If we report it\u0027s presence as though the queried user doesn\u0027t have access we potentially report a false negative.\nThe correct way to handle it is to let the calling user know that \"it\u0027s currently not working, try again later\" by propagating the excption to where the other fatal exceptions are handled and call die().",
      "parentUuid": "ded57166_85a5dc5d",
      "range": {
        "startLine": 92,
        "startChar": 13,
        "endLine": 92,
        "endChar": 41
      },
      "revId": "048041418aaedcc91b0993ad0589b24d91850ac6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec850a39_7f468756",
        "filename": "java/com/google/gerrit/sshd/commands/CheckProjectAccessCommand.java",
        "patchSetId": 8
      },
      "lineNbr": 92,
      "author": {
        "id": 1140732
      },
      "writtenOn": "2022-05-10T19:58:53Z",
      "side": 1,
      "message": "Thank you so much for the detailed explanation, I reverted back using the check to catch exceptions separately for permission backend exception and auth exception, and to be percolate to run() and not relayed to the caller.",
      "parentUuid": "4848dd80_5ae55bc0",
      "range": {
        "startLine": 92,
        "startChar": 13,
        "endLine": 92,
        "endChar": 41
      },
      "revId": "048041418aaedcc91b0993ad0589b24d91850ac6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e2c5c49_e2da98d3",
        "filename": "java/com/google/gerrit/sshd/commands/CheckProjectAccessCommand.java",
        "patchSetId": 8
      },
      "lineNbr": 92,
      "author": {
        "id": 1140732
      },
      "writtenOn": "2022-05-11T16:13:54Z",
      "side": 1,
      "message": "Would it be acceptable to handle permission backend exception by outputting String error message instead of calling die() as shown in patchset 10? I was wondering since as far I understand, it would require overall structural change to handle permission backend exception error by calling die().",
      "parentUuid": "ec850a39_7f468756",
      "range": {
        "startLine": 92,
        "startChar": 13,
        "endLine": 92,
        "endChar": 41
      },
      "revId": "048041418aaedcc91b0993ad0589b24d91850ac6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "790014f9_8b2b927e",
        "filename": "java/com/google/gerrit/sshd/commands/CheckProjectAccessCommand.java",
        "patchSetId": 8
      },
      "lineNbr": 92,
      "author": {
        "id": 1140732
      },
      "writtenOn": "2022-05-13T18:18:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e2c5c49_e2da98d3",
      "range": {
        "startLine": 92,
        "startChar": 13,
        "endLine": 92,
        "endChar": 41
      },
      "revId": "048041418aaedcc91b0993ad0589b24d91850ac6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}