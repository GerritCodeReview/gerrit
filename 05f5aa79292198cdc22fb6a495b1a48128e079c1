{
  "comments": [
    {
      "key": {
        "uuid": "0efc2a2a_beecd9c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-06-22T20:35:00Z",
      "side": 1,
      "message": "s/tread/thread/",
      "revId": "05f5aa79292198cdc22fb6a495b1a48128e079c1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8efe5a6e_72e018d7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2016-06-23T00:21:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0efc2a2a_beecd9c6",
      "revId": "05f5aa79292198cdc22fb6a495b1a48128e079c1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e250aa0_f6f280a2",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-highlight/gr-diff-highlight.js",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2016-06-22T20:35:15Z",
      "side": 1,
      "message": "comments are full sentences with period.",
      "revId": "05f5aa79292198cdc22fb6a495b1a48128e079c1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8efe5a6e_52e514e5",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-highlight/gr-diff-highlight.js",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2016-06-23T00:21:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e250aa0_f6f280a2",
      "revId": "05f5aa79292198cdc22fb6a495b1a48128e079c1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e250aa0_36f91888",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-highlight/gr-diff-highlight_test.html",
        "patchSetId": 4
      },
      "lineNbr": 230,
      "author": {
        "id": 1027267
      },
      "writtenOn": "2016-06-22T20:55:23Z",
      "side": 1,
      "message": "When does a range use camelCase properties, and when does it use underscores?",
      "revId": "05f5aa79292198cdc22fb6a495b1a48128e079c1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e08e263_b0c0b839",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-highlight/gr-diff-highlight_test.html",
        "patchSetId": 4
      },
      "lineNbr": 230,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2016-06-22T21:10:17Z",
      "side": 1,
      "message": "tl;dr: Gerrit API requires underscores while JS code style camelCase.\n\nExcellent question!\nAnother good one is \u0027When the side is right/left, and when BASE/PARENT/REVISION\u0027?\nSo when it\u0027s the raw comment object, it\u0027s underscores. When it\u0027s a piece of data from UI - say, event from gr-diff-action-box describing range selected - it\u0027s camelCase.\n\nI agree, this is confusing, but not sure what\u0027s the best to do about this.\nShould we use underscores for some properties everywhere?\nHunt down direct responses from Gerrit and convert them into camelCase?\nNot sure - open for ideas.",
      "parentUuid": "0e250aa0_36f91888",
      "revId": "05f5aa79292198cdc22fb6a495b1a48128e079c1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e250aa0_b63d2822",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-highlight/gr-diff-highlight_test.html",
        "patchSetId": 4
      },
      "lineNbr": 230,
      "author": {
        "id": 1027267
      },
      "writtenOn": "2016-06-22T21:32:55Z",
      "side": 1,
      "message": "Thanks, I figured it had to do with the API. This is beyond the scope of this particular change, but something to think about.\n\nI feel like I could get easily confused. What if we used some naming convention, to indicate variables holding objects directly involved with JSON serialization? My other instinct is not to pass such objects around at all, but that\u0027s a lot of silly tedious conversions for a not too common problem.",
      "parentUuid": "4e08e263_b0c0b839",
      "revId": "05f5aa79292198cdc22fb6a495b1a48128e079c1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e08e263_d0b73ce7",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-highlight/gr-diff-highlight_test.html",
        "patchSetId": 4
      },
      "lineNbr": 230,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2016-06-23T00:21:33Z",
      "side": 1,
      "message": "I presume no immediate action is needed here - let me know if I\u0027m mistaken.",
      "parentUuid": "0e250aa0_b63d2822",
      "revId": "05f5aa79292198cdc22fb6a495b1a48128e079c1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}