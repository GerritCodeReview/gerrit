{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "77b9fc04_4faa026a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-03-13T17:26:36Z",
      "side": 1,
      "message": "Can you please add some expected use cases for doing this? We haven\u0027t had it so far, so it would be good to understand what\u0027s driving this change.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2db5d22_d4c668bb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-03-22T16:19:59Z",
      "side": 1,
      "message": "Done.  I can\u0027t comment on all the reasons as some are internal.",
      "parentUuid": "77b9fc04_4faa026a",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "060cdfe8_63795a2e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-03-22T21:19:04Z",
      "side": 1,
      "message": "I don\u0027t see any use cases added as of PS12. Am I missing them somewhere?\n\nIt doesn\u0027t have to be a comprehensive list of reasons (maybe you can express the internal ones in a generic way?), but there should be sufficient justification in this message for why we\u0027re adding a feature not used by core and how we expect that feature to be used. Additionally, if this is intended for plugins, please update the dev-plugins doc with how to use it.\n\nAnd maybe I\u0027m wrong here, but adding this functionality feels like a fairly significant architectural decision. For example, what\u0027s to stop someone from using this feature to treat change metarefs as a database for whatever they want? Or is that the intent (other comments about CI systems storing data in Gerrit suggest to me that it\u0027s not the intent)? In what ways is this new storage expected to (not) scale? What about indexing? It doesn\u0027t look like this change adds support for indexing this new data, but will that be needed in the future?\n\nOverall, I don\u0027t want this change submitted without maintainers having the discussion on the maintainability of this change.",
      "parentUuid": "d2db5d22_d4c668bb",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db217da6_9187722f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-03-23T07:45:05Z",
      "side": 1,
      "message": "Forgot to push.",
      "parentUuid": "060cdfe8_63795a2e",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ec18fce_5c3cfc52",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-03-23T08:01:34Z",
      "side": 1,
      "message": "To answer some of your questions.\n\nIn theory people can already do what you say, but adding random hashtags as metadata.",
      "parentUuid": "db217da6_9187722f",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47328310_e46b0145",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2023-03-23T08:19:31Z",
      "side": 1,
      "message": "I think this has can in the future be used by plugins to store small pieces of information and decide on their own how to surface those to users. But there are caveats: No personally identifiable information, only small data.\n\nOnce we are comfortable allowing plugins to use that field deliberately, we can document it in `dev-plugins`. I don\u0027t think that has to happen right now.",
      "parentUuid": "2ec18fce_5c3cfc52",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6621a8c0_e98f82f6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2023-03-23T08:50:24Z",
      "side": 1,
      "message": "(test please ignore)",
      "parentUuid": "47328310_e46b0145",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70d68d73_379ec450",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-03-23T19:29:58Z",
      "side": 1,
      "message": "Thank you for adding samples of what sort of data this could be used for.\n\nI think that some important pieces are still missing. Who is the actor for the use cases. i.e. who will be allowed to store or use this data? It seems there aren\u0027t really any APIs documented either, and that makes this something that as is is not maintainable by the community. Without real world use cases, community members cannot know whether this design can be altered without breaking something. For example, how can we determine that this data belongs on the meta-ref and not some other ref along side it? How can we determine who should be able to read this data, i.e. does having access to the meta-ref mean you should be able to read it. If someone proposed to move this data elsewhere, would that break something, and how would we know?",
      "parentUuid": "6621a8c0_e98f82f6",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18e3d04e_fc338f38",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-03-24T09:59:53Z",
      "side": 1,
      "message": "The actor could either be plugins, or other systems that need access to this metadata.\n\nI would love to hear what future concerns you\u0027re worried about.  In theory people could already shove data inside of hashtags if they wanted to, it just would appear on the UI.\n\nThis data is intended to be publicly accessible and will be part of the ChangeInfo message.\n\nIn our internal world, we need to keep track of an ID for another system and associate it with the given change.  There will be an API that allows other systems  to set metadata, as well as upon Change Creation. And the metadata will be surfaced as part ChangeInfo objects.",
      "parentUuid": "70d68d73_379ec450",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f342ea41_4d138c57",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-03-24T16:00:04Z",
      "side": 1,
      "message": "Thanks. \n\n\u003e I would love to hear what future concerns you\u0027re worried about.\n\nI am mostly worried about the lack of API dev docs or javadocs to describe the intent and usage patterns of this. If this were an internal feature to support something specific in Gerrit, the intent and evolution of the data management would be mostly tied to the feature it was supporting, so evolving how and where the data gets stored would be guided by the desires of that feature, and the documentation expectation would be pretty low (if existent at all). However, in this case, you seem to be adding a data API that is more generic, and not tied to a specific feature in Gerrit? Such a thing is generally then aimed at external developer (non-core Gerrit) usage, such as plugin developers? As such, I think the expectation generally is that features like this deserves some documentation, maybe some API javadocs, likely some dev docs, and ideally also an example intent and usage in those docs. Can you add those?\n\n\u003e This data is intended to be publicly accessible \n\nData on a change meta-ref is generally NOT \"publicly accessible\", its access tends to be restricted to those who can see that change? I suspect that is what you meant, and this might be valuable to hash out clearly in those API docs.",
      "parentUuid": "18e3d04e_fc338f38",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0971d1a_f6709639",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2023-03-28T08:00:17Z",
      "side": 1,
      "message": "+1 to \"a more precise Javadoc\". I\u0027ve added a suggestion.\n\nI don\u0027t think we want any plugin dev docs or API docs at this point. The API isn\u0027t implemented, neither any indexing. It\u0027s just the storage. Documenting now means plugin developers can start developing against this which is too early IMO.\n\nLet\u0027s wait with that until there is more functionality.",
      "parentUuid": "f342ea41_4d138c57",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a75ddc29_4d5eb50f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-03-28T09:56:20Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "e0971d1a_f6709639",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5da21348_8f351146",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-03-28T13:38:14Z",
      "side": 1,
      "message": "I\u0027m curious, how is this intended to be used if not by core, or by a plugin?",
      "parentUuid": "a75ddc29_4d5eb50f",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9309e101_16eb7589",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2023-03-28T13:39:30Z",
      "side": 1,
      "message": "I didn\u0027t say it\u0027s not intended to be used by plugins.\n\nI just said it\u0027s not ready yet to be used by plugins.",
      "parentUuid": "5da21348_8f351146",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "043114ec_f0a39622",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-03-28T13:45:23Z",
      "side": 1,
      "message": "What is is ready to be used by then? Perhaps you can understand my confusion, if it is not ready to be used by plugins, and there are no core users, then why is it ready to be merged?",
      "parentUuid": "9309e101_16eb7589",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "315dffaa_c00cf0d8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-03-28T13:48:41Z",
      "side": 1,
      "message": "The initial use-case will be an internal system writing a short identifier which needs to be associated to the change.  \n\nI\u0027ve already mentioned some possible future usages.  Then a plugin will be using that identifier to be able to call back to that system.",
      "parentUuid": "043114ec_f0a39622",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0ac5a48_5ff2f7e1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-03-28T14:05:49Z",
      "side": 1,
      "message": "I don\u0027t want to put words in your mouth, but it does not sound like the intent is to use this from core, is that correct? I think that if the intent is to access it from a fork, a plugin, a libmodule, or really any code that is external to core, no matter what linking mechanism is used, then it would likely be expected to be covered by the dev plugin docs as that generally covers APIs meant for external from core users.",
      "parentUuid": "315dffaa_c00cf0d8",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e55754a1_d0b23d30",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-03-28T14:25:22Z",
      "side": 1,
      "message": "For this specific use-case, the production will be through CreateChange, so that\u0027s part of core.  The consumption will get it from ChangeInfo object and then use it in a plugin.\n\nThat being said, a lot of existing features could\u0027ve been realized by this more generic mechanism (hashtags, topics, ...)",
      "parentUuid": "b0ac5a48_5ff2f7e1",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fc4feb1_5ca415be",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-03-28T14:36:18Z",
      "side": 1,
      "message": "\u003e For this specific use-case, the production will be through CreateChange, so that\u0027s part of core.  The consumption will get it from ChangeInfo object and then use it in a plugin.\n\nAgain, not trying to put words in your mouth, it sounds like the intention is to expose this via existing public core APIs then? If that is indeed the case, then the expectation is generally that this change not be merged without the changes which modify those public APIs, and the documentation of those APIs is updated to reflect this new functionality.",
      "parentUuid": "e55754a1_d0b23d30",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b06c34a_fcfc4012",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-03-28T14:55:54Z",
      "side": 1,
      "message": "Ok, I was going to do it as separate changes to keep changes small. But I can merge",
      "parentUuid": "1fc4feb1_5ca415be",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32de22b1_b3b3ab60",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-03-28T15:42:52Z",
      "side": 1,
      "message": "Please look at the relation-chain",
      "parentUuid": "6b06c34a_fcfc4012",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a57531f5_ebe69b05",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-03-28T16:35:40Z",
      "side": 1,
      "message": "Great, thanks. I think the convention is to link the two via a topic so that they get submitted together.",
      "parentUuid": "32de22b1_b3b3ab60",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ded8047b_55b6f94b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-03-29T09:43:26Z",
      "side": 1,
      "message": "Is there a strong reason these need to be submitted together?",
      "parentUuid": "a57531f5_ebe69b05",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4db13678_f651de9c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-03-29T18:18:01Z",
      "side": 1,
      "message": "\u003e Is there a strong reason these need to be submitted together?\n\nFrom the description of the use cases that you gave, this is not usable without the follow on changes (not even minimally). That being the case, it would be potentially premature to submit this now since it may not actually do what you need it to do. We have learned that as a general practice while it is good to sometimes split things which should likely be merged together into smaller changes for easier review, it is still generally better not to submit any of those pieces which don\u0027t \"stand on their own\", or fulfill at least some small use case, no matter how small that is, without the changes which make it do so.\n\nSo the question really should be, why do you want to submit this early, what do you gain from that? Does this fulfill some smaller use case that you have not described to us as is without the follow on change? If so, then it might make sense, but it likely should be justified that way then.",
      "parentUuid": "ded8047b_55b6f94b",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2d15e39_3d08ed05",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-03-29T18:50:16Z",
      "side": 1,
      "message": "And to add to that a bit more... It is good to have a policy of \"no dead code\" in the project, and if this were to get merged without any users (again, I am assuming you cannot use it without the follow on changes), that would be merging \"dead code\".",
      "parentUuid": "4db13678_f651de9c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e062fdb7_ab7dcdfc",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNoteFooters.java",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-03-13T17:26:36Z",
      "side": 1,
      "message": "nit: Maybe rename as `KEYED_VALUES_FOOTER_PREFIX` so that its name (and ordering) stands out from the actual FooterKeys here?",
      "range": {
        "startLine": 29,
        "startChar": 29,
        "endLine": 29,
        "endChar": 55
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f57076f_c054ec23",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNoteFooters.java",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-03-22T16:18:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e062fdb7_ab7dcdfc",
      "range": {
        "startLine": 29,
        "startChar": 29,
        "endLine": 29,
        "endChar": 55
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48f4672d_a9856bb1",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 10
      },
      "lineNbr": 743,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-03-13T17:26:36Z",
      "side": 1,
      "message": "You can simplify this with `keyedValues.putIfAbsent(key, value)`",
      "range": {
        "startLine": 741,
        "startChar": 8,
        "endLine": 743,
        "endChar": 9
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32fd25fe_3bbda5ce",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 10
      },
      "lineNbr": 743,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-03-22T16:18:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48f4672d_a9856bb1",
      "range": {
        "startLine": 741,
        "startChar": 8,
        "endLine": 743,
        "endChar": 9
      },
      "revId": "062d34941e98944ba1271c07ccadbc33d847bb61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}