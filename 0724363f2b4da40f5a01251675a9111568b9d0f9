{
  "comments": [
    {
      "key": {
        "uuid": "98421aab_60d369ed",
        "filename": "javatests/com/google/gerrit/acceptance/rest/binding/PluginProvidedChildRestApiBindingsIT.java",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-04T18:39:02Z",
      "side": 1,
      "message": "See my comment on the old PS: please document that it\u0027s a bug to allow it without plugin~.",
      "revId": "0724363f2b4da40f5a01251675a9111568b9d0f9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e51467db_752cebcb",
        "filename": "javatests/com/google/gerrit/acceptance/rest/binding/PluginProvidedChildRestApiBindingsIT.java",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-03-05T07:24:40Z",
      "side": 1,
      "message": "I don\u0027t think this is a bug.\n\nWe first check if there is a view in Gerrit code with that name. If so, we select that view and never look at the plugin views.\n\nIf there is not, we look at the plugin views and see if we have a match.\n\nThat means that views in core take precedence before plugin views. \n\nNow, there is a bug that plugin views pretend to be core views, but this is about the child collection which is aware that it is a plugin collection and hence not suffering from this bug.\n\nI am also not sure if this is really the behavior that we should encourage for the sake of implementing long-lasting APIs in plugins. I\u0027ll document this in this test to make sure people know what they sign up for.\n\nI am pretty sure that there are plugins that bind child views or maybe even collections that use this to hide the fact that they are a plugin.",
      "parentUuid": "98421aab_60d369ed",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "0724363f2b4da40f5a01251675a9111568b9d0f9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}