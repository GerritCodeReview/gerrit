{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d2538c55_ef24cdd8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-06-16T22:23:03Z",
      "side": 1,
      "message": "When does it become safe to make it required? Can we document that in the code as a todo/follow-up?",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 17
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7de6783_07659dca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-06-20T11:02:57Z",
      "side": 1,
      "message": "All fields in PatchSet are optional. IIUC any new fields in proto should be made optional.",
      "parentUuid": "d2538c55_ef24cdd8",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 17
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1ee1e05_74acc2c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-06-20T17:49:47Z",
      "side": 1,
      "message": "\u003e All fields in PatchSet are optional. IIUC any new fields in proto should be made optional.\n\nBut I think at some point we remove support for upgrades from old versions and then I think we should be able to make it required. Is that accurate?",
      "parentUuid": "c7de6783_07659dca",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 17
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f44f0c2_a6f66600",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2023-06-19T11:38:50Z",
      "side": 1,
      "message": "What about setting this fallback branch only on the last revision?\nI think the correct behavior is for the UI to deal with the possibly absent branch, rather than assuming a possibly incorrect branch value.",
      "range": {
        "startLine": 31,
        "startChar": 29,
        "endLine": 33,
        "endChar": 35
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d32c6983_25c90308",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-06-20T11:02:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f44f0c2_a6f66600",
      "range": {
        "startLine": 31,
        "startChar": 29,
        "endLine": 33,
        "endChar": 35
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56800248_c22868c8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-06-16T22:23:03Z",
      "side": 1,
      "message": "I think the first sentence is already covered in lines 20-21 above. Maybe add the second sentence to your paragraph on lines 23-26?",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 37,
        "endChar": 19
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "893b7bc9_588c5a8d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-06-20T11:02:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56800248_c22868c8",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 37,
        "endChar": 19
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24336cda_ee8b8348",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 7
      },
      "lineNbr": 8690,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-06-16T22:23:03Z",
      "side": 1,
      "message": "nit: saying both \u0027revision\u0027 and \u0027patchset\u0027 makes this confusing. Since I think you mean the RevisionInfo object here, you could maybe say that?",
      "range": {
        "startLine": 8690,
        "startChar": 70,
        "endLine": 8690,
        "endChar": 78
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07ed8ca1_a038cf5a",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 7
      },
      "lineNbr": 8690,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-06-20T11:02:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24336cda_ee8b8348",
      "range": {
        "startLine": 8690,
        "startChar": 70,
        "endLine": 8690,
        "endChar": 78
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "604b7086_980bcf30",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 7
      },
      "lineNbr": 8692,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2023-06-19T11:38:50Z",
      "side": 1,
      "message": "nit: the newer patchset.",
      "range": {
        "startLine": 8691,
        "startChar": 60,
        "endLine": 8692,
        "endChar": 10
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c86de243_28204ebe",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 7
      },
      "lineNbr": 8692,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-06-20T11:02:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "604b7086_980bcf30",
      "range": {
        "startLine": 8691,
        "startChar": 60,
        "endLine": 8692,
        "endChar": 10
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36703e2a_c0db3618",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 7
      },
      "lineNbr": 476,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2023-06-19T11:38:50Z",
      "side": 1,
      "message": "nit: can we add a test in ChangeNotesTest for the new logic?",
      "range": {
        "startLine": 473,
        "startChar": 0,
        "endLine": 476,
        "endChar": 25
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5c66995_01e6f1f7",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 7
      },
      "lineNbr": 476,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-06-20T11:02:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36703e2a_c0db3618",
      "range": {
        "startLine": 473,
        "startChar": 0,
        "endLine": 476,
        "endChar": 25
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "386c7967_6ce09a78",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 7
      },
      "lineNbr": 494,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2023-06-19T11:38:50Z",
      "side": 1,
      "message": "nit: this could be a filter condition on patchSets.keySet().",
      "range": {
        "startLine": 494,
        "startChar": 14,
        "endLine": 494,
        "endChar": 47
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35731730_7ecc0186",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 7
      },
      "lineNbr": 494,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-06-20T11:02:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "386c7967_6ce09a78",
      "range": {
        "startLine": 494,
        "startChar": 14,
        "endLine": 494,
        "endChar": 47
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80185483_311bb102",
        "filename": "javatests/com/google/gerrit/entities/converter/PatchSetProtoConverterTest.java",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2023-06-19T11:38:50Z",
      "side": 1,
      "message": "nit: can you, please, add a test that we can serialize/deserializa a value without branch?",
      "range": {
        "startLine": 50,
        "startChar": 12,
        "endLine": 50,
        "endChar": 53
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b351ff3b_c3b6a8fc",
        "filename": "javatests/com/google/gerrit/entities/converter/PatchSetProtoConverterTest.java",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-06-20T11:02:57Z",
      "side": 1,
      "message": "There are tests for mandatory fields only, e.g. mandatoryValuesConvertedToProtoAndBackAgain does not contain the branch field.",
      "parentUuid": "80185483_311bb102",
      "range": {
        "startLine": 50,
        "startChar": 12,
        "endLine": 50,
        "endChar": 53
      },
      "revId": "094038335a2ea5098efb112f5aaae60293aa679d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}