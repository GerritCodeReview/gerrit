{
  "comments": [
    {
      "key": {
        "uuid": "f67bf134_eb0a31cb",
        "filename": "gerrit-httpd/BUCK",
        "patchSetId": 57
      },
      "lineNbr": 32,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-02-17T04:27:10Z",
      "side": 1,
      "message": "I really don\u0027t want these deps in here. If you submit this as-is, we\u0027ll need a few days at Google to untangle these deps before we can update gerrit-review with any newer versions.\n\nLook at the existing OpenID support, that is the current best way to do an auth support in core using a stack of libraries that aren\u0027t needed by all servers.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 38
      },
      "revId": "094d6909f8504ef05e43808c687802be8fb7adec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b8df443_2ec807ad",
        "filename": "gerrit-httpd/BUCK",
        "patchSetId": 57
      },
      "lineNbr": 32,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-02-17T07:55:37Z",
      "side": 1,
      "message": "\u003e Look at the existing OpenID support,\n\nThere is own project for gerrit-openid, where dedicated stack of libraries is used. But no matter if this stack is used in gerrit-httpd or in gerrit-openid it needs to be bound in Guice injector. The binding code for OpenIdModule module is located not in gerrit-httpd but in gerrit-pgm (Daemon) and gerrit-war (WebAppInitializer). In which case openid libs are used in:\n\n* gerrit-pgm/BUCK \u003d\u003e pgm  \u003d\u003e \u0027//gerrit-openid:openid\u0027\n* gerrit-war/BUCK \u003d\u003e init \u003d\u003e \u0027//gerrit-openid:openid\u0027\n\nThis rises the question: why it\u0027s less problematic to have the unneeded stack of libraries in another part of dependency graph? In both cases, the code must be changed to remove unneeded parts for servers that don\u0027t need them.",
      "parentUuid": "f67bf134_eb0a31cb",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 38
      },
      "revId": "094d6909f8504ef05e43808c687802be8fb7adec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b8df443_0e38abfb",
        "filename": "gerrit-httpd/BUCK",
        "patchSetId": 57
      },
      "lineNbr": 32,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2015-02-17T09:42:37Z",
      "side": 1,
      "message": "Thinking about the http-* dependencies, all that part is a bit overkill IMHO. We do need to make one single HTTP Get to a GitHub endpoint and using standard Java URLConnection would be more than enough :-)\n\nIt will avoid all the pooling configuration part and in modern Java7 connections are automatically pooled anyway.\n\nWhat do you think?",
      "parentUuid": "f67bf134_eb0a31cb",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 38
      },
      "revId": "094d6909f8504ef05e43808c687802be8fb7adec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b8df443_ee227fc2",
        "filename": "gerrit-httpd/BUCK",
        "patchSetId": 57
      },
      "lineNbr": 32,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-02-17T11:01:28Z",
      "side": 1,
      "message": "The point here is that we want to allow to extend OAuth2/OpenID Connect 2 dependency chain in future, for example when some dedicated OAuth2/OpenID Connect 2 libraries are pulled. Remember the plan is not to restrict to only one OAuth2 provider, but support other OAuth2/OpenID Connect 2 providers as well. My current understanding is that it is easier for Gerrit stack holders to drop unneeded additional dependencies from their Gerrit installations (when they don\u0027t provide these services, like SSHD, OpenID, OAuth2, ...), when the code is located in dedicated gerrit sub-projects:\n\n* gerrit-sshd\n* gerrit-openid\n* gerrit-oauth\n\nSo the way to go here is to move the whole subtree:\n\ngerrit-httpd/src/main/java/com/google/gerrit/httpd/auth\n\nwith entire dependencies to its own gerrit sub-project: gerrit-oauth and move conditional Guice binding from WebModule to Daemon and WebAppInitializer:\n\n  case OAUTH_GITHUB:\n        install(new HttpGitHubOAuthModule());\n\nOf course gerrit-pgm \u0026 gerrit-war must pull the dependencies of new gerrit-oauth project.",
      "parentUuid": "4b8df443_0e38abfb",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 38
      },
      "revId": "094d6909f8504ef05e43808c687802be8fb7adec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b8df443_6e768fbf",
        "filename": "gerrit-httpd/BUCK",
        "patchSetId": 57
      },
      "lineNbr": 32,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2015-02-17T12:05:20Z",
      "side": 1,
      "message": "True, and using standard HTTP wouldn\u0027t be enough anyway.\nBut honestly we should then go back to the plugin approach, which seems to me much cleaner:\n\n- Gerrit exposes OAuth extensions that need to be then implemented by an OAuth provider\n- Extra dependencies are inside the OAuth provider plugin and NOT in Gerrit itself\n- GitHub OAuth provider could be a core plugin, but if you do not use OAuth you\u0027ll not have the HTTP Client dependencies at all.\n\nShould I just then restart from scratch with a new approach?\n\nLuca.",
      "parentUuid": "4b8df443_ee227fc2",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 38
      },
      "revId": "094d6909f8504ef05e43808c687802be8fb7adec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7669c173_47fa4e44",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/AuthenticatedHttpRequest.java",
        "patchSetId": 57
      },
      "lineNbr": 50,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-02-17T04:27:10Z",
      "side": 1,
      "message": "OK, so you took this from the existing GitHub plugin and that was relying on an external HTTP reverse proxy to provide the username.\n\nI don\u0027t think that is an excuse for 57 iterations of this change using a hacked wrapped request to shove the value into an HTTP header that must be specified in the gerrit.config file when you could have just attached it to a request attribute in memory and avoided the entire configuration mess.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 50,
        "endChar": 3
      },
      "revId": "094d6909f8504ef05e43808c687802be8fb7adec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6dfcd7d_42ac9207",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/AuthenticatedHttpRequest.java",
        "patchSetId": 57
      },
      "lineNbr": 50,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2015-02-17T09:42:37Z",
      "side": 1,
      "message": "Yes, agreed on this: apart from the historical reasons ... here can be highly simplified, avoiding the HTTP-auth related headers.",
      "parentUuid": "7669c173_47fa4e44",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 50,
        "endChar": 3
      },
      "revId": "094d6909f8504ef05e43808c687802be8fb7adec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7669c173_a7146aec",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/OAuthProtocol.java",
        "patchSetId": 57
      },
      "lineNbr": 59,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-02-17T04:27:10Z",
      "side": 1,
      "message": "nit: missing final",
      "revId": "094d6909f8504ef05e43808c687802be8fb7adec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f67bf134_cb05f5bd",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/OAuthProtocol.java",
        "patchSetId": 57
      },
      "lineNbr": 204,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-02-17T04:27:10Z",
      "side": 1,
      "message": "rng (see below)",
      "range": {
        "startLine": 204,
        "startChar": 4,
        "endLine": 204,
        "endChar": 15
      },
      "revId": "094d6909f8504ef05e43808c687802be8fb7adec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7669c173_870fe6d9",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/OAuthProtocol.java",
        "patchSetId": 57
      },
      "lineNbr": 215,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-02-17T04:27:10Z",
      "side": 1,
      "message": "Completely unnecessary and horribly complex.\n\nThis is all you need:\n\n  private static final SecureRandom rng \u003d SecureRandom.getInstance(\"SHA1PRNG\");",
      "range": {
        "startLine": 209,
        "startChar": 0,
        "endLine": 215,
        "endChar": 28
      },
      "revId": "094d6909f8504ef05e43808c687802be8fb7adec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6dfcd7d_22a98ef7",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/OAuthProtocol.java",
        "patchSetId": 57
      },
      "lineNbr": 215,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2015-02-17T09:42:37Z",
      "side": 1,
      "message": "OK, will change in next patch-set.",
      "parentUuid": "7669c173_870fe6d9",
      "range": {
        "startLine": 209,
        "startChar": 0,
        "endLine": 215,
        "endChar": 28
      },
      "revId": "094d6909f8504ef05e43808c687802be8fb7adec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}