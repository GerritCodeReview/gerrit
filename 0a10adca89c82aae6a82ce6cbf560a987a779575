{
  "comments": [
    {
      "key": {
        "uuid": "75a1ae0b_ae1bb797",
        "filename": "gerrit-pgm/BUCK",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-11-06T14:28:12Z",
      "side": 1,
      "message": "Should this rather be part of the predecessor change?",
      "revId": "0a10adca89c82aae6a82ce6cbf560a987a779575",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75a1ae0b_ae445777",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/init/UpdatePrimaryKeys.java",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-06T19:10:14Z",
      "side": 1,
      "message": "The column order is correct, when Gerrit site was created before 2.6. We could always perform dry-run mode of PrimaryKeyFix step, detect if the site suffers from wrong PK column order problem, list the tables for which the PKs must be fixed and run in non dry-run mode or just silently exit otherwise, e. g.:\n\n  Collection\u003cString\u003e wrongPKColumnOrderTables \u003d fix.dryRun();\n  if (!wrongPKColumnOrderTables.isEmpty()) {\n    if (ui.yesno(true,\n        \"Fix primary keys column order for tables: \" +\n           wrongPKColumnOrderTables)) {\n      fix.run();\n    }\n  }\n\nThis way we would avoid unnecessary noice.",
      "range": {
        "startLine": 40,
        "startChar": 18,
        "endLine": 40,
        "endChar": 40
      },
      "revId": "0a10adca89c82aae6a82ce6cbf560a987a779575",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35abb6f1_8c49a78f",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/init/UpdatePrimaryKeys.java",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-11-06T23:32:58Z",
      "side": 1,
      "message": "I like your proposal. Will do it this way.",
      "parentUuid": "75a1ae0b_ae445777",
      "range": {
        "startLine": 40,
        "startChar": 18,
        "endLine": 40,
        "endChar": 40
      },
      "revId": "0a10adca89c82aae6a82ce6cbf560a987a779575",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75a1ae0b_ce2a83a3",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/init/UpdatePrimaryKeys.java",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-06T15:03:52Z",
      "side": 1,
      "message": "Why is this optional? It\u0027s always bound.",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 46,
        "endChar": 26
      },
      "revId": "0a10adca89c82aae6a82ce6cbf560a987a779575",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35abb6f1_0c08174c",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/init/UpdatePrimaryKeys.java",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-06T15:07:35Z",
      "side": 1,
      "message": "Never mind, missed your previous change.",
      "parentUuid": "75a1ae0b_ce2a83a3",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 46,
        "endChar": 26
      },
      "revId": "0a10adca89c82aae6a82ce6cbf560a987a779575",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35abb6f1_ecf02bf9",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/PrimaryKeyFix.java",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-06T15:03:52Z",
      "side": 1,
      "message": "List here and below.",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 66,
        "endChar": 13
      },
      "revId": "0a10adca89c82aae6a82ce6cbf560a987a779575",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35abb6f1_ac446377",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/PrimaryKeyFix.java",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-11-06T23:32:58Z",
      "side": 1,
      "message": "In general I agree, but for a local variable I think that it is OK to use the concrete type. For this concrete case it doesn\u0027t make any difference but, in general, one could make use of specific methods of the more concrete type before returning the instance (as an interface type).",
      "parentUuid": "35abb6f1_ecf02bf9",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 66,
        "endChar": 13
      },
      "revId": "0a10adca89c82aae6a82ce6cbf560a987a779575",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5d08689_e8f013f9",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/PrimaryKeyFix.java",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-11-06T14:43:32Z",
      "side": 1,
      "message": "nit: wrap this line",
      "revId": "0a10adca89c82aae6a82ce6cbf560a987a779575",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35abb6f1_ccf56fe7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/PrimaryKeyFix.java",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-06T15:03:52Z",
      "side": 1,
      "message": "Map",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 75,
        "endChar": 11
      },
      "revId": "0a10adca89c82aae6a82ce6cbf560a987a779575",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75a1ae0b_ee25bfd5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/PrimaryKeyFix.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-06T15:03:52Z",
      "side": 1,
      "message": "We normally use uppercase for SQL.",
      "range": {
        "startLine": 90,
        "startChar": 24,
        "endLine": 90,
        "endChar": 35
      },
      "revId": "0a10adca89c82aae6a82ce6cbf560a987a779575",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}