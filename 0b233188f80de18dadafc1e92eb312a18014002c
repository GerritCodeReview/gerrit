{
  "comments": [
    {
      "key": {
        "uuid": "a44db111_dbf5d367",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 42,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2014-06-30T13:50:00Z",
      "side": 1,
      "message": "make those module fields private or completely remove as suggested in later comment.\n\nThey are useless for API consumers, even when sb will set something there each call to getManifest will override that settings. This is confusing!",
      "range": {
        "startLine": 42,
        "startChar": 2,
        "endLine": 42,
        "endChar": 11
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a44db111_7be7dfbc",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 42,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-06-30T14:39:43Z",
      "side": 1,
      "message": "With regards to the Guice Modules, I think that now I can almost get completely rid of them, just need to know their names in order to use them in the manifest.\n\nThe others (pluginName, pluginVersion, preloadedClasses and apiType) are final anyway: there is no harm in publishing them directly to subclasses then.",
      "parentUuid": "a44db111_dbf5d367",
      "range": {
        "startLine": 42,
        "startChar": 2,
        "endLine": 42,
        "endChar": 11
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04475ded_7e6a71bd",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 42,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2014-06-30T16:11:42Z",
      "side": 1,
      "message": "True, I had no problem with \u0027pluginName\u0027, \u0027pluginVersion\u0027 etc. :)",
      "parentUuid": "a44db111_7be7dfbc",
      "range": {
        "startLine": 42,
        "startChar": 2,
        "endLine": 42,
        "endChar": 11
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a44db111_5b6783a5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 61,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2014-06-30T13:50:00Z",
      "side": 1,
      "message": "Usage of StringBuilder would be more readable IMO",
      "range": {
        "startLine": 61,
        "startChar": 14,
        "endLine": 61,
        "endChar": 89
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a44db111_db1e33f6",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 61,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-06-30T14:39:43Z",
      "side": 1,
      "message": "Done some local refactoring to make it more readable.",
      "parentUuid": "a44db111_5b6783a5",
      "range": {
        "startLine": 61,
        "startChar": 14,
        "endLine": 61,
        "endChar": 89
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4716954_edf245be",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 69,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2014-06-30T13:50:00Z",
      "side": 1,
      "message": "make it more functional and return here a data structure that contains three module classes and then if you remove those three module fields this object will be completely stateless.\n\nThis is just an idea.",
      "range": {
        "startLine": 69,
        "startChar": 10,
        "endLine": 69,
        "endChar": 14
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4716954_ed1b2544",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 69,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-06-30T14:39:43Z",
      "side": 1,
      "message": "It would be more code just for the sake of making it functional. \nIf I was coding with a functional language, I would have more construct to do it clean and with less boilerplate.\n\nDo we really be functional here? it is an internal method for scanning only once a set of classes.",
      "parentUuid": "e4716954_edf245be",
      "range": {
        "startLine": 69,
        "startChar": 10,
        "endLine": 69,
        "endChar": 14
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4716954_8d25c1a0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 84,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2014-06-30T13:50:00Z",
      "side": 1,
      "message": "This is naive implementation. It assumes that plugin would have only one SshModule, HttpModule, Module class. When in reality there could be multiple of those installed in one \u0027main\u0027 ssh/http/plugin module. Main module should be somehow marked, maybe by annotation or name convention.\n\nI\u0027m not sure whether this improvement should be also part of this commit. But IMO current implementation is to simple and naive.\n\nMaybe look for @Export annotation on module classes?",
      "range": {
        "startLine": 78,
        "startChar": 8,
        "endLine": 84,
        "endChar": 9
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4716954_4d0b59f5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 84,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-06-30T14:39:43Z",
      "side": 1,
      "message": "Yes, it is simple at first and it is good enough for now.\nNaive? possibly yes but does the job :-)\n\nThis is however an *optional* abstract class to allow the write of a simple PluginScanner without having to repeat lots of boilerplace code. If someone want to do something more sophisticated, he can implement the interface without having necessarily to use this abstract class.\n\nI would prefer NOT to introduct additional annotation and work only by convention at the moment: if you want to use this abstract class you have the limitation of MAX 1 Guice Module per type.",
      "parentUuid": "e4716954_8d25c1a0",
      "range": {
        "startLine": 78,
        "startChar": 8,
        "endLine": 84,
        "endChar": 9
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04475ded_dec1456a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 84,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2014-06-30T16:11:42Z",
      "side": 1,
      "message": "as I mention in my fist comment this is only suggestion for improvement.",
      "parentUuid": "e4716954_4d0b59f5",
      "range": {
        "startLine": 78,
        "startChar": 8,
        "endLine": 84,
        "endChar": 9
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2469c174_273abae0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 84,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-07-01T14:40:29Z",
      "side": 1,
      "message": "If there are multiple ssh/http modules you arbitrarily pick the first one depending on the set iteration order, and ignore the others.\n\nI would prefer failing fast in this case. It\u0027s as simple as:\n\n checkState(sshModule \u003d\u003d null, \"Multiple %s implementations: %s, %s\",\n     sshModuleBaseClass, sshModule, scriptClass);",
      "parentUuid": "04475ded_dec1456a",
      "range": {
        "startLine": 78,
        "startChar": 8,
        "endLine": 84,
        "endChar": 9
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24bc6131_eff661f8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 84,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-07-01T22:38:42Z",
      "side": 1,
      "message": "True, I should fail consistently as I did on the multiple providers for the same plugin.",
      "parentUuid": "2469c174_273abae0",
      "range": {
        "startLine": 78,
        "startChar": 8,
        "endLine": 84,
        "endChar": 9
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4716954_0dec71dc",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 93,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2014-06-30T13:50:00Z",
      "side": 1,
      "message": "Can you provide javadoc for this method? There is hidden convention that only classes with one of \u0027annotations\u0027 and @Export will be returned.",
      "range": {
        "startLine": 93,
        "startChar": 2,
        "endLine": 93,
        "endChar": 76
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4716954_6d0895f7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 93,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-06-30T14:39:43Z",
      "side": 1,
      "message": "It is an override of an existing interface: the JavaDoc is on the interface. Why would you like me to copy \u0026 paste here?\n\nI would rather prefer to add an overall JavaDoc at the beginning of the class to describe what this class is for.",
      "parentUuid": "e4716954_0dec71dc",
      "range": {
        "startLine": 93,
        "startChar": 2,
        "endLine": 93,
        "endChar": 76
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04475ded_1e67adf4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 93,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2014-06-30T16:11:42Z",
      "side": 1,
      "message": "OK, my fault, didn\u0027t noticed JavaDoc on interface",
      "parentUuid": "e4716954_6d0895f7",
      "range": {
        "startLine": 93,
        "startChar": 2,
        "endLine": 93,
        "endChar": 76
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4716954_4de279ef",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 103,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2014-06-30T13:50:00Z",
      "side": 1,
      "message": "why \u0027scriptClass\u0027? this should be something more generic like eg. \u0027pluginClass\u0027",
      "range": {
        "startLine": 103,
        "startChar": 20,
        "endLine": 103,
        "endChar": 31
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a44db111_fb23ef42",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/AbstractPreloadedPluginScanner.java",
        "patchSetId": 25
      },
      "lineNbr": 103,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-06-30T14:39:43Z",
      "side": 1,
      "message": "True, historically it has been because of a DRY of the Script plugin providers, but now can be used for anything else.",
      "parentUuid": "e4716954_4de279ef",
      "range": {
        "startLine": 103,
        "startChar": 20,
        "endLine": 103,
        "endChar": 31
      },
      "revId": "0b233188f80de18dadafc1e92eb312a18014002c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}