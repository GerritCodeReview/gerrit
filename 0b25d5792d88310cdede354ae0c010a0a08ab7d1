{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c1534e37_48a00c87",
        "filename": "javatests/com/google/gerrit/server/git/DelegateRepositoryTest.java",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-06-25T15:03:58Z",
      "side": 1,
      "message": "This is only used on line 47 and could be inlined.",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 30,
        "endChar": 68
      },
      "revId": "0b25d5792d88310cdede354ae0c010a0a08ab7d1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2da904f3_336cc3a3",
        "filename": "javatests/com/google/gerrit/server/git/DelegateRepositoryTest.java",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-06-25T15:03:58Z",
      "side": 1,
      "message": "Why is all this setup actually needed? Original test was testing git gc. All you want is to wrap an instance of a Repository class no matter whether it disk or just in memory repository, so you could just say:\n\n  Repository foo \u003d new \n  InMemoryRepositoryManager().createRepository(Project.nameKey(\"foo\"));\n  try (DelegateRepository delegateRepository \u003d new DelegateRepository(foo)) {\n    assertThat(delegateRepository.delegate()).isSameInstanceAs(foo);\n  }",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 43,
        "endChar": 3
      },
      "revId": "0b25d5792d88310cdede354ae0c010a0a08ab7d1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5380b5d7_057d0341",
        "filename": "javatests/com/google/gerrit/server/git/DelegateRepositoryTest.java",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-06-25T15:03:58Z",
      "side": 1,
      "message": "This test is a no-op. That\u0027s because it doesn\u0027t actually test what this change is doing: changing visibility from package private to public, because this test class is itself located in the same package: com.google.gerrit.server.git. If you revert visibility change in DelegateRepository.java this test would still succeed.\n\nMove this test class in sub-package: com.google.gerrit.server.git.repository or, com.google.gerrit.server.git.delegate ?",
      "range": {
        "startLine": 45,
        "startChar": 3,
        "endLine": 46,
        "endChar": 61
      },
      "revId": "0b25d5792d88310cdede354ae0c010a0a08ab7d1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af037263_c88b0d4f",
        "filename": "javatests/com/google/gerrit/server/git/DelegateRepositoryTest.java",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-06-25T15:03:58Z",
      "side": 1,
      "message": "I\u0027m getting this warning in Eclipse on this line:\n\n  Resource leak: \u0027\u003cunassigned Closeable value\u003e\u0027 is never closed.",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 91
      },
      "revId": "0b25d5792d88310cdede354ae0c010a0a08ab7d1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}