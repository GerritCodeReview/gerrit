{
  "comments": [
    {
      "key": {
        "uuid": "AAADMn////s\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 344,
      "author": {
        "id": 1010579
      },
      "writtenOn": "2012-02-23T16:55:15Z",
      "side": 1,
      "message": "Since we are trolling all branches at this point, only looking at one branch will effectively mark all other branches\u0027 commit history as unacceptable and any dependancies contained therein as missing. As long as we now assume all dependancies are also in the destination branch, and we are not reviewing a merge commit, we should be Ok. Do we allow reviewing a merge commit?",
      "revId": "0b9415abe93426433669302d880c76dfb83e5435",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAADNX////8\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 344,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2012-02-23T18:15:10Z",
      "side": 1,
      "message": "We do allow reviewing merge commits.\n\nPerhaps what we need to do is ensure that one line of dependencies are all on the destination branch, but for any other line they can be on any other branch.  Seems tricky, but it might work?",
      "parentUuid": "AAADMn////s\u003d",
      "revId": "0b9415abe93426433669302d880c76dfb83e5435",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAADMn////k\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 344,
      "author": {
        "id": 1010579
      },
      "writtenOn": "2012-02-23T22:19:09Z",
      "side": 1,
      "message": "Sure, at least one? But what if the merge is of two other earlier side branches off of  destination. No lines would directly be on destination but be found through rev-walking dest.\n\nWhy are we allowing only dest? Is the receive commits insufficient, or do we need proper closure that could be handled elsewise?",
      "parentUuid": "AAADNX////8\u003d",
      "revId": "0b9415abe93426433669302d880c76dfb83e5435",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAADRH////w\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 344,
      "author": {
        "id": 1010015
      },
      "writtenOn": "2012-02-27T01:44:26Z",
      "side": 1,
      "message": "[option] resolve \u0027merge pending \u0027 in markCleanMerges() method , e.g.  allocate cut point between 669  and 670. \n\n (just suggestion ,not ever test if it can resolve the issue George reported).",
      "parentUuid": "AAADMn////k\u003d",
      "revId": "0b9415abe93426433669302d880c76dfb83e5435",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}