{
  "comments": [
    {
      "key": {
        "uuid": "8d56887c_4df7dfde",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2019-11-22T21:31:10Z",
      "side": 1,
      "message": "Do we really need specific Plugin methods? Can\u0027t we live with just Gerrit.emit and Gerrit.on? And remove \"fromPlugin\" functionality?\n\nWould it be sufficient, if plugins just prefix their event names? Isn\u0027t rather a rare case that something wants to listen on plugin generated events?",
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64b9c31e_c6f1f6fc",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2019-11-22T23:27:50Z",
      "side": 1,
      "message": "I thought about just providing `emit` and `on` on Gerrit, but I think sometimes you want to know where that event comes from. Especially I remember there was a discussion on feature request for communication between plugins, and in that case, you probably want more accurate target and source of the event.\n\nA second thought on this. You can always add more in the `detail` to make your event recognizable.\n\nYa I think we can live by just having the event interface on Gerrit.\n\nWill update.",
      "parentUuid": "8d56887c_4df7dfde",
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce23dcf3_9f191f85",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 507,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2019-11-22T21:31:10Z",
      "side": 1,
      "message": "Maybe rename to _gerritEventListeners or _gerritEventListenersMap?",
      "range": {
        "startLine": 507,
        "startChar": 6,
        "endLine": 507,
        "endChar": 23
      },
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2c1a799_c864bd82",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 507,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2019-11-22T23:27:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce23dcf3_9f191f85",
      "range": {
        "startLine": 507,
        "startChar": 6,
        "endLine": 507,
        "endChar": 23
      },
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "faf53a47_c9f3267f",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 707,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2019-11-22T21:31:10Z",
      "side": 1,
      "message": "Remove empty line.",
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "146c728f_f723c00a",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 707,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2019-11-22T23:27:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "faf53a47_c9f3267f",
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e06ea704_4677fe54",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 750,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2019-11-22T21:31:10Z",
      "side": 1,
      "message": "This method does not return a handler for unregistering? Should it?",
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "079380a6_25170d6c",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 750,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2019-11-22T21:31:10Z",
      "side": 1,
      "message": "\"on\" is a weird name. I would prefer something more similar to \"addEventListener\", maybe even addGerritEventListener or some such.",
      "range": {
        "startLine": 750,
        "startChar": 9,
        "endLine": 750,
        "endChar": 11
      },
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2370ecdd_093a834c",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 750,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2019-11-22T23:27:50Z",
      "side": 1,
      "message": "that\u0027s a good point, definitely should!",
      "parentUuid": "e06ea704_4677fe54",
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5639d78_5e5084b0",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 750,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2019-11-22T23:27:50Z",
      "side": 1,
      "message": "hmm was following nodejs EventEmitter interface: https://nodejs.org/api/events.html#events_class_eventemitter\n\nsupport both and on will be just an alias to addListener",
      "parentUuid": "079380a6_25170d6c",
      "range": {
        "startLine": 750,
        "startChar": 9,
        "endLine": 750,
        "endChar": 11
      },
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9464f493_f82921e6",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 767,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2019-11-22T21:31:10Z",
      "side": 1,
      "message": "I would prefer a name more similar to \"dispatchEvent\", maybe even dispatchGerritEvent or some such.",
      "range": {
        "startLine": 767,
        "startChar": 9,
        "endLine": 767,
        "endChar": 13
      },
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "216240c6_621b1ae2",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 767,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2019-11-22T23:27:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9464f493_f82921e6",
      "range": {
        "startLine": 767,
        "startChar": 9,
        "endLine": 767,
        "endChar": 13
      },
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27662cf1_eb717d39",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 770,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2019-11-22T21:31:10Z",
      "side": 1,
      "message": "Maybe you want to catch errors from each listener such that an error in one listener does not prevent execution of the other listeners?",
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "263cef43_71bf885a",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 770,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2019-11-22T21:31:10Z",
      "side": 1,
      "message": "Maybe listener callbacks should be *scheduled* for execution (as a micro task) instead of being called directly. Or this could at least be a parameter for emit()?",
      "range": {
        "startLine": 770,
        "startChar": 1,
        "endLine": 770,
        "endChar": 57
      },
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cc2b1c6_bdb4abe0",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 770,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2019-11-22T23:27:50Z",
      "side": 1,
      "message": "`Synchronously calls each of the listeners registered for the event named eventName, in the order they were registered, passing the supplied arguments to each.`\n\nthis is what defined in nodejs EventEmitter.emit, i have that in the `emit` function as well. I think event emitter should be synchronously for most use cases, not sure if I want to support any async at all.",
      "parentUuid": "263cef43_71bf885a",
      "range": {
        "startLine": 770,
        "startChar": 1,
        "endLine": 770,
        "endChar": 57
      },
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "350edef0_9c7d694d",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 3
      },
      "lineNbr": 770,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2019-11-22T23:27:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "27662cf1_eb717d39",
      "revId": "0ce2875f01b3b70bed072273ddae645940359e64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}