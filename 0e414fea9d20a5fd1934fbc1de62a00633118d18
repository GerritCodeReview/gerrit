{
  "comments": [
    {
      "key": {
        "uuid": "02522dad_ff367b3b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListKey.java",
        "patchSetId": 14
      },
      "lineNbr": 59,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2016-02-26T12:20:37Z",
      "side": 1,
      "message": "I am not sure if \"diffType\" really belongs here.\n\nThe oldId and newId are already enough to identify a patch list. Even in the \"first_parent\" case we still just need two IDs here, the ID of the merge commit and the ID of the first parent.",
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62684971_a7ba2a9c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListKey.java",
        "patchSetId": 14
      },
      "lineNbr": 59,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2016-03-01T14:50:26Z",
      "side": 1,
      "message": "It belongs here from the diff cache perspective.\n\nThe result of diff will be different for the auto-merge and first-parent comparisons. Since diff\u0027s are cached using PatchListKey as key, we should extend this key to be able to store both diff\u0027s in cache.",
      "parentUuid": "02522dad_ff367b3b",
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e24c3916_de0ce18f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListKey.java",
        "patchSetId": 14
      },
      "lineNbr": 63,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2016-02-26T12:20:37Z",
      "side": 1,
      "message": "Adding this here seems to require changing a lot of existing code. Now every caller has to care to provide at least the default AUTO_MERGE.\n\nAs a minimum, keeping the old constructor as-is and adding a new one with the DiffType would significantly reduce the number of places which will need to change.",
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62684971_47c9ee20",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListKey.java",
        "patchSetId": 14
      },
      "lineNbr": 63,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2016-03-01T14:50:26Z",
      "side": 1,
      "message": "Done\n\nAlthough the constructor with hardcoded auto-merge value is only used four times.",
      "parentUuid": "e24c3916_de0ce18f",
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e24c3916_9e06596c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 153,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2016-02-26T12:20:37Z",
      "side": 1,
      "message": "We usually don\u0027t maintain these kind of comments in Gerrit\u0027s source code.",
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62684971_c7d4fec2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 153,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2016-03-01T14:50:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e24c3916_9e06596c",
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02522dad_9f3bb722",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 358,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2016-02-26T12:20:37Z",
      "side": 1,
      "message": "Instead of passing the \"diffType\" via the PatchListKey, have you considered adding another Factory.create method (after line 91):\n\n\n  PatchListLoader create(PatchListKey key, Project.NameKey project, DiffType diffType);\n\nMaybe immediately use it to pass the parent number instead of the DiffType:\n\n  PatchListLoader create(PatchListKey key, Project.NameKey project, int parentNumber)",
      "range": {
        "startLine": 358,
        "startChar": 15,
        "endLine": 358,
        "endChar": 33
      },
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "425fc5cb_c6d402c3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 358,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2016-03-01T14:50:26Z",
      "side": 1,
      "message": "Correct me if I\u0027m wrong, but isn\u0027t PatchListKey used as a key for diff cache? If we remove diff type from it entries for auto-merge and left-parent will be using same key?",
      "parentUuid": "02522dad_9f3bb722",
      "range": {
        "startLine": 358,
        "startChar": 15,
        "endLine": 358,
        "endChar": 33
      },
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62684971_872a8673",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 358,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2016-03-01T22:09:25Z",
      "side": 1,
      "message": "\u003e entries for auto-merge and left-parent will be using same key?\n\nI would really be surprised if the first-parent is used in the PatchListKey for the auto-merge case. This would be strange as the diff between two commit-ids in the patch-list key wouldn\u0027t produce what we see in the UI: the diff between the merge commit and the auto-merge tree.\n\nTo confirm that I will debug that tomorrow but my current guess is that for the auto-merge case we really have the merge-commit-id and the auto-merge tree in the PatchListKey.",
      "parentUuid": "425fc5cb_c6d402c3",
      "range": {
        "startLine": 358,
        "startChar": 15,
        "endLine": 358,
        "endChar": 33
      },
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62684971_e786e295",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 358,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2016-03-02T11:40:21Z",
      "side": 1,
      "message": "As I already commented, for the auto-merge case the first-parent is NOT used in the PatchListKey. Instead the oldId is NULL and the newId is the ID of the merge commit.",
      "parentUuid": "425fc5cb_c6d402c3",
      "range": {
        "startLine": 358,
        "startChar": 15,
        "endLine": 358,
        "endChar": 33
      },
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42cb45e2_a60c868e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 358,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2016-03-04T08:08:44Z",
      "side": 1,
      "message": "OK, I think I get your point. You say that we don\u0027t need to have additional filed in the key since the combination of existing once will be unique (for auto-merge case oldId would be null and for the first-parent it won\u0027t).\n\nThat\u0027s a valid point, but I would still go with the additional filed, for the two reasons:\n\n 1. it is more readable and do not use any \"hidden\" convention\n 2. gives a place for further merge strategies\n\nAfter all it is stored as a single character in the serialized key, so storage space it is not a huge overhead ;)",
      "parentUuid": "62684971_e786e295",
      "range": {
        "startLine": 358,
        "startChar": 15,
        "endLine": 358,
        "endChar": 33
      },
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42cb45e2_c60b8272",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 358,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2016-03-04T08:45:01Z",
      "side": 1,
      "message": "There is no hidden convention. Using the first-parent commit-ID for the auto-merge case would be *wrong*.\n\nThe point 2. should be solved when (and if) the need arrives.",
      "parentUuid": "42cb45e2_a60c868e",
      "range": {
        "startLine": 358,
        "startChar": 15,
        "endLine": 358,
        "endChar": 33
      },
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42cb45e2_464dd2b1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 358,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2016-03-04T14:08:36Z",
      "side": 1,
      "message": "I\u0027ve just tried refactor the code the way you proposed, namly removing the \u0027diffType\u0027 filed from PatchListKey and this breaks the future.\n\nPatchListKey is created using data that are stored in the \"database\" and during that time we don\u0027t have access to the underlaying git repository to read the first parent of commit object. Because of that we can\u0027t set the \u0027oldId\u0027 to non-null value.\n\nThe only way is to distinguish objects here is to introduce additional property that can be set based on the chosen diff type.\n\nI think this is less invasive way than extending PatchSet or Revision data types to include the information about first parent.",
      "parentUuid": "42cb45e2_c60b8272",
      "range": {
        "startLine": 358,
        "startChar": 15,
        "endLine": 358,
        "endChar": 33
      },
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02522dad_bf40f380",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 360,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2016-02-26T12:20:37Z",
      "side": 1,
      "message": "If, as proposed above, we have a parent number passed this could become:\n\n  rw.parseCommit(b.getParent(parentNumber));",
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "425fc5cb_86b5aab0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 360,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2016-03-01T14:50:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02522dad_bf40f380",
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e24c3916_fe119da8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 363,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2016-02-26T12:20:37Z",
      "side": 1,
      "message": "Why false here? Why should an automerge not be saved any more?",
      "range": {
        "startLine": 363,
        "startChar": 57,
        "endLine": 363,
        "endChar": 62
      },
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "425fc5cb_e6b01ec2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 363,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2016-03-01T14:50:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e24c3916_fe119da8",
      "range": {
        "startLine": 363,
        "startChar": 57,
        "endLine": 363,
        "endChar": 62
      },
      "revId": "0e414fea9d20a5fd1934fbc1de62a00633118d18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}