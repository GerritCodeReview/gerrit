{
  "comments": [
    {
      "key": {
        "uuid": "f69fbfca_ed42e590",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/mail/OutgoingEmail.java",
        "patchSetId": 9
      },
      "lineNbr": 187,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2016-09-08T19:18:49Z",
      "side": 1,
      "message": "Nowadays the java compiler is smart enough to make a naive version of this that doesn\u0027t use StringBuilder faster (it avoids allocation of intermediate values like (textPart + \"\\r\\n\")):\n\n  return\n     // Text part:\n     \"--\" + boundary + \"\\r\\n\"\n     + \"Content-Type: ...\\r\\n\"\n     + \"Content-Transfer-Encoding: ...\\r\\n\"\n     + \"\\r\\n\"\n     + textPart + \"\\r\\n\"\n\n     // HTML part:\n     + \"--\" + boundary + \"\\r\\n\"\n     + \"Content-Type: ...\"\n     + ...",
      "revId": "0eb975108ab4b158c66d1770b91a662b536c99d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f69fbfca_0d3ad123",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/mail/OutgoingEmail.java",
        "patchSetId": 9
      },
      "lineNbr": 187,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2016-09-08T19:20:41Z",
      "side": 1,
      "message": "E.g., see https://briangordon.github.io/2014/01/javac-optimizations.html#string-concatenation",
      "parentUuid": "f69fbfca_ed42e590",
      "revId": "0eb975108ab4b158c66d1770b91a662b536c99d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36d31798_a7480ab3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/mail/OutgoingEmail.java",
        "patchSetId": 9
      },
      "lineNbr": 187,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-08T19:35:59Z",
      "side": 1,
      "message": "Well if you\u0027re going to use StringBuilder, you shouldn\u0027t use + at all, it should be append(\"--\").append(boundary).append(\"\\r\\n\"), etc.\n\nThe implementation of + uses StringBuilder internally (it literally generates bytecode to call StringBuilder methods), the main advantage over a manual StringBuilder is it presizes the internal buffer to avoid any copying.\n\n(Until Java 9 at least, then you have indified string concatenation and all bets about implementation details are off.)",
      "parentUuid": "f69fbfca_0d3ad123",
      "revId": "0eb975108ab4b158c66d1770b91a662b536c99d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bd3821d_8084760e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/mail/OutgoingEmail.java",
        "patchSetId": 9
      },
      "lineNbr": 187,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-09-09T16:20:57Z",
      "side": 1,
      "message": "Happy to change to using `+`, but unclear on the consensus re. whether this is to be changed.\n\nBoth of these changes have +2, but is this issue the holdup?",
      "parentUuid": "36d31798_a7480ab3",
      "revId": "0eb975108ab4b158c66d1770b91a662b536c99d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}