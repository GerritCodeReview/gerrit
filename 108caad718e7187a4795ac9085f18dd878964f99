{
  "comments": [
    {
      "key": {
        "uuid": "dc60231e_b3ebb836",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 2
      },
      "lineNbr": 620,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-19T18:55:33Z",
      "side": 1,
      "message": "Why is this a `pop`? Should this not be a loop over the `removed` array?",
      "range": {
        "startLine": 620,
        "startChar": 37,
        "endLine": 620,
        "endChar": 43
      },
      "revId": "108caad718e7187a4795ac9085f18dd878964f99",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c057749_9056541a",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 2
      },
      "lineNbr": 620,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-19T19:37:02Z",
      "side": 1,
      "message": "No real reason, just two ways to do the same thing.\n\nI don\u0027t believe a circumstance will ever arise under the current methodology where this array or the one below has length \u003e 1. I can make them both loops if you think that\u0027s the smart choice for the long term in case something changes, though.",
      "parentUuid": "dc60231e_b3ebb836",
      "revId": "108caad718e7187a4795ac9085f18dd878964f99",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc60231e_5345045e",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 2
      },
      "lineNbr": 620,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-19T19:45:19Z",
      "side": 1,
      "message": "\u003e two ways to do the same thing\n\nThey are different: `Array#pop` mutates the array, whereas looping or using `[0]` does not.\n\n\u003e for the long term in case something changes\n\nYeah, if we change something, we don\u0027t want to have to worry about whether the internals supported all the shapes that a splice can take.",
      "parentUuid": "7c057749_9056541a",
      "revId": "108caad718e7187a4795ac9085f18dd878964f99",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c057749_306de8e7",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 2
      },
      "lineNbr": 620,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-19T19:57:53Z",
      "side": 1,
      "message": "\u003e They are different\n\nYeah, I meant in this case they achieve the same goal. I changed it though.\n\n\u003e we don\u0027t want to have to worry\n\nDone :)",
      "parentUuid": "dc60231e_5345045e",
      "revId": "108caad718e7187a4795ac9085f18dd878964f99",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c057749_d039fcee",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 2
      },
      "lineNbr": 634,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-19T18:55:33Z",
      "side": 1,
      "message": "Why `pop()` rather than `[0]` or a loop over the splices?",
      "range": {
        "startLine": 634,
        "startChar": 65,
        "endLine": 634,
        "endChar": 68
      },
      "revId": "108caad718e7187a4795ac9085f18dd878964f99",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc60231e_d350f41e",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 2
      },
      "lineNbr": 634,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-19T19:57:53Z",
      "side": 1,
      "message": "I can\u0027t envision a scenario in which indexSplices has length \u003e 1... Are Polymer\u0027s this.___ actions ever batched together? In testing, a splice with length \u003e 1 results in the removed array having length \u003e 1, whereas indexSplices.len seems to correspond to the number of times this.splice is called. \n\nThe reason I\u0027m stressing this point is because if these requests are ever batched, then I\u0027d bet that would have implications on what changeRecord.path  looks like too.",
      "parentUuid": "7c057749_d039fcee",
      "revId": "108caad718e7187a4795ac9085f18dd878964f99",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c8c7b49_cdc4e9fa",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 2
      },
      "lineNbr": 634,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-19T23:05:15Z",
      "side": 1,
      "message": "Anything that invokes `notifySplices` [1] may be sending multiple splices for the same array. I believe any `changeRecord` object will only concern one path (however many splices appear in it).\n\n[1] https://www.polymer-project.org/1.0/docs/api/Polymer.Base#method-notifySplices",
      "parentUuid": "dc60231e_d350f41e",
      "revId": "108caad718e7187a4795ac9085f18dd878964f99",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc60231e_93e83c3b",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view_test.html",
        "patchSetId": 2
      },
      "lineNbr": 535,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-19T18:55:33Z",
      "side": 1,
      "message": "What about just `done`?",
      "range": {
        "startLine": 533,
        "startChar": 10,
        "endLine": 535,
        "endChar": 11
      },
      "revId": "108caad718e7187a4795ac9085f18dd878964f99",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c057749_3046886f",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view_test.html",
        "patchSetId": 2
      },
      "lineNbr": 614,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-19T18:55:33Z",
      "side": 1,
      "message": "Optional nitpick: I think this one can remain `sinon` because there is no need to clean it up. Doesn\u0027t harm anything though.",
      "range": {
        "startLine": 614,
        "startChar": 46,
        "endLine": 614,
        "endChar": 53
      },
      "revId": "108caad718e7187a4795ac9085f18dd878964f99",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}