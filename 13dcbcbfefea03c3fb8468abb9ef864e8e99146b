{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7e9ec7d3_2ddfd8d3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 13,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2024-03-04T17:59:41Z",
      "side": 1,
      "message": "Not for imported changes only, but for all the changes. We will always use the virtual Id and for non-imported changes `virtualId \u003d\u003d\u003d changeNum`.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 21
      },
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f99540b_c28bdf2f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 13,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-05T08:56:37Z",
      "side": 1,
      "message": "For non-imported changes, this is a NOOP because of the equivalence you\u0027ve mentioned.",
      "parentUuid": "7e9ec7d3_2ddfd8d3",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 21
      },
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5ab8c41_6f7c7331",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 14,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2024-03-04T17:59:41Z",
      "side": 1,
      "message": "long line",
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c01fc66e_e364da2d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 14,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2024-03-04T17:59:41Z",
      "side": 1,
      "message": "I\u0027d rather say something like: \"...ensures a unique identifier for changes with the same change number\"",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 30
      },
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cd1c85c_44ab747e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 14,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2024-03-04T18:56:27Z",
      "side": 1,
      "message": "For me `unique identifier` can be misleading. For me is a `unique draft comment reference`",
      "parentUuid": "c01fc66e_e364da2d",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 30
      },
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92afe7a5_d7a3c853",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 14,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2024-03-04T18:59:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5ab8c41_6f7c7331",
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68ec79b3_cfeaf457",
        "filename": "java/com/google/gerrit/server/CommentsUtil.java",
        "patchSetId": 21
      },
      "lineNbr": 516,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2024-03-04T17:59:41Z",
      "side": 1,
      "message": "This logic has been introduced in change I385dcaf5. It should be enough to just call `virtualIdAlgorithm.apply(change.getServerId(), change.getId())`",
      "range": {
        "startLine": 512,
        "startChar": 1,
        "endLine": 516,
        "endChar": 3
      },
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d014acd8_aa76d428",
        "filename": "java/com/google/gerrit/server/CommentsUtil.java",
        "patchSetId": 21
      },
      "lineNbr": 516,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-05T08:56:37Z",
      "side": 1,
      "message": "What if `virtualIdAlgorithm` is `null`? You\u0027ll get a NPE.",
      "parentUuid": "68ec79b3_cfeaf457",
      "range": {
        "startLine": 512,
        "startChar": 1,
        "endLine": 516,
        "endChar": 3
      },
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "312f9030_cc860e8e",
        "filename": "java/com/google/gerrit/server/CommentsUtil.java",
        "patchSetId": 21
      },
      "lineNbr": 516,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2024-03-05T09:39:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d014acd8_aa76d428",
      "range": {
        "startLine": 512,
        "startChar": 1,
        "endLine": 516,
        "endChar": 3
      },
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39a54df1_f142c1d8",
        "filename": "java/com/google/gerrit/server/notedb/ChangeDraftUpdate.java",
        "patchSetId": 21
      },
      "lineNbr": 294,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2024-03-04T17:59:41Z",
      "side": 1,
      "message": "What about adding a `getVirtualId()` method and use it here, instead of overriding the `getId`? This way, we don\u0027t change the semantics of `getId()` in a stable branch and we are consistent with what has been done in `CommentsUtil`.",
      "range": {
        "startLine": 294,
        "startChar": 38,
        "endLine": 294,
        "endChar": 45
      },
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77fbc06c_364a04e9",
        "filename": "java/com/google/gerrit/server/notedb/ChangeDraftUpdate.java",
        "patchSetId": 21
      },
      "lineNbr": 294,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2024-03-04T18:56:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39a54df1_f142c1d8",
      "range": {
        "startLine": 294,
        "startChar": 38,
        "endLine": 294,
        "endChar": 45
      },
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff059c77_11e5e065",
        "filename": "java/com/google/gerrit/server/notedb/DeleteZombieCommentsRefs.java",
        "patchSetId": 21
      },
      "lineNbr": 279,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2024-03-04T17:59:41Z",
      "side": 1,
      "message": "The assumption is correct. This class is used in a pgm to run an ad hoc cleanup of left over change drafts. See I6f7b6582 for more details.",
      "range": {
        "startLine": 279,
        "startChar": 13,
        "endLine": 279,
        "endChar": 62
      },
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e44eb4c_272b3710",
        "filename": "java/com/google/gerrit/server/notedb/DeleteZombieCommentsRefs.java",
        "patchSetId": 21
      },
      "lineNbr": 279,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-05T08:56:37Z",
      "side": 1,
      "message": "Can we add your review feedback to the comment?",
      "parentUuid": "ff059c77_11e5e065",
      "range": {
        "startLine": 279,
        "startChar": 13,
        "endLine": 279,
        "endChar": 62
      },
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "333f1211_6fa87a87",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 21
      },
      "lineNbr": 1536,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2024-03-04T17:59:41Z",
      "side": 1,
      "message": "Duplicate of L#609",
      "range": {
        "startLine": 1536,
        "startChar": 20,
        "endLine": 1536,
        "endChar": 32
      },
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18dbc0ff_8e1a154b",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 21
      },
      "lineNbr": 1536,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2024-03-04T18:56:27Z",
      "side": 1,
      "message": "The method in L#609 is a public API. The method in L#1536 is a private method used in line L#1507:\n```\nprivate Map\u003cAccount.Id, ObjectId\u003e draftRefs()\n```",
      "parentUuid": "333f1211_6fa87a87",
      "range": {
        "startLine": 1536,
        "startChar": 20,
        "endLine": 1536,
        "endChar": 32
      },
      "revId": "13dcbcbfefea03c3fb8468abb9ef864e8e99146b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}