{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ca7cc227_dea237c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-02-14T11:39:33Z",
      "side": 1,
      "message": "Are we shipping these on our API? If so, can we do this in the web UI instead?\n\nI think the purpose of it is improved UX, not any sort of security etc, so if it can, I think it would be a better fit for a client-side feature.",
      "range": {
        "startLine": 7,
        "startChar": 43,
        "endLine": 7,
        "endChar": 61
      },
      "revId": "142de5d3eff92e859da50b1ddf3c28a856d86366",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48998e8b_f3ae4163",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-02-14T12:39:16Z",
      "side": 1,
      "message": "\u003e Are we shipping these on our API? If so, can we do this in the web UI instead?\n\nYes.\n\nAnd yes, also the purpose of this change is only for better UI in the FE.\n\n@milutin: can we implement this on the FE side. If then, I can abandon this change.",
      "parentUuid": "ca7cc227_dea237c9",
      "range": {
        "startLine": 7,
        "startChar": 43,
        "endLine": 7,
        "endChar": 61
      },
      "revId": "142de5d3eff92e859da50b1ddf3c28a856d86366",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca5c43f7_c06a89f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-02-21T09:34:00Z",
      "side": 1,
      "message": "Should this be abandoned? I think we are going for the FE solution.",
      "revId": "142de5d3eff92e859da50b1ddf3c28a856d86366",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd35064f_e74f923b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-02-21T09:38:36Z",
      "side": 1,
      "message": "yes, I\u0027ll abandon.",
      "parentUuid": "ca5c43f7_c06a89f9",
      "revId": "142de5d3eff92e859da50b1ddf3c28a856d86366",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "497687db_bfb8ffa2",
        "filename": "Documentation/config-submit-requirements.txt",
        "patchSetId": 6
      },
      "lineNbr": 204,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-02-14T11:39:33Z",
      "side": 1,
      "message": "This can be misread as being a security promise, while it\u0027s actually a UX enhancement. Can you add a sentence about this not being a security guarantee?",
      "revId": "142de5d3eff92e859da50b1ddf3c28a856d86366",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e13c6549_ae53b74a",
        "filename": "Documentation/config-submit-requirements.txt",
        "patchSetId": 6
      },
      "lineNbr": 205,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-02-14T16:19:08Z",
      "side": 1,
      "message": "... are only associated ...",
      "range": {
        "startLine": 205,
        "startChar": 12,
        "endLine": 205,
        "endChar": 26
      },
      "revId": "142de5d3eff92e859da50b1ddf3c28a856d86366",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ed4f184_b8e4a00c",
        "filename": "Documentation/config-submit-requirements.txt",
        "patchSetId": 6
      },
      "lineNbr": 206,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-02-14T11:39:33Z",
      "side": 1,
      "message": "nit: on",
      "range": {
        "startLine": 206,
        "startChar": 12,
        "endLine": 206,
        "endChar": 14
      },
      "revId": "142de5d3eff92e859da50b1ddf3c28a856d86366",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbdc4128_e8c2d2fa",
        "filename": "java/com/google/gerrit/entities/LabelType.java",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-02-14T16:19:08Z",
      "side": 1,
      "message": "Sorry, I didn\u0027t mean to put the whole regular expression here, but only the part that matches the label name (\u0027[a-zA-Z0-9][a-zA-Z0-9-]+\u0027). I think this class shouldn\u0027t know anything about the label predicate.",
      "range": {
        "startLine": 33,
        "startChar": 6,
        "endLine": 33,
        "endChar": 58
      },
      "revId": "142de5d3eff92e859da50b1ddf3c28a856d86366",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b219d207_093b136e",
        "filename": "java/com/google/gerrit/server/change/ChangeJson.java",
        "patchSetId": 6
      },
      "lineNbr": 680,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-02-14T16:19:08Z",
      "side": 1,
      "message": "... are only associated ...",
      "range": {
        "startLine": 680,
        "startChar": 34,
        "endLine": 680,
        "endChar": 48
      },
      "revId": "142de5d3eff92e859da50b1ddf3c28a856d86366",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "142de5d3eff92e859da50b1ddf3c28a856d86366",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Style",
        "description": {
          "value": "Code has correct style and format"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Style\u003dMAX AND -label:Code-Style\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Style=MAX AND -label:Code-Style=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Style=MAX"],"failingAtoms":["label:Code-Style=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "142de5d3eff92e859da50b1ddf3c28a856d86366",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Library-Compliance",
        "description": {
          "value": "Changes to specific library/metadata files require additional approval"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Library-Compliance\u003dMAX,user\u003dnon_uploader AND -label:Library-Compliance\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^lib/.*\"","file:\"^WORKSPACE$\"","file:\"^.gitmodule$\"","file:\"^tools/deps.bzl$\""]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "142de5d3eff92e859da50b1ddf3c28a856d86366",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Release-Notes",
        "description": {
          "value": "Changes must include a \u0027Release-Notes\u0027 footer with a single sentence to mention in the release notes. Changes not worth mentioning in the release notes should put \u0027Release-Notes: skip\u0027"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Release-Notes\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Release-Notes\""},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["hasfooter:\"Release-Notes\""],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "142de5d3eff92e859da50b1ddf3c28a856d86366",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "142de5d3eff92e859da50b1ddf3c28a856d86366",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}