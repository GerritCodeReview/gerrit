{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d082a21f_5835600d",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-section/gr-change-list-section.ts",
        "patchSetId": 35
      },
      "lineNbr": 46,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-02-16T09:06:38Z",
      "side": 1,
      "message": "Remove this is unused.",
      "revId": "149b079ae51d94932eeb70a2b08b897cf246b6de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1430db4_ecdadd8f",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-section/gr-change-list-section.ts",
        "patchSetId": 35
      },
      "lineNbr": 46,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-02-16T09:14:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d082a21f_5835600d",
      "revId": "149b079ae51d94932eeb70a2b08b897cf246b6de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e0a2c74_06553cd1",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-section/gr-change-list-section.ts",
        "patchSetId": 35
      },
      "lineNbr": 59,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-02-16T09:06:38Z",
      "side": 1,
      "message": "Remove, this is unused.",
      "revId": "149b079ae51d94932eeb70a2b08b897cf246b6de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82f45cef_eac9f7e6",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-section/gr-change-list-section.ts",
        "patchSetId": 35
      },
      "lineNbr": 59,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-02-16T09:14:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e0a2c74_06553cd1",
      "revId": "149b079ae51d94932eeb70a2b08b897cf246b6de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6fe5450_59fb5d57",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-section/gr-change-list-section.ts",
        "patchSetId": 35
      },
      "lineNbr": 100,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-02-16T09:06:38Z",
      "side": 1,
      "message": "As discussed, don\u0027t return an empty value here, figure out how to make the logic work with an empty or non-present change-section.",
      "revId": "149b079ae51d94932eeb70a2b08b897cf246b6de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "876b94a9_d60f0ccc",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-section/gr-change-list-section.ts",
        "patchSetId": 35
      },
      "lineNbr": 100,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-02-16T09:14:45Z",
      "side": 1,
      "message": "SectionIndex is no longer a property.\nSo what remains is a `changeSection` and a GrChangeListSection with an undefined changeSection, I think it\u0027s fine to return undefined here?\n\nThe issues were due to the test library and rendering a GrChangeListSection with an undefined changeSection doesn\u0027t make sense to me.",
      "parentUuid": "a6fe5450_59fb5d57",
      "revId": "149b079ae51d94932eeb70a2b08b897cf246b6de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3c91cf3_afd2b7fe",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-section/gr-change-list-section.ts",
        "patchSetId": 35
      },
      "lineNbr": 100,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-02-16T10:35:41Z",
      "side": 1,
      "message": "The problem is that pretty much all properties in lit have to be marked as optional to make typescript happy since they are not set in the constructor, and then we have to add code for impossible cases that hurts readability (\"is this a real case we should worry about?\"). We could:\n1. supply a default value in some cases such as an empty section here.\n2. Use ! instead of ? to override typescript: `@property({type: Object}) changeSection!: ChangeListSection;`\n3. keep doing stuff like `if(!this.requiredProp) return;`\n\nThese differences are important when we have children doing data loading for the parent like we saw in download dialog, which is a code smell on its own.",
      "parentUuid": "876b94a9_d60f0ccc",
      "revId": "149b079ae51d94932eeb70a2b08b897cf246b6de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac65329c_1ae313cb",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-section/gr-change-list-section.ts",
        "patchSetId": 35
      },
      "lineNbr": 100,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-02-16T11:48:33Z",
      "side": 1,
      "message": "Handling undefined doesn\u0027t make sense so I updated the property to be non-optional, using ! instead of ?",
      "parentUuid": "a3c91cf3_afd2b7fe",
      "revId": "149b079ae51d94932eeb70a2b08b897cf246b6de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}