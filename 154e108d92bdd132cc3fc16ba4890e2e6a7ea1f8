{
  "comments": [
    {
      "key": {
        "uuid": "7580a199_4398456c",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.js",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2020-07-16T14:15:02Z",
      "side": 1,
      "message": "Maybe move to _checkIfCompleted?\nThe _checkIfCompleted is called after all important changes (timeout/loaded) and already contains some cleanup code and calls.\n\nWith the current implementation, users can get unexpected behavior:\nawait awaitPluginsLoaded();\n// users have to check arePluginsLoaded again before then next call\npluginEndpoints.registerModule()",
      "range": {
        "startLine": 208,
        "startChar": 4,
        "endLine": 208,
        "endChar": 38
      },
      "revId": "154e108d92bdd132cc3fc16ba4890e2e6a7ea1f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0c08f73_081f05c3",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.js",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-07-16T14:25:49Z",
      "side": 1,
      "message": "not sure I follow you :) `registerModule` should only be called inside of the plugin when register custom or dynamic components, and all of them should be only called before `awaitPluginsLoaded` resolved, so not sure what will be the use case to call `registerModule` after `awaitPluginsLoaded` ?\n\nif you mean move it inside the `if` of the `_checkIfCompleted`, i think for pluginEndpoints, the ready state doesn\u0027t necessary need to wait for `_loadingResolver`, if no `awaitPluginsLoaded` called, when all plugins loaded, we still want to set ready for pluginEndpoints.",
      "parentUuid": "7580a199_4398456c",
      "range": {
        "startLine": 208,
        "startChar": 4,
        "endLine": 208,
        "endChar": 38
      },
      "revId": "154e108d92bdd132cc3fc16ba4890e2e6a7ea1f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc37d34a_ec70b4ae",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.js",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2020-07-16T14:43:01Z",
      "side": 1,
      "message": "\u003e\u003eso not sure what will be the use case to call `registerModule` after `awaitPluginsLoaded`\nMaybe example with registerModule is not good.\nBut in overall - it is unexpected, that after \nawait awaitPluginsLoaded();\nyou have to call arePluginsLoaded() for setting flag in pluginEndponints\n\nAlso, arePluginsLoadeed is a sort of \"getter\" and it is unexpected that it has side-effects.\n\n\u003e\u003e if you mean move it inside the `if` of the `_checkIfCompleted`,\nThis is my suggestion:\n_checkIfCompleted() {\n    if (this.arePluginsLoaded()) {\n      pluginEndpoints.setPluginsReady();\n      if(this._loadingResolver) {\n        this._loadingResolver();\n        this._loadingResolver \u003d null;\n        this._loadingPromise \u003d null;\n      }\n    }\n  }\n\n_checkIfCompleted is called when a plugin state is changed (and maybe it can be renamed in the future to  _onPluginStateChanged or similar)",
      "parentUuid": "d0c08f73_081f05c3",
      "range": {
        "startLine": 208,
        "startChar": 4,
        "endLine": 208,
        "endChar": 38
      },
      "revId": "154e108d92bdd132cc3fc16ba4890e2e6a7ea1f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eeea2d1f_bf1dc342",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.js",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-07-16T14:57:18Z",
      "side": 1,
      "message": "hmm i don\u0027t really see a difference compared to having it in `arePluginsLoaded` or in the `if(this.arePluginsLoaded())` tbh. but i am fine to make the change.",
      "parentUuid": "cc37d34a_ec70b4ae",
      "range": {
        "startLine": 208,
        "startChar": 4,
        "endLine": 208,
        "endChar": 38
      },
      "revId": "154e108d92bdd132cc3fc16ba4890e2e6a7ea1f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "012bc3f1_0f9df17a",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.js",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2020-07-16T16:59:38Z",
      "side": 1,
      "message": "For me the key difference is that _checkIfCompleted is called when a plugin is loaded or get a timeout. I.e. _checkIfCompleted is called when a plugin state has been changed and it can update state of the pluginEndpoints as a reaction to plugins state changes.\n\nAnd it is unexpected if pluginEndpoints state is updated when a developer quires state of pluginLoader using arePluginsLoaded method.",
      "parentUuid": "eeea2d1f_bf1dc342",
      "range": {
        "startLine": 208,
        "startChar": 4,
        "endLine": 208,
        "endChar": 38
      },
      "revId": "154e108d92bdd132cc3fc16ba4890e2e6a7ea1f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7f85f8e_46069d0a",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.js",
        "patchSetId": 2
      },
      "lineNbr": 414,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-07-16T16:14:11Z",
      "side": 1,
      "message": "remove",
      "revId": "154e108d92bdd132cc3fc16ba4890e2e6a7ea1f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79cf5a0e_3f40fb21",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.js",
        "patchSetId": 2
      },
      "lineNbr": 414,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-07-16T16:16:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c7f85f8e_46069d0a",
      "revId": "154e108d92bdd132cc3fc16ba4890e2e6a7ea1f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}