{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "da69912d_74235a8a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-05-18T10:10:52Z",
      "side": 1,
      "message": "Looks good to me. Left minor comments.",
      "revId": "154eddaa8493179c6b31a5e2d1d7b20c54623111",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3118ac9_1dd953b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-05-20T07:00:54Z",
      "side": 1,
      "message": "Thanks for the review!\n\nNasser, Martin, Youssef: We (Edwin, Ben and me) thought about this some more and came up with another idea that I\u0027d like your feedback on:\n\nInstead of the many boolean configs that we have for copying approvals in core today and a plugin endpoint where in the end all of these get OR\u0027d together we thought it makes more sense to just create Predicates\u003cPatchSetAppoval\u003e and allow users to write a simple change-query-style query string.\n\nFor example:\n\n[label \"Code-Review\"]\n  copyIf \u003d (change-kind:REWORK OR change-kind:TRIVIAL_REBASE) AND approver-email:.*@foocorp.com\n...\n\n[label \"Code-Review\"]\n  copyIf \u003d change-kind:TRIVIAL_REBASE OR score:MIN\n...\n\n// Pseudo code\nclass ChangeKindPredicate extends Predicate\u003cPatchSetApproval\u003e {\n  ChangeKindPredicate(ChangeKind kind){...}\n\n  match(PatchSetApproval psa) {\n    return changeKindCache.load(psa.change(), psa.patchSet()) \u003d\u003d kind;\n  }\n}\n\nIn this world, we can also allow plugins to contribute Predicates (like we do for change queries) and we\u0027d become even more flexible because all results aren\u0027t OR\u0027d together.\n\nI think this would allow us to also communicate better to the users in the UI why some approvals where copied but others were not.",
      "revId": "154eddaa8493179c6b31a5e2d1d7b20c54623111",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d3c2943_fc2e4b6d",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 1
      },
      "lineNbr": 2840,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-05-18T10:10:52Z",
      "side": 1,
      "message": "Could be removed (for consistency with other headers, e.g. Quota Enforcer).",
      "range": {
        "startLine": 2840,
        "startChar": 19,
        "endLine": 2840,
        "endChar": 26
      },
      "revId": "154eddaa8493179c6b31a5e2d1d7b20c54623111",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbf43a2b_681cd550",
        "filename": "java/com/google/gerrit/server/ApprovalCopier.java",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-05-18T13:29:56Z",
      "side": 1,
      "message": "We\u0027re deciding if \"a vote on a label\" should be copied, correct?",
      "range": {
        "startLine": 23,
        "startChar": 52,
        "endLine": 23,
        "endChar": 57
      },
      "revId": "154eddaa8493179c6b31a5e2d1d7b20c54623111",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c33cde5_045b7c98",
        "filename": "java/com/google/gerrit/server/ApprovalCopier.java",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-05-19T10:26:41Z",
      "side": 1,
      "message": "Yes, it\u0027s copying label scores (votes). Similar to all label_copy* functions https://gerrit-review.googlesource.com/Documentation/config-labels.html#label_copyAnyScore",
      "parentUuid": "dbf43a2b_681cd550",
      "range": {
        "startLine": 23,
        "startChar": 52,
        "endLine": 23,
        "endChar": 57
      },
      "revId": "154eddaa8493179c6b31a5e2d1d7b20c54623111",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c07bc655_af5388e8",
        "filename": "java/com/google/gerrit/server/ApprovalCopier.java",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-05-19T21:53:02Z",
      "side": 1,
      "message": "Ok, can we improve that wording here then?",
      "parentUuid": "8c33cde5_045b7c98",
      "range": {
        "startLine": 23,
        "startChar": 52,
        "endLine": 23,
        "endChar": 57
      },
      "revId": "154eddaa8493179c6b31a5e2d1d7b20c54623111",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14e99361_4b705b83",
        "filename": "java/com/google/gerrit/server/ApprovalCopier.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-05-18T13:29:56Z",
      "side": 1,
      "message": "Should this be LabelCopier? I guess it\u0027d be more like \u0027LabelVoteCopier\u0027. However, we still call a LabelVote a \"PatchSetApproval\". Since this is a new extension, should we try to adopt a better name?",
      "range": {
        "startLine": 27,
        "startChar": 17,
        "endLine": 27,
        "endChar": 31
      },
      "revId": "154eddaa8493179c6b31a5e2d1d7b20c54623111",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fcc3e66_e7495166",
        "filename": "java/com/google/gerrit/server/ApprovalCopier.java",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-05-18T10:10:52Z",
      "side": 1,
      "message": "Parameters LGTM. Tried to come up with use cases that can\u0027t be implemented using these parameters, but plugins should be able to inject any gerrit core classes and retrieve change data, etc...",
      "revId": "154eddaa8493179c6b31a5e2d1d7b20c54623111",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3537124_77f0d964",
        "filename": "java/com/google/gerrit/server/ApprovalInference.java",
        "patchSetId": 1
      },
      "lineNbr": 395,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-05-18T10:10:52Z",
      "side": 1,
      "message": "[optional]: code is self explanatory. I\u0027d remove this comment.",
      "range": {
        "startLine": 395,
        "startChar": 10,
        "endLine": 395,
        "endChar": 42
      },
      "revId": "154eddaa8493179c6b31a5e2d1d7b20c54623111",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "943b4fa5_79c4eb44",
        "filename": "java/com/google/gerrit/server/ApprovalInference.java",
        "patchSetId": 1
      },
      "lineNbr": 395,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-05-18T13:29:56Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "b3537124_77f0d964",
      "range": {
        "startLine": 395,
        "startChar": 10,
        "endLine": 395,
        "endChar": 42
      },
      "revId": "154eddaa8493179c6b31a5e2d1d7b20c54623111",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}