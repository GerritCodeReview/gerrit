{
  "comments": [
    {
      "key": {
        "uuid": "60f6762f_89d8c477",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmitByMerge.java",
        "patchSetId": 4
      },
      "lineNbr": 254,
      "author": {
        "id": 1010008
      },
      "writtenOn": "Jan 26, 2017 7:49:13 AM",
      "side": 1,
      "message": "Also assert that the corresponding changes have status MERGED (I think there is a helper function in AbstractSubmit for this)",
      "revId": "15ff652579ca76945a9eed5d6cba0339b0b15eb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f0842cf_b9d4a261",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmitByMerge.java",
        "patchSetId": 4
      },
      "lineNbr": 254,
      "author": {
        "id": 1026258
      },
      "writtenOn": "Jan 26, 2017 4:11:22 PM",
      "side": 1,
      "message": "Done",
      "revId": "15ff652579ca76945a9eed5d6cba0339b0b15eb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2121089_509c2e6f",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmitByMerge.java",
        "patchSetId": 4
      },
      "lineNbr": 255,
      "author": {
        "id": 1010008
      },
      "writtenOn": "Jan 26, 2017 7:49:13 AM",
      "side": 1,
      "message": "I feel like you should be able to make a stronger assertion about the structure of the graph at this point. I realize that the new tip will not always be exactly `merge`, in the Merge Always case. But maybe you could assert that both `merge` and `fix` are reachable from this new tip?",
      "revId": "15ff652579ca76945a9eed5d6cba0339b0b15eb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fef2b22_0f8dfbf5",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmitByMerge.java",
        "patchSetId": 4
      },
      "lineNbr": 255,
      "author": {
        "id": 1026258
      },
      "writtenOn": "Jan 26, 2017 4:11:22 PM",
      "side": 1,
      "message": "Done.\nHowever, I am not sure why the test failed.\nI can clearly see the merge commit is a parent of the master by setting a break point there. \nAny ideas?",
      "revId": "15ff652579ca76945a9eed5d6cba0339b0b15eb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbe3d584_3ef0209c",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmitByMerge.java",
        "patchSetId": 4
      },
      "lineNbr": 255,
      "author": {
        "id": 1010008
      },
      "writtenOn": "Jan 27, 2017 7:05:08 AM",
      "side": 1,
      "message": "I think you\u0027re mixing RevCommits belonging to different RevWalks. getRemoteHead returns you a RevCommit from a fresh copy of the repo on the server side, which doesn\u0027t exist in testRepo.\n\nYou can either fetch into testRepo, or just use repoManager to open the repo on the server side and do all your walking there.",
      "revId": "15ff652579ca76945a9eed5d6cba0339b0b15eb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}