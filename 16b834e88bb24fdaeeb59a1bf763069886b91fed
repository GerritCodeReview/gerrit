{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e7ec8b04_a9d43bc7",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-09-27T11:08:34Z",
      "side": 1,
      "message": "Line too long",
      "revId": "16b834e88bb24fdaeeb59a1bf763069886b91fed",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cbcf440_dc294c0a",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-09-27T11:19:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7ec8b04_a9d43bc7",
      "revId": "16b834e88bb24fdaeeb59a1bf763069886b91fed",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e35f18af_5c943820",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-09-27T11:08:34Z",
      "side": 1,
      "message": "gr-related-changes-list has a similar method. Please factor out to a utility and use in both places.",
      "revId": "16b834e88bb24fdaeeb59a1bf763069886b91fed",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3450153_25ac2243",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-09-27T11:19:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e35f18af_5c943820",
      "revId": "16b834e88bb24fdaeeb59a1bf763069886b91fed",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "902fe97b_159b90c9",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 256,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-09-27T11:08:34Z",
      "side": 1,
      "message": "This is no longer correct, you\u0027re storing ChangeInfo | RelatedChangeAndCommitInfo objects.",
      "revId": "16b834e88bb24fdaeeb59a1bf763069886b91fed",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c59f48f_ee57f7a1",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 256,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-09-27T11:19:36Z",
      "side": 1,
      "message": "Yeah but I don\u0027t think it makes sense to update `allChanges` type to contain RelatedChangeAndCommitInfo since RelatedChangeAndCommitInfo doesn\u0027t have any relevant properties(for adding hashtag/abandoning) hence I would prefer to keep this incorrect cast.",
      "parentUuid": "902fe97b_159b90c9",
      "revId": "16b834e88bb24fdaeeb59a1bf763069886b91fed",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7056b82_d500a356",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 256,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-09-27T11:46:51Z",
      "side": 1,
      "message": "This is risky because someone might depend on the object being a ChangeInfo, not realizing that it actually contains something else.\n\nWhat about changing what is stored to be a subset of ChangeInfo that overlaps (conceptually) with what RelatedChangeAndCommitInfo contains, and then converting RelatedChangeAndCommitInfo into that?\n\nsomething like\n\n```\nexport type MinimalChangeInfo \u003d Pick\u003cChangeInfo, \u0027id\u0027 | \u0027project\u0027 | \u0027branch\u0027 | \u0027_number\u0027 | \u0027status\u0027 | \u0027submittable\u0027 | \u0027change_id\u0027\u003e\n```",
      "parentUuid": "1c59f48f_ee57f7a1",
      "revId": "16b834e88bb24fdaeeb59a1bf763069886b91fed",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bbff4ec_b801a568",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 256,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-09-27T11:50:24Z",
      "side": 1,
      "message": "I think your argument does not support casting either since the properties are still missing even if you cast. An `allChanges` listener will still expect a `ChangeInfo` and get a `RelatedChangeAndConnitInfo` and fail/crash.",
      "parentUuid": "1c59f48f_ee57f7a1",
      "revId": "16b834e88bb24fdaeeb59a1bf763069886b91fed",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5d5b0a2_43961a41",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 256,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-09-27T11:51:35Z",
      "side": 1,
      "message": "It\u0027s in Loading state so I was hoping that no one is listening to allChanges in Loading state.\nI agree it\u0027s a bit fragile. Let me see if I can come up with a better solution.",
      "parentUuid": "3bbff4ec_b801a568",
      "revId": "16b834e88bb24fdaeeb59a1bf763069886b91fed",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b17e2451_2ee98bf4",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 256,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-09-27T11:52:14Z",
      "side": 1,
      "message": "Oops, Chris out-raced my comment.\n\nIs there a case for reading `allChanges` anyway when `LOADING`? Maybe the types can represent the fact that allChanges will be empty/garbage during `LOADING`, and `sync` can just accept the change numbers?",
      "parentUuid": "3bbff4ec_b801a568",
      "revId": "16b834e88bb24fdaeeb59a1bf763069886b91fed",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b041721_7cde0981",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 291,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-09-27T11:04:47Z",
      "side": 1,
      "message": "Change 346700 should ensure this is fine. When newData.reviewers are added to GrAccountLabel it will request the complete info.",
      "range": {
        "startLine": 291,
        "startChar": 6,
        "endLine": 291,
        "endChar": 29
      },
      "revId": "16b834e88bb24fdaeeb59a1bf763069886b91fed",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}