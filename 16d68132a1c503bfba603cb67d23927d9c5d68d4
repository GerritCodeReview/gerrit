{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9ecd966f_e6429ebf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-09-06T09:56:41Z",
      "side": 1,
      "message": "In this change, we are only writing the new property \"KEY_EXTERNAL_IDS_VERSION\" but we are not reading it back. Could you please explain in the commit message why we do that? (i.e. only enough to write it, vs. we are planning to implement a read path for the new property in a later change)\n\nI\u0027m also very skeptical about compatibility, but as long as we\u0027re only writing the new property we should be fine.",
      "revId": "16d68132a1c503bfba603cb67d23927d9c5d68d4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86d5e7c5_6d33f03e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-09-07T08:52:29Z",
      "side": 1,
      "message": "We are only writing the new property.\n\nThere won\u0027t be compatibility problems: we never read that back and never assert the previous state.\nUpdated the commit message.",
      "parentUuid": "9ecd966f_e6429ebf",
      "revId": "16d68132a1c503bfba603cb67d23927d9c5d68d4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "526d2d34_5cb23295",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-09-06T09:31:41Z",
      "side": 1,
      "message": "nit: meta",
      "range": {
        "startLine": 10,
        "startChar": 5,
        "endLine": 10,
        "endChar": 9
      },
      "revId": "16d68132a1c503bfba603cb67d23927d9c5d68d4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a649ce6_0c80b330",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-09-06T09:31:41Z",
      "side": 1,
      "message": "Can you please explain why this is useful/needed?\n\nI\u0027m concerned that this makes manually fixing external IDs more difficult and error-prone as we now also need to remember to update the corresponding refs/users/ branches when updating refs/meta/external-ids. What happens if the update of the refs/users/ branch is forgotten?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "16d68132a1c503bfba603cb67d23927d9c5d68d4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45aa503b_89a46a51",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-09-06T09:51:28Z",
      "side": 1,
      "message": "Thanks for adding the explanation.\n\nThis means if the refs/users/ update is forgotten when manually fixing external IDs (direct push to refs/meta/external-ids) all what happens is that the account is not automatically reindexed, but otherwise it\u0027s fine?",
      "parentUuid": "2a649ce6_0c80b330",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "16d68132a1c503bfba603cb67d23927d9c5d68d4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05497d42_1d887ec4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-09-06T09:51:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "526d2d34_5cb23295",
      "range": {
        "startLine": 10,
        "startChar": 5,
        "endLine": 10,
        "endChar": 9
      },
      "revId": "16d68132a1c503bfba603cb67d23927d9c5d68d4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "760b2c4f_bf1a99dc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-09-06T09:55:28Z",
      "side": 1,
      "message": "Updated the description.\n\nThis should not be possible to update refs/meta/external-ids outside of the AccountsUpdate (e.g. through the ExternalIdNotes directly).\n\nSo every update, that goes through the AccountUpdate will update both externalIds and refs/users/*.\n\n(e.g. our internal endpoints, that are meant for manual fix up of external-ids use the same AccountsUpdate).\n\nThe change is needed for the index work: with this change, we will only need to hook indexing logic on updates to refs/users/*.",
      "parentUuid": "2a649ce6_0c80b330",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "16d68132a1c503bfba603cb67d23927d9c5d68d4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "578e4232_a09f1500",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-09-06T09:55:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "526d2d34_5cb23295",
      "range": {
        "startLine": 10,
        "startChar": 5,
        "endLine": 10,
        "endChar": 9
      },
      "revId": "16d68132a1c503bfba603cb67d23927d9c5d68d4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8e745dc_ff19f289",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-09-06T09:56:41Z",
      "side": 1,
      "message": "Do we have a recipe for updating this manually? The only entry point I know to that code is through GerritInternals, but we can modify the logic there as well.",
      "parentUuid": "2a649ce6_0c80b330",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "16d68132a1c503bfba603cb67d23927d9c5d68d4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7191fb44_450d4117",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-09-06T09:57:25Z",
      "side": 1,
      "message": "Yes, this is the only thing (we might have stale index). Note: the main indexing logic will still be invoked, as long as there are the calls to indexer, only the fall back path will be skipped.",
      "parentUuid": "760b2c4f_bf1a99dc",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "16d68132a1c503bfba603cb67d23927d9c5d68d4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ecdfa86_2fc8fb69",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-09-07T08:52:29Z",
      "side": 1,
      "message": "GerritInternals will update ExternalIds through AccountUpdate. This in turn will update the new property.",
      "parentUuid": "7191fb44_450d4117",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "16d68132a1c503bfba603cb67d23927d9c5d68d4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}