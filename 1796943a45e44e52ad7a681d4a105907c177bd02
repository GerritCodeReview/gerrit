{
  "comments": [
    {
      "key": {
        "uuid": "AAAEx3///+o\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/events/EventFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 286,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-04-17T21:04:11Z",
      "side": 1,
      "message": "I\u0027m not sure you need patchSetInfoFactory here. You could have pulled it from the database with the db.patchSetAncestors() table.",
      "revId": "1796943a45e44e52ad7a681d4a105907c177bd02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAE03////8\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/events/EventFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 286,
      "author": {
        "id": 1010015
      },
      "writtenOn": "2012-04-18T07:35:40Z",
      "side": 1,
      "message": "that would be dry.\n\nhow about those parent revision pushed by pass directly into repository?\n\nin my memory patchSetAncestors table only keep those revision pushed to Gerrit for review.",
      "parentUuid": "AAAEx3///+o\u003d",
      "revId": "1796943a45e44e52ad7a681d4a105907c177bd02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAE0H////4\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/events/EventFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 286,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-04-18T07:41:15Z",
      "side": 1,
      "message": "this method can only output information about revisions that were pushed to gerrit for review. :-)",
      "parentUuid": "AAAE03////8\u003d",
      "revId": "1796943a45e44e52ad7a681d4a105907c177bd02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAE03////0\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/events/EventFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 286,
      "author": {
        "id": 1010015
      },
      "writtenOn": "2012-04-18T07:58:57Z",
      "side": 1,
      "message": "HI Shawn \n\nthanks a lot for your quickly help!\n\nstill confused by \u0027this method\u0027 ? do you mean \u0027patchSetInfoFactory.get(db, patchSet.getId())\u0027?\n\nbut I trace the get() method and find \n\n      final PatchSet patchSet \u003d db.patchSets().get(patchSetId);\n      final Change change \u003d db.changes().get(patchSet.getId().getParentKey());\n      final Project.NameKey projectKey \u003d change.getProject();\n      repo \u003d repoManager.openRepository(projectKey);\n      final RevWalk rw \u003d new RevWalk(repo);\n      try {\n        final RevCommit src \u003d\n            rw.parseCommit(ObjectId.fromString(patchSet.getRevision().get()));\n        PatchSetInfo info \u003d get(src, patchSetId);\n        info.setParents(toParentInfos(src.getParents(), rw));\n        return info;\n      } finally {\n        rw.release();\n      }\n\n\nmy understanding is Gerrit here get parent info by jgit.  right?\n\noh do you mean the  \u0027query   --current-patch-set\u0027 and  \u0027query   --patch-sets\u0027  against only those revisions need review,  so  db.patchSetAncestors() is enough .",
      "parentUuid": "AAAE0H////4\u003d",
      "revId": "1796943a45e44e52ad7a681d4a105907c177bd02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAE0H////w\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/events/EventFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 286,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-04-18T08:00:42Z",
      "side": 1,
      "message": "Right, this method we are talking about, asPatchSetAttribute, is only called by query when the --current-patch-set or --patch-sets flag was used, and can only return information about revisions that need review, or went through review in the past. And that ancestor information should be in the database.\n\nI guess its OK to get it from Git too. But usually we get it from the database.",
      "parentUuid": "AAAE03////0\u003d",
      "revId": "1796943a45e44e52ad7a681d4a105907c177bd02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAE03////s\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/events/EventFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 286,
      "author": {
        "id": 1010015
      },
      "writtenOn": "2012-04-18T08:07:34Z",
      "side": 1,
      "message": "Now I got your idea. exactly right!\nthat would be just dry and enough.\nnew patch set coming :)",
      "parentUuid": "AAAE0H////w\u003d",
      "revId": "1796943a45e44e52ad7a681d4a105907c177bd02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAEx3///+w\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/events/EventFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 292,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-04-17T21:04:11Z",
      "side": 1,
      "message": "A better message might be log.error(\"Cannot load patch set data for \" + patchSet.getId(), e);",
      "revId": "1796943a45e44e52ad7a681d4a105907c177bd02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAEx3///+4\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/events/EventFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-04-17T21:04:11Z",
      "side": 1,
      "message": "Don\u0027t print stack traces to stderr.",
      "revId": "1796943a45e44e52ad7a681d4a105907c177bd02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAEx3///+0\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/events/EventFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 296,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-04-17T21:04:11Z",
      "side": 1,
      "message": "Don\u0027t print stack traces to stderr.",
      "revId": "1796943a45e44e52ad7a681d4a105907c177bd02",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}