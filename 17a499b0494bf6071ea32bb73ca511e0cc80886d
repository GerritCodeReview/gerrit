{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "05ee04fc_21a9b4ef",
        "filename": "polygerrit-ui/app/elements/checks/gr-checks-results.ts",
        "patchSetId": 8
      },
      "lineNbr": 1383,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-10-14T08:11:00Z",
      "side": 1,
      "message": "I\u0027m not sure this if condition makes it more legible, can you go back to a single expression?",
      "revId": "17a499b0494bf6071ea32bb73ca511e0cc80886d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75796b59_79c7ea38",
        "filename": "polygerrit-ui/app/elements/checks/gr-checks-results.ts",
        "patchSetId": 8
      },
      "lineNbr": 1383,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-10-14T08:13:11Z",
      "side": 1,
      "message": "```suggestion\n      const isEmpty \u003d selected.length \u003d\u003d\u003d 0;\n      expanded \u003d !isEmpty \u0026\u0026 (isWarningOrError || isSelection || filterActiveWithResults);\n```",
      "range": {
        "startLine": 1378,
        "startChar": 0,
        "endLine": 1383,
        "endChar": 7
      },
      "revId": "17a499b0494bf6071ea32bb73ca511e0cc80886d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc7060ac_25fc2f56",
        "filename": "polygerrit-ui/app/elements/checks/gr-checks-results.ts",
        "patchSetId": 8
      },
      "lineNbr": 1383,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-10-14T08:28:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75796b59_79c7ea38",
      "range": {
        "startLine": 1378,
        "startChar": 0,
        "endLine": 1383,
        "endChar": 7
      },
      "revId": "17a499b0494bf6071ea32bb73ca511e0cc80886d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0de3c927_256cfc91",
        "filename": "polygerrit-ui/app/elements/checks/gr-checks-results.ts",
        "patchSetId": 8
      },
      "lineNbr": 1383,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-10-14T08:28:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "05ee04fc_21a9b4ef",
      "revId": "17a499b0494bf6071ea32bb73ca511e0cc80886d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8f803c9_0fd47e0e",
        "filename": "polygerrit-ui/app/models/views/change.ts",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-10-14T08:11:00Z",
      "side": 1,
      "message": "This makes state -\u003e url -\u003e state a non-identity function do the sorting.\n\nMaybe we should sort when checksRunsSelected is set?",
      "revId": "17a499b0494bf6071ea32bb73ca511e0cc80886d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "300d8717_d5b2c91c",
        "filename": "polygerrit-ui/app/models/views/change.ts",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-10-14T08:28:54Z",
      "side": 1,
      "message": "Yes, `state -\u003e url -\u003e state` is not an identify function, but does it have to be? \n\n`checksRunsSelected` is set via generic `updateState` calls, which we would have to override in the checks model. That would add complexity. I would be slightly in favor of avoiding that complexity, but don\u0027t feel strongly.\n\nI think what we would really like to have is that `checksRunsSelected` in the checks state is a set, not an array. But that would mean that state objects are not plain JSON anymore with just primitive types. And if we allow `Set` in state objects, then we also have to be more careful with utilities like `deepEqual` and `deepFreeze`.\n\nWhat do you think we should be doing here?",
      "parentUuid": "d8f803c9_0fd47e0e",
      "revId": "17a499b0494bf6071ea32bb73ca511e0cc80886d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38fd9a53_485cd761",
        "filename": "polygerrit-ui/app/models/views/change.ts",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-10-14T08:31:47Z",
      "side": 1,
      "message": "deepEqual already supports Sets.\n\nI think moving to sets makes sense",
      "parentUuid": "300d8717_d5b2c91c",
      "revId": "17a499b0494bf6071ea32bb73ca511e0cc80886d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a55a9724_02bd4e13",
        "filename": "polygerrit-ui/app/models/views/change.ts",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-10-14T08:49:24Z",
      "side": 1,
      "message": "Ok, will follow up.",
      "parentUuid": "38fd9a53_485cd761",
      "revId": "17a499b0494bf6071ea32bb73ca511e0cc80886d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}