{
  "comments": [
    {
      "key": {
        "uuid": "57342768_1c353466",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 644,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-05-14T21:36:50Z",
      "side": 1,
      "message": "Hm, is this necessary? Looks like this will trigger additional actions.",
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3d2ff7d_02627532",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 644,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2018-05-14T22:08:13Z",
      "side": 1,
      "message": "\u003e is this necessary?\n\nThis is so the related changes requests are included in the \"all change data\" notion.\n\nBeforehand it was requested separately in `_performPostLoadTasks`, but needed to be included in `_reload` so that it can be included in the overall timing.\n\nDo you see some other way of doing this?",
      "parentUuid": "57342768_1c353466",
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c5d9488_aad5edb7",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 644,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-05-18T23:24:15Z",
      "side": 1,
      "message": "But if related changes were not requested before this, wouldn\u0027t this create a performance regression?\n\nIn other words, looks like this will trigger additional server requests for the purpose of measuring only. If that\u0027s true, we probably shouldn\u0027t do this.",
      "parentUuid": "d3d2ff7d_02627532",
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6c35b4e_57634348",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 644,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2018-05-21T17:27:12Z",
      "side": 1,
      "message": "\u003e But if related changes were not requested before this,\n\nOh! No: I\u0027m sorry that I wasn\u0027t more clear. There\u0027s no change to the related-changes request. It works the same way. (In fact, every request works the same way.)\n\n* Beforehand, it was called after the promise returned by `_reload` (that\u0027s the \"core data\" promise). See on the next line (l.645) it calls `_performPostLoadTasks` which formerly started with the related-changes request.\n* Now it\u0027s called from inside `_reload` after the \"core data\" promise finishes. In other words, it\u0027s called after the same set of dependent requests finishes and only in the cases where it would have been requested by `_performPostLoadTasks` before this change.",
      "parentUuid": "7c5d9488_aad5edb7",
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba4a50fb_84940a74",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 644,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-05-21T19:06:01Z",
      "side": 1,
      "message": "I see, I guess the param is misleading. Shouldn\u0027t it be other way around then? Default value to replicate existing behavior?",
      "parentUuid": "d6c35b4e_57634348",
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d10bd03a_bd95fb35",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 1213,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-05-14T21:36:50Z",
      "side": 1,
      "message": "This method isn\u0027t really to follow. A bit cleaner, but still a way to go.\n\nThere are multiple asynchronous execution flows, and one must read all to understand even a part of it.",
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "745e16c7_65255292",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 1213,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2018-05-14T22:08:13Z",
      "side": 1,
      "message": "Can you explain what you mean differently? I\u0027m afraid I don\u0027t understand your comment.\n\nDo you perhaps mean that this method has gotten unwieldy?",
      "parentUuid": "d10bd03a_bd95fb35",
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a129b2a_98bb8473",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 1213,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-05-18T23:24:15Z",
      "side": 1,
      "message": "Yes, precisely that. And this change touches most of it, but doesn\u0027t increase clarity much.",
      "parentUuid": "745e16c7_65255292",
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84a9d54f_bdad9967",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 1217,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-05-14T21:36:50Z",
      "side": 1,
      "message": "Nit: Drop .",
      "range": {
        "startLine": 1217,
        "startChar": 62,
        "endLine": 1217,
        "endChar": 63
      },
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef21711_112406ef",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 1217,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2018-05-14T22:08:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84a9d54f_bdad9967",
      "range": {
        "startLine": 1217,
        "startChar": 62,
        "endLine": 1217,
        "endChar": 63
      },
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "565cb8fe_3ec739fa",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 1295,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-05-14T21:36:50Z",
      "side": 1,
      "message": "How about returning this instead, before function exit?\n\nreturn coreDataPromise.then(() \u003d\u003e this.$.reporting.changeDisplayed());",
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32113174_f4c540b6",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 1295,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2018-05-14T22:08:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "565cb8fe_3ec739fa",
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74e36149_c6229507",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 1297,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-05-14T21:36:50Z",
      "side": 1,
      "message": "Do you plan to differentiate first time from the others?",
      "range": {
        "startLine": 1297,
        "startChar": 28,
        "endLine": 1297,
        "endChar": 52
      },
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5341c0b_4535600a",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 1297,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2018-05-14T22:08:13Z",
      "side": 1,
      "message": "What do you mean by \"first time\"? Do you mean the first time that a user visits a change? If so, how would we detect this case?\n\nI\u0027m definitely open to finding useful ways to decompose this metric, but this simpler approach feels to me like a good start.",
      "parentUuid": "74e36149_c6229507",
      "range": {
        "startLine": 1297,
        "startChar": 28,
        "endLine": 1297,
        "endChar": 52
      },
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f532a687_1d695665",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 1297,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-05-18T23:24:15Z",
      "side": 1,
      "message": "\u003e What do you mean by \"first time\"?\n\nCold start vs transitioning from another app page. I.e. clicking a link in the email vs opening the change from dashboard.\n\n\u003e how would we detect this case?\n\nOne way would be to do same sort of reporting StartupChangeDisplayed and ChangeDisplayed metrics are being generated.\n\n\u003e feels to me like a good start\n\nI afraid combining metrics for cached and non-cached flows might generate mixed signals. And if sending meaningful metrics is the ultimate goal of this change, perhaps, it might need another iteration before taking full advantage of this code.",
      "parentUuid": "b5341c0b_4535600a",
      "range": {
        "startLine": 1297,
        "startChar": 28,
        "endLine": 1297,
        "endChar": 52
      },
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c556a9d8_5b37334c",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 1297,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2018-05-21T17:27:12Z",
      "side": 1,
      "message": "\u003e Cold start vs transitioning from another app page. I.e. clicking a link in the email vs opening the change from dashboard.\n\nI wonder if I\u0027ve chosen a confusing name for this timing:\n\n ChangeDataLoaded\n\nThis measurement does not include the page loading time. It\u0027s started when the change data load begins, which is well after the time that the app is loaded.\n\nConsequently, the question of whether the page has been cold-started or loaded via a transition should not influence the timing. I don\u0027t understand why that information should be included in this measurement.\n\nDo you think a better name might be less misleading?\n\n\u003e ... And if sending meaningful metrics is the ultimate goal of this change ...\n\nThe goal is to measure the user-perception of the time it takes to completely load a change. The user perception doesn\u0027t depend on whether they transitioned or cold-started, nor does it depend directly on how the requests are cached.\n\nWe want to see this time trend downwards as improvements are made in many places -- particularly in the server\u0027s API.",
      "parentUuid": "f532a687_1d695665",
      "range": {
        "startLine": 1297,
        "startChar": 28,
        "endLine": 1297,
        "endChar": 52
      },
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "890ab447_498eb165",
        "filename": "polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.js",
        "patchSetId": 6
      },
      "lineNbr": 1297,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-05-21T19:06:01Z",
      "side": 1,
      "message": "(marking as resolved not to block submission)\n\n\u003e ChangeDataLoaded\n\u003e This measurement does not include the page loading time.\n\nRight, but will it be affected by it? I think it will, since number of concurrent requests will be different for cold and hot start.\n\n\u003e The goal is to measure the user-perception of the time it takes to completely load a change.\n\nUser perceived time should be probably measured between user action and the data on the screen - I\u0027m not sure this metric does that.\n\nIn other words, does this metric going down prove that users are getting change displayed faster? I think the answer is maybe, since there are other things loading and rendering before that.",
      "parentUuid": "c556a9d8_5b37334c",
      "range": {
        "startLine": 1297,
        "startChar": 28,
        "endLine": 1297,
        "endChar": 52
      },
      "revId": "1a169ea2a7affcef72b63ba3ef00d15306181c9a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}