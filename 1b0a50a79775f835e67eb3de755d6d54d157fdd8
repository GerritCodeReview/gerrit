{
  "comments": [
    {
      "key": {
        "uuid": "4c849156_35025571",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/WebSessionManager.java",
        "patchSetId": 7
      },
      "lineNbr": 222,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2019-03-22T16:27:10Z",
      "side": 1,
      "message": "Is there security issues if we did this change?\n\nWould setting this as a final alleviate that issue?\n\nSince i see no other way at being able to get this without setting it public first.",
      "range": {
        "startLine": 220,
        "startChar": 0,
        "endLine": 222,
        "endChar": 5
      },
      "revId": "1b0a50a79775f835e67eb3de755d6d54d157fdd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ae57cd6_1395caca",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/WebSessionManager.java",
        "patchSetId": 7
      },
      "lineNbr": 222,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-22T17:40:56Z",
      "side": 1,
      "message": "\u003e Is there security issues if we did this change?\n\nI don\u0027t believe so, it does not contain any sensitive data and it won\u0027t expose any credentials either.\n\n\u003e Would setting this as a final alleviate that issue?\n\nWhy?\n \n\u003e Since i see no other way at being able to get this without setting it public first.",
      "parentUuid": "4c849156_35025571",
      "range": {
        "startLine": 220,
        "startChar": 0,
        "endLine": 222,
        "endChar": 5
      },
      "revId": "1b0a50a79775f835e67eb3de755d6d54d157fdd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83466f8b_20fa482e",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/WebSessionManager.java",
        "patchSetId": 7
      },
      "lineNbr": 222,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2019-03-22T18:14:50Z",
      "side": 1,
      "message": "Ah great! (I was worried that i could have caused a security issue) but great to hear it wont!",
      "parentUuid": "2ae57cd6_1395caca",
      "range": {
        "startLine": 220,
        "startChar": 0,
        "endLine": 222,
        "endChar": 5
      },
      "revId": "1b0a50a79775f835e67eb3de755d6d54d157fdd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d25fe0bf_a1690ed7",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/WebSessionManager.java",
        "patchSetId": 7
      },
      "lineNbr": 222,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-22T21:13:39Z",
      "side": 1,
      "message": "How do you get this Val out of the session? I can\u0027t see any point where it is exposed through a public method here.",
      "parentUuid": "83466f8b_20fa482e",
      "range": {
        "startLine": 220,
        "startChar": 0,
        "endLine": 222,
        "endChar": 5
      },
      "revId": "1b0a50a79775f835e67eb3de755d6d54d157fdd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a8d12df_7277b71a",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/WebSessionManager.java",
        "patchSetId": 7
      },
      "lineNbr": 222,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2019-03-22T21:18:16Z",
      "side": 1,
      "message": "Here\u0027s the code we are doing:\n\n\n  public void invalidateSpecificUser(Account.Id key) {\n    for (Path path : listFiles()) {\n      if (readFile(path).getAccountId().get() \u003d\u003d key.get()) {\n        deleteFile(path);\n      }\n    }\n  }\n\nwhich calls readFile:\n\n  private Val readFile(Path path) {\n    if (Files.exists(path)) {\n      try (InputStream fileStream \u003d Files.newInputStream(path);\n          ObjectInputStream objStream \u003d new ObjectInputStream(fileStream)) {\n        return (Val) objStream.readObject();\n      } catch (ClassNotFoundException e) {\n        log.warn(\"Entry \" + path + \" in cache \" + dir + \" has an incompatible \"\n            + \"class and can\u0027t be deserialized. Invalidating entry.\");\n        invalidate(path.getFileName().toString());\n      } catch (IOException e) {\n        log.warn(\"Cannot read cache \" + dir, e);\n      }\n    }\n    return null;\n  }\n\nnotice (Val) which gives us access to WebSessionManager.Val.\n\nNote that it reads each session file (we basically forked https://github.com/GerritCodeReview/plugins_websession-flatfile with our custom changes to support this).",
      "parentUuid": "d25fe0bf_a1690ed7",
      "range": {
        "startLine": 220,
        "startChar": 0,
        "endLine": 222,
        "endChar": 5
      },
      "revId": "1b0a50a79775f835e67eb3de755d6d54d157fdd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "248f2c49_d446c34f",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/WebSessionManager.java",
        "patchSetId": 7
      },
      "lineNbr": 222,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2019-03-22T22:02:28Z",
      "side": 1,
      "message": "I have this running on https://gerrit.git.wmflabs.org/r/ and to clear a specific user session im doing:\n\nssh -p 29418 Paladox@gerrit.git.wmflabs.org WikimediaWebSessions log-users-out 1.\n\nThe method 100% works.",
      "parentUuid": "9a8d12df_7277b71a",
      "range": {
        "startLine": 220,
        "startChar": 0,
        "endLine": 222,
        "endChar": 5
      },
      "revId": "1b0a50a79775f835e67eb3de755d6d54d157fdd8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}