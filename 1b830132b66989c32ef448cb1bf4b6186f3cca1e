{
  "comments": [
    {
      "key": {
        "uuid": "b8e9877f_c02950fe",
        "filename": "java/com/google/gerrit/acceptance/testsuite/account/TestSshKeys.java",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-06-02T22:50:59Z",
      "side": 1,
      "message": "That way generated private key file is not accepted by JCraft JSch. It\u0027s rejecting this private key file: [1].\n\nTo reproduce switch to using JCraft JSch from the command line, from this change:\n\n  $ bazel test --test_env\u003dSSH_CLIENT_IMPLEMENTATION\u003dJSCH javatests/com/google/gerrit/acceptance/ssh/...\n\nOr, from Eclipse, comment out the switch in SshSession.java, e.g.:\n\n  public void open() throws Exception {\n    //if (client \u003d\u003d JSCH) {\n      getJschSession();\n    //} else {\n    //  getMinaSession();\n    //}\n  }\n\nand run any SSH unit test.\n\n* [1] http://paste.openstack.org/show/794270/",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 135,
        "endChar": 3
      },
      "revId": "1b830132b66989c32ef448cb1bf4b6186f3cca1e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7624a89_e9af3eb0",
        "filename": "java/com/google/gerrit/acceptance/testsuite/account/TestSshKeys.java",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2020-06-02T23:13:28Z",
      "side": 1,
      "message": "No surprise, actually, though I had forgotten about this.\n\nJSch doesn\u0027t know the modern OpenSSH format (\"-----BEGIN OPENSSH PRIVATE KEY-----\"). JSch can only read PEM (starting with \"-----BEGIN RSA PRIVATE KEY-----\"; it also cannot deal with ed25519 keys, and 0.1.54 had bugs with ECDSA keys -- don\u0027t know if those got fixed in 0.1.55). I don\u0027t think sshd has support for writing that format yet. Unencrypted would be easy to do; encrypted might be more complicated.\n\nSo either the key generation must depend on which SSH client you want to use, or sshd needs to get support to write that old format, and then that must be used. (sshd reads the old format fine.)",
      "parentUuid": "b8e9877f_c02950fe",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 135,
        "endChar": 3
      },
      "revId": "1b830132b66989c32ef448cb1bf4b6186f3cca1e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa7fe48d_3e9a7de6",
        "filename": "java/com/google/gerrit/acceptance/testsuite/account/TestSshKeys.java",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2020-06-02T23:21:14Z",
      "side": 1,
      "message": "\u003e JSch can only read PEM (starting with \"-----BEGIN RSA PRIVATE KEY-----\"\n\nI.e., the PKCS#5 PEM format. JSch also cannot read PKCS#8 (\"-----BEGIN ENCRYPTED PRIVATE KEY-----\").",
      "parentUuid": "a7624a89_e9af3eb0",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 135,
        "endChar": 3
      },
      "revId": "1b830132b66989c32ef448cb1bf4b6186f3cca1e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c839c3f_d1201429",
        "filename": "java/com/google/gerrit/acceptance/testsuite/account/TestSshKeys.java",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2020-06-02T23:38:54Z",
      "side": 1,
      "message": "Though Dave Thompson mentions at [1] that \"it looks like jsch can read PKCS#8\". And looking at the JSch code in com.jcraft.jsch.Keypair: yes, he\u0027s right. PKCS#8 would be much better because of the better key derivation function.\n\n[1] https://stackoverflow.com/questions/52630701/how-to-encrypt-rsa-private-key-with-pbe-in-pkcs5-format-in-java-with-iaik-jce",
      "parentUuid": "aa7fe48d_3e9a7de6",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 135,
        "endChar": 3
      },
      "revId": "1b830132b66989c32ef448cb1bf4b6186f3cca1e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}