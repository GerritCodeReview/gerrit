{
  "comments": [
    {
      "key": {
        "uuid": "fb9cdf2b_db8553c0",
        "filename": "polygerrit-ui/app/elements/gr-app.html",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-19T17:09:44Z",
      "side": 1,
      "message": "Unrelated cleanup could come as separate changes in the same series.",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bdcc3fe_3097c82c",
        "filename": "polygerrit-ui/app/elements/gr-change-view.html",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-19T17:09:44Z",
      "side": 1,
      "message": "Unrelated to this change.",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb9cdf2b_5b5b8338",
        "filename": "polygerrit-ui/app/elements/gr-change-view.html",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2015-11-19T17:21:35Z",
      "side": 1,
      "message": "Cleanup and minor changes are simply going to be a part of these larger changes in the beginning. It’s more overhead for me to check out a new branch, go through that review, submit, etc. If it’s a trivial change I don’t see an issue.",
      "parentUuid": "9bdcc3fe_3097c82c",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bdcc3fe_50712ceb",
        "filename": "polygerrit-ui/app/elements/gr-change-view.html",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-19T17:25:14Z",
      "side": 1,
      "message": "I guess I\u0027m ok with this because like you say it\u0027s pretty minor, but as a meta-question we should be asking ourselves what is the source of headaches here, and can we change the tools/workflow to make it less of a headache. Which I feel like is fair game considering you\u0027re thinking about overhauling Gerrit UX ;)",
      "parentUuid": "fb9cdf2b_5b5b8338",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bdcc3fe_307028e5",
        "filename": "polygerrit-ui/app/elements/gr-change-view.html",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2015-11-19T17:32:29Z",
      "side": 1,
      "message": "If you feel that the trivial stuff surrounding the meat is impeding your ability to review a change (I see this if there’s a refactor alongside a big feature in the same file, for example), then I think it’s warranted to break it up. Otherwise that behavior will come naturally as the code base gets larger.",
      "parentUuid": "9bdcc3fe_50712ceb",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbca1f38_abb829e9",
        "filename": "polygerrit-ui/app/elements/gr-change-view.html",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-19T18:30:51Z",
      "side": 1,
      "message": "I agree with your reasoning and am fine with this.\n\nBut two things I wanted to point out.\n\nOne, if you aren\u0027t familiar with the process of splitting up one commit into smaller commits and rearranging them with an interactive rebase, it can be easier to learn on a commit like this where it\u0027s pretty clear-cut at the file level, rather than something more complicated that could generate conflicts within a file. (Not trying to presume one way or the other about your previous git experience.)\n\nTwo, I tend to use number of files changed as a rough estimate for how long it\u0027s going to take me to review something, and too many files can make my eyes glaze over. Yes I realize this is really my problem, and shouldn\u0027t have to be yours.",
      "parentUuid": "9bdcc3fe_307028e5",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bdcc3fe_30e588cc",
        "filename": "polygerrit-ui/app/elements/gr-change-view.html",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2015-11-19T19:05:36Z",
      "side": 1,
      "message": "My previous git experience is pretty much in line with https://xkcd.com/1597/",
      "parentUuid": "fbca1f38_abb829e9",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbca1f38_6ba321c3",
        "filename": "polygerrit-ui/app/elements/gr-diff-comment-thread.html",
        "patchSetId": 7
      },
      "lineNbr": 57,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-19T18:30:51Z",
      "side": 1,
      "message": "So I understand how this works: when you add a key to the object you pass to Polymer(), it goes through and converts any values that are functions into some other type that has this magic bind method. Sound right?",
      "range": {
        "startLine": 57,
        "startChar": 44,
        "endLine": 57,
        "endChar": 48
      },
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bdcc3fe_10e084bb",
        "filename": "polygerrit-ui/app/elements/gr-diff-comment-thread.html",
        "patchSetId": 7
      },
      "lineNbr": 57,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2015-11-19T19:05:36Z",
      "side": 1,
      "message": "Ah, no this doesn\u0027t have to do with Polymer binding. `bind` is a vanilla JS function that returns a new function with the first argument as its `this` keyword. So in this case when the event handler fires, `this` (the element object) will be the same as opposed to a newly scoped `this`.",
      "parentUuid": "fbca1f38_6ba321c3",
      "range": {
        "startLine": 57,
        "startChar": 44,
        "endLine": 57,
        "endChar": 48
      },
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbca1f38_0ba85d9a",
        "filename": "polygerrit-ui/app/elements/gr-diff-comment.html",
        "patchSetId": 7
      },
      "lineNbr": 55,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-19T18:30:51Z",
      "side": 1,
      "message": "So on-tap is a Polymer thing, right? Because I thought native HTML handlers are like onClick.",
      "range": {
        "startLine": 55,
        "startChar": 32,
        "endLine": 55,
        "endChar": 38
      },
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbca1f38_4bc7456c",
        "filename": "polygerrit-ui/app/elements/gr-diff-comment.html",
        "patchSetId": 7
      },
      "lineNbr": 55,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2015-11-19T19:05:36Z",
      "side": 1,
      "message": "Yeah. Tap is the preferred method for the best cross-platform results:\nhttps://www.polymer-project.org/1.0/docs/devguide/events.html#gestures",
      "parentUuid": "fbca1f38_0ba85d9a",
      "range": {
        "startLine": 55,
        "startChar": 32,
        "endLine": 55,
        "endChar": 38
      },
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbca1f38_2bad19ab",
        "filename": "polygerrit-ui/app/elements/gr-diff-comment.html",
        "patchSetId": 7
      },
      "lineNbr": 66,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-19T18:30:51Z",
      "side": 1,
      "message": "What\u0027s with these jsdoc blocks that are not attached to anything?",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbca1f38_6bcc818d",
        "filename": "polygerrit-ui/app/elements/gr-diff-comment.html",
        "patchSetId": 7
      },
      "lineNbr": 66,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2015-11-19T19:05:36Z",
      "side": 1,
      "message": "Following Polymer\u0027s style. They are used by auto-generated documentation: https://github.com/PolymerElements/iron-ajax/blob/master/iron-ajax.html#L45",
      "parentUuid": "fbca1f38_2bad19ab",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbca1f38_cbb1f509",
        "filename": "polygerrit-ui/app/elements/gr-diff-comment.html",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-19T18:30:51Z",
      "side": 1,
      "message": "Am I missing something, or is this not currently used?",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bdcc3fe_d0e99ca6",
        "filename": "polygerrit-ui/app/elements/gr-diff-comment.html",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2015-11-19T19:05:36Z",
      "side": 1,
      "message": "You are correct.",
      "parentUuid": "fbca1f38_cbb1f509",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bdcc3fe_905eb451",
        "filename": "polygerrit-ui/app/elements/gr-diff-view.html",
        "patchSetId": 7
      },
      "lineNbr": 111,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-19T18:30:51Z",
      "side": 1,
      "message": "IIUC debounce-duration has no effect if auto\u003dfalse (which is the default).\n\nAlthough considering that you explicitly call generateRequest() on these on each change to params, I\u0027m wondering if maybe auto\u003dtrue is really what you want. \n\nhttps://elements.polymer-project.org/elements/iron-ajax says:\n\n\"If true, automatically performs an Ajax request when either url or params changes\"\n\nIf I understand computed bindings correctly, this will reevaluate the function on any change to one of the arguments, and notify the child element if and only if the value changes.",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bdcc3fe_f0e620d6",
        "filename": "polygerrit-ui/app/elements/gr-diff-view.html",
        "patchSetId": 7
      },
      "lineNbr": 111,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2015-11-19T19:05:36Z",
      "side": 1,
      "message": "Removed debounce duration. Good catch.\n\nIf you check out the _paramsChanged function, there is a case where we don\u0027t want the xhr firing even if its value has changed. Also, _basePatchNum isn\u0027t guaranteed to be defined (there\u0027s a comment in there about it).\n\nWhat\u0027s annoying is that the computed binding function will only be called once the parameters become defined, but after that, calls are made even if one of the params is null/undefined.",
      "parentUuid": "9bdcc3fe_905eb451",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbca1f38_ebae31a5",
        "filename": "polygerrit-ui/app/elements/gr-diff-view.html",
        "patchSetId": 7
      },
      "lineNbr": 254,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-19T18:30:51Z",
      "side": 1,
      "message": "You only ever pass the same set of fields as arguments to _maybeRenderDiff; would it make more sense to just access the fields within that method, and avoid repeating yourself when calling it?",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bdcc3fe_90f31497",
        "filename": "polygerrit-ui/app/elements/gr-diff-view.html",
        "patchSetId": 7
      },
      "lineNbr": 254,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2015-11-19T19:05:36Z",
      "side": 1,
      "message": "this is more preference for ease in testing plus keeping the functions a bit more pure in general means just less properties to worry about.",
      "parentUuid": "fbca1f38_ebae31a5",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbca1f38_8bbbede5",
        "filename": "polygerrit-ui/app/elements/gr-diff-view.html",
        "patchSetId": 7
      },
      "lineNbr": 420,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-19T18:30:51Z",
      "side": 1,
      "message": "You previously said that we\u0027re bypassing the Polymer DOM utility functions for performance reasons, but this chunk feels like it would be a lot cleaner if it looked more like html. Is there not a way to do a dynamic loop of adding webcomponents as html? Or is that exactly the Polymer DOM stuff that we\u0027re avoiding?",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbca1f38_0bc13d54",
        "filename": "polygerrit-ui/app/elements/gr-diff-view.html",
        "patchSetId": 7
      },
      "lineNbr": 420,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2015-11-19T19:05:36Z",
      "side": 1,
      "message": "If I understand you correclty, that\u0027s what we\u0027re avoiding due to performance reasons.",
      "parentUuid": "fbca1f38_8bbbede5",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bdcc3fe_b05bb860",
        "filename": "polygerrit-ui/app/elements/gr-diff-view.html",
        "patchSetId": 7
      },
      "lineNbr": 494,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-19T18:30:51Z",
      "side": 1,
      "message": "I don\u0027t follow, what\u0027s the deal with this \u003ci\u003e ruler thing?",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbca1f38_2bc6796d",
        "filename": "polygerrit-ui/app/elements/gr-diff-view.html",
        "patchSetId": 7
      },
      "lineNbr": 494,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2015-11-19T19:05:36Z",
      "side": 1,
      "message": "the ruler is the column limit indicator. when i looked at what sublime text called it, it was \"ruler\" so i went with that.\n\nusing \u003ci\u003e as the element to house it is convention for strictly preference. Some like to use \u003ci\u003e to indicate \"icon\" if they\u0027re using the element as a placeholder for a background image, for example. It could be a div or whatever.",
      "parentUuid": "9bdcc3fe_b05bb860",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb9cdf2b_bb8c07e8",
        "filename": "polygerrit-ui/app/scripts/app.js",
        "patchSetId": 7
      },
      "lineNbr": 56,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-19T17:09:44Z",
      "side": 1,
      "message": "I thought of a somewhat convoluted use case where you might want to do this. Example using the current UI:\n\n* Start on PS4 of a change\n* Use the patch sets dropdown to switch to PS2\n* Decide you want to diff PS2 against PS3, so change the \"diff against\" dropdown to say PS3\n* Click on a file, realize PS3 is on the left and PS2 is on the right, so you want to swap them\n* Swap them in two clicks by clicking 2 on the right side and 3 on the left side.\n\nIn the last step, you are briefly diffing 2 against 2. It\u0027s not that you want to do that per se, it\u0027s that it\u0027s the easiest way to swap LHS and RHS without having to switch one of them to a temporary unrelated patch set.\n\nI\u0027m thinking we can fix this directly by saying, if you click a patch set number that would lead to N..N, instead just swap them.\n\nI\u0027m fine with bailing and redirecting somewhere else if you encounter N..N in a URL.",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bdcc3fe_50d60ceb",
        "filename": "polygerrit-ui/app/test/gr-diff-comment-thread-test.html",
        "patchSetId": 7
      },
      "lineNbr": 79,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-19T18:30:51Z",
      "side": 1,
      "message": "High-level question: this is just a simple utility method for sorting some JSON objects. Is it really necessary to set up a webcomponent test fixture for this kind of test?\n\nI\u0027m imagining a world where we have some \"small\" JS tests that can run in pure headless node and not have to spin up a browser or three. Is that a world we\u0027re interested in? Or not worth it?",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bdcc3fe_50ffec58",
        "filename": "polygerrit-ui/app/test/gr-diff-comment-thread-test.html",
        "patchSetId": 7
      },
      "lineNbr": 79,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2015-11-19T19:05:36Z",
      "side": 1,
      "message": "You don\u0027t need a DOM to test this function, no, but there are so many UI tests that will most likely outnumber this kind of test that a headless mode wouldn\u0027t be running that many tests anyway.",
      "parentUuid": "9bdcc3fe_50d60ceb",
      "revId": "1ba7c4f44403945c8f1e568b9ce795afb5ab7ba4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}