{
  "pushCert": "certificate version 0.1\npusher A0D0EF51 1450354092 +0100\nnonce ALmjDBWAR6yZjU5U+Cl7vHn8J4GaWiPvMc7Q68/LogLq0LnOTRrqJ2EbXu9xWNkysf3ajJe85+Sf\n\n0000000000000000000000000000000000000000 1e940e3ac79732db2e092eed67f347e62f7559cd refs/for/master\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJWcqWsAAoJEFG1/Zeg0O9ROmEIAKPMpAd2oe5IkkSENKLtFS/y\noYFqCma1gEifUj0xN/Im+n0YaS0/mRFNQ+p8vHS/UIAcuwd/Bao8s3GWlW4QYdQ2\nLo0N36yjmZMzO+B5cPJXiojj0V1ls+bKpq0YUCajvugE/pp4JlqjfMuEBTBTd40X\nfgKDpJ35Bn3i3HItcYXjLJ1mahASXgh73M/0Vsa1WgWJI/VrLLJzCedy2jmFuVOE\nkAJMcw7tHXMQgBKQdL6UXxKEhdTR8pSLObAhPsdAd8JV2L3vEr9fZ87e/ssA73vw\nO9Mg7NlPOu/rirrQz1Gb45gH88bxSmwRPmxf9wLBW151UdvCQLh+T7kRzq2n7kQ\u003d\n\u003dq05s\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "6afc9b2b_be3619b9",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/StarsByPredicate.java",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-12-22T10:19:44Z",
      "side": 1,
      "message": "Currently, the star predicate doesn\u0027t use secondary index. It would be a trivial change to fix that, add new field like EditBy or DraftBy, that i recently added. The only prerequisite for that would be to reindex the change once it was starred or unstarred, using StarredChangesUtil.byChange(id). However after adding star:label it\u0027s not obvious to me, how to make this search operator use secondary index. So may be we should split them in two different search operators, one that uses secondary index and another that doesn\u0027t?",
      "range": {
        "startLine": 85,
        "startChar": 2,
        "endLine": 91,
        "endChar": 3
      },
      "revId": "1e940e3ac79732db2e092eed67f347e62f7559cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6afc9b2b_de9fa5d3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/StarsByPredicate.java",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-12-22T10:24:56Z",
      "side": 1,
      "message": "\u003e Currently, the star predicate doesn\u0027t use secondary index. It would\n \u003e be a trivial change to fix that, add new field like EditBy or\n \u003e DraftBy, that i recently added. The only prerequisite for that\n \u003e would be to reindex the change once it was starred or unstarred,\n \u003e using StarredChangesUtil.byChange(id).\n\nThis would be possible, but we wanted to avoid reindexing the whole change whenever any user stars/unstars a change. Right now, starring/unstarring doesn\u0027t happen that frequently, but this may change once we have labeled stars and tools that automatically set/unset labeled stars for a user.\n\n \u003e However after adding\n \u003e star:label it\u0027s not obvious to me, how to make this search operator\n \u003e use secondary index. So may be we should split them in two\n \u003e different search operators, one that uses secondary index and\n \u003e another that doesn\u0027t?\n\nIt uses an in-memory cache to look up the stars, isn\u0027t this as good as using the secondary index?",
      "parentUuid": "6afc9b2b_be3619b9",
      "range": {
        "startLine": 85,
        "startChar": 2,
        "endLine": 91,
        "endChar": 3
      },
      "revId": "1e940e3ac79732db2e092eed67f347e62f7559cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eabb2b9e_aa910f06",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/StarsByPredicate.java",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-12-22T11:04:04Z",
      "side": 1,
      "message": "| This would be possible, but we wanted to avoid reindexing the whole change whenever any user stars/unstars a change.\n\nWhy? Note, that by refactoring REST API handlers to use BatchUpdate.Op we already reindex quite some stuff totally in vain, that doesn\u0027t need to be reindexed at all, right? Check my pending DraftBy search operator fix to make it use the secondary index. Unless I\u0027m missing something obvious there, DELETE and PUT draft comments would cause reindexing of change in vain, because this step is not optional in BatchUpdate.Op and there is no field in secondary index that reflects existence of \"Drafts By User\". So why would we want to do optimization by avoiding to reindex something that really needed to be reindexed, because it\u0027s would be used by star search operator, when we already reindex stuff today, that doesn\u0027t need to be reindexed at all?\n\n| It uses an in-memory cache to look up the stars, isn\u0027t this as good as using the secondary index?\n\nSure, but it would do this only in case of Notedb, right? Let assume that database backend would survive in the wild for many years, this would mean that expensive star change retrieval would still need to happen by reading the database. Note, that to render the list of change star changes need to be retrieved.",
      "parentUuid": "6afc9b2b_de9fa5d3",
      "range": {
        "startLine": 85,
        "startChar": 2,
        "endLine": 91,
        "endChar": 3
      },
      "revId": "1e940e3ac79732db2e092eed67f347e62f7559cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}