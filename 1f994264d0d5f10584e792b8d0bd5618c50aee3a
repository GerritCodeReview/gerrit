{
  "pushCert": "certificate version 0.1\npusher A0D0EF51 1487063552 +0100\nnonce AFJA6ocF4LZ0NqKmNznI07TYgtSE4h+Efmb3j5/XdzK7UPgGIAsKhfdoGCpAsXv5fyYCS/zPrR8n\n\n0000000000000000000000000000000000000000 1f994264d0d5f10584e792b8d0bd5618c50aee3a refs/for/master\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJYosoAAAoJEFG1/Zeg0O9R8XAIAKPciSQRI5hCccvnjnTUBvzr\nYBdH4KtEEkzDWl/prp+vhk5qh4fMwu+xZmn9rp0ZW6hA7tEH4zL/JI29MotizSMV\nM8spYQzvbfJuG1HXFh7gR2Ga1YW6CGE8XIh/rrKAo30yTkwBzJq2qNcejMx0DEH8\nsvi8YyPOZM8B56cHijADf6Fevniou6hrGysqLfPH7yyBI/nAdKEAy666FSR/Mvic\nIA3NjlXFEvaLonMIiYPP0uVQKM1VRrodX8oBI6dJiGAJHUj/BynQ/8X3mzc6Xz/3\nr5g1a5b3tJqCLU/eD7U/3TNzR5nJRZfg/EnvSqSMKkKUjyxCRV1Ed8ixEQfFadY\u003d\n\u003dYGqb\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "3411f653_19347efa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-02-14T10:11:56Z",
      "side": 1,
      "message": "What about the case where user edited the complete series and the base change should also get a new patch-set. Does this already work as expected?",
      "range": {
        "startLine": 12,
        "startChar": 64,
        "endLine": 14,
        "endChar": 36
      },
      "revId": "1f994264d0d5f10584e792b8d0bd5618c50aee3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16d5ca7a_6517a013",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-02-14T14:13:52Z",
      "side": 1,
      "message": "Yes, added a test for this in the predecessor commit.",
      "parentUuid": "3411f653_19347efa",
      "range": {
        "startLine": 12,
        "startChar": 64,
        "endLine": 14,
        "endChar": 36
      },
      "revId": "1f994264d0d5f10584e792b8d0bd5618c50aee3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad52236_e5cedd42",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/git/AbstractPushForReview.java",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2017-02-14T09:33:15Z",
      "side": 1,
      "message": "Unrelated change.\nSame for several occasions in the rest of the file.",
      "range": {
        "startLine": 106,
        "startChar": 4,
        "endLine": 106,
        "endChar": 94
      },
      "revId": "1f994264d0d5f10584e792b8d0bd5618c50aee3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74d19fc8_22f43132",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/git/AbstractPushForReview.java",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-02-14T09:36:58Z",
      "side": 1,
      "message": "Did you compare against the base? This line is actually not changed by this change.",
      "parentUuid": "9ad52236_e5cedd42",
      "range": {
        "startLine": 106,
        "startChar": 4,
        "endLine": 106,
        "endChar": 94
      },
      "revId": "1f994264d0d5f10584e792b8d0bd5618c50aee3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6ff8aa1_7afec441",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/git/AbstractPushForReview.java",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2017-02-14T09:38:38Z",
      "side": 1,
      "message": "True, my bad...",
      "parentUuid": "74d19fc8_22f43132",
      "range": {
        "startLine": 106,
        "startChar": 4,
        "endLine": 106,
        "endChar": 94
      },
      "revId": "1f994264d0d5f10584e792b8d0bd5618c50aee3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "571ae5e4_50973ac5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ReceiveCommits.java",
        "patchSetId": 5
      },
      "lineNbr": 1814,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-02-14T10:11:56Z",
      "side": 1,
      "message": "I haven\u0027t yet reviewed this code but have a question: looking at how the all-not-in-target feature was implemented [1], it actually made use of the %base option (magicBranch.baseCommit). By neatly setting the %base it achieved what it wanted.\n\nHave you considered (re)using the same approach? For example if the series is: C1 \u003c C2, and only C2 needs to be updated then setting %base\u003dC1 would likely do the trick.\n\n[1] https://gerrit-review.googlesource.com/#/c/59909/14/gerrit-server/src/main/java/com/google/gerrit/server/git/ReceiveCommits.java",
      "revId": "1f994264d0d5f10584e792b8d0bd5618c50aee3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e3ff619_b2598174",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ReceiveCommits.java",
        "patchSetId": 5
      },
      "lineNbr": 1814,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-02-14T10:19:28Z",
      "side": 1,
      "message": "I think that\u0027s not possible, because at this place we don\u0027t know which open changes (C1) exist.",
      "parentUuid": "571ae5e4_50973ac5",
      "revId": "1f994264d0d5f10584e792b8d0bd5618c50aee3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}