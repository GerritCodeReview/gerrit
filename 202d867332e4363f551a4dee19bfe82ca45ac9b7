{
  "comments": [
    {
      "key": {
        "uuid": "8df712e1_a3d31a4a",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 78,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-27T19:35:10Z",
      "side": 1,
      "message": "Optional: I would be ok if you just used \"Elastic\" as a prefix on class names to save typing.",
      "range": {
        "startLine": 78,
        "startChar": 6,
        "endLine": 78,
        "endChar": 19
      },
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edca4edd_06c47a83",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 78,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-07-28T06:06:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8df712e1_a3d31a4a",
      "range": {
        "startLine": 78,
        "startChar": 6,
        "endLine": 78,
        "endChar": 19
      },
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8df712e1_83d81e67",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 112,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-27T19:35:10Z",
      "side": 1,
      "message": "Use checkState",
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd4027c_e7bcc208",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 112,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-07-28T06:06:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8df712e1_83d81e67",
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8df712e1_43eb46eb",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 143,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-27T19:35:10Z",
      "side": 1,
      "message": "Nit: 1L so this doesn\u0027t look like \"11\" in crappy fonts.",
      "range": {
        "startLine": 143,
        "startChar": 28,
        "endLine": 143,
        "endChar": 30
      },
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edca4edd_66d1ee45",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 143,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-07-28T06:06:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8df712e1_43eb46eb",
      "range": {
        "startLine": 143,
        "startChar": 28,
        "endLine": 143,
        "endChar": 30
      },
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8df712e1_23e84aec",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 176,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-27T19:35:10Z",
      "side": 1,
      "message": "Maybe Iterables.getOnlyElement here? That will throw an exception in the invalid state where a non-repeated field has multiple values.",
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd4027c_c7c1be78",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 176,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-07-28T06:06:05Z",
      "side": 1,
      "message": "This section of code is rewritten in the following change by Janice.",
      "parentUuid": "8df712e1_23e84aec",
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d3082cc_67de32d8",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 176,
      "author": {
        "id": 1018662
      },
      "writtenOn": "2015-07-30T15:34:36Z",
      "side": 1,
      "message": "LuceneChangeIndex uses getOnlyElement for the legacy id and updated fields. It doesn\u0027t check that fields are repeatable before adding their values for any of the other ones.\nSo, would it be better to leave it as is or change it for both?",
      "parentUuid": "8df712e1_23e84aec",
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8df712e1_03e54e12",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 254,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-27T19:35:10Z",
      "side": 1,
      "message": "In this case, should we expect the create to fail as well, due to the index also existing? If that\u0027s not the case, i.e. if create of an existing index is _not_ an error, then this seems broken: something could go wrong, and the documents would not be deleted, but no exception would be thrown by this method.",
      "range": {
        "startLine": 253,
        "startChar": 44,
        "endLine": 254,
        "endChar": 18
      },
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edca4edd_46ce72a5",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 254,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-07-28T06:06:05Z",
      "side": 1,
      "message": "I\u0027ll see if Jest provides an API to check for index existence.",
      "parentUuid": "8df712e1_03e54e12",
      "range": {
        "startLine": 253,
        "startChar": 44,
        "endLine": 254,
        "endChar": 18
      },
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edca4edd_66e8ceed",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 254,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-07-28T07:11:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edca4edd_46ce72a5",
      "range": {
        "startLine": 253,
        "startChar": 44,
        "endLine": 254,
        "endChar": 18
      },
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d349e66_42ceb2a5",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 285,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-27T19:35:10Z",
      "side": 1,
      "message": "?\n\nIs online reindexing still a big TODO? Or does the implementation of online reindexing somehow not require this method? Either way, this warrants a comment.",
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edca4edd_a6d9266f",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 285,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-07-28T06:06:05Z",
      "side": 1,
      "message": "This is still TODO",
      "parentUuid": "6d349e66_42ceb2a5",
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d349e66_e2d9066e",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 334,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-27T19:35:10Z",
      "side": 1,
      "message": "Missing all the stuff to populate values based on stored fields.\n\n(Now that there are more (working) index implementations, we could consider abstracting some of this out so that we don\u0027t have so much duplicated code. But I suspect that refactoring is going to be a bit of work, and until it\u0027s done, you\u0027re gonna want to hard-code it like we do for Lucene.)",
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd4027c_27c7fa8b",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticsearchChangeIndex.java",
        "patchSetId": 43
      },
      "lineNbr": 334,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-07-28T06:06:05Z",
      "side": 1,
      "message": "This was added in https://gerrit-review.googlesource.com/#/c/66901/",
      "parentUuid": "6d349e66_e2d9066e",
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d349e66_02df4a51",
        "filename": "gerrit-elasticsearch/src/test/java/com/google/gerrit/elasticsearch/ElasticsearchQueryChangesTest.java",
        "patchSetId": 43
      },
      "lineNbr": 142,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-27T19:35:10Z",
      "side": 1,
      "message": "What if this port is not available, e.g. because there is already an ES node running on this machine? Can we try harder to pick an unused port?\n\nMaybe it doesn\u0027t seem like a big deal now, but someday we might want to run more tests (e.g. a subset of all acceptance tests) with ES, and this would prevent said tests from running in parallel.",
      "range": {
        "startLine": 142,
        "startChar": 74,
        "endLine": 142,
        "endChar": 78
      },
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d349e66_a2d3fe49",
        "filename": "lib/commons/BUCK",
        "patchSetId": 43
      },
      "lineNbr": 50,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-27T19:35:10Z",
      "side": 1,
      "message": "Is it ok to have both of these in the same jar? Do the classnames overlap?",
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dbf1232_a3b2ba32",
        "filename": "lib/commons/BUCK",
        "patchSetId": 43
      },
      "lineNbr": 50,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-07-28T05:19:41Z",
      "side": 1,
      "message": "There is no overlap. The classes in this one are under org/apache/commons/lang3/",
      "parentUuid": "6d349e66_a2d3fe49",
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d349e66_c2d88268",
        "filename": "lib/httpcomponents/BUCK",
        "patchSetId": 43
      },
      "lineNbr": 52,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-27T19:35:10Z",
      "side": 1,
      "message": "Hm, I would have thought that all the httpcomponents components would hare a versioning scheme. Is it not possible/feasible to get them all at the same version? Or does Jest explicitly list these mismatched versions?",
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd4027c_87b7c622",
        "filename": "lib/httpcomponents/BUCK",
        "patchSetId": 43
      },
      "lineNbr": 52,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-07-28T04:52:20Z",
      "side": 1,
      "message": "Jest does not pin these to specific versions [1], so I took whatever was the latest.\n\nThere is no shared version scheme between these components [2].\n\n[1] http://search.maven.org/#artifactdetails%7Cio.searchbox%7Cjest%7C0.1.6%7Cjar\n\n[2] http://search.maven.org/#search%7Cga%7C1%7Corg.apache.httpcomponents",
      "parentUuid": "6d349e66_c2d88268",
      "revId": "202d867332e4363f551a4dee19bfe82ca45ac9b7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}