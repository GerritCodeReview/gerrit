{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0c176655_9f8a65a1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-11-29T10:31:31Z",
      "side": 1,
      "message": "Edwin, Youssef: Can you please provide a secondary review for this series? I\u0027d like to have good vetting on it since approval copying has led to issues in the past. Thanks!",
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17faf807_857c90d1",
        "filename": "java/com/google/gerrit/server/approval/ApprovalInference.java",
        "patchSetId": 7
      },
      "lineNbr": 105,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-29T12:30:30Z",
      "side": 1,
      "message": "Must remove @Nullable here too, otherwise null may be passed into forPatchSet(ChangeNotes, PatchSet, RevWalk, Config) which doesn\u0027t allow null anymore. E.g. forPatchSet(ChangeNotes, PatchSet.Id, RevWalk, Config is called with null value from ApprovalCacheImpl.",
      "range": {
        "startLine": 105,
        "startChar": 43,
        "endLine": 105,
        "endChar": 81
      },
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e8825e2_d97c657e",
        "filename": "java/com/google/gerrit/server/approval/ApprovalsUtil.java",
        "patchSetId": 7
      },
      "lineNbr": 342,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-29T12:30:30Z",
      "side": 1,
      "message": "Why would anyone need approvals without the copied approvals being included?",
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c07ece12_23677e80",
        "filename": "java/com/google/gerrit/server/approval/ApprovalsUtil.java",
        "patchSetId": 7
      },
      "lineNbr": 342,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-11-29T13:10:08Z",
      "side": 1,
      "message": "I have only one example right now:\nSubmitWithStickyApprovalDiff uses that, and it is required since we want to figure out when the vote was originally created.\n\nYou have a point that I can somehow simplify this a bit. But anyway, I was just preserving behavior: some cases needed including copied, and some excluding. I\u0027ll refactor a bit since the main reason this behavior was here in the past is to save on calling expensive copying votes code, which is now cheap.",
      "parentUuid": "5e8825e2_d97c657e",
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "404b59c1_03637cab",
        "filename": "java/com/google/gerrit/server/approval/ApprovalsUtil.java",
        "patchSetId": 7
      },
      "lineNbr": 342,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-29T13:17:51Z",
      "side": 1,
      "message": "Thanks for looking into simplifying this.\n\nOne idea. Maybe it would be better is isCopied is a property of PatchSetApproval. Then SubmitWithStickyApprovalDiff could do the filtering on its own.",
      "parentUuid": "c07ece12_23677e80",
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "777aa1c0_f37ad952",
        "filename": "java/com/google/gerrit/server/approval/ApprovalsUtil.java",
        "patchSetId": 7
      },
      "lineNbr": 351,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-11-29T09:17:55Z",
      "side": 1,
      "message": ". This requires passing in the RevWalk that is being used to create the new patch set.",
      "range": {
        "startLine": 351,
        "startChar": 12,
        "endLine": 351,
        "endChar": 13
      },
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "807a6358_2c705410",
        "filename": "java/com/google/gerrit/server/approval/ApprovalsUtil.java",
        "patchSetId": 7
      },
      "lineNbr": 351,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-11-29T11:59:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "777aa1c0_f37ad952",
      "range": {
        "startLine": 351,
        "startChar": 12,
        "endLine": 351,
        "endChar": 13
      },
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b56058bd_ec6ee84d",
        "filename": "java/com/google/gerrit/server/approval/ApprovalsUtil.java",
        "patchSetId": 7
      },
      "lineNbr": 358,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-11-29T09:17:55Z",
      "side": 1,
      "message": "nit: add Javadoc",
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b95e5a5f_629ce15f",
        "filename": "java/com/google/gerrit/server/approval/ApprovalsUtil.java",
        "patchSetId": 7
      },
      "lineNbr": 358,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-11-29T11:59:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b56058bd_ec6ee84d",
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcd34a48_556267ac",
        "filename": "java/com/google/gerrit/server/approval/ApprovalsUtil.java",
        "patchSetId": 7
      },
      "lineNbr": 373,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-29T12:30:30Z",
      "side": 1,
      "message": "Is this still true now that the labels are just read from NoteDb? \nCan we just use byPatchSet now?",
      "range": {
        "startLine": 373,
        "startChar": 52,
        "endLine": 373,
        "endChar": 61
      },
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc994798_b232f59f",
        "filename": "java/com/google/gerrit/server/change/DeleteReviewerOp.java",
        "patchSetId": 7
      },
      "lineNbr": 226,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-11-29T09:17:55Z",
      "side": 1,
      "message": "I think here we have to take copied votes into account. For reviewer deletion, a copied vote is equivalent to a non-copied vote IMO.",
      "range": {
        "startLine": 226,
        "startChar": 30,
        "endLine": 226,
        "endChar": 62
      },
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e87ef77d_7ac7761a",
        "filename": "java/com/google/gerrit/server/change/DeleteReviewerOp.java",
        "patchSetId": 7
      },
      "lineNbr": 226,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-11-29T11:59:17Z",
      "side": 1,
      "message": "ack, I started looking into this but this change is just preserving behavior.\nI\u0027ll do a follow-up with tests to see if we should change the behavior here.\nI think it is likely okay as is, bsed on the logic of the caller of this classes\u0027 approvals() method.",
      "parentUuid": "bc994798_b232f59f",
      "range": {
        "startLine": 226,
        "startChar": 30,
        "endLine": 226,
        "endChar": 62
      },
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1966c7f_bdc61f4f",
        "filename": "java/com/google/gerrit/server/change/DeleteReviewerOp.java",
        "patchSetId": 7
      },
      "lineNbr": 226,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-29T12:30:30Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "bc994798_b232f59f",
      "range": {
        "startLine": 226,
        "startChar": 30,
        "endLine": 226,
        "endChar": 62
      },
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be5f2ce4_8ac21dfe",
        "filename": "java/com/google/gerrit/server/change/DeleteReviewerOp.java",
        "patchSetId": 7
      },
      "lineNbr": 226,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-29T12:54:46Z",
      "side": 1,
      "message": "Ah, keeping the existing behaviour makes sense for this change. But fixing this is a follow up change would be good. Maybe also mention this in the commit message.",
      "parentUuid": "c1966c7f_bdc61f4f",
      "range": {
        "startLine": 226,
        "startChar": 30,
        "endLine": 226,
        "endChar": 62
      },
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f8b4e0e_90ba574e",
        "filename": "java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 7
      },
      "lineNbr": 307,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-29T12:30:30Z",
      "side": 1,
      "message": "Could this be a method inside ApprovalsUtil, e.g. approvalsUtil.copyVotes?\nIn my opinion that would be much more readable.",
      "range": {
        "startLine": 304,
        "startChar": 6,
        "endLine": 307,
        "endChar": 53
      },
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45ce6ecd_8dba8380",
        "filename": "java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 7
      },
      "lineNbr": 307,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-11-29T13:10:08Z",
      "side": 1,
      "message": "? \nIt\u0027s already a method in ApprovalsUtil, are you suggesting to rename it?",
      "parentUuid": "9f8b4e0e_90ba574e",
      "range": {
        "startLine": 304,
        "startChar": 6,
        "endLine": 307,
        "endChar": 53
      },
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "358d098c_39c0f987",
        "filename": "java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 7
      },
      "lineNbr": 307,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-11-29T13:14:18Z",
      "side": 1,
      "message": "ah, you meant the forEach part as well :-) \ngot it",
      "parentUuid": "45ce6ecd_8dba8380",
      "range": {
        "startLine": 304,
        "startChar": 6,
        "endLine": 307,
        "endChar": 53
      },
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77f0aee1_be7ecace",
        "filename": "java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 7
      },
      "lineNbr": 307,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-29T13:17:51Z",
      "side": 1,
      "message": "Is it? \n\nWhat I wanted to suggest is that:\n\n   approvalsUtil\n          .dynamicallyComputeCopiedApprovals(\n              ctx.getNotes(), patchSet, ctx.getRevWalk(), ctx.getRepoView().getConfig())\n          .forEach(a -\u003e update.putCopiedApproval(a));\n          \nbecomes something like this:\n\n   approvalsUtil.copyApprovals(ctx.getNotes(), patchSet, ctx.getRevWalk(), ctx.getRepoView().getConfig(), update);\n   \nThe same method could then be used in ReplaceOp.",
      "parentUuid": "45ce6ecd_8dba8380",
      "range": {
        "startLine": 304,
        "startChar": 6,
        "endLine": 307,
        "endChar": 53
      },
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d22ade00_e2ba8561",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 7
      },
      "lineNbr": 395,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-29T12:30:30Z",
      "side": 1,
      "message": "Can we rename this to getApprovals() and drop the current getApprovals() method that excludes copied approvals. I\u0027m not sure I understand why getting approvals without copied approvals is needed.",
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f99f2144_0b4fdcd3",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 7
      },
      "lineNbr": 773,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-29T12:30:30Z",
      "side": 1,
      "message": "Why are copied approvals excluded here?",
      "revId": "206a32fe39a662fc592529781f88c1279bfc4091",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}