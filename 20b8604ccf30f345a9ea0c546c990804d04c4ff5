{
  "comments": [
    {
      "key": {
        "uuid": "a3083eda_1a503def",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/DataSourceProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-12-09T05:10:53Z",
      "side": 1,
      "message": "When you install the plugin is javamelody in lib/? or part of the plugin?\n\nIf its in lib we can get the class by reflection. So you could put something into the database section of gerrit.config telling us what class and method to invoke in order to wrap the data source. This would be similar to having a database plugin anyway, which we sort of already support, so long as the driver code is in lib/.\n\nIt might be necessary to define some sort of interface inside of gerrit init package or something that you can implement in order to bridge between a trivial reflection based wrapping process here, and this JdbcWrapper.SINGLETON.createDataSourceProxy() call in javamelody.",
      "revId": "20b8604ccf30f345a9ea0c546c990804d04c4ff5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}