{
  "comments": [
    {
      "key": {
        "uuid": "a3083eda_3a01c1cb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2013-12-09T07:46:09Z",
      "side": 1,
      "message": "Can you add a bit more detail here about what this does and how it\u0027s used?\n\n(also in /Documentation if necessary)",
      "revId": "20b8604ccf30f345a9ea0c546c990804d04c4ff5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3083eda_1a503def",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/DataSourceProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-12-09T05:10:53Z",
      "side": 1,
      "message": "When you install the plugin is javamelody in lib/? or part of the plugin?\n\nIf its in lib we can get the class by reflection. So you could put something into the database section of gerrit.config telling us what class and method to invoke in order to wrap the data source. This would be similar to having a database plugin anyway, which we sort of already support, so long as the driver code is in lib/.\n\nIt might be necessary to define some sort of interface inside of gerrit init package or something that you can implement in order to bridge between a trivial reflection based wrapping process here, and this JdbcWrapper.SINGLETON.createDataSourceProxy() call in javamelody.",
      "revId": "20b8604ccf30f345a9ea0c546c990804d04c4ff5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63d00689_e8e77353",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/DataSourceProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-12-09T06:07:58Z",
      "side": 1,
      "message": "\u003e When you install the plugin is javamelody in lib/? or part of the plugin?\n\nThey are currently part of plugin. We never split plugin code from the dependencies untill now, including everything inside the plugin.  Tmake your suggestion work, we would need to split it. May be just have two version of plugin: one with all-in-one JAR, where you can\u0027t do SQL interception; and second without dependencies included, and addition step for copying artifacts to $gerrit_site/lib and setting up datasource interception tool chain, like you\u0027ve suggested.",
      "parentUuid": "a3083eda_1a503def",
      "revId": "20b8604ccf30f345a9ea0c546c990804d04c4ff5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}