{
  "comments": [
    {
      "key": {
        "uuid": "b87e7b0b_ec3d3acb",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/RegexPathPredicate.java",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-08-07T13:20:18Z",
      "side": 0,
      "message": "Don\u0027t we need this anymore?",
      "range": {
        "startLine": 33,
        "startChar": 4,
        "endLine": 37,
        "endChar": 16
      },
      "revId": "21de898fa440ee83253a163c999217f16b657ff7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d97ef21_4d6a9164",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/RegexPathPredicate.java",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2017-08-07T14:33:07Z",
      "side": 0,
      "message": "I decided no. :)  When the ChangeData has lazyLoad \u003d false it cannot do this lookup, and currentFilePaths now returns an empty List. We\u0027ll match against the empty list and return false instead of true.\n\nI can\u0027t imagine any part of the server code that is calling match on individual Predicate instances and yet would come back again later and *retry* match after doing something that allowed the ChangeData to flip its lazyLoad setting to true, or populate currentFilePaths before running match again. We just don\u0027t work with ChangeData and its Predicate tree like that.\n\nWe run predicates in the index, and then we load ChangeData results, and then we run the Predicate tree in Java once. There isn\u0027t a second pass.",
      "parentUuid": "b87e7b0b_ec3d3acb",
      "range": {
        "startLine": 33,
        "startChar": 4,
        "endLine": 37,
        "endChar": 16
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "21de898fa440ee83253a163c999217f16b657ff7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}