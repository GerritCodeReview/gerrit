{
  "comments": [
    {
      "key": {
        "uuid": "843ef6e8_7fec4f1d",
        "filename": "Documentation/user-search.txt",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-12-10T01:22:51Z",
      "side": 1,
      "message": "Would it be better to make this an exact search on change-id rather than a prefix search?",
      "range": {
        "startLine": 193,
        "startChar": 32,
        "endLine": 193,
        "endChar": 54
      },
      "revId": "24726cd3cbc4738b545f64c3e919df5fb3698a9e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6443c281_dee5a534",
        "filename": "Documentation/user-search.txt",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-12-10T01:22:51Z",
      "side": 1,
      "message": "other changes",
      "range": {
        "startLine": 193,
        "startChar": 20,
        "endLine": 193,
        "endChar": 31
      },
      "revId": "24726cd3cbc4738b545f64c3e919df5fb3698a9e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44407e75_dd13eb7b",
        "filename": "Documentation/user-search.txt",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-12-10T01:31:16Z",
      "side": 1,
      "message": "\u0027PREFIX\u0027 is not a Change-Id. I think you might be misinterpreting \"Depends-on\" in exactly the way I was expecting when I made my comment about bikeshedding the name :)",
      "parentUuid": "843ef6e8_7fec4f1d",
      "range": {
        "startLine": 193,
        "startChar": 32,
        "endLine": 193,
        "endChar": 54
      },
      "revId": "24726cd3cbc4738b545f64c3e919df5fb3698a9e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "843ef6e8_1f1ee38c",
        "filename": "Documentation/user-search.txt",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-12-10T01:36:18Z",
      "side": 1,
      "message": "Hmm, OK, then I think we need some clarification about what values are expected to be put in the Depends-On footer.\n\nI\u0027m interested in this because we are already using a Depends-On footer internally which ties into a workflow and tool chain outside of Gerrit.",
      "parentUuid": "44407e75_dd13eb7b",
      "range": {
        "startLine": 193,
        "startChar": 32,
        "endLine": 193,
        "endChar": 54
      },
      "revId": "24726cd3cbc4738b545f64c3e919df5fb3698a9e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44407e75_fd2d07ae",
        "filename": "Documentation/user-search.txt",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2014-12-10T01:56:48Z",
      "side": 1,
      "message": "Glad you show up then.\nSo we have the problem as described in the commit message of different repos which should go in atomically.\n\nThere are different ways to expose this dependency modelling to the user. You could have a\n    \n    Depends-On: $CHANGE_ID\n\nbut think about how the work flow would look like for a while. You\u0027d create the commit in the first repo. How much knowledge do you expect the standard user to have about the change IDs? So they commit and look at the commit to retrieve the change ID and copy paste that into the commit of the second repo. \nBetter to be safe, they also copy the change ID of the commit from the second repo to the commit of the first repo.\n\nThat would work, but is that a viable and easy way we should impose on the user? I think we can do better.\n\nSo how about this:\nIn all repositories we want to make changes which depend on each other in a way, we put\n\n    Depends-On: \"My random topic affecting different repos\"\n\nThat string can be anything, it must be unique for all the\ncurrently open changes. So you could in theory reuse the string after a while when all depending changes where merged or abandoned.\n\nThese are my thoughts so far. Please share your thoughts on the Depends-On: field as you seem to use it already.",
      "parentUuid": "843ef6e8_1f1ee38c",
      "range": {
        "startLine": 193,
        "startChar": 32,
        "endLine": 193,
        "endChar": 54
      },
      "revId": "24726cd3cbc4738b545f64c3e919df5fb3698a9e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4589271_9a096d50",
        "filename": "Documentation/user-search.txt",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-12-10T01:58:11Z",
      "side": 1,
      "message": "I think the idea and the proposed implementation are sound. The name is misleading.",
      "parentUuid": "44407e75_fd2d07ae",
      "range": {
        "startLine": 193,
        "startChar": 32,
        "endLine": 193,
        "endChar": 54
      },
      "revId": "24726cd3cbc4738b545f64c3e919df5fb3698a9e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44407e75_3d6f6fed",
        "filename": "Documentation/user-search.txt",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2014-12-10T02:04:00Z",
      "side": 1,
      "message": "So you\u0027d rename it?\n\nNaming things is one of the harder problems in computer science, so how about:\n\n   CrossAtomicMerge: \"It should become a merge across repos\"\n   CrossSubmit: \"Submitting is a bit more general\"\n   X-Submit: \"well yeah\"\n   AtomicSubmit: \"could be mistaken easily?\"\n   \nI personally would prefer Cross-Submit.",
      "parentUuid": "e4589271_9a096d50",
      "range": {
        "startLine": 193,
        "startChar": 32,
        "endLine": 193,
        "endChar": 54
      },
      "revId": "24726cd3cbc4738b545f64c3e919df5fb3698a9e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "843ef6e8_5f286ba7",
        "filename": "Documentation/user-search.txt",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-12-10T02:09:23Z",
      "side": 1,
      "message": "\u003e they commit and look at the commit to retrieve the change ID and copy paste that into the commit of the second repo.\n\nWe\u0027re using it pretty much like this.  I think in most cases the changes are not interdependent though, so we don\u0027t need it in both commits.\n\nFor example we could have commit-A in repo-A and commit-B in repo-B, where commit-A will build standalone, but commit-B needs commit-A to be included.  \"Depends-On: Iabcd123...\" is added in commit-B\u0027s commit message, with the Change-Id of commit-A (which the user manually gets from the git log of repo-A).\n\nThe way you describe the expected workflow is a bit different, and as Dave says the \"Depends-on\" name is misleading.\n\nThat bike shed looks like it needs a new coat of paint... :)",
      "parentUuid": "e4589271_9a096d50",
      "range": {
        "startLine": 193,
        "startChar": 32,
        "endLine": 193,
        "endChar": 54
      },
      "revId": "24726cd3cbc4738b545f64c3e919df5fb3698a9e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "843ef6e8_5ff18bf3",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 7
      },
      "lineNbr": 400,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-12-10T01:22:51Z",
      "side": 1,
      "message": "Is this a realistic use case?",
      "range": {
        "startLine": 400,
        "startChar": 24,
        "endLine": 400,
        "endChar": 39
      },
      "revId": "24726cd3cbc4738b545f64c3e919df5fb3698a9e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}