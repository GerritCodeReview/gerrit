{
  "comments": [
    {
      "key": {
        "uuid": "2631f22a_b7a5a8ee",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ReviewerJson.java",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-09-05T13:22:02Z",
      "side": 0,
      "message": "This check is meaningful: it checks that the user has permission to vote on the label at all, i.e. that they are granted a non-empty range on the permission. It looks like it omits their vote from the output if they don\u0027t.\n\nI don\u0027t remember if this is true, but I *think* this is because of the way we implemented reviewers in ReviewDb. When adding a reviewer, it picks an arbitrary label and adds a zero vote on that label, and I think it doesn\u0027t (or didn\u0027t) take user permission into account when picking the label. So a reviewer might end up with a dummy 0 vote on a label they have no permissions for, and these need to be filtered out from REST API responses.\n\nEven if my recollection is incorrect, I am pretty sure what you\u0027ve done here is a behavior change, but we don\u0027t have a test that proves it.",
      "revId": "27208b1367e44abb76e332b5b89f287e0f82a104",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "134c8277_fa3fd853",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ReviewerJson.java",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2017-09-05T14:20:57Z",
      "side": 0,
      "message": "This code confused me at first, because it is neither doing checks on the current user, nor on the user of the approval in question.\n\nHere are all the callers of this method:\nPostReviewers#461: ChangeData is initialized in l.468 using the factory call (changeDataFactory.create(dbProvider.get(), notes)).\nPostReviewers#449: ChangeData is initialized in l.438 using the factory call.\nReviewerJson#89:  ChangeData is initialized in l.86 using the factory call.\n\nThe factory call does not initialize the changeControl member inside ChangeData. So it is created when changeData.changeControl() is called, which means that the user in the control stack is set to the change owner.\n\nFor the check that was previously done here, we did not take the account in the approval into consideration. The call was just about the change owner being able to vote on any label on the change. I think this doesn\u0027t make sense and can simply be dropped.\n\nAnother thing that comes into play is that in NoteDb, there are no dummy votes, right?",
      "parentUuid": "2631f22a_b7a5a8ee",
      "revId": "27208b1367e44abb76e332b5b89f287e0f82a104",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77859217_4f107d43",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ReviewerJson.java",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-09-05T17:06:11Z",
      "side": 0,
      "message": "Thanks for digging into the callers.\n\n\u003e The call was just about the change owner being able to vote on any label on the change. I think this doesn\u0027t make sense and can simply be dropped.\n\nAgreed that given the callers you identified, the current behavior makes no sense. I think it\u0027s ok to go ahead with this change, and we can tackle the dummy approval issue separately if necessary (which I don\u0027t currently think it is).\n\n\u003e Another thing that comes into play is that in NoteDb, there are no dummy votes, right?\n\nNot quite true. Under full NoteDb no new dummy votes will be created, but dummy votes on old changes are migrated as-is.",
      "parentUuid": "134c8277_fa3fd853",
      "revId": "27208b1367e44abb76e332b5b89f287e0f82a104",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}