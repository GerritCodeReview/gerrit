{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "16e6b76a_76513de7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-12-09T06:07:20Z",
      "side": 1,
      "message": "tested",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 4
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08bccaa2_1a69bd8a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-12-09T05:33:40Z",
      "side": 1,
      "message": "Thanks Luca for getting tests added for this! Looks good, just a couple questions.",
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a0be21b_c5d37b06",
        "filename": "java/com/google/gerrit/acceptance/SshSession.java",
        "patchSetId": 5
      },
      "lineNbr": 84,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-12-09T06:07:20Z",
      "side": 1,
      "message": "Ssh session should not leak internal SSH channel implementation from JSch library.\n\nAs you know, I removed outdated and not supported JSch library in change 269976, and replaced it with Apache MINA SSH client.",
      "range": {
        "startLine": 84,
        "startChar": 9,
        "endLine": 84,
        "endChar": 20
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea757e2c_2609e921",
        "filename": "java/com/google/gerrit/acceptance/SshSession.java",
        "patchSetId": 5
      },
      "lineNbr": 84,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-10T00:03:12Z",
      "side": 1,
      "message": "I know, however, the JSch library internals are already used in this file:\n  import com.jcraft.jsch.ChannelExec;\n  import com.jcraft.jsch.JSch;\n  import com.jcraft.jsch.KeyPair;\n  import com.jcraft.jsch.Session;\n\nWhat would you suggest to do instead?",
      "parentUuid": "9a0be21b_c5d37b06",
      "range": {
        "startLine": 84,
        "startChar": 9,
        "endLine": 84,
        "endChar": 20
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af15d475_aca415cf",
        "filename": "java/com/google/gerrit/acceptance/SshSession.java",
        "patchSetId": 5
      },
      "lineNbr": 84,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-10T23:44:35Z",
      "side": 1,
      "message": "Done, no internal implementations are leaked outside anymore. Thanks for the suggestion!",
      "parentUuid": "ea757e2c_2609e921",
      "range": {
        "startLine": 84,
        "startChar": 9,
        "endLine": 84,
        "endChar": 20
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "354a63c9_736e9dff",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-12-09T06:07:20Z",
      "side": 1,
      "message": "We gave up to try to read the SSH channel in other tests and extracted this kind of tests as integration tests. There are two existing tests:\n\n  javatests/com/google/gerrit/integration/git/UploadArchiveIT.java\n  javatests/com/google/gerrit/integration/ssh/PeerKeysAuthIT.java\n\nCan you design this test as external integration test? That way it wouldn\u0027t rely on JSch library.\n\nOtherwise, we should be sure, that this current approach would also work after removal of JSch library.",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 55,
        "endChar": 100
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40d47c7c_e6428287",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-10T00:03:12Z",
      "side": 1,
      "message": "Yes, but I would avoid copying and pasting lots of boilerplate code for that, as it is currently done in UploadArchiveIT and PeerKeysAuthIT.\n\nAbstractDaemonTest should do it, NOT StreamEventsIT. WDYT?",
      "parentUuid": "354a63c9_736e9dff",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 55,
        "endChar": 100
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09f63935_47dd7680",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-12-10T21:37:51Z",
      "side": 1,
      "message": "You can always copy+paste first and then refactor to share later (especially for test code).",
      "parentUuid": "40d47c7c_e6428287",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 55,
        "endChar": 100
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abab95ff_1e150273",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-10T23:44:35Z",
      "side": 1,
      "message": "Actually, I believe this test shouldn\u0027t really care about *how* the stream events are coming through but rather just test their content and do assertions on it.\n\nI would prefer to address the separate concern of the SSH connectivity in a separate change on the adminSshSession.\n\nIn this test, we do not really make any reference to JSch anymore.",
      "parentUuid": "09f63935_47dd7680",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 55,
        "endChar": 100
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a480cd5d_a951b1d3",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-12-10T23:50:11Z",
      "side": 1,
      "message": "Ack. Leaving unresolved so David can Ack.",
      "parentUuid": "abab95ff_1e150273",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 55,
        "endChar": 100
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9064969d_6b5851e9",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-12-09T05:33:40Z",
      "side": 1,
      "message": "Why do you need to call abandon?",
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5828af0d_9f88b6ec",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-09T23:52:35Z",
      "side": 1,
      "message": "Because you need the previous line to be flushed with a newline in the stream events output.\nIt doesn\u0027t have to be an abandon() but just \"something\" that triggers a new event.",
      "parentUuid": "9064969d_6b5851e9",
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e127499a_0dbb8207",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-12-10T21:37:51Z",
      "side": 1,
      "message": "That seems strange? If I connect to stream-events via command line, it doesn\u0027t have this problem, correct?",
      "parentUuid": "5828af0d_9f88b6ec",
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef271dc7_e90372dd",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-10T23:37:32Z",
      "side": 1,
      "message": "We\u0027re reading in this test using a BufferedInputStream, which returns the data in lines.\nIf you don\u0027t have a final \u0027\\n\u0027 you cannot consume the line.",
      "parentUuid": "e127499a_0dbb8207",
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63724ff8_8a0f78a0",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-12-10T23:50:11Z",
      "side": 1,
      "message": "Ok. Can you update your comment to be clearer that this could be fixed in the test setup (maybe even add a FIXME or TODO?)?",
      "parentUuid": "ef271dc7_e90372dd",
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a63cfdf0_6a22ff9d",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-09T23:52:35Z",
      "side": 1,
      "message": "I should assert the size of the collection, rather than just not empty",
      "range": {
        "startLine": 71,
        "startChar": 74,
        "endLine": 71,
        "endChar": 87
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd4e483d_1fa128f2",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-10T23:37:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a63cfdf0_6a22ff9d",
      "range": {
        "startLine": 71,
        "startChar": 74,
        "endLine": 71,
        "endChar": 87
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1eca47d2_d56a32c7",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-12-09T05:33:40Z",
      "side": 1,
      "message": "Why do you keep looping after this?",
      "range": {
        "startLine": 80,
        "startChar": 8,
        "endLine": 80,
        "endChar": 38
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f418dfc_820fc5ca",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-09T23:52:35Z",
      "side": 1,
      "message": "The string could be contained more than once.",
      "parentUuid": "1eca47d2_d56a32c7",
      "range": {
        "startLine": 80,
        "startChar": 8,
        "endLine": 80,
        "endChar": 38
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1f534d3_ad430cad",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-12-10T21:37:51Z",
      "side": 1,
      "message": "Maybe rename this method then? getEventsContaining(String reviewComment)? // you can skip passing streamEventsReader and just use it from the class",
      "parentUuid": "3f418dfc_820fc5ca",
      "range": {
        "startLine": 80,
        "startChar": 8,
        "endLine": 80,
        "endChar": 38
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "492678b4_555ba2b0",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/StreamEventsIT.java",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-10T23:37:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a1f534d3_ad430cad",
      "range": {
        "startLine": 80,
        "startChar": 8,
        "endLine": 80,
        "endChar": 38
      },
      "revId": "27aa745f43c2a336f8b1edd06858231716a24cc4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}