{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2204702b_2969a1d5",
        "filename": "java/com/google/gerrit/acceptance/GerritServer.java",
        "patchSetId": 5
      },
      "lineNbr": 503,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2023-08-10T07:28:54Z",
      "side": 1,
      "message": "We could actually throw an exception if the index type is set to custom but no module implementing AbstractIndexModule is provided. In this case the test `com.google.gerrit.acceptance.ssh.CustomIndexIT` need to be amended to use \n\n```\n  @Override\n  public Module createModule() {\n    return FakeIndexModule.latestVersion(false);\n  }\n```",
      "revId": "28fdd350227274653a160729f104b3db183c734b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "269333bd_0e9e483f",
        "filename": "java/com/google/gerrit/acceptance/GerritServer.java",
        "patchSetId": 5
      },
      "lineNbr": 503,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-11T05:57:57Z",
      "side": 1,
      "message": "perhaps we could have a method `createIndexModule` with default implementation\n\n```\n  @Override\n  public AbstractIndexModule createIndexModule(IndexType indexType) {\n         return indexType.isLucene() ? LuceneIndexModule.singleVersionAllLatest(\n              0, ReplicaUtil.isReplica(baseConfig), AutoFlush.ENABLED))\n              : FakeIndexModule.latestVersion(false);\n  }\n```\n\nand then in lines #500-504 we would have sth like:\n```\nAbstractIndexModule indexModule \u003d (testSysModule instanceof AbstractIndexModule) ? (AbstractIndexModule) testSysModule : createIndexModule(IndexType indexType);\n```\nobviously `testSysModule` would have to be passed to the `startInMemory` method",
      "parentUuid": "2204702b_2969a1d5",
      "revId": "28fdd350227274653a160729f104b3db183c734b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a2b4274_7e28918d",
        "filename": "java/com/google/gerrit/acceptance/GerritServer.java",
        "patchSetId": 5
      },
      "lineNbr": 503,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2023-08-11T10:16:31Z",
      "side": 1,
      "message": "Please see the new patchset (8).\n\nThis also implicitly answer the original question about setting a custom index type but not passing the module (FakeIndexModule is used in this case as before, no modification needed in `CustomIndexIT`.\n\n@geminica.programs@gmail.com one question though, should the new method `createIndexModule` stay private though? Tests extending AbstractDeamonTest won\u0027t have the ability to override it anyway, but maybe i am missing something?",
      "parentUuid": "269333bd_0e9e483f",
      "revId": "28fdd350227274653a160729f104b3db183c734b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95749fac_b3a7f7bc",
        "filename": "java/com/google/gerrit/acceptance/GerritServer.java",
        "patchSetId": 5
      },
      "lineNbr": 503,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-14T06:26:51Z",
      "side": 1,
      "message": "I see what you mean. It look reasonable but the best way to verify it would be to try to write the IT test that uses `AbstractDeamonTest` and installs different than `Fake...` module - if that is not yet done ðŸ˜Š",
      "parentUuid": "9a2b4274_7e28918d",
      "revId": "28fdd350227274653a160729f104b3db183c734b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "042728de_23363b0d",
        "filename": "java/com/google/gerrit/acceptance/GerritServer.java",
        "patchSetId": 5
      },
      "lineNbr": 503,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2023-08-15T09:08:14Z",
      "side": 1,
      "message": "No, it was not yet done. `CustomIndexIT` was setting a custom indexModule but without passing any custom module, so that gerrit used the default FakeIndexModule.\n\nI now added a `CustomIndexModule` (just a wrapper around `AbstractFakeIndex` but I believe it should be enough for the purpose of this test) and so now it can check that the test uses `AbstractDeamonTest` and installs a different module than `FakeIndexModule` or `LuceneIndexModule`.\n\n@luca.milanesio@gmail.com Do you know it there is a smarter way to do this?",
      "parentUuid": "95749fac_b3a7f7bc",
      "revId": "28fdd350227274653a160729f104b3db183c734b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cf36a43_3fffdc12",
        "filename": "java/com/google/gerrit/acceptance/GerritServer.java",
        "patchSetId": 5
      },
      "lineNbr": 503,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-16T06:23:28Z",
      "side": 1,
      "message": "If `CustomIndexIT` passes the index module then do we still need that `isLucene` check that resolves the `FakeIndexModule`?",
      "parentUuid": "042728de_23363b0d",
      "revId": "28fdd350227274653a160729f104b3db183c734b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab00ddef_cbdcdc16",
        "filename": "java/com/google/gerrit/acceptance/GerritServer.java",
        "patchSetId": 5
      },
      "lineNbr": 503,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2023-08-16T12:02:34Z",
      "side": 1,
      "message": "Yes, seems like there about 300 tests that implicitly use this logic, of which about 10 of them are explicitly installing the lucene module while the rest use the fake index module.\n\nFor the `unknown index types` the `CustomIndexIT` test was the only one trying to install a module other than lucene or fake (not considering ElasticSearch).\n\nThat test though was working just by leveraging the logic of setting by default the fake index module. Now that is not the case anymore, and modules like ElasticSearch can leverage this fix. \n\nI believe that we could be explicit about passing the module to install for each test, moving the responsibility of choosing the index module to install from GerritServer to the test itself, but it would be a big refactoring and to be honest I don\u0027 see the added value. Also considering that we can do that already through the gerrit config.",
      "parentUuid": "0cf36a43_3fffdc12",
      "revId": "28fdd350227274653a160729f104b3db183c734b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}