{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2204702b_2969a1d5",
        "filename": "java/com/google/gerrit/acceptance/GerritServer.java",
        "patchSetId": 5
      },
      "lineNbr": 503,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2023-08-10T07:28:54Z",
      "side": 1,
      "message": "We could actually throw an exception if the index type is set to custom but no module implementing AbstractIndexModule is provided. In this case the test `com.google.gerrit.acceptance.ssh.CustomIndexIT` need to be amended to use \n\n```\n  @Override\n  public Module createModule() {\n    return FakeIndexModule.latestVersion(false);\n  }\n```",
      "revId": "28fdd350227274653a160729f104b3db183c734b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "269333bd_0e9e483f",
        "filename": "java/com/google/gerrit/acceptance/GerritServer.java",
        "patchSetId": 5
      },
      "lineNbr": 503,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-11T05:57:57Z",
      "side": 1,
      "message": "perhaps we could have a method `createIndexModule` with default implementation\n\n```\n  @Override\n  public AbstractIndexModule createIndexModule(IndexType indexType) {\n         return indexType.isLucene() ? LuceneIndexModule.singleVersionAllLatest(\n              0, ReplicaUtil.isReplica(baseConfig), AutoFlush.ENABLED))\n              : FakeIndexModule.latestVersion(false);\n  }\n```\n\nand then in lines #500-504 we would have sth like:\n```\nAbstractIndexModule indexModule \u003d (testSysModule instanceof AbstractIndexModule) ? (AbstractIndexModule) testSysModule : createIndexModule(IndexType indexType);\n```\nobviously `testSysModule` would have to be passed to the `startInMemory` method",
      "parentUuid": "2204702b_2969a1d5",
      "revId": "28fdd350227274653a160729f104b3db183c734b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}