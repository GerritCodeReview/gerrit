{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0ad6cf2b_1ad450d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-03-15T08:33:57Z",
      "side": 1,
      "message": "Conversation started on Discord:\n\nThomas:\nWe currently run into performance issues on one of our servers, if a change is submitted with the Rebase If Necessary strategy. We figured out that it spends 20 min looking whether the commit was merged into any branch (there are more than a 1000 branches in that project). This check was added by you quite some time ago (https://gerrit-review.googlesource.com/c/gerrit/+/91610). I don\u0027t understand the commit message. Could you help me clarify how your fix works? Thanks!\n\n\nSven:\nThat was an unclear commit message, sorry about that.\nBy \"prevents mergeing of a branch that is not a change.\"\nIt means that if the tip of a branch X wasn\u0027t the last patchset of any change (i.e. if it was updated or created through a direct push) and you merged branch X into another branch Z and pushed that merge-commit for review you weren\u0027t allowed to submit that change.\nThe issue was that the tip of branch X wasn\u0027t marked as uninteresting (since the tip wasn\u0027t created through the merge of a change) the merge strategy would interpret it as \"if I allow this merge-commit change to be merged it would also integrate n number of commits (branch X) that are unknown to this server\" and fail the merge attempt.\nWhen in doubt look at the test-case:\nhttps://gerrit-review.googlesource.com/c/gerrit/+/91610/7/gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
      "revId": "29445062ad2755a0806985073050423e5e75850f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "649b9733_85740a4f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-03-15T08:39:54Z",
      "side": 1,
      "message": "So if I understand it correctly, in case of a change submit (RebaseIfNecessary) we would only have to this check, if the change includes a merge commit (it wouldn\u0027t do a rebase then) and we only would have to check whether that commit is in one of the two parents and not in all branches of the project. Am I correct? Since in our case the check runs on all branches (no early quit, since it is in no branch) and since it is no merge commit, changing that would safe a lot of time for the submit.",
      "revId": "29445062ad2755a0806985073050423e5e75850f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4262dba9_8f44cfce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-03-15T08:54:24Z",
      "side": 1,
      "message": "AFAICS it\u0027s a bit more complex if it\u0027s a \"Submit with parents\" submitting a change series. If the series contains a merge commit RebaseSubmitStrategy auto-creates a merge commit for the merge commit since it can\u0027t rebase merge commits. If there are more normal commits (with 1 parent) on top of the merge commit they are cherry-picked one by one (poor mans rebase implementation). \n\nI think all this is done since JGit doesn\u0027t provide an in-memory implementation of RebaseCommand (yet). AFAIK JGit\u0027s RebaseCommand supports --preserve-merges.",
      "parentUuid": "649b9733_85740a4f",
      "revId": "29445062ad2755a0806985073050423e5e75850f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ebb10d8_9c2df9d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-03-15T09:32:39Z",
      "side": 1,
      "message": "This is pseudo code, and naively assumed but it \"should\"(tm) at least narrow the impact if this was limited as (RebaseSorter#62):\n\n```\nif (n.parents \u003e 1 \u0026\u0026 n.parents.contains(c) \u0026\u0026 isAlreadyMerged(c)) {\n  ...\n}\n```\n\nBut if your case is the same as the one described in the test-case (the issue that is being solved) it won\u0027t help you.",
      "parentUuid": "4262dba9_8f44cfce",
      "revId": "29445062ad2755a0806985073050423e5e75850f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cede311_bc943ac5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-03-15T13:44:25Z",
      "side": 1,
      "message": "Let\u0027s look at the test scenario in AbstractSubmit adding another (I think unrelated) branch x:\n\n```\n        M  -- mergeCommit (pushed for review and submitted)\n        | \\\nx -- X  |  S -- stable (pushed directly to refs/heads/stable)\n      \\ | /\n        I   -- master\n```\n\nWe are looking at submitting merge commit M to master.\nI understand that, to cover the case your fix handles, we need to check if S, which is a parent of the merge commit M, is merged into any branch (here stable). \nWhy do we need to loop over all existing branches to find this out ?\n\nWith git I would check if the result of this command is non-empty \n```\ngit branch --contains S\n```\n\nWith JGit I would implement it like this\n```\nboolean isMergedIntoAnyBranch(Repository repo, RevCommit commit) {\n  RefDatabase refDb \u003d repo.getRefDatabase();\n  Collection\u003cRef\u003e branches \u003d refDb.getRefsByPrefix(Constants.R_HEADS);\n  List\u003cRef\u003e matches \u003d revWalk.getMergedInto(commit, branches);\n  return matches.size() \u003e 0\n}\n```\n\nOr did I miss something ?",
      "parentUuid": "3ebb10d8_9c2df9d3",
      "revId": "29445062ad2755a0806985073050423e5e75850f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "899555fa_f56c0eeb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-03-15T14:16:12Z",
      "side": 1,
      "message": "This can be further simplified by using \n`RevWalk#isMergedIntoAny(RevCommit commit, Collection\u003cRef\u003e refs)`\nwhich already returns what we want to know",
      "parentUuid": "8cede311_bc943ac5",
      "revId": "29445062ad2755a0806985073050423e5e75850f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc456485_334aa644",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-03-16T12:10:00Z",
      "side": 1,
      "message": "But isn\u0027t that more or less exactly what is done here?\n`RevWalk#isMergedIntoAny` is semantically cleaner and uses higher level apis (and is therefore preferable). It should be used instead of the `isAlreadyMerged` method but I don\u0027t see that it solves your issue as it should have the same performance implication.\nThe current solution is:\n\n```\nfor each c in alreadyAccepted:\n  if M is merged into c:\n    return true;\n```\nWhere alreadyAccepted contains all the branch-tips [1].\n\nWithout knowing the implementation of RevWalk#isMergedIntoAny(RevCommit, Collection\u003cRef\u003e) I\u0027m guessing it pretty much does the same iteration.\n\np.s.\nYour first solution should have worse performance than these two as it always iterates through all branch-tips.\n\n[1] https://gerrit.googlesource.com/gerrit/+/refs/tags/v3.7.1/java/com/google/gerrit/server/submit/MergeOp.java#758",
      "parentUuid": "899555fa_f56c0eeb",
      "revId": "29445062ad2755a0806985073050423e5e75850f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d466ba7_14fc0361",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-03-16T12:12:42Z",
      "side": 1,
      "message": "Does the 20 minute submit that you talked about on discord finally succeed or does it fail.",
      "parentUuid": "dc456485_334aa644",
      "revId": "29445062ad2755a0806985073050423e5e75850f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24dcf4ff_4f380c1c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-03-16T12:29:41Z",
      "side": 1,
      "message": "It succeeds.",
      "parentUuid": "4d466ba7_14fc0361",
      "revId": "29445062ad2755a0806985073050423e5e75850f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}