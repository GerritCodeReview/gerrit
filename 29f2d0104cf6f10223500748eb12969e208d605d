{
  "comments": [
    {
      "key": {
        "uuid": "30b11a58_f1112851",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 46,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "This is really not going to hash well. Change has no hashCode, which means it defaults to identity hashing, which means the only way something is going to exist in this map is if you pass in exactly the same Change objects. Which seems pretty unlikely.\n\nThe key type needs to be Set\u003cChange.Id\u003e or something. Either use that explicitly, which is kind of verbose, or encapsulate it in ChangeSet like you did before.",
      "range": {
        "startLine": 46,
        "startChar": 20,
        "endLine": 46,
        "endChar": 36
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_31a9f05d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 46,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-04T23:26:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30b11a58_f1112851",
      "range": {
        "startLine": 46,
        "startChar": 20,
        "endLine": 46,
        "endChar": 36
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_5123d4a1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 48,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "I\u0027m not seeing anywhere in this file where you add to this set.",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_b194c01a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 48,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-04T23:26:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30b11a58_5123d4a1",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_d116a446",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 54,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "As discussed in IM, do not use this as it makes Guice unhappy. Store the injector in a field in this class and call the MergeOpMapper constructor directly.",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_11a66c8b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 54,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-04T23:26:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30b11a58_d116a446",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0a19e0d_6e526f3a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 69,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "How would throwing an exception work from the perspective of a caller in Submit?",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_b1e960b3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 69,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-04T23:26:56Z",
      "side": 1,
      "message": "That\u0027s the problem, I don\u0027t have a solution for yet.\nIt feels like bad style, to just tell the user: \"\nOh we had an ephemeral congestion, why don\u0027t you try again in some time?\" as the user would wonder why we would not schedule it (we know the solution to the problem already, just wait and try again, there is nothing we can do about it.)\n\nSo maybe we can reschedule within a few milliseconds and once it takes too long, just tell the user: \"Ok, we could not merge it within the last half second, so we will try again in $time. Click here to cancel the future scheduled attempt\"",
      "parentUuid": "d0a19e0d_6e526f3a",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0a19e0d_aef0d7aa",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 69,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-05T00:04:53Z",
      "side": 1,
      "message": "Maybe we can do something similar as github does?\nhttp://comments.gmane.org/gmane.comp.version-control.git/268137\n\nWe just throw a congestedException here (so the caller knows something is not working as intended. And in the caller (Submit.java) we\u0027ll just retry a few times when a congested exception pops up until a time out is reached and then we just tell the user to let the admin investigate the underlying problem.",
      "parentUuid": "30b11a58_b1e960b3",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_3190d019",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 69,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-05T00:10:30Z",
      "side": 1,
      "message": "Are we talking about the caller or the end user?\n\nThe end user already knows that something is wrong, because the client code always sets waitForMerge \u003d true, so any time clicking the submit button results in the change not being merged, it\u0027s because submit has failed. We don\u0027t know if it\u0027s because of congestion or some other error, but the user certainly knows something is wrong.\n\nIt sounds like what you\u0027re talking about here is a substantial change in how the user observes the merge queue, possibly exposing a lot more of the internal details of what\u0027s going on. That is something we can consider, but is getting way off-topic for this change.",
      "parentUuid": "d0a19e0d_aef0d7aa",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_7126d8b3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 76,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "s/being //",
      "range": {
        "startLine": 76,
        "startChar": 25,
        "endLine": 76,
        "endChar": 31
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_91eedcb6",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 76,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-04T23:26:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30b11a58_7126d8b3",
      "range": {
        "startLine": 76,
        "startChar": 25,
        "endLine": 76,
        "endChar": 31
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0a19e0d_4e4fb392",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 82,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "return Sets.intersection(w.getBranches(), currentBranches).isEmpty();",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0a19e0d_ae95773f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 82,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-04T23:26:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0a19e0d_4e4fb392",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_312c5094",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 114,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "getOrCreateWaitingEntry",
      "range": {
        "startLine": 114,
        "startChar": 23,
        "endLine": 114,
        "endChar": 43
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0a19e0d_cebd63c9",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 114,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "synchronized?",
      "range": {
        "startLine": 114,
        "startChar": 2,
        "endLine": 114,
        "endChar": 9
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_f1e3e8cc",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 114,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-04T23:26:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30b11a58_312c5094",
      "range": {
        "startLine": 114,
        "startChar": 23,
        "endLine": 114,
        "endChar": 43
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_d1e864ac",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 114,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-04T23:26:56Z",
      "side": 1,
      "message": "I\u0027ll fix it, though it\u0027s not really necessary as the only caller (recheckAfter) is synchronized already.",
      "parentUuid": "d0a19e0d_cebd63c9",
      "range": {
        "startLine": 114,
        "startChar": 2,
        "endLine": 114,
        "endChar": 9
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0a19e0d_aeae1797",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 115,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "Not sure if this is what you mean by \"content check\" but this should definitely be using IDs instead of Changes.",
      "range": {
        "startLine": 115,
        "startChar": 35,
        "endLine": 115,
        "endChar": 48
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0a19e0d_8e9a3b6d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 115,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-04T23:26:56Z",
      "side": 1,
      "message": "Yeah that\u0027s what I mean. Currently we\u0027re using a reference of the change, but what we really want is an identifier for this kind of set of changes.",
      "parentUuid": "d0a19e0d_aeae1797",
      "range": {
        "startLine": 115,
        "startChar": 35,
        "endLine": 115,
        "endChar": 48
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_31b730c8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "I\u0027m not sure why you\u0027re inserting a 1s sleep here. If there is no entry in the recheck set for this set of changes, why not just run it immediately?",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_31de1008",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-04T23:26:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30b11a58_31b730c8",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_91c7fc46",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 159,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "Move this catch block into MergeOpMapper?\n\nActually there already is one. merge() catches it, logs, and converts it to a MergeException...which is then re-logged and dropped on the floor by this method.\n\nProbably merge() could just not throw MergeException.",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_11db0c18",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 159,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-04T23:26:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30b11a58_91c7fc46",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0a19e0d_8eb35bfd",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 165,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "If you kept the ChangeSet abstraction around, this would be a method on that. It would also be a natural place to memoize/precompute the result if this repeated iteration turns out to be too expensive",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_71d89819",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 165,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-04T23:26:56Z",
      "side": 1,
      "message": "Right.\n\nOne of the problems seems with the ChangeSet abstraction was how to compute a unique ID for the set of changes, which I kind of papered over now to the next patch.\n\nSo you\u0027re thinking about getting the change set back?",
      "parentUuid": "d0a19e0d_8eb35bfd",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_b17b2077",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 165,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T23:34:13Z",
      "side": 1,
      "message": "The unique ID for the set of changes is the set of change IDs in the set.\n\n @AutoValue\n static abstract class ChangeSet {\n   private static ChangeSet create(Iterable\u003cChange\u003e changes) {\n     ImmutableSet.Builder\u003cBranch, NameKey\u003e bb \u003d ImmutableSet.newBuilder();\n     ImmutableSet.Builder\u003cChange.Id\u003e ib \u003d ImmutableSet.newBuilder();\n     for (Change c : changes) {\n       bb.add(c.getDest());\n       ib.add(c.getId());\n     }\n     return new AutoValue_ChangeMergeQueue_ChangeSet(\n         branches.build(), ids.build());\n   }\n\n   abstract ImmutableSet\u003cBranch.NameKey\u003e branches();\n   abstract ImmutableSet\u003cChange.Id\u003e ids();\n\n\n   @Override\n   public int hashCode() {\n     return ids.hashCode();\n   }\n }",
      "parentUuid": "30b11a58_71d89819",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_11294c84",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 196,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "This is redundant, I believe.",
      "range": {
        "startLine": 196,
        "startChar": 12,
        "endLine": 196,
        "endChar": 34
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_51d594dd",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 196,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-04T23:26:56Z",
      "side": 1,
      "message": "mergeIfPossible is non static, so it needs to be called from one actual instance of the class, and this is how the compiler doesn\u0027t complain about the call to a non static function without a object context.",
      "parentUuid": "30b11a58_11294c84",
      "range": {
        "startLine": 196,
        "startChar": 12,
        "endLine": 196,
        "endChar": 34
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0a19e0d_2ea347ae",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOpMapper.java",
        "patchSetId": 21
      },
      "lineNbr": 48,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "This comment makes very little sense if you don\u0027t understand the whole context of ChangeMergeQueue, MergeOp, and MergeOpMapper. Either expand it enough that it is at least a little self-contained, or drop it.",
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0a19e0d_0ea00b9e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOpMapper.java",
        "patchSetId": 21
      },
      "lineNbr": 50,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "This class surely doesn\u0027t need to be public.",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 6
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_f1cc886c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOpMapper.java",
        "patchSetId": 21
      },
      "lineNbr": 50,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "I think we can come up with a better name for this.\n\nMaybe ChangeSetMerger? It\u0027s the thing that merges a set of changes.",
      "range": {
        "startLine": 50,
        "startChar": 13,
        "endLine": 50,
        "endChar": 26
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_b1c20037",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOpMapper.java",
        "patchSetId": 21
      },
      "lineNbr": 52,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "Wrong class.",
      "range": {
        "startLine": 52,
        "startChar": 30,
        "endLine": 52,
        "endChar": 52
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_d1d18400",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOpMapper.java",
        "patchSetId": 21
      },
      "lineNbr": 63,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "Is there any reason this has to go in the constructor?\n\nWhy not just pass the change set into merge()? Then you don\u0027t even have to go creating a new instance each time in ChangeMergeQueue.",
      "range": {
        "startLine": 63,
        "startChar": 33,
        "endLine": 63,
        "endChar": 67
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0a19e0d_6ead4f96",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOpMapper.java",
        "patchSetId": 21
      },
      "lineNbr": 120,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "This is exactly the loop you already have in a static method in ChangeMergeQueue. Another reason it would be nice to encapsulate in a ChangeSet type with methods on it.",
      "range": {
        "startLine": 118,
        "startChar": 4,
        "endLine": 120,
        "endChar": 5
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0a19e0d_0e876b14",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 37,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-04T23:29:09Z",
      "side": 1,
      "message": "What I found irritating during this change is the distinction between merge() and schedule(). \n\nThey both do the same thing, with schedule() focussing more on `eventually` instead(?). Maybe it\u0027s time to remove one of the methods.",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 37,
        "endChar": 42
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_f175a880",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeQueue.java",
        "patchSetId": 21
      },
      "lineNbr": 37,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T23:36:56Z",
      "side": 1,
      "message": "You can\u0027t get rid of them unless you also get rid of SubmitInput#waitForMerge\n\n    if (input.waitForMerge) {\n      for (Change c : submittedChanges) {\n        // TODO(sbeller): We should make schedule return a Future, then we\n        // could do these all in parallel and still block until they\u0027re done.\n        mergeQueue.merge(c.getDest());\n      }\n      change \u003d dbProvider.get().changes().get(change.getId());\n    } else {\n      for (Change c : submittedChanges) {\n        mergeQueue.schedule(c.getDest());\n      }\n    }\n\n\n(PS, I don\u0027t remember if I told you this at the time, but fixing that TODO is a lot of work. I tried converting WorkQueue to use a ListeningExecutorService and gave up after a few hours.)",
      "parentUuid": "d0a19e0d_0e876b14",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 37,
        "endChar": 42
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b11a58_11b4acbf",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ReloadSubmitQueueOp.java",
        "patchSetId": 21
      },
      "lineNbr": 59,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "I don\u0027t follow. What is dependent on what?",
      "range": {
        "startLine": 58,
        "startChar": 68,
        "endLine": 59,
        "endChar": 49
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0a19e0d_4eaa1380",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ReloadSubmitQueueOp.java",
        "patchSetId": 21
      },
      "lineNbr": 60,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-04T21:57:38Z",
      "side": 1,
      "message": "Sets.newHashSet(cd.change())",
      "range": {
        "startLine": 60,
        "startChar": 30,
        "endLine": 60,
        "endChar": 73
      },
      "revId": "29f2d0104cf6f10223500748eb12969e208d605d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}