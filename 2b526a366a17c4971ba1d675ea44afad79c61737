{
  "comments": [
    {
      "key": {
        "uuid": "dbdfbd0e_038cc981",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-20T22:21:36Z",
      "side": 1,
      "message": "ReviewDb? Why? Modification to changes/patchsets that have an impact on ReviewDb should not trigger the RefOperationValidation isn\u0027t it?",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 53
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19f2117c_511d5ad1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-21T09:19:30Z",
      "side": 1,
      "message": "@Luca: this is assumed to be a general mechanism for validation of ref updates. The code touched is so far consistent in the two implementation (NoteDB and ReviewDB). If we add the event generation in the NoteDB branch it would be reasonable to add to ReviewDB too (even if it might be discontinued)",
      "parentUuid": "dbdfbd0e_038cc981",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 53
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4455b302_cbbfdb32",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-21T11:00:42Z",
      "side": 1,
      "message": "Exactly, this was the thinking behind this. The two BatchUpdate implementations are very much specular at the moment.\nIf it doesn\u0027t make sense to validate changes/patchsets that will be stored on review-db then we don\u0027t need to port this to review-db at all.",
      "parentUuid": "19f2117c_511d5ad1",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 53
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cca50a6b_bc102add",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-21T16:34:30Z",
      "side": 1,
      "message": "I need to express myself more clearly: the change meta-data on ReviewDb is not updating any branch, I don\u0027t see the point to trigger a RefOperationValidation if the ref isn\u0027t modified.\n\nOf course, for the refs that *are* modified when using ReviewDb, then it makes sense to trigger it there also, but not for the meta-data (labels, comments) stored on ReviewDb.",
      "parentUuid": "4455b302_cbbfdb32",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 53
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5de8edfc_24f2196b",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 322,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-20T22:21:36Z",
      "side": 1,
      "message": "Why are we running the validation only for the refs/changes/*?\nAre you expecting anything that would be different from that? If yes, why then you would not run validation on them?",
      "range": {
        "startLine": 322,
        "startChar": 27,
        "endLine": 322,
        "endChar": 75
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee376316_f63524c2",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 322,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-21T11:00:42Z",
      "side": 1,
      "message": "This is the most interesting point of all :)\nrefs/changes are the only ref-update changes that get internally generated by gerrit itself.\n\nAll other references have already been validated at this point. Because of that we don\u0027t want to validate those references again.\n\nDoes it make sense? WDYT?",
      "parentUuid": "5de8edfc_24f2196b",
      "range": {
        "startLine": 322,
        "startChar": 27,
        "endLine": 322,
        "endChar": 75
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45e515ae_c4226cd6",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 322,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-21T16:34:30Z",
      "side": 1,
      "message": "You are telling me that you don\u0027t expect any other ref-updates here other than the ones starting with refs/changes/* ? If yes, why filtering then?",
      "parentUuid": "ee376316_f63524c2",
      "range": {
        "startLine": 322,
        "startChar": 27,
        "endLine": 322,
        "endChar": 75
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "374c6534_6a6961bc",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 322,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-21T17:37:52Z",
      "side": 1,
      "message": "We do expect NoteDbBatchUpdate.executeUpdateRepo() to deal with other ref-updates other than the ones starting with refs/changes/*\n\n*All* ref-updates pass through here (as far as I can tell).\n\nThe difference with other refs is that refs/changes have *not* had the chance to be validated before as they have been derived *later* by gerrit when processing `refs/for`.\n\nThat\u0027s why we are filtering only for those here",
      "parentUuid": "45e515ae_c4226cd6",
      "range": {
        "startLine": 322,
        "startChar": 27,
        "endLine": 322,
        "endChar": 75
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "293a0db8_4c1dafbc",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 325,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-20T22:21:36Z",
      "side": 1,
      "message": "if changeCommands is empty, then the stream will be empty and won\u0027t do anything anyway. This if() is redundant IMHO.",
      "range": {
        "startLine": 325,
        "startChar": 10,
        "endLine": 325,
        "endChar": 35
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d0beffd_cb665efa",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 325,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-21T11:00:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "293a0db8_4c1dafbc",
      "range": {
        "startLine": 325,
        "startChar": 10,
        "endLine": 325,
        "endChar": 35
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6a242fb_da5c453a",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 330,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-20T22:21:36Z",
      "side": 1,
      "message": "There is no point in creating this multiple times for each validator: just create once outside the lambda in a final variable and use it inside.",
      "range": {
        "startLine": 330,
        "startChar": 24,
        "endLine": 330,
        "endChar": 74
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edfb782e_0533a9cc",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 330,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-21T11:00:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6a242fb_da5c453a",
      "range": {
        "startLine": 330,
        "startChar": 24,
        "endLine": 330,
        "endChar": 74
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "821faf5c_7843c416",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 331,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-21T09:19:30Z",
      "side": 1,
      "message": "isn\u0027t the for each blocking the inner exception to be sent to the outer context? I might be confused with Scala\u0027s behaviour",
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e19abc4_d6398fb3",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 331,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-21T11:00:42Z",
      "side": 1,
      "message": "Good question @stefano, we tested this and the exception gets propagated as expected to the outer context",
      "parentUuid": "821faf5c_7843c416",
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4674e22d_f2bf4de3",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 331,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-21T11:22:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7e19abc4_d6398fb3",
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eda7fd1b_e82c8936",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 336,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-20T22:21:36Z",
      "side": 1,
      "message": "This isn\u0027t a runtime exception: we should instead collect the exception and returning it back in the results.",
      "range": {
        "startLine": 336,
        "startChar": 26,
        "endLine": 336,
        "endChar": 49
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe6e21b4_7bbe56b4",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 336,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-21T11:00:42Z",
      "side": 1,
      "message": "forEach doesn\u0027t allow checked exceptions to be propagated.\nWrapping the checked exception in an unchecked exception allows that to be propagated to the outer context.\nAny suggestion on how to do this differently? Perhaps using an iterator?",
      "parentUuid": "eda7fd1b_e82c8936",
      "range": {
        "startLine": 336,
        "startChar": 26,
        "endLine": 336,
        "endChar": 49
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7bdf4a4_81144d18",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 336,
      "author": {
        "id": 1059414
      },
      "writtenOn": "2019-03-21T11:22:44Z",
      "side": 1,
      "message": "Yes please use an iterator",
      "parentUuid": "fe6e21b4_7bbe56b4",
      "range": {
        "startLine": 336,
        "startChar": 26,
        "endLine": 336,
        "endChar": 49
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bbf74e8_391655eb",
        "filename": "java/com/google/gerrit/server/update/NoteDbBatchUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 336,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-21T13:35:14Z",
      "side": 1,
      "message": "Done, no need to use unchecked exceptions anymore 👍",
      "parentUuid": "a7bdf4a4_81144d18",
      "range": {
        "startLine": 336,
        "startChar": 26,
        "endLine": 336,
        "endChar": 49
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ad5d97d_751220b4",
        "filename": "javatests/com/google/gerrit/acceptance/server/notedb/RefUpdateListenerIT.java",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-20T22:21:36Z",
      "side": 1,
      "message": "We should not force the notedb mode, but just honor the one that is currently used.",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 3
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c3f9cfd_a81d29cc",
        "filename": "javatests/com/google/gerrit/acceptance/server/notedb/RefUpdateListenerIT.java",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-21T11:00:42Z",
      "side": 1,
      "message": "This test is explicitly under the nodedb namespace and it is meant to test notedb implementation exclusively. Also, regarding your previous point this might never been implemented for reviewDb at all.",
      "parentUuid": "4ad5d97d_751220b4",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 3
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3b86d4b_8591d723",
        "filename": "javatests/com/google/gerrit/acceptance/server/notedb/RefUpdateListenerIT.java",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-03-21T16:34:30Z",
      "side": 1,
      "message": "So this test should self-disable itself when running on ReviewDb, right? Rather than setting a global system property on the JVM and impacting potentially other tests.",
      "parentUuid": "2c3f9cfd_a81d29cc",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 3
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a158261_fb04b952",
        "filename": "javatests/com/google/gerrit/acceptance/server/notedb/RefUpdateListenerIT.java",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-21T17:37:52Z",
      "side": 1,
      "message": "Thank you @luca, I didn\u0027t know you could use junits assumptions to do that. I will fix this now.",
      "parentUuid": "a3b86d4b_8591d723",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 3
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e22f69a8_9260d6bc",
        "filename": "javatests/com/google/gerrit/acceptance/server/notedb/RefUpdateListenerIT.java",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2019-03-21T17:39:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a158261_fb04b952",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 3
      },
      "revId": "2b526a366a17c4971ba1d675ea44afad79c61737",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}