{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1d35543f_32524c6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2023-08-03T08:31:40Z",
      "side": 1,
      "message": "be",
      "revId": "2c4927b78ee57d47c08e376a77c7d193ab7d4657",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "350e01ba_75418f10",
        "filename": "polygerrit-ui/app/elements/gr-app-element.ts",
        "patchSetId": 4
      },
      "lineNbr": 418,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2023-08-03T09:20:02Z",
      "side": 1,
      "message": "Maybe instead of storing `loginUrl` as a @state prop we should store `window.location` as a @state prop. Then you can do\n\n`.loginUrl\u003d${loginUrl(this.serverConfig?.auth, this.location)}`\n\n```\n  private handleLocationChange() {\n    this.location \u003d window.location;\n  }\n```\n\nThe reason why I am suggesting that is that otherwise you have to call `updateLoginUrl()` when the config changes *and* when the location changes. It is easier to store the raw inputs as @state props and let Lit watch them for you. If any of them changes, then a render cycle is triggered, and everything that you compute on the fly is accurate.\n\nIn an ideal world, we would probably even go a bit further and move watching the location into a browser-model or at least into config-model, but let\u0027s not try to be perfect. :-)",
      "revId": "2c4927b78ee57d47c08e376a77c7d193ab7d4657",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cc22901_d902cbdc",
        "filename": "polygerrit-ui/app/elements/gr-app-element.ts",
        "patchSetId": 4
      },
      "lineNbr": 418,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2023-08-03T14:13:44Z",
      "side": 1,
      "message": "Makes perfect sense. Thank you @brohlfs@google.com for explaining this.",
      "parentUuid": "350e01ba_75418f10",
      "revId": "2c4927b78ee57d47c08e376a77c7d193ab7d4657",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63387951_909e0c84",
        "filename": "polygerrit-ui/app/elements/gr-app-element.ts",
        "patchSetId": 4
      },
      "lineNbr": 419,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2023-08-03T09:20:02Z",
      "side": 1,
      "message": "Can we just pass `this.serverConfig?.auth.login_text ?? \u0027Sign in\u0027` directly here and below in line 435?\n\nThen we don\u0027t need a `loginText` property and `updateLoginUrlAndText()` will just deal with the URL, not the text, which is complex enough.",
      "revId": "2c4927b78ee57d47c08e376a77c7d193ab7d4657",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "127af4dd_6e3f7e38",
        "filename": "polygerrit-ui/app/elements/gr-app-element.ts",
        "patchSetId": 4
      },
      "lineNbr": 419,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2023-08-03T14:13:44Z",
      "side": 1,
      "message": "Makes sense. Only reason I added it in the `updateLoginUrlAndText` is because it was already behing the guard `if (authType \u003d\u003d\u003d AuthType.HTTP || authType \u003d\u003d\u003d AuthType.HTTP_LDAP)` but the loginText is only returned from the api if the `auth.type` is http or http_ldap (I also verified it manually).\n\nUpdated as your suggestion and is much simpler.",
      "parentUuid": "63387951_909e0c84",
      "revId": "2c4927b78ee57d47c08e376a77c7d193ab7d4657",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae3cf278_7f633e05",
        "filename": "polygerrit-ui/app/elements/gr-app-element.ts",
        "patchSetId": 4
      },
      "lineNbr": 715,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2023-08-03T09:20:02Z",
      "side": 1,
      "message": "Move this code into `url-util.ts` and call it with all the input parameters it needs:\n\n`loginUrl(this.serverConfig?.auth, window.location);`\n\nThen add a couple of tests to `url-util_test.ts`.",
      "revId": "2c4927b78ee57d47c08e376a77c7d193ab7d4657",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5627bc8_a6799ef4",
        "filename": "polygerrit-ui/app/elements/gr-app-element.ts",
        "patchSetId": 4
      },
      "lineNbr": 715,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2023-08-03T14:13:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae3cf278_7f633e05",
      "revId": "2c4927b78ee57d47c08e376a77c7d193ab7d4657",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}