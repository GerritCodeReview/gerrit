{
  "pushCert": "certificate version 0.1\npusher A0D0EF51 1454408002 +0100\nnonce ALmjDBVJoYWfcZrA+tINQzW6xe6UtWJIP8w9B+6/rpRf84kPY2S/3Ts1rN70PDIGwx4F9n4FXsrl\n\n0000000000000000000000000000000000000000 d15dab365b70414f20255d7e6d3ed5264ed605df refs/for/master\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJWsIFCAAoJEFG1/Zeg0O9RtiUH/ifVbd+25Uqqx6SaILw/qizg\n1kxWa8mqZxUnZhDZsX9tJJVLVOa2H0cnwWbcZib7bmPnRZUPAciCQmN7MtFVys2Y\naLGKNqzNLVKds8B4u0DytKB+hI1kZ8bpqZnP46WG/EBwv/7G4QLWexLEO5kyTlzy\n7Yfu83ntg0nGD+WzjsEYwXOpvo9F7VmmzIYA4kzDNXHhmsT/uAW64yR2j9/AOJZ8\nm2CxSq0L2b3yZqHNbWqLy0sp+vF2tvWXh98uO2vC3sWQhQUJgSYx9kUCvP+tZ0r7\nMkgMMC51DXUUUC94pjYT/q1VBNLZZHDPDj1P+C3KDzUV2HCvuAs97Abau+M5zaw\u003d\n\u003dq3Pt\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "d133841e_c1ddc233",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/GroupCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 125,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-02T14:00:45Z",
      "side": 1,
      "message": "Can you leave a TODO in here for me:\n\n // TODO(dborowitz): Reuse open repository from caller.",
      "revId": "2c77c6e6743964e1446859c444d7d24f0030253c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51aa3454_e521767c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/GroupCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 125,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-02-03T12:33:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d133841e_c1ddc233",
      "revId": "2c77c6e6743964e1446859c444d7d24f0030253c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d133841e_61f956a2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 124,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-02T14:00:45Z",
      "side": 1,
      "message": "missing space here",
      "range": {
        "startLine": 124,
        "startChar": 45,
        "endLine": 124,
        "endChar": 47
      },
      "revId": "2c77c6e6743964e1446859c444d7d24f0030253c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51aa3454_851e823b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 124,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-02-03T12:33:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d133841e_61f956a2",
      "range": {
        "startLine": 124,
        "startChar": 45,
        "endLine": 124,
        "endChar": 47
      },
      "revId": "2c77c6e6743964e1446859c444d7d24f0030253c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71c65832_aecb5774",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-02T14:00:45Z",
      "side": 1,
      "message": "Hm, I think this needs a better name.",
      "revId": "2c77c6e6743964e1446859c444d7d24f0030253c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1bb289e_aa67cff5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-02-03T12:33:10Z",
      "side": 1,
      "message": "Done. Let me know if you have a better suggestion.",
      "parentUuid": "71c65832_aecb5774",
      "revId": "2c77c6e6743964e1446859c444d7d24f0030253c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1bb289e_cae323c4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-02-02T14:01:02Z",
      "side": 1,
      "message": "As per your comment [1] this must still be converted to a manual factory.\n\n[1] https://gerrit-review.googlesource.com/#/c/74490/1/gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
      "revId": "2c77c6e6743964e1446859c444d7d24f0030253c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1bb289e_8a6a0bbd",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-02-03T12:33:10Z",
      "side": 1,
      "message": "Done in a predecessor change:\n  https://gerrit-review.googlesource.com/74561",
      "parentUuid": "f1bb289e_cae323c4",
      "revId": "2c77c6e6743964e1446859c444d7d24f0030253c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71c65832_2ef9a7a2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/IsVisibleToPredicate.java",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-02T14:00:45Z",
      "side": 1,
      "message": "I think eager loading is going to cause a serious performance problem here. This method has to be fast; on a server with lots of small disjoint groups, this might have to be called hundreds or thousands of times to load a single results page.\n\nThis may have been one of the reasons I originally implemented lazy loading in the first place. The options are:\n\n* implement isVisible with something that doesn\u0027t require a full ChangeControl object\n* stick with lazily loading ChangeNotes\n* remove ChangeNotes from ChangeControl",
      "revId": "2c77c6e6743964e1446859c444d7d24f0030253c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51aa3454_a51b7e4a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/IsVisibleToPredicate.java",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-02-03T12:33:10Z",
      "side": 1,
      "message": "With this change there is no eager loading.\n\nBy having ChangeControl.Factory#createFromIndexedChange the change instance is passed into ChangeNotes and it doesn\u0027t need to be loaded from the database. Also there is no load() call on ChangeNotes done.",
      "parentUuid": "71c65832_2ef9a7a2",
      "revId": "2c77c6e6743964e1446859c444d7d24f0030253c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31986085_0cc1975c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/IsVisibleToPredicate.java",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-04T12:41:56Z",
      "side": 1,
      "message": "Ok, I see later on that there is no call to load() in createFromIndexed, fair enough.\n\nI guess I was thinking that one benefit of always calling load() was that we would not have to call load() from e.g. every method in ChangeMessagesUtil. But we still have to: a ChangeNotes from the index is only partially loaded, so if we just have an arbitrary instance, we don\u0027t know whether or not it has been loaded.\n\nSo I guess that\u0027s fine, it just means always eagerly loading changes is more of an implementation detail and is not going to simplify callers.",
      "parentUuid": "51aa3454_a51b7e4a",
      "revId": "2c77c6e6743964e1446859c444d7d24f0030253c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1bb289e_cad1e37f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/IsVisibleToPredicate.java",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-02-04T13:55:25Z",
      "side": 1,
      "message": "\u003e Ok, I see later on that there is no call to load() in \n \u003e createFromIndexed, fair enough.\n\nYes, this was a mistake in the other change.\n\n \u003e I guess I was thinking that one benefit of always calling \n \u003e load() was that we would not have to call load() from e.g.   \n \u003e every method in ChangeMessagesUtil. But we still have to: \n \u003e a ChangeNotes from the index is only partially loaded, so \n \u003e if we just have an arbitrary instance, we don\u0027t know \n \u003e whether or not it has been loaded.\n \u003e \n \u003e So I guess that\u0027s fine, it just means always eagerly \n \u003e loading changes is more of an implementation detail and is \n \u003e not going to simplify callers.\n\nYes and no. By eagerly loading the change notes we guarantee that callers can invoke the getChange() and getCurrentPatchSet() on changes notes without invoking load before, but for notes created by createFromIndexed, this may return stale data. This applies to a world without database where we would instantiate the change object only in the ChangeNotes#onLoad method.",
      "parentUuid": "31986085_0cc1975c",
      "revId": "2c77c6e6743964e1446859c444d7d24f0030253c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}