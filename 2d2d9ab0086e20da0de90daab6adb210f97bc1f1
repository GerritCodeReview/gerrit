{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8b242654_dba72dd0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-02T08:15:59Z",
      "side": 1,
      "message": "With this commit running the test locally started failing for me:\n\n$ bazel test //... --test_tag_filters\u003d-flaky,-elastic,-local,-manual\n\n...\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nERROR: /usr/local/google/home/ekempin/git/gerrit/tools/node_tools/node_modules_licenses/BUILD:9:11: Compiling TypeScript (devmode) //tools/node_tools/node_modules_licenses:licenses-map [for host] failed: (Exit 1): tsc_wrapped-bin.sh failed: error executing command bazel-out/host/bin/tools/node_tools/tsc_wrapped-bin.sh @@bazel-out/host/bin/tools/node_tools/node_modules_licenses/licenses-map_es5_tsconfig.json\nCompilation failed TypeError [ERR_INVALID_ARG_TYPE]: The \"path\" argument must be of type string. Received an instance of Object\n    at new NodeError (node:internal/errors:371:5)\n    at validateString (node:internal/validators:119:11)\n    at Object.join (node:path:1172:7)\n    at /usr/local/google/home/ekempin/.cache/bazel/_bazel_ekempin/04250bee69fe54b0ca9e02f8a8931c32/execroot/gerrit/node_modules/@bazel/concatjs/internal/tsc_wrapped/compiler_host.js:337:79\n    at Array.forEach (\u003canonymous\u003e)\n    at /usr/local/google/home/ekempin/.cache/bazel/_bazel_ekempin/04250bee69fe54b0ca9e02f8a8931c32/execroot/gerrit/node_modules/@bazel/concatjs/internal/tsc_wrapped/compiler_host.js:335:40\n    at Array.forEach (\u003canonymous\u003e)\n    at CompilerHost.resolveTypeReferenceDirectives (/usr/local/google/home/ekempin/.cache/bazel/_bazel_ekempin/04250bee69fe54b0ca9e02f8a8931c32/execroot/gerrit/node_modules/@bazel/concatjs/internal/tsc_wrapped/compiler_host.js:331:15)\n    at actualResolveTypeReferenceDirectiveNamesWorker (/usr/local/google/home/ekempin/.cache/bazel/_bazel_ekempin/04250bee69fe54b0ca9e02f8a8931c32/execroot/gerrit/node_modules/typescript/lib/typescript.js:116611:163)\n    at resolveTypeReferenceDirectiveNamesWorker (/usr/local/google/home/ekempin/.cache/bazel/_bazel_ekempin/04250bee69fe54b0ca9e02f8a8931c32/execroot/gerrit/node_modules/typescript/lib/typescript.js:116911:26)\nERROR: /usr/local/google/home/ekempin/git/gerrit/polygerrit-ui/app/node_modules_licenses/BUILD:11:11 Compiling TypeScript (devmode) //polygerrit-ui/app/node_modules_licenses:licenses-config [for host] failed: (Exit 1): tsc_wrapped-bin.sh failed: error executing command bazel-out/host/bin/tools/node_tools/tsc_wrapped-bin.sh @@bazel-out/host/bin/tools/node_tools/node_modules_licenses/licenses-map_es5_tsconfig.json\nINFO: Elapsed time: 18.588s, Critical Path: 3.75s\n\n...\n",
      "revId": "2d2d9ab0086e20da0de90daab6adb210f97bc1f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e764f450_2fc83714",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-02T08:16:30Z",
      "side": 1,
      "message": "Marking as unresolved.",
      "parentUuid": "8b242654_dba72dd0",
      "revId": "2d2d9ab0086e20da0de90daab6adb210f97bc1f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "991bc1a5_7c918e58",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-02T13:30:34Z",
      "side": 1,
      "message": "This got fixed for me by [1] and running:\n1. npm update (in root and in tools/node_tools)\n2. rm -rf node_modules/ tools/node_tools/node_modules\n3. npm install; pushd tools/node_tools/; npm install; popd\n\nI also run \"bazel clean --expunge\" but I don\u0027t think this was necessary.\n\nThanks to Chris for the fix and suggesting these commands!\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/338496",
      "parentUuid": "e764f450_2fc83714",
      "revId": "2d2d9ab0086e20da0de90daab6adb210f97bc1f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "2d2d9ab0086e20da0de90daab6adb210f97bc1f1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Style",
        "description": {
          "value": "Code has correct style and format"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Style\u003dMAX AND -label:Code-Style\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Style=MAX AND -label:Code-Style=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Style=MAX"],"failingAtoms":["label:Code-Style=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "2d2d9ab0086e20da0de90daab6adb210f97bc1f1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Library-Compliance",
        "description": {
          "value": "Changes to specific library/metadata files require additional approval"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Library-Compliance\u003dMAX,user\u003dnon_uploader AND -label:Library-Compliance\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^lib/.*\"","file:\"^WORKSPACE$\"","file:\"^.gitmodule$\"","file:\"^tools/deps.bzl$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Library-Compliance=MAX,user=non_uploader AND -label:Library-Compliance=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "2d2d9ab0086e20da0de90daab6adb210f97bc1f1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Release-Notes",
        "description": {
          "value": "Changes must include a \u0027Release-Notes\u0027 footer with a single sentence to mention in the release notes. Changes not worth mentioning in the release notes should put \u0027Release-Notes: skip\u0027"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Release-Notes\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Release-Notes\""},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["hasfooter:\"Release-Notes\""],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "2d2d9ab0086e20da0de90daab6adb210f97bc1f1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "2d2d9ab0086e20da0de90daab6adb210f97bc1f1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "2d2d9ab0086e20da0de90daab6adb210f97bc1f1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}