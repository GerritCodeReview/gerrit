{
  "pushCert": "certificate version 0.1\npusher A0D0EF51 1538997745 +0200\nnonce AP50N7bwT1m6uRe/06PeSa2vsSzfDK0UDWbelWjBHuqtuG9XRZXD/pg3O7fUwDWjgzrwD17v399K\n\n0000000000000000000000000000000000000000 2e974d8058be860db00392297f4a52eab9e47cae refs/for/master\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEjcOJ9ZBmQPrFqZA3UbX9l6DQ71EFAlu7PfEACgkQUbX9l6DQ\n71FfrQf/fGamv8leotXB8+D0bfY53NVa0bvNNNBESKkdzok83lCQ4C8c2X9mpRjS\ncBErmHv44oHTr4Dm7lbBTTY6VxCB/TDEyhx09fCPhAEkQgbnD0Ptwr/AO9659kYB\nEm3nVbKzvGXvLTv5fJqBwilyTUWcvqvDBQbLV9Z9X71znOMwIyPyHjiTTqUdmia5\n11e9OzS6yPoslNptVopz5DWAJFKt3w7JwRTIownj9Gh1fgazsvaWgPeNkbtGK2Mm\npjh39zHpURIADjD2bU/SGdnB5iA6fsKWag3+0dkGTULACghR499nEZKu0DJ2Pfif\n1eiLvwWPsEPq7K4PfIFL0TYjN5y90g\u003d\u003d\n\u003dHAgV\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "3876c4b5_675974b3",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 5321,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-09T16:33:57Z",
      "side": 1,
      "message": "CherryPickChangeInfo",
      "range": {
        "startLine": 5321,
        "startChar": 44,
        "endLine": 5321,
        "endChar": 63
      },
      "revId": "2e974d8058be860db00392297f4a52eab9e47cae",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d52c0a68_6fb2c3ff",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 5927,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-09T16:33:57Z",
      "side": 1,
      "message": "Nit: be consistent in docs and with class names. Above you say \"cherry picked change\", but there is also CherryPickChangeInfo. I was personally undecided about which one sounds better, but a straw poll of our SVL colleagues (including both native and non-native English speakers) chose \"cherry-pick\" or \"cherry-pick change\". No \"ed\", yes hyphen.",
      "range": {
        "startLine": 5927,
        "startChar": 0,
        "endLine": 5927,
        "endChar": 18
      },
      "revId": "2e974d8058be860db00392297f4a52eab9e47cae",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53b604c1_17d5bfcf",
        "filename": "java/com/google/gerrit/extensions/api/changes/RevisionApi.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-09T16:33:57Z",
      "side": 1,
      "message": "Surely we can come up with a better name? Something like \"cherryPickAsInfo\" or \"cherryPickToInfo\"?",
      "revId": "2e974d8058be860db00392297f4a52eab9e47cae",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bba819d_0bb5c180",
        "filename": "java/com/google/gerrit/server/change/ChangeInfoUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-09T16:33:57Z",
      "side": 1,
      "message": "This seems like a place where reflection could be useful. I\u0027m not usually a fan of reflection being the *first* tool to reach for, but it has its uses.",
      "revId": "2e974d8058be860db00392297f4a52eab9e47cae",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a7179b2_462c58bf",
        "filename": "java/com/google/gerrit/server/change/ChangeInfoUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-09T16:33:57Z",
      "side": 1,
      "message": "Seems like these should probably be deep defensive copies. OTOH, that makes a reflection-based approach trickier.",
      "revId": "2e974d8058be860db00392297f4a52eab9e47cae",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "714f19c7_221e93ab",
        "filename": "java/com/google/gerrit/server/restapi/change/CherryPickCommit.java",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-09T16:33:57Z",
      "side": 1,
      "message": "Alternative approach that requires neither manual field copying nor reflection: plumb a Supplier\u003cChangeInfo\u003e through ChangeJson. Default to ChangeInfo::new, but pass CherryPickChangeInfo::new here.\n\nThe downside is it complicates the already-complicated ChangeJson interface.",
      "revId": "2e974d8058be860db00392297f4a52eab9e47cae",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "942b337e_ebf1db47",
        "filename": "java/com/google/gerrit/server/restapi/change/CherryPickCommit.java",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-09T16:39:22Z",
      "side": 1,
      "message": "Specifically:\n\n private ChangeInfo toChangeInfoImpl(ChangeData cd, Optional\u003cPatchSet.Id\u003e limitToPsId)\n\nbecomes\n\n \u003cI extends ChangeInfo\u003e private I toChangeInfoImpl(ChangeData cd, Supplier\u003cI\u003e changeInfoSupplier, Optional\u003cPatchSet.Id\u003e limitToPsId)",
      "parentUuid": "714f19c7_221e93ab",
      "revId": "2e974d8058be860db00392297f4a52eab9e47cae",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}