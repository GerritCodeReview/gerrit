{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f24da5c2_4689380e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-12-03T14:20:09Z",
      "side": 1,
      "message": "I am not convinced that this is a sufficient reason for this never happening. What about two comment thread components in two different places in the UI that each create a reply?\n\nAlso, how do we ensure that there is ever only one *draft*, not even considering whether it is being added or not?\n\nI am very much willing and interested into improving this, but I would feel uneasy approving this change. We have a similar situation with the question of whether comments and threads must be copied/cloned when being retrieved from the model. Ideally we would just have *one* model for all, but then we would have to separate UI state like \"collapsed\".\n\nAnyway, maybe proceed with adding some this.reporting.shouldNeverHappen() calls, letting that run for a week and then being sure that this actually never happens (and convert the call into throwing an error).",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 9
      },
      "revId": "2e9b69533f673bb9c82a7df33aefa61c4c31e09b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea1ea3ff_1bbaf380",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2020-12-03T18:48:30Z",
      "side": 1,
      "message": "\u003e\u003e Also, how do we ensure that there is ever only one *draft*, not even considering whether it is being added or not?\nOnce you create a draft on a comment thread, you cannot create another draft on the same thread. What do we need to ensure?\n\nThis property is being set to true from only one place and there is no possible way for _createReplyComment to be called for a draft comment.\n\n\u003e\u003e What about two comment thread components in two different places in the UI that each create a reply?\nI am not really sure what scenario of a comment thread you are thinking of.\n\nI don\u0027t think this change needs this much safety. If I can test some other scenario or you can see a way this breaks let me know.",
      "parentUuid": "f24da5c2_4689380e",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 9
      },
      "revId": "2e9b69533f673bb9c82a7df33aefa61c4c31e09b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b749255_4707cb18",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-12-03T19:56:20Z",
      "side": 1,
      "message": "If you are sure that this never happens and you are willing to handle rollbacks, then I am fine with approving the change.\n\nBut then please add checks and throw errors:\n\nEither when `_newDraft()` is called or when `this.push(\u0027comments\u0027, ...)` is called you should check that there is no existing draft in the thread.\n\n`createCommentThreads` in comment-util should then also throw an error when it encounters two drafts.\n\nNote that the ChangeComments instance might be shared across the app and if you don\u0027t *deep* clone the threads, then multiple instances of \u003cgr-comment-thread\u003e for the same thread may appear in the UI and they might be operating on the same array of comment objects.\n\nAlso note that a user could potentially open two Gerrit tabs for the same change and create replies for the same thread in both tabs. What happens then?\n\nAgain, I am happy to approve the change, if you feel confident that you have covered all these cases and are willing to handle potential consequences. Adding log statements is cheap and verifying your assumptions in one week is super easy. So the only price you have to pay is that you have to wait ~a week.",
      "parentUuid": "ea1ea3ff_1bbaf380",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 9
      },
      "revId": "2e9b69533f673bb9c82a7df33aefa61c4c31e09b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f49b0a32_c9148293",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2020-12-03T20:09:36Z",
      "side": 1,
      "message": "I agree with all of the points you are making but what I don\u0027t fully understand is how this __otherEditing is supposed to help with these.\n\nRe: Deep cloning of thee threads\nTotally valid point. It\u0027s good that you raised it during fix-it week. I\u0027m also not sure if we have any mechanism to verify that two different copies of threads should. not create two replies. But even in this case, we are not actually creating a reply to a draft so __otherEditing will never be true(we might face some nasty bugs sure).\n\n\u003e\u003e Also note that a user could potentially open two Gerrit tabs for the same change and create replies for the same thread in both tabs.\nI agree that we could get into a mess here potentially and we should probably verify what happens. But opening two Gerrit tabs will not set __otherEditing to true(the two tabs won\u0027t be sharing any information).\n\nI don\u0027t think this __otherEditing property is helping prevent any bugs at all.\nWhat I\u0027m thinking is that even if everything goes wrong, there is no code-path in which _createReplyComment is called for a draft comment.\nIt might be possible that 2 drafts are being created in the same thread, but even if that happens it won\u0027t be through _createReplyComment and hence __otherEditing will never be true.\n\nLMK if that makes sense.\nAdding checks and logs will help to capture issues we might have with threads and I\u0027ll add some logging in our codebase.\nI don\u0027t think this change is super important that it cannot wait 1 week.\nI just think this property isn\u0027t helping us prevent those bugs anyway.",
      "parentUuid": "4b749255_4707cb18",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 9
      },
      "revId": "2e9b69533f673bb9c82a7df33aefa61c4c31e09b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b86ac9e1_94a90b46",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-12-04T10:30:30Z",
      "side": 1,
      "message": "Ok, reading the change description of change 93320 I think this comes from a time where it was deliberately allowed to keep two drafts open at the same time. So you are probably right that we can just remove this.\n\nIt would still be great to have errors/logs put into place for ensuring that we always only have one draft.",
      "parentUuid": "f49b0a32_c9148293",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 9
      },
      "revId": "2e9b69533f673bb9c82a7df33aefa61c4c31e09b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}