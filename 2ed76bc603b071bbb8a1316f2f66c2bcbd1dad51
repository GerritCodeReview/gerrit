{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e873b896_e86cb359",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-12T17:22:07Z",
      "side": 1,
      "message": "I would suggest to explain the context here:\n\n- ChangeNotesCache breaks the encapsulation of the cache loader: it stores the low-level deserialised revisionNoteMap in its instance variable\n- Normally that information isn\u0027t used, with the exception of the ChanteNotesUpdates that relied on the side-effect of the loader loading the data\n\nThe above performance optimisation was consistent when there was no difference between the lower-level loaded data and the cached data.\n\nHowever, since the introduction of I4b0fe6689 and I5904dc461, the cached data may have the HumanComments\u0027 authors remapped to the local identities associated with the serverId of the instance, which may be different from the lower-level ones stored in the loader instance variable.\n\nThe break of the cache contract and encapsulation of the loader (accessing its state rather than its loaded output) made the ChangeNotesUpdates behaviour unpredictable, depending on the loader being called (and therefore its internal state updated) or not.",
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "659bb8da_60017bd2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-17T20:01:59Z",
      "side": 1,
      "message": "Ping?",
      "parentUuid": "e873b896_e86cb359",
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31182106_b5670cfd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-01-18T09:21:58Z",
      "side": 1,
      "message": "I think I\u0027ve addressed all of the above in the updated commit message. I\u0027ll mak this as resolved for now. If you find anything missing in the commit feel free to reopen the discussion.",
      "parentUuid": "659bb8da_60017bd2",
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ace7719c_79e443de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-12T17:22:07Z",
      "side": 1,
      "message": "revisionNoteMap in the cache loader",
      "range": {
        "startLine": 9,
        "startChar": 60,
        "endLine": 10,
        "endChar": 18
      },
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ae4d1ff_a60e319d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-12T17:22:07Z",
      "side": 1,
      "message": "Well, based on my and your tests, this optimisation was quite short-sighted, because it actually did not hit the cache very often: it was quite hard for us to reproduce this issue.\n\nIt would be interesting to actually see *IF* and *HOW OFTEN* and *HOW MUCH* was saved with this performance optimisation.\n\nIf the case happens 1% (or less) of the times, is it worth to break the encapsulation of the loader, making the code more difficult to understand and potentially more fragile?\n\nI. believe we need to measure first and then assess if that was a good choice or not.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 58
      },
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42acbc9d_c2aa1853",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-17T20:01:59Z",
      "side": 1,
      "message": "Can you check if that was related to the NoteDb migration?",
      "parentUuid": "3ae4d1ff_a60e319d",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 58
      },
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "804480cf_6c03e630",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-01-18T09:21:58Z",
      "side": 1,
      "message": "Sure, I can have a look into this.\n\nOn the other note, maybe we can just add a log in `ChangeUpdate:630` saying that cache-loader value is being used and see how often it happens on production. This should be the least invasive and most accurate measurement for performance optimization.",
      "parentUuid": "42acbc9d_c2aa1853",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 58
      },
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f88a7466_f9a17731",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-12T17:22:07Z",
      "side": 1,
      "message": "That\u0027s a very rare situation: you should mention also how you managed to reproduce it and how likely is this to happen in real life.\n(we saw it only once on GerritHub.io)\n\nBottom line: removing that code path is a good thing IMHO.\n\nAnyway, I would prefer to keep the refactoring for master and minimise the impact of this change.",
      "range": {
        "startLine": 24,
        "startChar": 18,
        "endLine": 25,
        "endChar": 44
      },
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "045e6620_c400e206",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-15T13:34:18Z",
      "side": 1,
      "message": "Marking this as resolved, if you feel this is still quite dangerous also for stable-3.7 we can keep it as-is, as long as you can then take care of the merge-ups to make sure that we\u0027re not ending up in complicated conflicts to resolve.",
      "parentUuid": "f88a7466_f9a17731",
      "range": {
        "startLine": 24,
        "startChar": 18,
        "endLine": 25,
        "endChar": 44
      },
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1712c00_7e3148aa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-12T17:22:07Z",
      "side": 1,
      "message": "This is actually the bug: the data was incomplete because the `serverId` of the `HumanComment` had not been updated during remapping.",
      "range": {
        "startLine": 30,
        "startChar": 62,
        "endLine": 32,
        "endChar": 45
      },
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae868f44_4771dcf5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-01-12T17:53:14Z",
      "side": 1,
      "message": "No, I don\u0027t agree that\u0027s the bug. The bug is that data has leaked to the `/meta` branch, and caused data corruption.\n\nWhen both `comment.account.id` and `comment.serverId` are modified **in the memory**, the bug is still there. Albeit it won\u0027t cause data corruption.\n\nThe but here is that unintended data ended up in the `/meta` branch when a comment was added.\n\nI do agree that the latest change in `stable-3.7` reduces the severity of this bug, as it won\u0027t result in data corruption. But the problem is still there, as we can **not** say when `comment.author.id` and `comment.serverId` will be changed in `/meta` branch. That modification relies on cache eviction and loading.\n\nMy point here is that each commit to the `/meta` branch should be atomic and intentional (similarly like we split bug fixes from intended refactorings in code). Right now that _atomicness_ and _intentinalism_ is broken as changes to `comment.autor.id` and `comment.serverId` will sneak in when comments are added. Which IMO is a bug.",
      "parentUuid": "c1712c00_7e3148aa",
      "range": {
        "startLine": 30,
        "startChar": 62,
        "endLine": 32,
        "endChar": 45
      },
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c5f7bfc_21f560c2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-15T13:34:18Z",
      "side": 1,
      "message": "I believe we make this comment as resolved: I agree with the new description of the issue on the commit message.",
      "parentUuid": "ae868f44_4771dcf5",
      "range": {
        "startLine": 30,
        "startChar": 62,
        "endLine": 32,
        "endChar": 45
      },
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "712fa43e_2daa80c2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-12T17:22:07Z",
      "side": 1,
      "message": "Now that the `serverId` inconsistency has been fixed on stable-3.7, I would rephrase this as the removal of the design inconsistency that had very little benefit in performance, as you mentioned how hard was to end up on that code path.\n\nAlso, this refactoring should be directed to the master branch only IMHO.",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 42,
        "endChar": 23
      },
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c8a785e_8f362fab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-01-12T17:53:14Z",
      "side": 1,
      "message": "\u003e Now that the serverId inconsistency has been fixed on stable-3.7, I would rephrase this as the removal of the design inconsistency that had very little benefit in performance, as you mentioned how hard was to end up on that code path.\n\nAs described above, the last fix will prevent data inconsistency, but unintended changes to the `/meta` branch can still sneak it \"randomly\". Which IMO is still a bug that needs to be fixed on `stable-3.7`.\n\n\u003e Also, this refactoring should be directed to the master branch only IMHO.\n\nI wouldn\u0027t call this a refactoring. When you remove the last constant usage while fixing a bug, will you keep that constant or remove it in a separate change?\n\nIMO, it is better to clean the code as it is not used than split that into separate changes.",
      "parentUuid": "712fa43e_2daa80c2",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 42,
        "endChar": 23
      },
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6e391cb_3b8ff087",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-12T18:49:17Z",
      "side": 1,
      "message": "\u003e \u003e Now that the serverId inconsistency has been fixed on stable-3.7, I would rephrase this as the removal of the design inconsistency that had very little benefit in performance, as you mentioned how hard was to end up on that code path.\n\u003e \n\u003e As described above, the last fix will prevent data inconsistency, but unintended changes to the `/meta` branch can still sneak it \"randomly\". Which IMO is still a bug that needs to be fixed on `stable-3.7`.\n\nI agree that is design flaw IMHO, with very little benefit because the condition for having a performance improvement was very rare, whilst the risks that you have highlighted are potentially serious.\n\nThat is because the Loader _handed over_ its internal state as a mutable variable to any higher level to edit in memory. Then the update of the notes take that mutable state and stores it on disk, which is quite dangerous.\n\nWhat I am not sure if that is critical for stable-3.7 or not, having seen the moving parts.\n\n\u003e \u003e Also, this refactoring should be directed to the master branch only IMHO.\n\u003e \n\u003e I wouldn\u0027t call this a refactoring. When you remove the last constant usage while fixing a bug, will you keep that constant or remove it in a separate change?\n\nIt is true that once you remove the use of that internal field, the variable has little use. I am OK to keep it as single change if that is on master, for limiting the merge pains.\n\n\u003e IMO, it is better to clean the code as it is not used than split that into separate changes.\n\nPoint taken, in this case the variables and fields would be unused, it\u0027s a cleanup.",
      "parentUuid": "3c8a785e_8f362fab",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 42,
        "endChar": 23
      },
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa816d90_9359f338",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-17T20:01:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a6e391cb_3b8ff087",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 42,
        "endChar": 23
      },
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "777b2e01_410ab954",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-12T17:22:07Z",
      "side": 1,
      "message": "Should this be moved to master?",
      "revId": "2ed76bc603b071bbb8a1316f2f66c2bcbd1dad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}