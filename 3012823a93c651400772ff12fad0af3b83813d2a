{
  "comments": [
    {
      "key": {
        "uuid": "cd75853f_2e1e078c",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/PatchSet.java",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-19T23:39:04Z",
      "side": 1,
      "message": "Could this be replaced by the split method?\nhttp://docs.oracle.com/javase/7/docs/api/java/lang/String.html#split%28java.lang.String%29\nhttp://stackoverflow.com/questions/10631715/splitting-a-comma-separated-string\n\nI cannot spot the (subtle?) difference.",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 66,
        "endChar": 3
      },
      "revId": "3012823a93c651400772ff12fad0af3b83813d2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd75853f_2e77e7cd",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/PatchSet.java",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-20T00:29:14Z",
      "side": 1,
      "message": "No difference, I\u0027m just morally opposed to using regexes where they\u0027re not required.\n\nI\u0027d really rather replace this with Guava\u0027s Splitter/Joiner but we don\u0027t have Guava in client code...",
      "parentUuid": "cd75853f_2e1e078c",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 66,
        "endChar": 3
      },
      "revId": "3012823a93c651400772ff12fad0af3b83813d2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd75853f_ee49df93",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/PatchSet.java",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-20T00:39:25Z",
      "side": 1,
      "message": "It\u0027s quite a lot of code for moral reasons, IMHO\nThough http://demeranville.com/battle-of-the-tokenizers-delimited-text-parser-performance/\nmakes a point in showing split is slow.",
      "parentUuid": "cd75853f_2e77e7cd",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 66,
        "endChar": 3
      },
      "revId": "3012823a93c651400772ff12fad0af3b83813d2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d854159_b16a60e8",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/PatchSet.java",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-20T00:41:58Z",
      "side": 1,
      "message": "I think we\u0027ve spent more characters discussing this than there are non-whitespace characters in this implementation :)",
      "parentUuid": "cd75853f_ee49df93",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 66,
        "endChar": 3
      },
      "revId": "3012823a93c651400772ff12fad0af3b83813d2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d1d15f6_1a533d3f",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/PatchSet.java",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-05-20T07:51:03Z",
      "side": 1,
      "message": "\u003e I\u0027m just morally opposed to using regexes where they\u0027re not required.\n\nIs a regex required?  It should be possible to do with just:\n\n joinedGroups.split(\",\")\n\nas mentioned in the stackoverflow page linked by Stefan.  Or does that use regex under the hood?\n\nAs far as I can see in that page it only needs to use regex if you also want to strip off whitespace, which we shouldn\u0027t need to do if the joinedGroups is always going to be created by the joinGroups method above.",
      "parentUuid": "2d854159_b16a60e8",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 66,
        "endChar": 3
      },
      "revId": "3012823a93c651400772ff12fad0af3b83813d2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d854159_d1ada49c",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/PatchSet.java",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-20T16:59:20Z",
      "side": 1,
      "message": "I think it\u0027s using regex under the hood, looking at the performance measurement linked in my former comment the split example uses 366ms opposed to 50ms for doing it with indexOf, so I\u0027m fine with this implementation now.",
      "parentUuid": "4d1d15f6_1a533d3f",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 66,
        "endChar": 3
      },
      "revId": "3012823a93c651400772ff12fad0af3b83813d2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad705150_8d2ce1c6",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/PatchSet.java",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-05-20T06:18:07Z",
      "side": 1,
      "message": "Shouldn\u0027t new column imply a new schema version?",
      "range": {
        "startLine": 189,
        "startChar": 2,
        "endLine": 190,
        "endChar": 26
      },
      "revId": "3012823a93c651400772ff12fad0af3b83813d2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd75853f_6e9f2f62",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/PatchSet.java",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-20T17:05:32Z",
      "side": 1,
      "message": "Sigh, in my mind I was punting on the new schema version because I wanted GroupCollector available to write the migration, but of course it makes no sense to do it that way.\n\nI will need to reorder the series to:\n\n* add GroupCollector and test\n* add groups field to PatchSet; migration uses GroupCollector to produce groups for all open patch sets\n* use GroupCollector in ReceiveCommits",
      "parentUuid": "ad705150_8d2ce1c6",
      "range": {
        "startLine": 189,
        "startChar": 2,
        "endLine": 190,
        "endChar": 26
      },
      "revId": "3012823a93c651400772ff12fad0af3b83813d2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad705150_4ddfd902",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/PatchSet.java",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-05-21T10:16:04Z",
      "side": 1,
      "message": "| I wanted GroupCollector available to write the migration, but of course it makes no sense to do it that way.\n\nWhy not? I see advantages with your original approach:\n\n* add groups field to PatchSet and bump schema version in this change\n* add GroupCollector and test\n* add migration and populate groups for all open patch sets\n* use GroupCollector in ReceiveCommits and when changes created from the UI\n\nThis way we could keep changes smaller. This would be easier for reviewer and simpler to provide test coverage. The only disadvantage is we would add a column without actually using it yet (on master). I don\u0027t see any problem with this. The advantages I mentioned certainly outweigh it.",
      "parentUuid": "cd75853f_6e9f2f62",
      "range": {
        "startLine": 189,
        "startChar": 2,
        "endLine": 190,
        "endChar": 26
      },
      "revId": "3012823a93c651400772ff12fad0af3b83813d2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd75853f_ae7bd772",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/PatchSet.java",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-21T15:40:28Z",
      "side": 1,
      "message": "Either we want to support running Gerrit from this commit (the commit that adds the groups field) or we don\u0027t.\n\nIf we want to support running Gerrit from this commit, then we need the schema version bump, and we need the schema upgrade to actually work. Without the new schema version, Gerrit won\u0027t start if run against an old db (as you noticed). With the version but without the schema upgrade to populate the groups field, a server run from this commit will never get its groups field populated.\n\nIf we don\u0027t want to support running Gerrit from this commit, then we don\u0027t even have to worry about the fact that existing sites won\u0027t start up.\n\nMy vote is that we want to support running Gerrit from this commit. This means we have to write the schema upgrade here.\n\nI don\u0027t think it\u0027s going to make it that much harder to review. GroupCollector is completely self-contained.",
      "parentUuid": "ad705150_4ddfd902",
      "range": {
        "startLine": 189,
        "startChar": 2,
        "endLine": 190,
        "endChar": 26
      },
      "revId": "3012823a93c651400772ff12fad0af3b83813d2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d827552_12e9ec29",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/PatchSet.java",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-05-21T15:58:54Z",
      "side": 1,
      "message": "| With the version but without the schema upgrade to populate the groups field, a server run from this commit will never get its groups field populated.\n\nNot when we provide rebuildGroups site program like we did for RebuildNotedb. But we have standard upgrade process for now for database schema upgrade. No reason to deviate from it. So you are right: bump database schema version + schema upgrade must go in the same change.",
      "parentUuid": "cd75853f_ae7bd772",
      "range": {
        "startLine": 189,
        "startChar": 2,
        "endLine": 190,
        "endChar": 26
      },
      "revId": "3012823a93c651400772ff12fad0af3b83813d2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dea3d20_60d39255",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/PatchSet.java",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-21T17:59:40Z",
      "side": 1,
      "message": "\u003e Not when we provide rebuildGroups site program like we did for RebuildNotedb.\n\nThat\u0027s going to be a very expensive operation, even worse than an offline reindex I suspect. We don\u0027t want to make too many of those, and there\u0027s a reason we\u0027re bumping to version 3.0 when that happens :)",
      "parentUuid": "4d827552_12e9ec29",
      "range": {
        "startLine": 189,
        "startChar": 2,
        "endLine": 190,
        "endChar": 26
      },
      "revId": "3012823a93c651400772ff12fad0af3b83813d2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4de0b53c_82d69a43",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/PatchSet.java",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-05-21T18:15:10Z",
      "side": 1,
      "message": "| No reason to deviate from it.\n\nOn second thought, there are reasons to deviate this time:\n\n* 1. when errors are found in GroupsCollector to re-run it, the schema must be upgraded. Decouple execution of GroupsCollector from chema upgrade could be helpful \n* 2. performance consideration and support for online groups column population on Gerrit installations that are not powered by Google Megastore and this not able to peform schema upgrades with zero downtime). This time we don\u0027t change AccountDiffPreference (with 10k records) but PatchSet (optimistic estimation for very big installation would be 1 million changes x 10 patch set per change: 10 million records; OpenStack has tons of changes with three digit patch set number). So it would be helpful to not wait for ages for offline schema migration (I havn\u0027t looked into GroupsCollector implementation), because nobody cares about related changes feature, not for the cost of many hours offline schema upgrade. Moreover, when Gerrit is upgraded from 2.8 that predates secondary index, it would need to wait ages for schema migration with groups column population and after it wait again ages for secondary index to be created.\n\nEven better, with support for online groups population we could fall back to patch set ancestor table for related changes computation and only when groups column online population is ready we would switch to PatchSet.groups column usage for related changes.\n\nCombining 1. and 2. we could introduce GroupsCollection algorithmus number (like index schema number) that we would store in $gerrit_site/etc/groupsCollection.config and check the current version and increase it when new version of GroupsCollector algorithm is available and upgrade when needed. Online.",
      "parentUuid": "4d827552_12e9ec29",
      "range": {
        "startLine": 189,
        "startChar": 2,
        "endLine": 190,
        "endChar": 26
      },
      "revId": "3012823a93c651400772ff12fad0af3b83813d2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd75853f_6efbafba",
        "filename": "gerrit-reviewdb/src/test/java/com/google/gerrit/reviewdb/client/PatchSetTest.java",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-19T22:31:38Z",
      "side": 1,
      "message": "Organize imports",
      "revId": "3012823a93c651400772ff12fad0af3b83813d2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}