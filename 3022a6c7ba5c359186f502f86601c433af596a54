{
  "comments": [
    {
      "key": {
        "uuid": "a56e8bae_13ebec18",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/SubmitAction.java",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-04-30T06:17:41Z",
      "side": 1,
      "message": "This block is the same as 65-83\n\nIt would be better to move this into a utility function, rather than having the same code in two places.",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 58,
        "endChar": 17
      },
      "revId": "3022a6c7ba5c359186f502f86601c433af596a54",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a56e8bae_f3e59043",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchSetInfoFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 143,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-04-30T06:17:41Z",
      "side": 1,
      "message": "Wouldn\u0027t it be better to return a boolean?",
      "range": {
        "startLine": 143,
        "startChar": 10,
        "endLine": 143,
        "endChar": 16
      },
      "revId": "3022a6c7ba5c359186f502f86601c433af596a54",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "caa70c89_4472cec2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchSetInfoFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 143,
      "author": {
        "id": 1013497
      },
      "writtenOn": "2014-05-05T11:53:26Z",
      "side": 1,
      "message": "Yes, it would be however on putting boolean I am getting an umbrella exception saying that boolean otherBranchcommit in ChangeInfo.commitInfo is returning null.\nAny idea on what could be causing it?",
      "parentUuid": "a56e8bae_f3e59043",
      "range": {
        "startLine": 143,
        "startChar": 10,
        "endLine": 143,
        "endChar": 16
      },
      "revId": "3022a6c7ba5c359186f502f86601c433af596a54",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0aae8465_6677ceb1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchSetInfoFactory.java",
        "patchSetId": 4
      },
      "lineNbr": 170,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-05-05T13:44:53Z",
      "side": 1,
      "message": "Is this the only possibility for the \"same branch commit\"?\nLooks like this will wrongly classify a \"same branch commit\" case into a \"different branch commit\". For example:\n\n    o \u003c pushedCommit (Change 1)\n   /\n  o \u003c targetRef\n  |\n  o\n\nIn the meantime another change (Change 2) is submitted to the targetRef:\n\n  o \u003c targetRef (Change 2)\n  |\n  | o \u003c pushedCommit (Change 1)\n  |/\n  o\n  |\n  o\n\nNow the targetRef will not be reached from the pushedCommit. However, the pushedCommit was really created on top of the targetRef as it was at that point in time.",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 170,
        "endChar": 9
      },
      "revId": "3022a6c7ba5c359186f502f86601c433af596a54",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}