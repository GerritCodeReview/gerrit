{
  "comments": [
    {
      "key": {
        "uuid": "AAAHWn////k\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 3
      },
      "lineNbr": 347,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2012-07-16T12:30:19Z",
      "side": 1,
      "message": "The method which pretends to evaluate submit rules should know (hardcode) all these parameter values. Right?\n\nDoes it make sense to invoke evaluateSubmitRules and pass something like \"xyz_rule\" as a parameter?",
      "revId": "3113dec3f0a95f4f992bd3c8a3be3f21b89b8406",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHWn////g\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2012-07-16T12:30:19Z",
      "side": 1,
      "message": "I think all these 5 parameters could be removed as the values are implied by the (new) method name.",
      "revId": "3113dec3f0a95f4f992bd3c8a3be3f21b89b8406",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHXn////8\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1010606
      },
      "writtenOn": "2012-07-16T12:43:43Z",
      "side": 1,
      "message": "The point of this change is to enable code to evaluate *submit-like* rules, i.e. rules with the same signature as the original can_submit and friends. Right now this is only used for one purpose and one set of Prolog rules, namely the ones passed as arguments on lines 346-347. Change https://gerrit-review.googlesource.com/35253 adds another caller of evaluateSubmitRules() using a different set of rule names.\n\nNote the commit message:\n\n\"...in preparation of future changes where rules with other names but the same input/output will be used for evaluating other things.\"\n\nOne could question if evaluateSubmitRules() is really the right name for the method, but since the return value is a list of SubmitRecord objects I don\u0027t think it\u0027s an unreasonable name. To get a more descriptive name one would have to rename the SubmitRecord class too, so that its name would allow a wider interpretation.",
      "parentUuid": "AAAHWn////g\u003d",
      "revId": "3113dec3f0a95f4f992bd3c8a3be3f21b89b8406",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHWn////Y\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2012-07-16T13:41:41Z",
      "side": 1,
      "message": "\u003e Change https://gerrit-review.googlesource.com/35253 adds another caller of evaluateSubmitRules() using a different set of rule names.\n\nOK, I see that there could be other names. However, from the two examples (this and the other change), it looks like there is a naming pattern:\n\n \"submit_rule\", \"locate_submit_rule\", \"can_submit\", \"locate_submit_filter\", \"filter_submit_results\"\n \"postsubmit_rule\", \"locate_postsubmit_rule\", \"can_postsubmit\", \"locate_postsubmit_filter\", \"filter_postsubmit_results\"\n\nLooks like I need only one parameter (\"submit\" or \"postsubmit\") and I could derive all other names.\nIs this just a coincidence or intention which could be enforced by this method?",
      "parentUuid": "AAAHXn////8\u003d",
      "revId": "3113dec3f0a95f4f992bd3c8a3be3f21b89b8406",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHXn////0\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1010606
      },
      "writtenOn": "2012-07-16T14:34:38Z",
      "side": 1,
      "message": "We could potentially lose some flexibility by passing just the rule name stem and have the function tack on prefixes and suffixes to form the exact rule names, but chances are we won\u0027t have any other callers of the function so it\u0027s probably a reasonable thing to do. Although, while it will shorten the method signature the Javadoc text would probably have to be more verbose to support this more complicated scheme.",
      "parentUuid": "AAAHWn////Y\u003d",
      "revId": "3113dec3f0a95f4f992bd3c8a3be3f21b89b8406",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHWn////Q\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2012-07-16T15:56:37Z",
      "side": 1,
      "message": "\u003e We could potentially lose some flexibility by passing just the rule name stem and have the function tack on prefixes and suffixes to form the exact rule names, but chances are we won\u0027t have any other callers of the function so it\u0027s probably a reasonable thing to do.\n\nI thought it will always be the same naming pattern for this set of N rule names. Do you expect other naming patterns?\nIf yes, will it always be exactly 5 names (having 5 names is another assumption here)?\n\nMy confusion probably comes from not understanding what exactly \"submit-like\" set of rules mean.",
      "parentUuid": "AAAHXn////0\u003d",
      "revId": "3113dec3f0a95f4f992bd3c8a3be3f21b89b8406",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHXn////k\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 3
      },
      "lineNbr": 375,
      "author": {
        "id": 1010606
      },
      "writtenOn": "2012-07-16T16:10:56Z",
      "side": 1,
      "message": "I don\u0027t expect other naming patterns but it\u0027s not inconceivable either. I\u0027d say it\u0027s unlikely enough that it\u0027s reasonable to have a single argument from which we can deduce the exact rule names. I\u0027ll send a new patch set with four of the parameters stripped.\n\nWe don\u0027t really have a terminology for this, so I thought \"submit-like\" was a reasonable way of describing something that \"follows the semantics and input/output of the can_submit family of rules\".",
      "parentUuid": "AAAHWn////Q\u003d",
      "revId": "3113dec3f0a95f4f992bd3c8a3be3f21b89b8406",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}