{
  "comments": [
    {
      "key": {
        "uuid": "74fb30f6_b55d909c",
        "filename": "java/com/google/gerrit/server/git/receive/AsyncReceiveCommits.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-10-08T16:04:58Z",
      "side": 1,
      "message": "nit: don\u0027t import inner classes",
      "range": {
        "startLine": 41,
        "startChar": 43,
        "endLine": 41,
        "endChar": 64
      },
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fea31f23_f57dd871",
        "filename": "java/com/google/gerrit/server/git/receive/AsyncReceiveCommits.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2018-10-08T16:59:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "74fb30f6_b55d909c",
      "range": {
        "startLine": 41,
        "startChar": 43,
        "endLine": 41,
        "endChar": 64
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c61d9591_777e3f54",
        "filename": "java/com/google/gerrit/server/git/receive/AsyncReceiveCommits.java",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-10-08T16:04:58Z",
      "side": 1,
      "message": "It is usually a little easier if you make this an @Singleton and have it injected directly (also add @Inject tho the constructor of this class).\n\nThis makes it so that you don\u0027t have to re-create the metrics everytime you create an AsyncReceiveCommits.",
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "247920bf_bab7387d",
        "filename": "java/com/google/gerrit/server/git/receive/AsyncReceiveCommits.java",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2018-10-08T16:59:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c61d9591_777e3f54",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55952b71_77eaf780",
        "filename": "java/com/google/gerrit/server/git/receive/AsyncReceiveCommits.java",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-10-08T16:04:58Z",
      "side": 1,
      "message": "private final",
      "range": {
        "startLine": 179,
        "startChar": 4,
        "endLine": 179,
        "endChar": 6
      },
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9219f83b_f1af9d4a",
        "filename": "java/com/google/gerrit/server/git/receive/AsyncReceiveCommits.java",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2018-10-08T16:59:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "55952b71_77eaf780",
      "range": {
        "startLine": 179,
        "startChar": 4,
        "endLine": 179,
        "endChar": 6
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25bf9746_b25bed44",
        "filename": "java/com/google/gerrit/server/git/receive/AsyncReceiveCommits.java",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-10-08T16:04:58Z",
      "side": 1,
      "message": "ofEnum (here and below)",
      "range": {
        "startLine": 188,
        "startChar": 20,
        "endLine": 188,
        "endChar": 28
      },
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "376cd5b9_03524681",
        "filename": "java/com/google/gerrit/server/git/receive/AsyncReceiveCommits.java",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2018-10-08T16:59:52Z",
      "side": 1,
      "message": "done.\n\nBelow isn\u0027t really the enum, though.",
      "parentUuid": "25bf9746_b25bed44",
      "range": {
        "startLine": 188,
        "startChar": 20,
        "endLine": 188,
        "endChar": 28
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd22d8eb_c567b65d",
        "filename": "java/com/google/gerrit/server/git/receive/AsyncReceiveCommits.java",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-10-08T16:04:58Z",
      "side": 1,
      "message": "Metrics",
      "range": {
        "startLine": 227,
        "startChar": 6,
        "endLine": 227,
        "endChar": 17
      },
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77fb06f2_c59300d3",
        "filename": "java/com/google/gerrit/server/git/receive/AsyncReceiveCommits.java",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2018-10-08T16:59:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd22d8eb_c567b65d",
      "range": {
        "startLine": 227,
        "startChar": 6,
        "endLine": 227,
        "endChar": 17
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c69e9a36_3c217088",
        "filename": "java/com/google/gerrit/server/git/receive/AsyncReceiveCommits.java",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2018-10-08T16:59:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd22d8eb_c567b65d",
      "range": {
        "startLine": 227,
        "startChar": 6,
        "endLine": 227,
        "endChar": 17
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "872c3314_fb1e1fcf",
        "filename": "java/com/google/gerrit/server/git/receive/AsyncReceiveCommits.java",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-10-08T16:04:58Z",
      "side": 1,
      "message": "nit: remove blank line",
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "857e783a_18d007b8",
        "filename": "java/com/google/gerrit/server/git/receive/AsyncReceiveCommits.java",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2018-10-08T16:59:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "872c3314_fb1e1fcf",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae972799_e1c91aec",
        "filename": "java/com/google/gerrit/server/git/receive/AsyncReceiveCommits.java",
        "patchSetId": 2
      },
      "lineNbr": 348,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2018-10-08T16:59:52Z",
      "side": 1,
      "message": "any idea?",
      "range": {
        "startLine": 348,
        "startChar": 13,
        "endLine": 348,
        "endChar": 21
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7a30142_1f137507",
        "filename": "java/com/google/gerrit/server/git/receive/ResultChangeIds.java",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-10-08T16:04:58Z",
      "side": 1,
      "message": "I would try to cut down on the mutability of this class as good as we can to prevent programmer errors.\n\nThe way I understand this code is that we populate the lists exactly once. Given that the lists are polluted in a tight loop, the chance of hitting an execution exception in the middle is low. However, we aren\u0027t really interested in partial results. I would therefore go with a\n\nMap\u003cKey, AtomicRefecence\u003cImmutableList\u003cChange.Id\u003e\u003e\u003e ids;\n\npublic void set(Key key, ImmutableList\u003cChange.Id\u003e newIds) {\n   boolean wasPreviouslySet \u003d ids.compareAndSet(null, newIds);\n   checkState(wasPreviouslySet, \"attempted to set values for %s multiple times\", key);\n}\n\npublic ImmutableList\u003cChange.Id\u003e get(Key key) {\n  ImmutableList\u003cChange.Id\u003e storedIds \u003d ids.get();\n  checkNotNull(storedIds, \"values for %s were never set\", %s);\n}\n\nThis also has the advantage of removing the synchronized(this) blocks which are a slow form of synchronization (especially when invoked from a loop).",
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e91ee7e1_2ba3071c",
        "filename": "java/com/google/gerrit/server/git/receive/ResultChangeIds.java",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2018-10-08T16:59:52Z",
      "side": 1,
      "message": "on the contrary: we are interested in partial results.\n\nFor example, with autoclose, you can have multiple refspecs, and each refspec push can execute a number of autoclose changes. If that process gets interrupted due to timeout, we still want to collect metrics for the succeeded autoclose changes.\n\nAFAIK, synchronziation is basically free if it is mostly uncontended, which should be the case here. Also, atomic operations are very prone to misuse, as atomic operations on different objects are not serialized in the way you usually expect.",
      "parentUuid": "e7a30142_1f137507",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30c43e1b_c46d95e5",
        "filename": "java/com/google/gerrit/server/git/receive/ResultChangeIds.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-10-08T16:04:58Z",
      "side": 1,
      "message": "Maps.immutableEnumMap",
      "range": {
        "startLine": 35,
        "startChar": 10,
        "endLine": 35,
        "endChar": 24
      },
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24fb879a_1d2cf8b2",
        "filename": "java/com/google/gerrit/server/git/receive/ResultChangeIds.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2018-10-08T16:59:52Z",
      "side": 1,
      "message": "used EnumMap. immutableEnumMap is more work to instantiate.",
      "parentUuid": "30c43e1b_c46d95e5",
      "range": {
        "startLine": 35,
        "startChar": 10,
        "endLine": 35,
        "endChar": 24
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3259076fb0a3fefd567cbe13f1506c6aca912c15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}