{
  "comments": [
    {
      "key": {
        "uuid": "8df712e1_0372eed5",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-27T23:13:06Z",
      "side": 1,
      "message": "I don\u0027t think null is going to work here, unless you explicitly check for null below.",
      "range": {
        "startLine": 198,
        "startChar": 39,
        "endLine": 198,
        "endChar": 43
      },
      "revId": "342ea8ff478851e4352aa0a562531e7ed8dfd541",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edca4edd_a6564632",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-07-28T16:39:46Z",
      "side": 1,
      "message": "we\u0027re passing SC_OK as expected status, and in that case we ignore this argument below (we don\u0027t use it at all)",
      "parentUuid": "8df712e1_0372eed5",
      "range": {
        "startLine": 198,
        "startChar": 39,
        "endLine": 198,
        "endChar": 43
      },
      "revId": "342ea8ff478851e4352aa0a562531e7ed8dfd541",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edca4edd_4672f2d6",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-28T16:58:00Z",
      "side": 1,
      "message": "If it is required that msg !\u003d null iff expectedStatus !\u003d SC_OK, then add a checkArgument in each branch of the if starting on l. 213 below.",
      "parentUuid": "edca4edd_a6564632",
      "range": {
        "startLine": 198,
        "startChar": 39,
        "endLine": 198,
        "endChar": 43
      },
      "revId": "342ea8ff478851e4352aa0a562531e7ed8dfd541",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edca4edd_2699b689",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-07-28T17:46:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edca4edd_4672f2d6",
      "range": {
        "startLine": 198,
        "startChar": 39,
        "endLine": 198,
        "endChar": 43
      },
      "revId": "342ea8ff478851e4352aa0a562531e7ed8dfd541",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d349e66_a2377e09",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-27T23:13:06Z",
      "side": 1,
      "message": "Why not test the whole message?\n\nI think allowing substring matching makes it too easy to do something like:\n\n submitWithConflict(id, \"Needs Code-Review\");\n\nwhen we\u0027re also interested in whether it contains the additional context of which change we\u0027re talking about.\n\nYes it will make a few tests more verbose, but I can live with that :)",
      "revId": "342ea8ff478851e4352aa0a562531e7ed8dfd541",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edca4edd_4613128e",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-07-28T16:39:46Z",
      "side": 1,
      "message": "Because having the substring matching follows the style I have seen so far in tests. The problem is with Change Ids which may change as the order of tests is considered non-deterministic. So \"Change 2 depends on Change 1 which is not ready yet because: Change 1: Needs Code-Review\" is as valid as \"Change 8 depends on Change 7 which is not ready yet because: Change 7: Needs Code-Review\"\n\nAnd then it is most easy to test for \"which is not ready yet because\" or as you\u0027d dislike \"Needs Code-Review\". This change is to help that error messages don\u0027t turn into \"Merge conflict\" and nothing more, so even a \"Needs Code-Review\" would find such a change in error message.",
      "parentUuid": "6d349e66_a2377e09",
      "revId": "342ea8ff478851e4352aa0a562531e7ed8dfd541",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edca4edd_a63da6ee",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-28T16:58:00Z",
      "side": 1,
      "message": "But in the example you give, there are two important parts that you want to check for:\n\n* \"depends on Change \u003cN-1\u003e which is not ready yet\"\n* \"Needs Code-Review\"\n\nThe way you have it now you can only check for one of those.\n\nYou should have the change numbers available to you in the calling code, so you can construct the expected message. We do a lot of this in ConsistencyCheckerIT if you want to look at some examples.",
      "parentUuid": "edca4edd_4613128e",
      "revId": "342ea8ff478851e4352aa0a562531e7ed8dfd541",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd4027c_677572bd",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-07-28T17:46:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edca4edd_a63da6ee",
      "revId": "342ea8ff478851e4352aa0a562531e7ed8dfd541",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d349e66_626bb6e4",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/SubmitByMergeIfNecessaryIT.java",
        "patchSetId": 1
      },
      "lineNbr": 295,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-07-27T22:29:31Z",
      "side": 1,
      "message": "This needs to be improved",
      "range": {
        "startLine": 295,
        "startChar": 46,
        "endLine": 295,
        "endChar": 64
      },
      "revId": "342ea8ff478851e4352aa0a562531e7ed8dfd541",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8df712e1_a360ba00",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/SubmitByRebaseIfNecessaryIT.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-07-27T22:29:31Z",
      "side": 1,
      "message": "This needs to be improved",
      "range": {
        "startLine": 110,
        "startChar": 45,
        "endLine": 110,
        "endChar": 64
      },
      "revId": "342ea8ff478851e4352aa0a562531e7ed8dfd541",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}