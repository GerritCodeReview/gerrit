{
  "comments": [
    {
      "key": {
        "uuid": "AAAH7X///OM\u003d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/rpc/RestApi.java",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-08-01T05:02:12Z",
      "side": 1,
      "message": "Thinking about this more, we may need to use the JSON_MAGIC to start the response from the GET, so the response looks like:\n\n  )]}\u0027\n  _token\u003d.....\n\nIt does make things slightly harder to script, but we need to prevent an evil HTML page from doing something like this:\n\n  \u003cscript\u003evar \u003c/script\u003e\n  \u003cscript src\u003d\"https://some-gerrit.example.com/plugins/?disable\u003dfoo\"\u003e\u003c/script\u003e\n  \u003cscript\u003e\n  ;\n  // ... now POST with XmlRpc using _token variable ...\n  \u003c/script\u003e\n\nThis means shell scripts aren\u0027t as simple anymore, as they have to look at the last line of the GET request and can\u0027t just echo the entire body.\n\nWeb security is hard.",
      "revId": "355ad2267748d1aff3884a52378b840df42501a5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH7X///OE\u003d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/rpc/RestApi.java",
        "patchSetId": 2
      },
      "lineNbr": 175,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-08-01T05:02:12Z",
      "side": 1,
      "message": "Maybe the simpler thing is to send the content type as \"application/x-xsrf-token\" and have the server require this as the content type of the POST body.\n\nThis makes it harder for a browser to format a valid POST request using a traditional \u003cform\u003e tag. It also means the server won\u0027t attempt to parse the _token field from the POST into the parameter map, which means you don\u0027t need the _token hack in the CmdLineParser loop, and you don\u0027t have to worry about + or \u003d being incorrectly handled somewhere by an incorrect escape.\n\nAlternatively we make the GET return valid JSON of {_token:\"text\"} and we echo that as-is using a JSON content type in the POST. Just as simple for most script language tools to work with, the client just has to strip the first line of the response body from the GET (to remove that JSON_MAGIC literal) and echo that as the POST body, with Content-Type set to JSON_TYPE (\"application/json\").",
      "revId": "355ad2267748d1aff3884a52378b840df42501a5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH7X///OA\u003d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/RestTokenVerifier.java",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-08-01T05:02:12Z",
      "side": 1,
      "message": "getAccountId()",
      "revId": "355ad2267748d1aff3884a52378b840df42501a5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH7X///Ns\u003d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/TokenVerifiedRestApiServlet.java",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-08-01T05:02:12Z",
      "side": 1,
      "message": "This is ugly, see my notes in the token code.",
      "revId": "355ad2267748d1aff3884a52378b840df42501a5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH7X///N4\u003d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/TokenVerifiedRestApiServlet.java",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-08-01T05:02:12Z",
      "side": 1,
      "message": "nit: public abstract void",
      "revId": "355ad2267748d1aff3884a52378b840df42501a5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH7X///N0\u003d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/TokenVerifiedRestApiServlet.java",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-08-01T05:02:12Z",
      "side": 1,
      "message": "This method can be static.",
      "revId": "355ad2267748d1aff3884a52378b840df42501a5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAH7X///Nw\u003d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/TokenVerifiedRestApiServlet.java",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-08-01T05:02:12Z",
      "side": 1,
      "message": "getRequestURL returns a new StringBuffer. So you can actually write:\n\n  StringBuffer url \u003d req.getRequestURL();\n  if (req.getQueryString() !\u003d null) {\n    url.append(\"?\").append(req.getQueryString());\n  }\n  return url.toString();",
      "revId": "355ad2267748d1aff3884a52378b840df42501a5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}