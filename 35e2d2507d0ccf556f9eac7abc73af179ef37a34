{
  "comments": [
    {
      "key": {
        "uuid": "d8d4b108_ba272243",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-26T22:58:58Z",
      "side": 1,
      "message": "\"key\" is a somewhat generic name. Would it be accurate to call it \"location\" (similar to how it\u0027s termed in GR-STORAGE)?",
      "range": {
        "startLine": 35,
        "startChar": 6,
        "endLine": 35,
        "endChar": 9
      },
      "revId": "35e2d2507d0ccf556f9eac7abc73af179ef37a34",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c45514dc_dd3db796",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1030207
      },
      "writtenOn": "2017-01-26T23:54:52Z",
      "side": 1,
      "message": "I definitely think we can rename. Looking at gr-storage, it looks like location is an object that includes a bunch of things, including line number, so not sure if \"location\" is still consistent or not. maybe something like locationRange?\n\nfrom gr-storage:\n\n_getDraftKey: function(location) {\n      return [\u0027draft\u0027, location.changeNum, location.patchNum, location.path,\n          location.line || \u0027\u0027].join(\u0027:\u0027);\n    },",
      "revId": "35e2d2507d0ccf556f9eac7abc73af179ef37a34",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6391632_3d23ef9e",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff.js",
        "patchSetId": 5
      },
      "lineNbr": 258,
      "author": {
        "id": 1030207
      },
      "writtenOn": "2017-01-26T22:14:45Z",
      "side": 1,
      "message": "I don\u0027t love that this format is defined in the gr-diff-comment-thread-group and also here. Not sure if there\u0027s a better way to standardize it.",
      "revId": "35e2d2507d0ccf556f9eac7abc73af179ef37a34",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a4af151_30030d4d",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff.js",
        "patchSetId": 5
      },
      "lineNbr": 261,
      "author": {
        "id": 1030207
      },
      "writtenOn": "2017-01-26T22:14:45Z",
      "side": 1,
      "message": "the contentEl is for the particular line/side. Here, I\u0027m querying for the comment thread with a matching key. I think querySelector/checking for the attribute is an ok approach for this? but others may disagree.",
      "revId": "35e2d2507d0ccf556f9eac7abc73af179ef37a34",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a738c1d_b34e6429",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff.js",
        "patchSetId": 5
      },
      "lineNbr": 261,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-26T22:58:58Z",
      "side": 1,
      "message": "Is this the only reason that the `key` property is synchronized with an attribute? It seems to me that it the following could be used here instead.\n\nvar threads \u003d contentEl.querySelectorAll(\u0027gr-diff-comment-thread\u0027)\n    .filter(function(thread) { return thread.key \u003d\u003d\u003d keyToCheck; });\nif (threads.length \u003d\u003d\u003d 1) {\n  var threadEl \u003d threads.length;\n\nThat way we can avoid the key attribute (which would more DOM nodes to synchronize and weigh down the DOM tree). I wouldn\u0027t expect the number of threads per line to be very large either.",
      "revId": "35e2d2507d0ccf556f9eac7abc73af179ef37a34",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dda43c0_aaf742a2",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff.js",
        "patchSetId": 5
      },
      "lineNbr": 261,
      "author": {
        "id": 1030207
      },
      "writtenOn": "2017-01-27T18:25:23Z",
      "side": 1,
      "message": "Yeah, that was the reason. will switch.\n\nWould you then have this code on line 273 also?",
      "revId": "35e2d2507d0ccf556f9eac7abc73af179ef37a34",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b35fe67_50f8284a",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff.js",
        "patchSetId": 5
      },
      "lineNbr": 261,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-27T19:26:43Z",
      "side": 1,
      "message": "Ah, I see what you mean. Perhaps make a small function that\u0027s local to this test?\n\nfunction findThreadByKey(nodeList, key) {\n  for (var i \u003d 0; i \u003c nodeList.length; i++) {\n    if (nodeList[i].key \u003d\u003d\u003d key) {\n      return nodeList[i];\n    }\n  }\n}",
      "revId": "35e2d2507d0ccf556f9eac7abc73af179ef37a34",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8aaa79bc_451c6cc3",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff.js",
        "patchSetId": 5
      },
      "lineNbr": 261,
      "author": {
        "id": 1030207
      },
      "writtenOn": "2017-01-27T23:34:15Z",
      "side": 1,
      "message": "yep,  I ended up creating a small function.",
      "revId": "35e2d2507d0ccf556f9eac7abc73af179ef37a34",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}