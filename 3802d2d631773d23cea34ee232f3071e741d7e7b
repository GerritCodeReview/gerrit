{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2feab493_34184d30",
        "filename": "polygerrit-ui/app/elements/gr-app-element.ts",
        "patchSetId": 2
      },
      "lineNbr": 442,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-10-26T08:04:23Z",
      "side": 1,
      "message": "This is very hacky. Is there no way to get a more meaningful signal?",
      "revId": "3802d2d631773d23cea34ee232f3071e741d7e7b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f89bec2b_7949cf51",
        "filename": "polygerrit-ui/app/elements/gr-app-element.ts",
        "patchSetId": 2
      },
      "lineNbr": 442,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-10-26T08:24:31Z",
      "side": 1,
      "message": "Plugin screens are registered similar to how other components are registered for endpoints in the web app. At the time of registration you can pass `RegisterOptions`, but it seemed a bit messy and roundabout to add an option there and store it and pass it around.\n\nI think the alternative would be that we add a method to `gr-endpoint-decorator` that returns the instantiated plugin element. Then we would inspect a property of that element to decide whether to show the header or not. But inspecting this property at the right time and reconciling this with the update lifecycle of gr-app-element will also add a bit of complexity.\n\nI am fine either way. What do you prefer? Or do you have another idea?",
      "parentUuid": "2feab493_34184d30",
      "revId": "3802d2d631773d23cea34ee232f3071e741d7e7b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}