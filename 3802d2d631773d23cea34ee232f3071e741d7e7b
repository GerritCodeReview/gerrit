{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2feab493_34184d30",
        "filename": "polygerrit-ui/app/elements/gr-app-element.ts",
        "patchSetId": 2
      },
      "lineNbr": 442,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-10-26T08:04:23Z",
      "side": 1,
      "message": "This is very hacky. Is there no way to get a more meaningful signal?",
      "revId": "3802d2d631773d23cea34ee232f3071e741d7e7b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f89bec2b_7949cf51",
        "filename": "polygerrit-ui/app/elements/gr-app-element.ts",
        "patchSetId": 2
      },
      "lineNbr": 442,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-10-26T08:24:31Z",
      "side": 1,
      "message": "Plugin screens are registered similar to how other components are registered for endpoints in the web app. At the time of registration you can pass `RegisterOptions`, but it seemed a bit messy and roundabout to add an option there and store it and pass it around.\n\nI think the alternative would be that we add a method to `gr-endpoint-decorator` that returns the instantiated plugin element. Then we would inspect a property of that element to decide whether to show the header or not. But inspecting this property at the right time and reconciling this with the update lifecycle of gr-app-element will also add a bit of complexity.\n\nI am fine either way. What do you prefer? Or do you have another idea?",
      "parentUuid": "2feab493_34184d30",
      "revId": "3802d2d631773d23cea34ee232f3071e741d7e7b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2a2b494_1c90f5ac",
        "filename": "polygerrit-ui/app/elements/gr-app-element.ts",
        "patchSetId": 2
      },
      "lineNbr": 442,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-10-26T08:43:04Z",
      "side": 1,
      "message": "I like the first approach of having a registeroptions, it seems most natural?",
      "parentUuid": "f89bec2b_7949cf51",
      "revId": "3802d2d631773d23cea34ee232f3071e741d7e7b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9488cdf1_444e0e50",
        "filename": "polygerrit-ui/app/elements/gr-app-element.ts",
        "patchSetId": 2
      },
      "lineNbr": 442,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-10-26T09:05:35Z",
      "side": 1,
      "message": "My problem is that we tend add a lot of options and complexity, just because one plugin needs it in some special scenario, and even that is often not very well justified.\n\nSo my approach is to either enable plugins what they want to do, but only when it is really simple and super easy to implement and maintain. Or to push back and ask plugin owners to find a different approach on their own.\n\nWe could tell Android to just live with the header and footer being shown.\n\n`RegisterOptions` is the most natural, but also the highest implementation and maintenance cost. For my taste too much cost for too little value.",
      "parentUuid": "e2a2b494_1c90f5ac",
      "revId": "3802d2d631773d23cea34ee232f3071e741d7e7b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "732d3d22_48e26320",
        "filename": "polygerrit-ui/app/elements/gr-app-element.ts",
        "patchSetId": 2
      },
      "lineNbr": 442,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-10-26T09:23:06Z",
      "side": 1,
      "message": "Ok,\n\nIn that case:\n\n1. Can you add a clear comment that this is a hack?\n2. Can you be more specific about the name rather than simply \u0027includes\u0027?\n\nMaybe make it a white-list constant somewhere?\n\nWHITE_LISTED_FULL_SCREEN_PLUGINS \u003d [\u0027...\u0027];\n\nWHITE_LISTED_FULL_SCREEN_PLUGINS.includes(this.computePluginScreenName())",
      "parentUuid": "9488cdf1_444e0e50",
      "revId": "3802d2d631773d23cea34ee232f3071e741d7e7b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c294cd34_25cf831a",
        "filename": "polygerrit-ui/app/elements/gr-app-element.ts",
        "patchSetId": 2
      },
      "lineNbr": 442,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-10-26T11:03:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "732d3d22_48e26320",
      "revId": "3802d2d631773d23cea34ee232f3071e741d7e7b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}