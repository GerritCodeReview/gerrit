{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e3735dfd_e5f50558",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-20T16:39:45Z",
      "side": 1,
      "message": "I got confused by this, can you maybe rephrase?\n\nIf I read the code correctly it doesn\u0027t read the SR\u0027s from the latest patch set, but from the last patch set for which SR\u0027s have been stored? Am I reading the code wrong?",
      "range": {
        "startLine": 7,
        "startChar": 35,
        "endLine": 7,
        "endChar": 50
      },
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e481d335_1b1ae35c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-12-22T10:41:44Z",
      "side": 1,
      "message": "Yes, you\u0027re reading the code right. I rephrased the commit message.",
      "parentUuid": "e3735dfd_e5f50558",
      "range": {
        "startLine": 7,
        "startChar": 35,
        "endLine": 7,
        "endChar": 50
      },
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "066e274b_acaaec8f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-20T16:39:45Z",
      "side": 1,
      "message": "Maybe clearer: revision that was current/latest at the time of abandon",
      "range": {
        "startLine": 11,
        "startChar": 61,
        "endLine": 11,
        "endChar": 71
      },
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6b21ebb_5c47770d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-12-22T10:41:44Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "066e274b_acaaec8f",
      "range": {
        "startLine": 11,
        "startChar": 61,
        "endLine": 11,
        "endChar": 71
      },
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4b38075_8acefba4",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 865,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-20T16:39:45Z",
      "side": 1,
      "message": "Can you rephrase this? It\u0027s confusing to me, since there is only ever one latest patch set, hence iterating over it in reverse order makes no sense. I think what the code does is looking up the submit requirements from the last patch set for which submit requirements have been stored?",
      "range": {
        "startLine": 865,
        "startChar": 5,
        "endLine": 865,
        "endChar": 99
      },
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea17d17d_43edf794",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 865,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-12-22T10:41:44Z",
      "side": 1,
      "message": "Yes the code is looking up SRs from the last PS for which SRs are stored. I rephrased the comment.",
      "parentUuid": "e4b38075_8acefba4",
      "range": {
        "startLine": 865,
        "startChar": 5,
        "endLine": 865,
        "endChar": 99
      },
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b775f1d_65021d8a",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 875,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-20T16:39:45Z",
      "side": 1,
      "message": "Can this happen? Under which condition does patchSets contain an entry for which no commit is present?",
      "range": {
        "startLine": 874,
        "startChar": 6,
        "endLine": 875,
        "endChar": 17
      },
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aeb2d768_8c9087bd",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 875,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-12-22T10:41:44Z",
      "side": 1,
      "message": "That\u0027s a guarding condition, since this field is optional in the builder. But I assume this can never happen.",
      "parentUuid": "3b775f1d_65021d8a",
      "range": {
        "startLine": 874,
        "startChar": 6,
        "endLine": 875,
        "endChar": 17
      },
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "741e7bfb_100c7b06",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 878,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-20T16:39:45Z",
      "side": 1,
      "message": "Can it happen that psCommit is missing in rns?",
      "range": {
        "startLine": 878,
        "startChar": 10,
        "endLine": 878,
        "endChar": 37
      },
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49a782b2_6ab00968",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 878,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-12-22T10:41:44Z",
      "side": 1,
      "message": "I\u0027m not exactly sure if it can happen, but I added this as a guarding condition to avoid NPEs.",
      "parentUuid": "741e7bfb_100c7b06",
      "range": {
        "startLine": 878,
        "startChar": 10,
        "endLine": 878,
        "endChar": 37
      },
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7279eaaa_945a0c80",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 879,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-20T16:39:45Z",
      "side": 1,
      "message": "Could the following happen:\n\n1. change is created and has non-empty submit requirements\n2. change is abandoned and non-empty submit requirements are stored\n3. change is restored and reworked\n4. no submit requirements apply to the change (either because of the rework or because the config has changed)\n5. change is abandoned, this time with empty submit requirements\n\nWould we wrongly load the non-empty submit requirements that have been stored in step 2 now?",
      "range": {
        "startLine": 879,
        "startChar": 13,
        "endLine": 879,
        "endChar": 73
      },
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14fd08fb_374204db",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 879,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-12-22T10:41:44Z",
      "side": 1,
      "message": "\u003e Would we wrongly load the non-empty submit requirements that have been stored in step 2 now?\n\nNop, I has a test for it [1]. The test does the following:\n\n1) Create a change\n2) Abandon. SRs are stored with PS1 (assert SR results are correct)\n3) Restore the change (assert SR results are correct)\n4) Abandon again (assert SR results are correct)\n5) Restore. Fulfill one SR (vote +2)\n6) Abandon. Now new SR results are stored with same PS1\n7) query and assert latest SRs (the fulfilled one) are returned.\n\nThe other test in [2] does nearly the same, with the difference that it uploads a new PS after step 5. New results are stored with PS2 and are returned correctly.\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/326785/1/javatests/com/google/gerrit/acceptance/api/change/ChangeIT.java#5190\n\n[2] https://gerrit-review.googlesource.com/c/gerrit/+/326785/1/javatests/com/google/gerrit/acceptance/api/change/ChangeIT.java#5140",
      "parentUuid": "7279eaaa_945a0c80",
      "range": {
        "startLine": 879,
        "startChar": 13,
        "endLine": 879,
        "endChar": 73
      },
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89124022_57e3acd2",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 879,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-22T12:54:28Z",
      "side": 1,
      "message": "\u003e Nop, I has a test for it [1]. The test does the following:\n\nThis test is not covering the case I had in mind.\n\nThe test should rather looks like this:\n\n\u003e 1) Create a change\n\u003e 2) Abandon. SRs are stored with PS1 (assert SR results are correct)\n\u003e 3) Restore the change (assert SR results are correct)\n\n4. change the config so that no SRs apply\n\n5. Abandon again (since no SRs apply, this abandon would store an empty list of SRs)\n\n6. check that the returned SRs are empty\n\nSince the code skips all commits that have empty SR\u0027s I\u0027m concerned that in this case it would wrongly return the SR\u0027s from the first abandon.",
      "parentUuid": "14fd08fb_374204db",
      "range": {
        "startLine": 879,
        "startChar": 13,
        "endLine": 879,
        "endChar": 73
      },
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a85bbca9_9799ca67",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 879,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-12-22T13:33:37Z",
      "side": 1,
      "message": "Got your point. Yes you\u0027re right. Nice catch!\n\nBTW, if no SRs apply; we still store their results as not_applicable in NoteDb. But your assumptions would probably lead to wrong behaviour if there are \"No SRs for the project\".\n\nI\u0027ll fix this and add a test.",
      "parentUuid": "89124022_57e3acd2",
      "range": {
        "startLine": 879,
        "startChar": 13,
        "endLine": 879,
        "endChar": 73
      },
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54d2b9d5_db3f123c",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/ChangeIT.java",
        "patchSetId": 1
      },
      "lineNbr": 5140,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-20T16:39:45Z",
      "side": 1,
      "message": "Maybe also add tests to cover:\n\n1. abandon, restore, update: \n\nSR\u0027s should be freshly computed now since the change is open.\n\nThe SR that have been stored on abandon should be ignored. I wonder, should the NoteDb parser in this case actually return no SR\u0027s?\n\n2. abandon, restore, update, merge:\n\nIn this case only the SR\u0027s that have been stored on merge should be returned.",
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9133fe52_867a4737",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/ChangeIT.java",
        "patchSetId": 1
      },
      "lineNbr": 5140,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-12-22T10:41:44Z",
      "side": 1,
      "message": "1. This test does that. we restore the change, upload a new PS, then vote on CR to fulfill the SR. I added an additional assert statement after that vote (before we abandon again).\n\n\u003e The SR that have been stored on abandon should be ignored. I wonder, should the NoteDb parser in this case actually return no SR\u0027s?\n\nIt always returns SRs from NoteDb but we don\u0027t use them, since we have a separate codepaths for open/closed changes in ChangeData#submitRequirements. For open changes, we always compute SRs freshly.\n\n2. I added a test for it.",
      "parentUuid": "54d2b9d5_db3f123c",
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a90f3ebd_20121e13",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/ChangeIT.java",
        "patchSetId": 1
      },
      "lineNbr": 5140,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-22T12:54:28Z",
      "side": 1,
      "message": "\u003e It always returns SRs from NoteDb but we don\u0027t use them,\n\nExactly this is bad. It means that NoteDb returns wrong SRs and the caller has to know that they must not be used. I think we should fix this. Maybe throw an exception if a caller tries to read SR\u0027s from NoteDb when the change is open? Also the javadoc should be pretty clear about this (maybe it already is?).",
      "parentUuid": "9133fe52_867a4737",
      "revId": "392726c7ad65e9764ef7fa59eb6f0bcea5b93cfd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}