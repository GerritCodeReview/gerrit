{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "47469a38_df797f58",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-06-20T14:03:07Z",
      "side": 1,
      "message": "ica",
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fc5ba2a_b45dfbba",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.ts",
        "patchSetId": 3
      },
      "lineNbr": 171,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-06-20T13:42:48Z",
      "side": 1,
      "message": "cancellation?",
      "range": {
        "startLine": 171,
        "startChar": 5,
        "endLine": 171,
        "endChar": 16
      },
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a89cc782_07d921bd",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.ts",
        "patchSetId": 3
      },
      "lineNbr": 171,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-06-20T14:07:34Z",
      "side": 1,
      "message": "Both are correct.",
      "parentUuid": "0fc5ba2a_b45dfbba",
      "range": {
        "startLine": 171,
        "startChar": 5,
        "endLine": 171,
        "endChar": 16
      },
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c818bf68_3dec946e",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.ts",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-06-20T13:42:48Z",
      "side": 1,
      "message": "maybe let it be set as an attribute by defining here\n`@property({type: Boolean, attribute: \u0027no-cancel-on-esc-key\u0027})`\nthen future callers can simply pass the string and not have to worry about setting the property explicitly.",
      "range": {
        "startLine": 173,
        "startChar": 13,
        "endLine": 173,
        "endChar": 26
      },
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6810953c_1b8a3f09",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.ts",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-06-20T14:07:34Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "c818bf68_3dec946e",
      "range": {
        "startLine": 173,
        "startChar": 13,
        "endLine": 173,
        "endChar": 26
      },
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ef64214_2a129a13",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.ts",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2022-06-20T14:57:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6810953c_1b8a3f09",
      "range": {
        "startLine": 173,
        "startChar": 13,
        "endLine": 173,
        "endChar": 26
      },
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c2db6ba_dbf61250",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 3
      },
      "lineNbr": 361,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-06-20T13:42:48Z",
      "side": 1,
      "message": "As soon as Esc was pressed for the first time I remembered this line was triggered causing the suggestions to clear before new suggestions were requested.\n\nDid you verify that the length check is done after the results are returned [2] always and this won\u0027t be flaky in the future?\n\n[1] https://cs.opensource.google/gerrit/gerrit/gerrit/+/master:polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.ts;l\u003d413?q\u003dgr-autocomplete.ts\n\n[2] https://cs.opensource.google/gerrit/gerrit/gerrit/+/master:polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.ts;l\u003d444?q\u003dgr-autocomplete.ts",
      "range": {
        "startLine": 361,
        "startChar": 10,
        "endLine": 361,
        "endChar": 44
      },
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0f456a0_b84fa76c",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 3
      },
      "lineNbr": 361,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-06-20T14:03:07Z",
      "side": 1,
      "message": "The updateSuggestions is coming from here [1], basically requesting them as soon as focus is brought back to the input box.\n\nPerhaps that is a case we don\u0027t need to worry about(losing focus and the refocusing the input box). In this case feel free to Ack this and go ahead with the change.\n\n[1] https://cs.opensource.google/gerrit/gerrit/gerrit/+/master:polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.ts;l\u003d387?q\u003dgr-autocomplete.ts",
      "parentUuid": "2c2db6ba_dbf61250",
      "range": {
        "startLine": 361,
        "startChar": 10,
        "endLine": 361,
        "endChar": 44
      },
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fd1f574_3b9e65d6",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 3
      },
      "lineNbr": 361,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2022-06-20T14:57:47Z",
      "side": 1,
      "message": "It\u0027s hard to lose focus and keep the suggestions. If you click away suggestions close out from OnClick event. So that would happen.\n\nThere is an obscure case, where if you tab away (to the \"cancel button\") then the logic doesn\u0027t work, because suggestions are hidden, but the suggestions array is not cleared. So it will take two Esc presses to close under the new logic. But it seems like too much an obscure usecase.",
      "parentUuid": "e0f456a0_b84fa76c",
      "range": {
        "startLine": 361,
        "startChar": 10,
        "endLine": 361,
        "endChar": 44
      },
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d58de7cb_bf851cd7",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-06-20T14:07:34Z",
      "side": 1,
      "message": "What if it is open but has no suggestions, don\u0027t we still want to close it?",
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8699657e_5d56c5ac",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2022-06-20T14:57:47Z",
      "side": 1,
      "message": "That\u0027s exactly what\u0027s going to happen. If it has no suggestions. than grAutocomplete.suggestions is an empty list, so this will proceed to cancel everything.\n\nOr did I misunderstand the question?\n\nThe suggestion check is what gr-autocomplete itself uses for existing logic: https://cs.opensource.google/gerrit/gerrit/gerrit/+/master:polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.ts;drc\u003d2896f054a946176d3d347a90daefb1b979832159;l\u003d538",
      "parentUuid": "d58de7cb_bf851cd7",
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d99a89e_c9464d2a",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-06-20T15:16:35Z",
      "side": 1,
      "message": "Thanks for sharing for code.\n\nI wonder if the cleaner solution is to simply do grAutocomplete.cancel() always on esc-key (if it exists).\n\nAnd then if there\u0027s no suggestions like in that code, catch the event @cancel inside of your dom:\n\n```\nconst grAutocomplete \u003d this.getGrAutocomplete();\nif (grAutocomplete) { \n  grAutocomplete.cancel()\n} else {\n  this.cancel();\n```\n\n\n```\n      return html`\u003cgr-autocomplete\n        .label\u003d${this.labelText}\n        id\u003d\"autocomplete\"\n        .text\u003d${this.inputText}\n        .query\u003d${this.query}\n        .noCancelOnEscKey\u003d${true}\n        @commit\u003d${this.handleCommit}\n        @cancel\u003d${this.cancel}\n        @text-changed\u003d${(e: CustomEvent) \u003d\u003e {\n          this.inputText \u003d e.detail.value;\n        }}\n      \u003e\n      \u003c/gr-autocomplete\u003e`;\n```\n\nThis way we avoid diving into the internals of gr-autocomplete.",
      "parentUuid": "8699657e_5d56c5ac",
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85831c3c_088d2af8",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2022-06-20T15:57:20Z",
      "side": 1,
      "message": "Done. PTAL",
      "parentUuid": "4d99a89e_c9464d2a",
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ea75b4f_d4da3114",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 3
      },
      "lineNbr": 385,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-06-20T15:16:35Z",
      "side": 1,
      "message": "Since you\u0027re touching this file, would you mind moving these to @query syntax:\n\n```\n@query(\u0027#input\u0027)\ninput?: PaperInputElementExt;\n\n@query(\u0027#autocomplete\u0027)\ngrAutocomplete?: \n```",
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aaaf8b30_1d6e9de7",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 3
      },
      "lineNbr": 385,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2022-06-20T15:57:20Z",
      "side": 1,
      "message": "Done.\n\nDoes query syntax, cache the results? Do I still need to do\n```\nconst input \u003d this.input\n....\n```\n\nIf I am using the variable multiple times? (I just changed to `this.input` every time.",
      "parentUuid": "6ea75b4f_d4da3114",
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d631533c_70d93a10",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 3
      },
      "lineNbr": 385,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-06-20T16:01:47Z",
      "side": 1,
      "message": "That should work fine.\n\nAll that @query does is it creates a getter that does effectively what getInput() did, you can still store it in a local variable.",
      "parentUuid": "aaaf8b30_1d6e9de7",
      "revId": "3a2eb4b44999b6b2aef2b75b26797a1b00684a23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}