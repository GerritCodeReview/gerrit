{
  "pushCert": "certificate version 0.1\npusher F41A2656 1577774332 +0100\nnonce AC6AUtMPpsZyJ4F0ogim7aaqIliSnO5jVwlmwHwWzXS+0nsfStrZR4s/IC8NiwAdxqxifMhOkUDz\n\n0000000000000000000000000000000000000000 25cfd90be149c36dc3c8acc26b31343f5cb5a502 refs/for/master\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJeCuz8AAoJEHFVO370GiZWHhkIAJ6Z2dNjIQHEiXaB6lfggjOW\nD4lit4u32D7GrB9By/EWI908feDVUiH2YrocCM82+1TiG9tGW5nAnIkkkS7rhctE\n/YlbnbJmPU38xGjgecXDyezIJiX+cKIZkid4NIjaoNS6ByoWbHYg9qS9lTs+/ybG\n3v3JT/qR7WUOzJGjAdOZE/h1ijBoSKMPPhLqAekgiIta/WvCJ2YrqzksfarqPohe\nbPDG3X2pHdOJpcXUAtV3O3TW6nsKHW299Ldwxs5rq/wguutsPxuj6a0hvg/Da676\nDYY+6N36LuRuCL/Wc7VwPjrws/JgTRQFxFBmthb8RMmXCkuMYgowAylAENv5rSU\u003d\n\u003deGHw\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "ff20814d_79cd814c",
        "filename": "java/gerrit/PRED_change_branch_1.java",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-01-04T18:31:59Z",
      "side": 1,
      "message": "Why the parameters are prefixed with \u0027-\u0027?",
      "range": {
        "startLine": 33,
        "startChar": 21,
        "endLine": 33,
        "endChar": 22
      },
      "revId": "3a9e162545a4a5cd63d60c54ebbe41bff24f8072",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6af29523_30830645",
        "filename": "java/gerrit/PRED_change_branch_1.java",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-01-07T13:06:17Z",
      "side": 1,
      "message": "I just followed the example from the javadoc of the other classes. I thought that is a Prolog-specific syntax for args?",
      "parentUuid": "ff20814d_79cd814c",
      "range": {
        "startLine": 33,
        "startChar": 21,
        "endLine": 33,
        "endChar": 22
      },
      "revId": "3a9e162545a4a5cd63d60c54ebbe41bff24f8072",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d64a3b8_e82b2181",
        "filename": "java/gerrit/PRED_change_branch_1.java",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-01-07T14:39:05Z",
      "side": 1,
      "message": "There is no complete agreement on mode indicators for predicate parameters in the Prolog community. IIRC, SWI-prolog is used in Gerrit build tool chain. See the reference in: [1], [2]. Should we then use \u0027+\u0027 indicator for input mode und \u0027-\u0027 for output mode?\n\n* ++\tArgument must be ground, i.e., the argument may not contain a variable anywhere.\n* +\tArgument must be fully instantiated to a term that satisfies the type. This is not necessarily ground, e.g., the term [_] is a list, although its only member is unbound.\n* -\tArgument is an output argument. Unless specified otherwise, output arguments need not to be unbound. For example, the goal findall(X, Goal, [T]) is good style and equivalent to findall(X, Goal, Xs), Xs \u003d [T]45 Note that the determinism specification, e.g., ``det\u0027\u0027 only applies if this argument is unbound.\n* --\tArgument must be unbound. Typically used by predicates that create `something\u0027 and return a handle to the created object, such as open/3 which creates a stream.\n* ?\tArgument must be bound to a partial term of the indicated type. Note that a variable is a partial term for any type. Think of the argument as either input or output or both input and output. For example, in stream_property(S, reposition(Bool)), the reposition part of the term is input and the uninstantiated Bool is output.\n\n\n* [1] https://www.swi-prolog.org/pldoc/man?section\u003dpreddesc\n* [2] https://stackoverflow.com/questions/4220651/question-mark-plus-minus-preceding-prolog-variable-names",
      "parentUuid": "6af29523_30830645",
      "range": {
        "startLine": 33,
        "startChar": 21,
        "endLine": 33,
        "endChar": 22
      },
      "revId": "3a9e162545a4a5cd63d60c54ebbe41bff24f8072",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c456dd50_f1fbf1a2",
        "filename": "java/gerrit/PRED_change_branch_1.java",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-01-07T16:17:52Z",
      "side": 1,
      "message": "Thanks a lot for digging this up. \n\n\u003e Should we then use \u0027+\u0027 indicator for input mode und \u0027-\u0027 for output mode?\n\nMakes sense to me. But since I\u0027m  not knowing much about Prolog, I\u0027m still having trouble to understand which parameters are for input and which ones are for output. It seems to me that all parameters that are touched in this change are for output?",
      "parentUuid": "9d64a3b8_e82b2181",
      "range": {
        "startLine": 33,
        "startChar": 21,
        "endLine": 33,
        "endChar": 22
      },
      "revId": "3a9e162545a4a5cd63d60c54ebbe41bff24f8072",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}