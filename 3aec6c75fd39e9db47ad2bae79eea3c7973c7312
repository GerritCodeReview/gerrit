{
  "comments": [
    {
      "key": {
        "uuid": "AAABwn///6A\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 7,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-12-23T08:13:59Z",
      "side": 1,
      "message": "This summary line feels missleading to me.  I don\u0027t think that Gerrit did not support submodules before this, it just happened to not do anything with them.  If I understand your explanation below, you are not adding support for a standard git submodule feature, but rather you are adding a Gerrit specific enhancement to make the use of Submodules more easy for a certain use case.  Perhpas a good summary would be:  Allow superprojects to subscribe to submodules updates.",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAByX////E\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 7,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-12-23T11:22:36Z",
      "side": 1,
      "message": "It makes sense. You correctly understood it. Thanks for the suggestion :-)",
      "parentUuid": "AAABwn///6A\u003d",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABwn///58\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 34,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-12-23T08:13:59Z",
      "side": 1,
      "message": "Like the summary line, this statement feels missleading.",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAByX////A\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 34,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-12-23T11:22:36Z",
      "side": 1,
      "message": "I should modify it according to your summary line suggestion.",
      "parentUuid": "AAABwn///58\u003d",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABwn///54\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 52,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-12-23T08:13:59Z",
      "side": 1,
      "message": "You say \"also\" here, what other scope are subscriptions managed in?",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAByX///+8\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 52,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-12-23T11:22:36Z",
      "side": 1,
      "message": "The added feature manage subscriptions of submodules/branches, not subscriptions of only submodules (that is the reason to add the revision field in .gitmodule file if one wants to use the feature).\n\nWhat about modifying the sentence to be \"Submodule subscription is actually the subscription of a submodule project and one of its branches to a branch of a super project\" ? I also thought about dropping the \"also\", but not sure if that would make it more clear.",
      "parentUuid": "AAABwn///54\u003d",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABwn///50\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 54,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-12-23T08:13:59Z",
      "side": 1,
      "message": "Is the revision field something that you are inventing here, sounds like it (I know that replo supports this)?  If so, have you discussed this idea at all with the git submodule authors to ensure that it does not conflict with any of their plans?  If this is a custom field, then you should probably make that more explicit here, and the documentation should probably be updated to explain how Gerrit supports the field: what it will do with it, and how to define it (sample format).",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAByX///+4\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 54,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-12-23T11:22:36Z",
      "side": 1,
      "message": "I was not involved in the original implementation of this feature, I would need to ask Ulrik if revision field was discussed with git submodule authors. As far as I know this is something introduced in this feature for gerrit use only, not compromising git submodule working. We also had Shawn reviewing it (the original implementation patchsets, that already had this revision field) and there was no concern about it, so I believe introducing this field is not quite a problem.\n\nI am very concerned I could have written a short text, but not sure if it would be so clear as this sounds to me. So I thought about only discussing revision field in this and the 2 following paragraphs. Would you mean to emphasize it is something for gerrit use?\n\nAbout documentation, I can add some to the current one.",
      "parentUuid": "AAABwn///50\u003d",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABwn///6g\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/SubmoduleSubscription.java",
        "patchSetId": 14
      },
      "lineNbr": 80,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-12-23T08:13:59Z",
      "side": 1,
      "message": "Was that meant to be Submodule instead of subscription?",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAByX///+0\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/SubmoduleSubscription.java",
        "patchSetId": 14
      },
      "lineNbr": 80,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-12-23T11:22:36Z",
      "side": 1,
      "message": "My bad :-(",
      "parentUuid": "AAABwn///6g\u003d",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABwn///6c\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SubmoduleOp.java",
        "patchSetId": 14
      },
      "lineNbr": 120,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-12-23T08:13:59Z",
      "side": 1,
      "message": "I think this belongs right before the try (you don\u0027t want to close if the open fails, it might be null).",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAByX///+w\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SubmoduleOp.java",
        "patchSetId": 14
      },
      "lineNbr": 120,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-12-23T11:22:36Z",
      "side": 1,
      "message": "In this case, what about checking if schema is not null in the finally block? I believe there is the risk open throws an exception.",
      "parentUuid": "AAABwn///6c\u003d",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABwn///6Y\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SubmoduleOp.java",
        "patchSetId": 14
      },
      "lineNbr": 134,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-12-23T08:13:59Z",
      "side": 1,
      "message": "It\u0027s not obvious to me when you are choosing to log exceptions and when you aren\u0027t in this class? And when you do log them, they might get relogged by the calling class.",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAByX///+s\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SubmoduleOp.java",
        "patchSetId": 14
      },
      "lineNbr": 134,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-12-23T11:22:36Z",
      "side": 1,
      "message": "What happened here is that I create an exception here, so I did not call logAndThrowSubmoduleException (that also creates SubmoduleException instance). \n\nWhat about throwing and logging here to have same behavior than the catch blocks in this method? \n\nWe have chosen to log them here, even if a calling class \"relog\" them. We thought it would be better to do so and help a failure investigation (that I do hope does not occur, of course).",
      "parentUuid": "AAABwn///6Y\u003d",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABwn///6U\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SubmoduleOp.java",
        "patchSetId": 14
      },
      "lineNbr": 217,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-12-23T08:13:59Z",
      "side": 1,
      "message": "This does not appear to be an efficient use of a StringBuffer, you only append the input string to a blank buffer just to only then call toString() on it below.",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAByX///+o\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SubmoduleOp.java",
        "patchSetId": 14
      },
      "lineNbr": 217,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-12-23T11:22:36Z",
      "side": 1,
      "message": "Yes. The point here is that if the if block of 204th line is executed, msgbuf can append more text. The idea here is to make use of msgbuf content in 236th line either the if or the else block is executed.",
      "parentUuid": "AAABwn///6U\u003d",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABwn///6Q\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SubmoduleOp.java",
        "patchSetId": 14
      },
      "lineNbr": 239,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-12-23T08:13:59Z",
      "side": 1,
      "message": "This doesn\u0027t really feel like a rollback. Deleting a subscription because it couldn\u0027t be updated seems a bit extreme. Perhaps the error was just temporary, perhaps it was even just due to a race in this new feature.",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAByX///+k\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SubmoduleOp.java",
        "patchSetId": 14
      },
      "lineNbr": 239,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-12-23T11:22:36Z",
      "side": 1,
      "message": "It makes sense.",
      "parentUuid": "AAABwn///6Q\u003d",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABwn///6M\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SubmoduleOp.java",
        "patchSetId": 14
      },
      "lineNbr": 245,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-12-23T08:13:59Z",
      "side": 1,
      "message": "This could replace the contains() in the if on line 223 preventing a double lookup.\n\nI am having a hard time seing how this even works?  I know that you have a test case for loops, but how does this prevent a loop since it is added after the recursive call?",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAByX///+g\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SubmoduleOp.java",
        "patchSetId": 14
      },
      "lineNbr": 245,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-12-23T11:22:36Z",
      "side": 1,
      "message": "The unit test works because it involves a simple case (it works due line 207). \n\nNow that you mentioned it I am not so confident it could work with a circular reference case like super -\u003e submodule-a -\u003e submodule-b -\u003e submodule-a :-( \n\nCases like that should not occur, unless one modifies the database. Anyway I really believe this check should exist and that I should modify this code to be really certain about it. Thanks for noticing it :-)",
      "parentUuid": "AAABwn///6M\u003d",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABwn///6I\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/Schema_60.java",
        "patchSetId": 14
      },
      "lineNbr": 22,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-12-23T08:13:59Z",
      "side": 1,
      "message": "I think we are at 60 already on the tip.",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAByX///+c\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/Schema_60.java",
        "patchSetId": 14
      },
      "lineNbr": 22,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-12-23T11:22:36Z",
      "side": 1,
      "message": "I should ask Gustaf to update our \"gerrit code mirror\". Since I believe it could be done only on next year, is there a problem if next uploaded patchset still does not consider 60 as an existing one?",
      "parentUuid": "AAABwn///6I\u003d",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABwn///6E\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/util/SubmoduleSectionParser.java",
        "patchSetId": 14
      },
      "lineNbr": 127,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-12-23T08:13:59Z",
      "side": 1,
      "message": "It would be simpler to simply return here and you could then eliminate the parsedSubscription variable. Then you could simplify even further by pushing this line below 116, further allowing the submoduleBranch variable to be eliminated or at least localized to a much smaller block...Further simplifications would push this logic into the if on line 108, elimintaing the need for an else there, and many of the null checks would also become uneeded.",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAByX///+Y\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/util/SubmoduleSectionParser.java",
        "patchSetId": 14
      },
      "lineNbr": 127,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-12-23T11:22:36Z",
      "side": 1,
      "message": "Yes, I agree it would be simpler. Just to confirm if I followed you: do you mean to have more returns (return null whenever it finds incorrect data)?",
      "parentUuid": "AAABwn///6E\u003d",
      "revId": "3aec6c75fd39e9db47ad2bae79eea3c7973c7312",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}