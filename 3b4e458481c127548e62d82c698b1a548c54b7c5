{
  "comments": [
    {
      "key": {
        "uuid": "862c96a9_6eb8956c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-03-12T07:03:08Z",
      "side": 1,
      "message": "Normally the result of a submit rule should depend on the change state. If the change state is changed, and hence the submit rule delivers a new result, the change is reindexed, and hence the submit requirement in the change index is up-to-date.\n\nIn my opinion, writing a submit rule for which the result depends on non-change factors is a bad practise.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 38
      },
      "revId": "3b4e458481c127548e62d82c698b1a548c54b7c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aac9e615_2da45f4a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2020-03-12T07:21:35Z",
      "side": 1,
      "message": "How about different review model? e.g.:\nimagine that change requires 2 +2 from someone different than author now and change state is the same but rule changed hence it shouldn\u0027t be mergeable anymore...\nbuilt in label functions offer a lot of great functionality but in the case when consistent messaging (when rule is not satisfied) is needed and more sophisticated model is introduced one ends up in writing dedicated SubmitRule that gets evaluated dynamically",
      "parentUuid": "862c96a9_6eb8956c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 38
      },
      "revId": "3b4e458481c127548e62d82c698b1a548c54b7c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df3e11e2_26355ad4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2020-03-12T07:26:09Z",
      "side": 1,
      "message": "What led to this is that we have a plugin that implements SubmitRule for project/organization based rules, and those rules can be changed. For example it\u0027s possible to add a rule that a certain label is required.\n\nWe have a test that does something like:\n\n- create changes\n- assert that the changes are submittable (and there are no \u0027requirements\u0027)\n- update the rules to require a certain label\n- assert that the changes are not submittable (and the \u0027requirements\u0027 are included)\n\nWe found that the second assertion fails when using the change query to get the changes, but not when getting each change directly.",
      "parentUuid": "862c96a9_6eb8956c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 38
      },
      "revId": "3b4e458481c127548e62d82c698b1a548c54b7c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac57d0e6_1d2d4bd3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-03-12T07:27:49Z",
      "side": 1,
      "message": "OK, in your example the submit rule does depend on the change state (the +2 reviews), but the issue is that the submit requirements in the index are not updated when the rule is enabled/disabled. That\u0027s indeed an issue, but I have no solution for it, other than reindexing the changes.",
      "parentUuid": "aac9e615_2da45f4a",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 38
      },
      "revId": "3b4e458481c127548e62d82c698b1a548c54b7c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f806a0db_4b810b1c",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/ChangeSubmitRequirementIT.java",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2020-03-12T07:21:35Z",
      "side": 1,
      "message": "I guess it should be called: is NOT propagated unless one calls re-index? Maybe add re-index call there and show that it works in such condition?",
      "range": {
        "startLine": 80,
        "startChar": 14,
        "endLine": 80,
        "endChar": 50
      },
      "revId": "3b4e458481c127548e62d82c698b1a548c54b7c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}