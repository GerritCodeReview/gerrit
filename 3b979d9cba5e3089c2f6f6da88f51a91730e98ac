{
  "pushCert": "certificate version 0.1\npusher Dave Borowitz \u003cdborowitz@google.com\u003e 1505139312 -0400\nnonce AJMiPPcvRvjPxv1zp4kGD5jZF6VTtncgL+1HehhhyyPSz/TihpmzLTROWJIrmIVxSx+MFOFyz1vI\n\n0000000000000000000000000000000000000000 3b979d9cba5e3089c2f6f6da88f51a91730e98ac refs/for/master%r\u003daliceks\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJZtppwAAoJEF/XxZqaEoiMmjAQAJ1kn5XGXCBPywPWZvRMQQes\ne66FFmBaV33ygLL67mNU+MzGW1iyyzbgIIjbdKmwnqm85dDO/soc+uTXmmuKZQ5p\nalKnHxWW2o1asTNGzDJ/bLUoqXIxwtuAZnjnObpy0ebYKeWcjct3FY0VKxQeTgBv\ndgT5s8ZCJNj0P4DYEiAFcLCyEVgN+B6/e6opiZwCzv3/bp6QJlAcIQxMpWRNYstf\nHZjE3NtkEAzUIeHTreS9q3ZWethoA0fQQohXE+DJUaRDDXcnpx8xsgP7Gtkp8KzB\nCL8DeotnMfkQdDRDyv+vRV5GF+rsXXKDEX+SIEjiouBtsrk/v+VFR3ZwhrE9sOmx\nalfxax3JV+yOsDuEP8VPyWbpGFPJwVY8Req+p60Dr4UjDpHXUDjgvcKsh4+7AUP2\nVkd9g9f+cHpSHYyADOazPqfNm8HCHPVmHwokX9X0BEiwXBrJ7EQ4pTexw73G61Fc\nrq86qGbF4aVxV6M0wjEdnFjC7czvuUhN8nlW9Uq6GRri25iO6ijm3RaAdHysWhtw\nY9MucyRWmn9X0BCHI78n9YtnngEO6CKVdA63smeM+WJy6985rh1QDy5nV1Bft/5E\nKsj7NI6hyR8djYz8B2Yi3DTIQCIJtG5/LhHLQ1/FC1TyqTudQHszlRqx4zIlQP/I\nyUuXFyskV5Klw+6uLQlU\n\u003dC12p\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "75764088_ac2aa334",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/api/changes/ChangeApi.java",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-09-11T15:56:14Z",
      "side": 1,
      "message": "Would it be possible to implement this method and convert get(EnumSet) to a default method which uses this method? Thus, we could avoid an unnecessary copy.",
      "range": {
        "startLine": 175,
        "startChar": 2,
        "endLine": 175,
        "endChar": 24
      },
      "revId": "3b979d9cba5e3089c2f6f6da88f51a91730e98ac",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53b7ef18_dfec6262",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/api/changes/ChangeApi.java",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-09-11T16:51:11Z",
      "side": 1,
      "message": "It\u0027s not obvious to me that that would reduce the number of copies in practice. This argument is ultimately passed to the ChangeJson constructor, where it calls Sets.immutableEnumSet(options). If the argument to immutableEnumSet is already an EnumSet, it gets cloned; otherwise it is populated element-by-element.",
      "parentUuid": "75764088_ac2aa334",
      "range": {
        "startLine": 175,
        "startChar": 2,
        "endLine": 175,
        "endChar": 24
      },
      "revId": "3b979d9cba5e3089c2f6f6da88f51a91730e98ac",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2de7da9_d4b093b5",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/api/changes/ChangeApi.java",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-09-12T09:52:59Z",
      "side": 1,
      "message": "I thought that we could avoid the creation of the intermediate (mutable) EnumSet. As ChangeJson.Factory#create allows to pass an Iterable which is directly converted to an ImmutableEnumSet, we could simply pass on the Iterable. Consider that someone passes an ImmutableEnumSet to get(). We would copy all elements to an EnumSet (as an ImmutableEnumSet isn\u0027t an EnumSet) which is cloned again before it is wrapped in an ImmutableEnumSet in ChangeJson. If we passed on the Iterable, we wouldn\u0027t copy the original ImmutableEnumSet at all.\n\nArguably, that optimization isn\u0027t important. I was just thinking of your efforts in I2953a47d43639f727b72375100ef54c67e0274e8 to limit copying of ListChangesOptions and hence thought I should mention it.",
      "parentUuid": "53b7ef18_dfec6262",
      "range": {
        "startLine": 175,
        "startChar": 2,
        "endLine": 175,
        "endChar": 24
      },
      "revId": "3b979d9cba5e3089c2f6f6da88f51a91730e98ac",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}