{
  "comments": [
    {
      "key": {
        "uuid": "196ae691_62b45a4c",
        "filename": "java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 617,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-06-11T13:06:17Z",
      "side": 1,
      "message": "In Gerrit\u0027s world, this would rather be a BAD_REQUEST.\n\n403 indicates a permission issue (from Wikipedia): \"HTTP 403 is returned when the client is not permitted access to the resource despite providing authentication such as insufficient permissions of the authenticated account.\"\n\nHowever, this isn\u0027t a permission issue or an issue that can be fixed with more powerful permissions. We just don\u0027t want to have these comments published. Hence the request asking for that as invalid.\n\nAside from that, can we do this conversion in PostReview instead? RestApiServlet tries to be generic and it looks like this case can only ever happen in code paths originating from PostReview.\n\nThis has the benefit that you can test it using only the Java API and don\u0027t have to do write and REST tests.",
      "range": {
        "startLine": 617,
        "startChar": 44,
        "endLine": 617,
        "endChar": 56
      },
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa93bc25_03e52cd8",
        "filename": "java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 617,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-06-11T14:59:24Z",
      "side": 1,
      "message": "I agree that 403 is not a good match. But BAD_REQUEST is a syntactically invalid request; do you think that\u0027s OK to use?\n\nUnfortunately the exception is only thrown in BatchUpdate.executeChangeOps(), so I\u0027m not sure how to avoid having this code outside of PostReview.",
      "parentUuid": "196ae691_62b45a4c",
      "range": {
        "startLine": 617,
        "startChar": 44,
        "endLine": 617,
        "endChar": 56
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c52f3c6_19c470a5",
        "filename": "java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 617,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-06-12T08:18:00Z",
      "side": 1,
      "message": "I think you are right, BAD_REQUEST is the closest we can get, even though it\u0027s not ideal.\n\n403 also has implications on monitoring, while BAD_REQUEST doesn\u0027t (it is always safe to assume the client did something wrong)\n\nSo I would go with BAD_REQUEST.\n\n\u003e Unfortunately the exception is only thrown in BatchUpdate.executeChangeOps(), so I\u0027m not sure how to avoid having this code outside of PostReview.\nThe only place where we publish comments is PostReview, so I think we can catch that exception exclusively there and be good. We also only ever throw it there. Happy to chat offline about this.",
      "parentUuid": "aa93bc25_03e52cd8",
      "range": {
        "startLine": 617,
        "startChar": 44,
        "endLine": 617,
        "endChar": 56
      },
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c6c08d0_31e6e361",
        "filename": "java/com/google/gerrit/server/PublishCommentUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 93,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-06-11T13:06:17Z",
      "side": 1,
      "message": "nit: response could be immutable",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25bcb716_42d5df68",
        "filename": "java/com/google/gerrit/server/PublishCommentUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 93,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-06-11T14:59:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c6c08d0_31e6e361",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5e408eb_11a97b25",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 972,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-06-11T13:06:17Z",
      "side": 1,
      "message": "nit: all callers are converting to a stream before calling validateComments. Should we accept a Collection\u003cComment\u003e instead?",
      "range": {
        "startLine": 972,
        "startChar": 32,
        "endLine": 972,
        "endChar": 41
      },
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12fc6537_6b07e061",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 972,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-06-11T14:59:24Z",
      "side": 1,
      "message": "Now I remembered that I used Stream-s to minimize the number of calls in the event someone eventually does do an RPC. So changed the calls instead :-)",
      "parentUuid": "d5e408eb_11a97b25",
      "range": {
        "startLine": 972,
        "startChar": 32,
        "endLine": 972,
        "endChar": 41
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10b1379a_b86d880f",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 986,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-06-11T13:06:17Z",
      "side": 1,
      "message": "Can we add isInlineComment or isFileComment or getType() to Comment instead of checking this manually here?",
      "range": {
        "startLine": 986,
        "startChar": 26,
        "endLine": 986,
        "endChar": 45
      },
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cda3535_3cd68cfd",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 986,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-06-11T14:59:24Z",
      "side": 1,
      "message": "This is a wider refactoring that I agree would be beneficial. How about doing it in another change?",
      "parentUuid": "10b1379a_b86d880f",
      "range": {
        "startLine": 986,
        "startChar": 26,
        "endLine": 986,
        "endChar": 45
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f6ec21c_2029aeb7",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 986,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-06-12T08:18:00Z",
      "side": 1,
      "message": "Sounds good to me!",
      "parentUuid": "0cda3535_3cd68cfd",
      "range": {
        "startLine": 986,
        "startChar": 26,
        "endLine": 986,
        "endChar": 45
      },
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5088c6ef_dbb8a090",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 990,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-06-11T13:06:17Z",
      "side": 1,
      "message": "nit: import this statically",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "868d7d31_72564a60",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 990,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-06-11T14:59:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5088c6ef_dbb8a090",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97ed71c7_7760cd8c",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 1381,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-06-11T13:06:17Z",
      "side": 1,
      "message": "This calls the validators a second time, this time just with the change message. I think this is fine because the interface doesn\u0027t make any guarantees about being called just once. Just something that stood out.",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec89776d_8eee2f7a",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 1381,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-06-11T14:59:24Z",
      "side": 1,
      "message": "I considered mentioning in the interface documentation that we will call this at most twice (once for comments and once for the message), but that would require to explain why we group the calls in the first place. My rationale is that if ever someone does do an RPC for validation (which I think is likely) then this reduces latency. But then again a) we don\u0027t want to endorse/support this use case (right?), and b) we\u0027d really have to only ever do one call in that case. So apart from combining the two calls above (Streams.concat()) I think we should leave things as they are. WDYT?",
      "parentUuid": "97ed71c7_7760cd8c",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec7a8462_8c30808a",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 1381,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-06-12T08:18:00Z",
      "side": 1,
      "message": "s/RPC/HTTP call/ :-)\n\nI think this is fine, just wanted to be on the same page.",
      "parentUuid": "ec89776d_8eee2f7a",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2be4081_59c1ca04",
        "filename": "java/com/google/gerrit/testing/TestCommentUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-06-11T13:06:17Z",
      "side": 1,
      "message": "I think it would be easier to make this class all-static and pass in a gApi only in the two methods where you need it.\n\nNon-static helpers have the tendency to accumulate state that can easily turn them into tech debt in the future",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff87a83d_e98a4efe",
        "filename": "java/com/google/gerrit/testing/TestCommentUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-06-11T14:59:24Z",
      "side": 1,
      "message": "I agree about production code, but for a test helper I think this is less of a problem. Can you explain what scenario you are concerned about?",
      "parentUuid": "e2be4081_59c1ca04",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cb34eb1_252d2314",
        "filename": "java/com/google/gerrit/testing/TestCommentUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-06-12T08:18:00Z",
      "side": 1,
      "message": "I mostly care about naming. When I read \u0027XyzUtil\u0027, I expect a stateless helper.\n\nUnfortunately, this isn\u0027t true throughout the Gerrit code base. For example, there is a CommentsUtil which has state and and injected constructor.\n\nThat said, I have a slight preference towards all Utils being stateless and all other classes having a better, more descriptive name. But feel free to keep this as-is if you think it\u0027s fine.",
      "parentUuid": "ff87a83d_e98a4efe",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f22f621_c47ff68a",
        "filename": "javatests/com/google/gerrit/server/BUILD",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-06-11T13:06:17Z",
      "side": 1,
      "message": "PostReviewIT is in the wrong package (hence this dep was required).\n\nCan you just move it to: com.google.gerrit.acceptance.api.change",
      "range": {
        "startLine": 37,
        "startChar": 7,
        "endLine": 37,
        "endChar": 60
      },
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "074dbdc1_8c664fb6",
        "filename": "javatests/com/google/gerrit/server/BUILD",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-06-11T14:59:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f22f621_c47ff68a",
      "range": {
        "startLine": 37,
        "startChar": 7,
        "endLine": 37,
        "endChar": 60
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce558b47_fbbbfe18",
        "filename": "javatests/com/google/gerrit/server/restapi/change/PostReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-06-11T13:06:17Z",
      "side": 1,
      "message": "nit: we usually use ImmutableList.of() or ImmutableList.copyOf()",
      "range": {
        "startLine": 99,
        "startChar": 51,
        "endLine": 99,
        "endChar": 70
      },
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7509fd7_22181fad",
        "filename": "javatests/com/google/gerrit/server/restapi/change/PostReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-06-11T14:59:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce558b47_fbbbfe18",
      "range": {
        "startLine": 99,
        "startChar": 51,
        "endLine": 99,
        "endChar": 70
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "3c954d0f8f17aff0581c975c29996927fb38d613",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}