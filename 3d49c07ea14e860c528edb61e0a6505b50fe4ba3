{
  "comments": [
    {
      "key": {
        "uuid": "9e2631f7_8a146bcc",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/api/changes/ChangeApi.java",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-11-09T22:04:35Z",
      "side": 1,
      "message": "I see what you mean to return ChangeApi here, to make the API resource aware. Wouldn\u0027t we need to solve something like ChangeInfoOutput, RevisionInfoOutput anyway? For example to \"see\" more attributes then only id after revert the client would need to hit the database himself.",
      "revId": "3d49c07ea14e860c528edb61e0a6505b50fe4ba3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e2b3dc3_a974dd60",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/api/changes/ChangeApi.java",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-11-09T22:25:09Z",
      "side": 1,
      "message": "Yes we probably need something like a:\n\n  ChangeInfo detail() throws RestApiException;\n\nto mirror the /changes/{id}/detail URL we already have. And maybe also overload with:\n\n  ChangeInfo detail(EnumSet\u003cOption\u003e options) throws RestApiException;\n\nso the client can request more fields to be returned.\n\nIf you look at a slightly older revision you will see I defined this to return ChangeInfo instead of ChangeApi. I went back and modified to ChangeApi as I wondered if one common calling convention for revert() was something like:\n\n  RevisionApi r \u003d thing.revert().current();\n  r.review(approve());\n  r.submit();\n\nAlso the web UI when calling /revert really only needs the id so it can load the new ChangeScreen2 UI for that change. The rest of the ChangeInfo isn\u0027t used. So defining the API as giving you only the id to start out with probably mirrors real uses.",
      "parentUuid": "9e2631f7_8a146bcc",
      "revId": "3d49c07ea14e860c528edb61e0a6505b50fe4ba3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9efd5175_12b42cba",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 10
      },
      "lineNbr": 609,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-11-10T00:39:50Z",
      "side": 1,
      "message": "Unnecessary cast.",
      "revId": "3d49c07ea14e860c528edb61e0a6505b50fe4ba3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e2b3dc3_2968ed7d",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 10
      },
      "lineNbr": 614,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-11-10T00:39:50Z",
      "side": 1,
      "message": "Unnecessary cast.",
      "revId": "3d49c07ea14e860c528edb61e0a6505b50fe4ba3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}