{
  "comments": [
    {
      "key": {
        "uuid": "32a1f5ba_60187235",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 16
      },
      "lineNbr": 439,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-03T11:29:04Z",
      "side": 1,
      "message": "Should this be \u0027myproject\u0027 to match the request?\n\nDone with the new patch set.\n\nWhy do we actually need this field if the caller already needs to know the project name in order to send the request?",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_c0d17e16",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 16
      },
      "lineNbr": 439,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-09-03T13:01:00Z",
      "side": 1,
      "message": "That\u0027s is a  good question, and i was waiting all the time and wondering, why you don\u0027t actually ask that question ;-)\n\nAnd the answer is, that\u0027s how the JavaScript API works: it needs to send REST API request from JSNI and therefore it needs the access to the endpoint, i. e. it has to know the resource: \"/projects/foo\" for project with name \"foo\". Check the code in ProjectGlue.java in this change, that\u0027s where it is used:\n\n RestApi api \u003d ProjectApi.project(project.name()).view(action.id());",
      "parentUuid": "32a1f5ba_60187235",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_80dc962a",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 16
      },
      "lineNbr": 439,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-03T13:55:17Z",
      "side": 1,
      "message": "Ok, but wouldn\u0027t it be possible to add the project name as parameter to the onAction(...) method in ProjectGlue?\n\n  public static void onAction(Project.nameKey project, ConfigInfo config, ActionInfo action, ActionButton button) {\n\nThe contructor in ActionButton could just expect the project name to be provided to the constructor:\n\n  public ActionButton(Project.nameKey project, ConfigInfo config, ActionInfo action) {\n\nand at the only place where this constructor is used (in ProjectInfoScreen.initProjectActions(...)) we have the project name available:\n\n  actionsPanel.add(new ActionButton(getProjectKey(), info, actions.get(id)));",
      "parentUuid": "32a1f5ba_c0d17e16",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "529ca983_e1592606",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 16
      },
      "lineNbr": 439,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-09-03T13:58:56Z",
      "side": 1,
      "message": "Good point! Will try to eliminate it then here.",
      "parentUuid": "32a1f5ba_80dc962a",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_801b7632",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 16
      },
      "lineNbr": 474,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-03T11:29:04Z",
      "side": 1,
      "message": "s/true}/true\n\notherwise there is one \u0027}\u0027 too much.\n\nDone with the new patch set.",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "529ca983_01d2ca4b",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 16
      },
      "lineNbr": 1202,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-03T07:50:28Z",
      "side": 1,
      "message": "1. ActionInfo should be also documented in an own section and we should link here this documentation.\n\n2. s/wich/which",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_c035febd",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 16
      },
      "lineNbr": 1202,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-09-03T08:15:23Z",
      "side": 1,
      "message": "Yes, agreed. Can you please help with this and upload a new ps? Thanks!",
      "parentUuid": "529ca983_01d2ca4b",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_20470a28",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 16
      },
      "lineNbr": 1202,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-03T08:35:55Z",
      "side": 1,
      "message": "Hmm, I\u0027m not much familiar with the details yet, so I\u0027m not sure if I could describe it well. E.g. I have no idea what for we have the \u0027method\u0027 field and which values in can contain.",
      "parentUuid": "32a1f5ba_c035febd",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_e00242d4",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 16
      },
      "lineNbr": 1202,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-09-03T09:55:46Z",
      "side": 1,
      "message": "Another question is where to place ActionInfo description? In rest-api-commons-entities.txt? At least not in this file, here in rest-api-projects.txt it would be wrong, because many screens can potentially add support fo UiActions. Currently already two REST endpoints retrieve ActionInfo and should link to this entity: project-config and change-details.\n\nConcerning the ActionInfo fields, you can find the description in js-api documentation:\n\n* id: id of UiAction, like it was bound in REST API module, prefixed with plugin name, i. e. \"cookbook-plugin~say-hello\"\n*  method: REST method: post, delete, put, get, like it was bound in REST API module, i. e.:\n\nIn this example, the first UiAction would have method\u003d\"delete\", while the second would have method\u003d\"post\"\n\n delete(PROJECT_KIND)\n            .to(DeleteProject.class);\n post(PROJECT_KIND, \"delete\")\n            .to(DeleteProject.class);\n\n* label: button\u0027s name, like it appears on the UI\n* title: buttton\u0027s tooltip, like it appears on the UI if you use mouseover\n* enabled: should the button be rendered as enabled or disabled.\n\nNote: visible: UiAction.Description has another attribute:\n\n* boolean visible\n\nIt is only used to figure out of for this resource and user if the UiAction should be rendered at all or not. So, for example, if user doesn\u0027t have the required capability, then the UiAction is not rendered at all. In this case ActionIfno list in REST response would not include this UiAction. That why client side ActionInfo doesn\u0027t need that attribute.",
      "parentUuid": "32a1f5ba_20470a28",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_00276682",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 16
      },
      "lineNbr": 1202,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-03T11:06:16Z",
      "side": 1,
      "message": "Ah, but then it\u0027s easy :-) Since change-details is also using ActionInfo we of course already have a description of ActionInfo in rest-api-changes.txt. In this case I would simply link to this description from here:\n\n  Map of action names to link:rest-api-changes.html3action-info[ActionInfo] entity, which contains\n\nIf an entity is used for views under different root collections, I would say to just define the entity in one of the rest-api-*.txt file and then just link to this description from the other rest-api-*.txt files. Having it in rest-api-commons-entities.txt would maybe be more proper but at the moment I would see this as too much oberhead. We can reconsider this if we start to have more shared entities.",
      "parentUuid": "32a1f5ba_e00242d4",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_e02b624a",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 16
      },
      "lineNbr": 1202,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-03T11:08:14Z",
      "side": 1,
      "message": "And \u0027which contains method, label, title and enabled fields.\u0027 can then just be dropped from this sentence here.",
      "parentUuid": "32a1f5ba_00276682",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_a0255a77",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 16
      },
      "lineNbr": 1202,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-09-03T11:16:09Z",
      "side": 1,
      "message": "Cool, can you please upload a new ps? ;-)\nThanks!",
      "parentUuid": "32a1f5ba_e02b624a",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_40156efb",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 16
      },
      "lineNbr": 1202,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-03T11:29:04Z",
      "side": 1,
      "message": "To describe the \u0027actions\u0027 field I\u0027ve now just a sentence that is similar to the one describing the \u0027actions\u0027 field for change-details.\n\nDone",
      "parentUuid": "32a1f5ba_a0255a77",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "529ca983_a1e0be16",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/admin/ProjectInfoScreen.java",
        "patchSetId": 16
      },
      "lineNbr": 331,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-03T08:21:02Z",
      "side": 1,
      "message": "Currently the order of sections on the ProjectInfoScreen is like this:\n\n  1. Project Options\n  2. Contributor Agreements\n  3. Project Commands\n  4. \u0027Save Changes\u0027 Button\n\nThe \u0027Save Changes\u0027 button only applies to 1. and 2., so I\u0027m wondering if the order should actually be:\n\n  1. Project Options\n  2. Contributor Agreements\n  3. \u0027Save Changes\u0027 Button\n  4. Project Commands",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "529ca983_01bbea0b",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/admin/ProjectInfoScreen.java",
        "patchSetId": 16
      },
      "lineNbr": 331,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-09-03T09:55:46Z",
      "side": 1,
      "message": "Interesting thought. I will try to change the order.",
      "parentUuid": "529ca983_a1e0be16",
      "revId": "3e4e57509b9a5ac532c7b0fb7197a4761c1b9acd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}