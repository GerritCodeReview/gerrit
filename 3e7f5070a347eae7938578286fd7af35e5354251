{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7bac059a_4e0bb5ed",
        "filename": "polygerrit-ui/app/services/dependency.ts",
        "patchSetId": 12
      },
      "lineNbr": 47,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2021-12-07T12:39:52Z",
      "side": 1,
      "message": "test",
      "range": {
        "startLine": 47,
        "startChar": 32,
        "endLine": 47,
        "endChar": 46
      },
      "revId": "3e7f5070a347eae7938578286fd7af35e5354251",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0be0afce_953f9b29",
        "filename": "polygerrit-ui/app/services/dependency.ts",
        "patchSetId": 12
      },
      "lineNbr": 47,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2021-12-07T12:45:44Z",
      "side": 1,
      "message": "saw the test",
      "parentUuid": "7bac059a_4e0bb5ed",
      "range": {
        "startLine": 47,
        "startChar": 32,
        "endLine": 47,
        "endChar": 46
      },
      "revId": "3e7f5070a347eae7938578286fd7af35e5354251",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec212204_3b22d505",
        "filename": "polygerrit-ui/app/services/dependency.ts",
        "patchSetId": 12
      },
      "lineNbr": 49,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2021-12-07T12:39:52Z",
      "side": 1,
      "message": "any thoughts about how component tests can ensure this? Or generally, how component tests can easily provide dependencies? Without any helper/util/infra we will need to write a whole parent component in every test file.",
      "range": {
        "startLine": 48,
        "startChar": 54,
        "endLine": 49,
        "endChar": 41
      },
      "revId": "3e7f5070a347eae7938578286fd7af35e5354251",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7e14835_d2b60be3",
        "filename": "polygerrit-ui/app/services/dependency.ts",
        "patchSetId": 12
      },
      "lineNbr": 78,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2021-12-07T13:31:53Z",
      "side": 1,
      "message": "why would the provider provide null?",
      "range": {
        "startLine": 78,
        "startChar": 3,
        "endLine": 78,
        "endChar": 29
      },
      "revId": "3e7f5070a347eae7938578286fd7af35e5354251",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ade01cf_8bd30f5b",
        "filename": "polygerrit-ui/app/services/dependency.ts",
        "patchSetId": 12
      },
      "lineNbr": 84,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2021-12-07T12:44:14Z",
      "side": 1,
      "message": "any best practices that would help us follow these guarantees? such as require\n.get() for every usage or only save the dep in a local variable in a function and never in any larger scope?",
      "revId": "3e7f5070a347eae7938578286fd7af35e5354251",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9efc3976_6dfece31",
        "filename": "polygerrit-ui/app/services/dependency.ts",
        "patchSetId": 12
      },
      "lineNbr": 90,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2021-12-07T13:31:53Z",
      "side": 1,
      "message": "nit: whose lifetime mirrors",
      "range": {
        "startLine": 89,
        "startChar": 58,
        "endLine": 90,
        "endChar": 22
      },
      "revId": "3e7f5070a347eae7938578286fd7af35e5354251",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "240c1dd3_06212d2c",
        "filename": "polygerrit-ui/app/services/dependency.ts",
        "patchSetId": 12
      },
      "lineNbr": 116,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2021-12-07T12:39:52Z",
      "side": 1,
      "message": "Line 253 has the mechanism for filling in the right value:\n```\nif (ev.dependency !\u003d\u003d this.dependency) return;\n```\nWouldn\u0027t non-uniqueness mess this up?",
      "range": {
        "startLine": 116,
        "startChar": 31,
        "endLine": 116,
        "endChar": 57
      },
      "revId": "3e7f5070a347eae7938578286fd7af35e5354251",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90a37dad_ee0be29c",
        "filename": "polygerrit-ui/app/services/dependency.ts",
        "patchSetId": 12
      },
      "lineNbr": 170,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2021-12-07T13:31:53Z",
      "side": 1,
      "message": "connected",
      "range": {
        "startLine": 170,
        "startChar": 45,
        "endLine": 170,
        "endChar": 53
      },
      "revId": "3e7f5070a347eae7938578286fd7af35e5354251",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "caadcd0c_acc2a670",
        "filename": "polygerrit-ui/app/services/dependency.ts",
        "patchSetId": 12
      },
      "lineNbr": 280,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2021-12-07T13:31:53Z",
      "side": 1,
      "message": "any reason for three \"_\"?",
      "range": {
        "startLine": 280,
        "startChar": 19,
        "endLine": 280,
        "endChar": 33
      },
      "revId": "3e7f5070a347eae7938578286fd7af35e5354251",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e9f2f75_4a576b53",
        "filename": "polygerrit-ui/app/services/dependency.ts",
        "patchSetId": 12
      },
      "lineNbr": 303,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2021-12-07T12:44:14Z",
      "side": 1,
      "message": "test disconnect/reconnect flow for lit and for polymer",
      "range": {
        "startLine": 296,
        "startChar": 0,
        "endLine": 303,
        "endChar": 0
      },
      "revId": "3e7f5070a347eae7938578286fd7af35e5354251",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb636255_b46977b9",
        "filename": "polygerrit-ui/app/services/dependency.ts",
        "patchSetId": 12
      },
      "lineNbr": 306,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2021-12-07T13:31:53Z",
      "side": 1,
      "message": "I dislike using bitwise magic where it\u0027s unnecessary.\nI would prefer to use more readable/explicit code.",
      "range": {
        "startLine": 306,
        "startChar": 26,
        "endLine": 306,
        "endChar": 51
      },
      "revId": "3e7f5070a347eae7938578286fd7af35e5354251",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae352d81_21eb2b72",
        "filename": "polygerrit-ui/app/services/dependency_test.ts",
        "patchSetId": 12
      },
      "lineNbr": 47,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2021-12-07T12:39:52Z",
      "side": 1,
      "message": "consider descriptive names for all elements. FooProviderElement, etc?",
      "range": {
        "startLine": 47,
        "startChar": 13,
        "endLine": 47,
        "endChar": 25
      },
      "revId": "3e7f5070a347eae7938578286fd7af35e5354251",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aeeb19b1_196e7d2d",
        "filename": "polygerrit-ui/app/services/dependency_test.ts",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2021-12-07T13:05:46Z",
      "side": 1,
      "message": "you\u0027re not checking for an error that Foo is not provided like the test says",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 26
      },
      "revId": "3e7f5070a347eae7938578286fd7af35e5354251",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}