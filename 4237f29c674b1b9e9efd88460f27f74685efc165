{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a3aa6eab_33ecf92e",
        "filename": "polygerrit-ui/app/elements/core/gr-router/gr-page.ts",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2023-02-13T09:38:33Z",
      "side": 1,
      "message": "internal should be private and tests should use existing createRoute",
      "range": {
        "startLine": 354,
        "startChar": 2,
        "endLine": 354,
        "endChar": 7
      },
      "revId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54e0e771_3af4ca2c",
        "filename": "polygerrit-ui/app/elements/core/gr-router/gr-page.ts",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2023-02-13T10:46:13Z",
      "side": 1,
      "message": "I disagree that this is something private from the point of view of a `Route` such as `PROJECT_DASHBOARD_ROUTE`. A `Route` is concerned about matching a URL and creating state from it. This `match()` method here is rather a utility.\n\nThe entire design could benefit from further refactorings such as (1) splitting this method up into its first 2.5 lines and the rest, or (2) let the method return the matches instead of stuffing it into context as params.\n\nSo what I am doing here is just a tiny step in the right direction. `createRoute()` was using too much `ctx.something`. It was obvious that the code rather belongs to `PageContext`.\n\nFor moving routes into view models it is vital that we can test just with a path, a regular expressions and a state object. We don\u0027t really want to depend on something like `createRoute()` and the concept of calling `next()`.",
      "parentUuid": "a3aa6eab_33ecf92e",
      "range": {
        "startLine": 354,
        "startChar": 2,
        "endLine": 354,
        "endChar": 7
      },
      "revId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15447d16_5546c3c5",
        "filename": "polygerrit-ui/app/elements/core/gr-router/gr-page.ts",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2023-02-13T10:51:05Z",
      "side": 1,
      "message": "Marking unresolved. Would like to hear from Frank whether this is ok to submit.",
      "parentUuid": "54e0e771_3af4ca2c",
      "range": {
        "startLine": 354,
        "startChar": 2,
        "endLine": 354,
        "endChar": 7
      },
      "revId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e5fc83a_4694eb77",
        "filename": "polygerrit-ui/app/elements/core/gr-router/gr-page.ts",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2023-02-13T10:54:43Z",
      "side": 1,
      "message": "Yeah it\u0027s ok, I tried to reply to revote +2 but I couldn\u0027t since it was already there",
      "parentUuid": "15447d16_5546c3c5",
      "range": {
        "startLine": 354,
        "startChar": 2,
        "endLine": 354,
        "endChar": 7
      },
      "revId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d91a077_aa756727",
        "filename": "polygerrit-ui/app/elements/core/gr-router/gr-page.ts",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2023-02-13T10:58:56Z",
      "side": 1,
      "message": "Thank you!",
      "parentUuid": "4e5fc83a_4694eb77",
      "range": {
        "startLine": 354,
        "startChar": 2,
        "endLine": 354,
        "endChar": 7
      },
      "revId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e0148fb_52439317",
        "filename": "polygerrit-ui/app/elements/core/gr-router/gr-router.ts",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-02-13T09:19:48Z",
      "side": 1,
      "message": "Can this TODO be addressed?",
      "revId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29b62e35_e97916d0",
        "filename": "polygerrit-ui/app/elements/core/gr-router/gr-router.ts",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2023-02-13T10:46:13Z",
      "side": 1,
      "message": "https://gerrit-review.googlesource.com/c/gerrit/+/358181",
      "parentUuid": "5e0148fb_52439317",
      "revId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Change-Is-Forward-Compatible",
        "description": {
          "value": "Changes to NoteDb or entities packages require careful consideration. Make sure your change is forward compatible and add the footer \u0027Forward-Compatible: checked\u0027 to your commit message"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\" OR file:\"^java/com/google/gerrit/entities/.*\\\\.java$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Forward-Compatible\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\" OR file:\"^java/com/google/gerrit/entities/.*\\\\.java$\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\"","file:\"^java/com/google/gerrit/entities/.*\\\\.java$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Forward-Compatible\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Style",
        "description": {
          "value": "Code has correct style and format"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Style\u003dMAX AND -label:Code-Style\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Style=MAX AND -label:Code-Style=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Style=MAX"],"failingAtoms":["label:Code-Style=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Library-Compliance",
        "description": {
          "value": "Changes to specific library/metadata files require additional approval"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Library-Compliance\u003dMAX AND -label:Library-Compliance\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^lib/.*\"","file:\"^WORKSPACE$\"","file:\"^.gitmodule$\"","file:\"^tools/deps.bzl$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Library-Compliance=MAX AND -label:Library-Compliance=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Release-Notes",
        "description": {
          "value": "Changes must include a \u0027Release-Notes\u0027 footer with a single sentence to mention in the release notes. Changes not worth mentioning in the release notes should put \u0027Release-Notes: skip\u0027"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND -hasfooter:\"Release-Notes\" AND -is:pure-revert"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Release-Notes\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND -hasfooter:\"Release-Notes\" AND -is:pure-revert"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["hasfooter:\"Release-Notes\""],"failingAtoms":["branch:refs/meta/config","is:pure-revert"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Release-Notes\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4237f29c674b1b9e9efd88460f27f74685efc165",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}