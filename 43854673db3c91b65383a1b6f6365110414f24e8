{
  "comments": [
    {
      "key": {
        "uuid": "506bee69_cadf2356",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-04-29T06:11:39Z",
      "side": 1,
      "message": "Mention that this bug only affected reviewdb codepath and not notedb?",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 15,
        "endChar": 20
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f067829d_c7b87e0d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-04-29T12:03:40Z",
      "side": 1,
      "message": "Does this bug have impact outside the scope of this change?  If so can it be split off into a separate change and submitted to one of the stable branches?",
      "parentUuid": "506bee69_cadf2356",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 15,
        "endChar": 20
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f067829d_67caf29e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-04-29T13:49:15Z",
      "side": 1,
      "message": "Good plan. I didn\u0027t think this was called but it actually is.",
      "parentUuid": "f067829d_c7b87e0d",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 15,
        "endChar": 20
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "707ab234_2beb59f4",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 1150,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-04-29T06:35:27Z",
      "side": 1,
      "message": "1. Capitalize to be consistent with other section titles.\n\n2. Should this be \"List Change Drafts\"? Otherwise we have 2 \"List Drafts\" sections.",
      "range": {
        "startLine": 1150,
        "startChar": 9,
        "endLine": 1150,
        "endChar": 10
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "506bee69_aa198fb1",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 1161,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-04-29T06:35:27Z",
      "side": 1,
      "message": "Have you considered grouping the comments by patch set, instead of having the optional patch_set field in CommentInfo?",
      "range": {
        "startLine": 1158,
        "startChar": 0,
        "endLine": 1161,
        "endChar": 26
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "707ab234_eb36b114",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 1161,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-04-29T09:36:00Z",
      "side": 1,
      "message": "+1\n\nThe most (all?) clients (Change Screen, Reply panel) would always want to list the drafts grouped by patch set anyway. I guess that organizing the output this way would simplify the life on the client side.",
      "parentUuid": "506bee69_aa198fb1",
      "range": {
        "startLine": 1158,
        "startChar": 0,
        "endLine": 1161,
        "endChar": 26
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0751e3f_aede7756",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 1161,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-04-29T13:49:15Z",
      "side": 1,
      "message": "I did consider it but I actually figured int he reply box we would want to list drafts by name rather than patch set.\n\nThe other reason to have a grouping by path is that\u0027s what the existing revision draft endpoint does, which is more consistent and allows us to reuse more code. We could use a nested map but that\u0027s uglier JSON for a questionable benefit (but not ruling it out).\n\nBut without a UI example to look at, it\u0027s hard to say which I like better. Maybe we punt on this until I get the UI wired up?",
      "parentUuid": "707ab234_eb36b114",
      "range": {
        "startLine": 1158,
        "startChar": 0,
        "endLine": 1161,
        "endChar": 26
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "506bee69_8a8feb2e",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 1161,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-04-29T14:07:39Z",
      "side": 1,
      "message": "That\u0027s kind of unexpected to me. I would always go with grouping by patch set. That\u0027s how new (old) change screen is (was) organized.\n\nBut I agree, that the JSON structure should correlate with UI that consumes it. When you can convince the folks that listing of drafts across patch set boundaries in confirmation box, grouped by file name, is a good thing, go for it.",
      "parentUuid": "d0751e3f_aede7756",
      "range": {
        "startLine": 1158,
        "startChar": 0,
        "endLine": 1161,
        "endChar": 26
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "506bee69_4a8a531f",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 1161,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-04-29T14:19:48Z",
      "side": 1,
      "message": "\u003e But without a UI example to look at, it\u0027s hard to say \n \u003e which I like better. Maybe we punt on this until I get \n \u003e the UI wired up?\n\nYes, I think what\u0027s best here depends on the UI. My initial expectation was that comments would be grouped by patch set in the UI, but I\u0027m open to any other proposal. So let\u0027s come back to this when we are decided about the UI :-)",
      "parentUuid": "506bee69_8a8feb2e",
      "range": {
        "startLine": 1158,
        "startChar": 0,
        "endLine": 1161,
        "endChar": 26
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "907f2621_8c662725",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 1165,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-04-29T22:38:47Z",
      "side": 1,
      "message": "a / at the end?",
      "range": {
        "startLine": 1165,
        "startChar": 79,
        "endLine": 1165,
        "endChar": 82
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "707ab234_ebe47128",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/api/change/ChangeIT.java",
        "patchSetId": 2
      },
      "lineNbr": 391,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-04-29T06:11:39Z",
      "side": 1,
      "message": "content",
      "range": {
        "startLine": 391,
        "startChar": 67,
        "endLine": 391,
        "endChar": 73
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "707ab234_8bd92d73",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/api/change/ChangeIT.java",
        "patchSetId": 2
      },
      "lineNbr": 427,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-04-29T06:11:39Z",
      "side": 1,
      "message": "We had some issues in notedb codepath depending if line was 0 (file comment) or not. May be we should handle both cases here? For example pass this attribute as parameter to this function.",
      "range": {
        "startLine": 427,
        "startChar": 4,
        "endLine": 427,
        "endChar": 16
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0751e3f_eee47f28",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/api/change/ChangeIT.java",
        "patchSetId": 2
      },
      "lineNbr": 427,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-04-29T13:49:15Z",
      "side": 1,
      "message": "I think we should have more thorough acceptance tests for adding inline comments, but this test is just for the new functionality in this change. It\u0027s easy to extract an argument later.",
      "parentUuid": "707ab234_8bd92d73",
      "range": {
        "startLine": 427,
        "startChar": 4,
        "endLine": 427,
        "endChar": 16
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "506bee69_0aee9b03",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/api/changes/ChangeApi.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-04-29T06:11:39Z",
      "side": 1,
      "message": "Make this API extension in own change?",
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0751e3f_8ed93b73",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/api/changes/ChangeApi.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-04-29T13:49:15Z",
      "side": 1,
      "message": "I\u0027ve been working hard to convert acceptance tests to use the API wherever possible. This means if a new feature is added, my preferred way of testing it is through the API, which means if we want the test in the same change as the implementation, we need the API method too.",
      "parentUuid": "506bee69_0aee9b03",
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "506bee69_eae46728",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/api/changes/ChangeApi.java",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-04-29T06:11:39Z",
      "side": 1,
      "message": "Sure, you have introduced this field in this change. But the CommentInfo and Comment classes has dozen other fields. I don\u0027t think it worth mentioning all or some of them in this description.",
      "range": {
        "startLine": 114,
        "startChar": 51,
        "endLine": 115,
        "endChar": 57
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "506bee69_4affb3a7",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/api/changes/ChangeApi.java",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-04-29T06:35:27Z",
      "side": 1,
      "message": "I think this info is important and should be kept here :-)",
      "parentUuid": "506bee69_eae46728",
      "range": {
        "startLine": 114,
        "startChar": 51,
        "endLine": 115,
        "endChar": 57
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "707ab234_4bf4a5d1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/CommentJson.java",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-04-29T06:11:39Z",
      "side": 1,
      "message": "com.google.common.collect.ComparisonChain",
      "range": {
        "startLine": 28,
        "startChar": 7,
        "endLine": 28,
        "endChar": 70
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "506bee69_2aeb5ff4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ListChangeDrafts.java",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-04-29T06:11:39Z",
      "side": 1,
      "message": "Disambiguate this name? Change drafts or comment drafts?",
      "range": {
        "startLine": 34,
        "startChar": 13,
        "endLine": 34,
        "endChar": 29
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b070aa50_4dffd9a7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ListChangeDrafts.java",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-04-29T22:38:47Z",
      "side": 1,
      "message": "slightly offtopic:\nThis doesn\u0027t really feel like it\u0027s a good API, as we\u0027d need to do 2 calls to \nrsrc.getControl().getCurrentUser() and do a hard cast ourselves.\n\nMaybe we could have a method whose return type is IdentifiedUser, so it will return either an identified user or null if the user is not identified.\nThen this part could be written as\n\n    IdentifiedUser user \u003d rsrc.getControl().getIdentifiedUser();\n    if (user \u003d\u003d null) {\n        throw new AuthException(\"Authentication required\");\n    }\n\nwhich I\u0027d find easier to follow. Maybe the exception could also be thrown from within the getIdentifiedUser as well.",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 57,
        "endChar": 78
      },
      "revId": "43854673db3c91b65383a1b6f6365110414f24e8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}