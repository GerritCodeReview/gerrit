{
  "pushCert": "certificate version 0.1\npusher A0D0EF51 1519313973 +0100\nnonce AFD2Vu1PyafK2MD9wjAJQTBvvuy226vC3OGN/ZAtEdp6SIoZvq0JphqzqkoO8XH+JJPZNUZu6jrG\n\n0000000000000000000000000000000000000000 43ebc86772b47c384d12fb01d2a07c77fefa71dc refs/for/master%private\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEjcOJ9ZBmQPrFqZA3UbX9l6DQ71EFAlqO5DUACgkQUbX9l6DQ\n71GEmAf/WfwzKvRuDj+bxbgS0vudE9btyuFW3fhpvMChn06otKVashniFmSGFBom\nK80AF8nLaA0W+RlRtvDZO5N4aUztDrWasKO6j9X55MJb1sJ6OHVXR9uoTwZ25bQb\nUMpzmCj2kQfadhlOy2aL6uINBldhyU8ngwrUAckWFTCZCRLi8R1rPyZirbRi7GsB\n+HqfJCgVuTEQkT+BofepL6wZlRF2DXEyEoR20vdvVXANpvPXX2xwh9PGezpicBsi\nA/mKy03S2FULUKAtOxuTNyd8v3PDHW4RKAg9I5M085Rz35TOT1OjmqX4+S0hhon1\ndO8U8CPPM0OXbUXSQavsIrjnSgElcg\u003d\u003d\n\u003dn7n8\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "8e938a6b_f0629bc6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-02-22T15:47:56Z",
      "side": 1,
      "message": "I assume there will also be mroe changes to actually use the tracing API from more places?\n\nAlso, how does this interact with the UI? Is the idea that passing ?dbg\u003d1 or similar will cause the UI to start sending the trace parameter?",
      "revId": "43ebc86772b47c384d12fb01d2a07c77fefa71dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe4f0a12_5464006b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-02-22T15:59:26Z",
      "side": 1,
      "message": "\u003e I assume there will also be mroe changes to actually use the tracing API from more places?\n\nYes. For now the only class besides RestApiServlet is ReviewersUtil that makes use of it. But many others should follow. At the moment we don\u0027t have much debug logs since they cause too much log spam or they are disabled when you need them.\n\n\u003e Also, how does this interact with the UI? Is the idea that passing ?dbg\u003d1 or\n\u003e similar will cause the UI to start sending the trace parameter?\n\nYes, something like this. The details still need to be figured out.",
      "parentUuid": "8e938a6b_f0629bc6",
      "revId": "43ebc86772b47c384d12fb01d2a07c77fefa71dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "018ed90c_627f38e6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-02-23T15:31:51Z",
      "side": 1,
      "message": "More debugs logs have been added, adding even more is left for follow-up changes. \nUI support for setting the trace parameters is also left for follow-up changes.",
      "parentUuid": "fe4f0a12_5464006b",
      "revId": "43ebc86772b47c384d12fb01d2a07c77fefa71dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a829881c_8089e095",
        "filename": "java/com/google/gerrit/server/DebugTraceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-02-22T15:47:56Z",
      "side": 1,
      "message": "I might be missing something, but should there be a check here like \"is tracing enabled for the current request\"?",
      "revId": "43ebc86772b47c384d12fb01d2a07c77fefa71dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0aceb60f_25b7150b",
        "filename": "java/com/google/gerrit/server/DebugTraceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-02-22T15:59:26Z",
      "side": 1,
      "message": "DebugTraceApi is stored as property in CurrentUser, if tracing is enabled its a DebugTraceImpl instance otherwise a no-op DisabledDebugTrace instance. But maybe this check can also life here, not sure yet if this is better.",
      "parentUuid": "a829881c_8089e095",
      "revId": "43ebc86772b47c384d12fb01d2a07c77fefa71dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ffcd1fc_9f18855d",
        "filename": "java/com/google/gerrit/server/DebugTraceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-02-22T17:29:59Z",
      "side": 1,
      "message": "Ah, I missed the CurrentUser thing.\n\nI\u0027m not 100% sure storing it in the CurrentUser is going to play well with our tracing implementation, which uses ThreadLocals. Have you tried wiring up our implementation yet?",
      "parentUuid": "0aceb60f_25b7150b",
      "revId": "43ebc86772b47c384d12fb01d2a07c77fefa71dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32c464f5_c895903c",
        "filename": "java/com/google/gerrit/server/DebugTraceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-02-23T15:31:51Z",
      "side": 1,
      "message": "I went for a simpler approach. Now we only store the trace ID in a ThreadLoccal context.\nBut I still didn\u0027t test this internally.",
      "parentUuid": "3ffcd1fc_9f18855d",
      "revId": "43ebc86772b47c384d12fb01d2a07c77fefa71dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1fe8b5e_c65d3287",
        "filename": "java/com/google/gerrit/server/DebugTraceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-02-26T09:57:56Z",
      "side": 1,
      "message": "Done, I now tested this internally and it seems to work.",
      "parentUuid": "32c464f5_c895903c",
      "revId": "43ebc86772b47c384d12fb01d2a07c77fefa71dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0df7d11_8a4fbed2",
        "filename": "java/com/google/gerrit/server/config/GerritGlobalModule.java",
        "patchSetId": 1
      },
      "lineNbr": 305,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-02-22T15:47:56Z",
      "side": 1,
      "message": "Are we going to bind a different implementation? If so, this needs to be bound higher up.",
      "revId": "43ebc86772b47c384d12fb01d2a07c77fefa71dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27cd6ec8_1500ded0",
        "filename": "java/com/google/gerrit/server/config/GerritGlobalModule.java",
        "patchSetId": 1
      },
      "lineNbr": 305,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-02-22T15:59:26Z",
      "side": 1,
      "message": "Right. Internally we for sure need to bind a different implementation.",
      "parentUuid": "a0df7d11_8a4fbed2",
      "revId": "43ebc86772b47c384d12fb01d2a07c77fefa71dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc1a6e13_b3b27764",
        "filename": "java/com/google/gerrit/server/config/GerritGlobalModule.java",
        "patchSetId": 1
      },
      "lineNbr": 305,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-02-23T15:31:51Z",
      "side": 1,
      "message": "I\u0027m trying a different approach that doesn\u0027t require a specific implementation for Google.",
      "parentUuid": "27cd6ec8_1500ded0",
      "revId": "43ebc86772b47c384d12fb01d2a07c77fefa71dc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}