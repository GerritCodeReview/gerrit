{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "26b9b8f1_f8304f42",
        "filename": "polygerrit-ui/app/utils/account-util.ts",
        "patchSetId": 8
      },
      "lineNbr": 206,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2022-07-29T13:01:47Z",
      "side": 1,
      "message": "nit: Add return type. And maybe a function description that explains what is a \"tagged email\"",
      "range": {
        "startLine": 206,
        "startChar": 16,
        "endLine": 206,
        "endChar": 35
      },
      "revId": "44e16074d31e07ccaaa9262664ce05a88e36d125",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4613aa5a_27cd5b03",
        "filename": "polygerrit-ui/app/utils/account-util.ts",
        "patchSetId": 8
      },
      "lineNbr": 206,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-07-29T14:03:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26b9b8f1_f8304f42",
      "range": {
        "startLine": 206,
        "startChar": 16,
        "endLine": 206,
        "endChar": 35
      },
      "revId": "44e16074d31e07ccaaa9262664ce05a88e36d125",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58f19dfa_f38baf1c",
        "filename": "polygerrit-ui/app/utils/account-util.ts",
        "patchSetId": 8
      },
      "lineNbr": 218,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2022-07-29T13:01:47Z",
      "side": 1,
      "message": "If we end up using regex anyway, why are we looking for leading @ separately, instead of looking for something like\n\n\"\\b@\" + EMAIL_REGEX\n\nAlso, the EMAIL_REGEX doesn\u0027t look for word boundary at the end. So something like @a@b.c%63 would be recognized as the valid email (though it will leave out the %63 part).",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 218,
        "endChar": 16
      },
      "revId": "44e16074d31e07ccaaa9262664ce05a88e36d125",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7fe2c87_5820e13f",
        "filename": "polygerrit-ui/app/utils/account-util.ts",
        "patchSetId": 8
      },
      "lineNbr": 218,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-07-29T13:18:52Z",
      "side": 1,
      "message": "\\b@ won\u0027t work but yes why can\u0027t you do matchAll like:\n\n```\n.matchAll(/(?:(^|[ ]))@REST_OF_EMAIL_REGEXP\\b/g)\n```",
      "parentUuid": "58f19dfa_f38baf1c",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 218,
        "endChar": 16
      },
      "revId": "44e16074d31e07ccaaa9262664ce05a88e36d125",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7f1dc19_b060cd88",
        "filename": "polygerrit-ui/app/utils/account-util.ts",
        "patchSetId": 8
      },
      "lineNbr": 218,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2022-07-29T13:27:25Z",
      "side": 1,
      "message": "You\u0027re right. But by the same logic \\b at the end wouldn\u0027t work either.\n\nYou would need (?:(^|\\s)) at the beginning and (?:($|\\s)) at the end.",
      "parentUuid": "f7fe2c87_5820e13f",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 218,
        "endChar": 16
      },
      "revId": "44e16074d31e07ccaaa9262664ce05a88e36d125",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95a73331_037dc272",
        "filename": "polygerrit-ui/app/utils/account-util.ts",
        "patchSetId": 8
      },
      "lineNbr": 218,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-07-29T13:37:37Z",
      "side": 1,
      "message": "We want the space before to be optional(in case it starts at the text) or not optional(in case it occurs in between the text).\n\nIf we set the space to be non-optional then we don\u0027t catch the email that begins at the text.\nIf we set it to be optional then we start matching the text `@@\u003cemail\u003e`.\n\nI think solving this by making the regex more complicated doesn\u0027t seem worth the effort.\nUnless there is a simpler regex I am missing here?\n\nI tried 2-3 but they all seem to fail at some case.",
      "parentUuid": "d7f1dc19_b060cd88",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 218,
        "endChar": 16
      },
      "revId": "44e16074d31e07ccaaa9262664ce05a88e36d125",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ce8d9b5_b714e50e",
        "filename": "polygerrit-ui/app/utils/account-util.ts",
        "patchSetId": 8
      },
      "lineNbr": 218,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-07-29T13:40:26Z",
      "side": 1,
      "message": "Sorry, that should be `(?!^|\\s)` for negative look-ahead. not `(?:^|\\s)` which simply does a non-binding match.\n\nI would definitely try to get the right regexp instead of linearly scanning through the text at each offset and rechecking the regexp. That seems like going against the nature of regexp.",
      "parentUuid": "d7f1dc19_b060cd88",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 218,
        "endChar": 16
      },
      "revId": "44e16074d31e07ccaaa9262664ce05a88e36d125",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "129ac446_148c7f41",
        "filename": "polygerrit-ui/app/utils/account-util.ts",
        "patchSetId": 8
      },
      "lineNbr": 218,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-07-29T14:03:19Z",
      "side": 1,
      "message": "Done.\nThanks for the help with the regex.",
      "parentUuid": "8ce8d9b5_b714e50e",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 218,
        "endChar": 16
      },
      "revId": "44e16074d31e07ccaaa9262664ce05a88e36d125",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4154e26_5c999759",
        "filename": "polygerrit-ui/app/utils/account-util_test.ts",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-07-29T13:19:21Z",
      "side": 1,
      "message": "Add one more test-case for the email being at the start of the comment.",
      "revId": "44e16074d31e07ccaaa9262664ce05a88e36d125",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67426839_05b8364f",
        "filename": "polygerrit-ui/app/utils/account-util_test.ts",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2022-07-29T14:03:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4154e26_5c999759",
      "revId": "44e16074d31e07ccaaa9262664ce05a88e36d125",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}