{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "09b3b818_5a1b7c18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-03-08T08:43:06Z",
      "side": 1,
      "message": "All my comments are optional. It is the first time I am looking at bulk actions related code ...\n\nFeel free to submit as is.",
      "revId": "46bf43a776b0cfbf1a3e5dbe2370370811b319f4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4bc99fa2_8c60090f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-03-08T08:53:15Z",
      "side": 1,
      "message": "Thanks, PTAL",
      "revId": "46bf43a776b0cfbf1a3e5dbe2370370811b319f4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a4e21a0_30945436",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-mark-active-flow/gr-change-list-mark-active-flow.ts",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-03-08T08:43:06Z",
      "side": 1,
      "message": "This is a new pattern that may want to discuss more as a team: Should we assign model information to private @state and let Lit do its job, or should we just call `requestUpdate()` and fetch the latest model information in `render()`?\n\nWhy did you choose the latter here?",
      "revId": "46bf43a776b0cfbf1a3e5dbe2370370811b319f4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6a39882_d9c9b3cb",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-mark-active-flow/gr-change-list-mark-active-flow.ts",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-03-08T08:53:15Z",
      "side": 1,
      "message": "The model currently only contains the selected change-numbers as a prop, not the full list of changes.  I don\u0027t like having to copy all the data into props just to copy that into an `@state` variable, as it leads to duplication of state.  \n\nThe model should tell us when the selection changes and the model has loaded, from there I feel that `render()` can extract the necessary information from the model.",
      "parentUuid": "6a4e21a0_30945436",
      "revId": "46bf43a776b0cfbf1a3e5dbe2370370811b319f4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f8bcf60_2d540333",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-mark-active-flow/gr-change-list-mark-active-flow.ts",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-03-08T09:54:56Z",
      "side": 1,
      "message": "I find it makes the component more encapsulated and independent, if it subscribes to dedicated selectors and has the component state be reflected in @state props. \n\nMaybe that is even easier to test, because you can just set those @state props directly from tests for getting the component into a specific state.",
      "parentUuid": "c6a39882_d9c9b3cb",
      "revId": "46bf43a776b0cfbf1a3e5dbe2370370811b319f4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73033fa7_d2167f4f",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-mark-active-flow/gr-change-list-mark-active-flow.ts",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-03-08T08:43:06Z",
      "side": 1,
      "message": "Maybe this could be simplified to\n```\n?disabled\u003d${changes \u003d\u003d\u003d 0}\n```",
      "range": {
        "startLine": 40,
        "startChar": 8,
        "endLine": 40,
        "endChar": 45
      },
      "revId": "46bf43a776b0cfbf1a3e5dbe2370370811b319f4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23393910_8bc6a0fd",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-mark-active-flow/gr-change-list-mark-active-flow.ts",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-03-08T08:53:15Z",
      "side": 1,
      "message": "This function is expected to be extended in the future, the logic is just a placeholder.",
      "parentUuid": "73033fa7_d2167f4f",
      "range": {
        "startLine": 40,
        "startChar": 8,
        "endLine": 40,
        "endChar": 45
      },
      "revId": "46bf43a776b0cfbf1a3e5dbe2370370811b319f4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc7d1311_4df40649",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-03-08T08:43:06Z",
      "side": 1,
      "message": "Maybe move all state such as this into `BulkActionsState`?",
      "revId": "46bf43a776b0cfbf1a3e5dbe2370370811b319f4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "020b024b_bb3ad8fd",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-03-08T09:00:03Z",
      "side": 1,
      "message": "See comment below.\n\nI feel like forcing everything into props doesn\u0027t make sense. It feels like multiplexing everything into a single object, only to demultiplex it again in the selectors.\n\nFrom a user-perspective, there are 2 reactive aspects to this model:\n  - Are the changes that are selected changed\n  - Is the information of the changes being loaded in the background.\n  \nGiven their reactive nature, it makes sense to have those as props.  But then trying to map selectedChangeNums.map(x \u003d\u003e allChanges.get(x)) into the model-state feels unnecessary as that can simply be fetched by a method on the model when you know the model has changed.",
      "parentUuid": "bc7d1311_4df40649",
      "revId": "46bf43a776b0cfbf1a3e5dbe2370370811b319f4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b5ffa45_694b972f",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-03-08T09:54:56Z",
      "side": 1,
      "message": "That means we are starting to distinguish between state being managed in a `...State` object and state being managed in member fields.\n\nI don\u0027t like that, because we will then have two ways of managing state instead of one. And member field state cannot be observed. As soon as you want to derive anything reactively from member field state you have to somehow move/convert into an Observable.",
      "parentUuid": "020b024b_bb3ad8fd",
      "revId": "46bf43a776b0cfbf1a3e5dbe2370370811b319f4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60a82287_12a963b5",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-03-08T08:43:06Z",
      "side": 1,
      "message": "If `this.allChanges` was inside the state, then this could be selector based maybe.",
      "revId": "46bf43a776b0cfbf1a3e5dbe2370370811b319f4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db12a96a_fe3d6d57",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-03-08T09:00:03Z",
      "side": 1,
      "message": "I don\u0027t know if I like that to be selector-based.  I feel like we\u0027re trying to force too much state into props.",
      "parentUuid": "60a82287_12a963b5",
      "revId": "46bf43a776b0cfbf1a3e5dbe2370370811b319f4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9363b32_1ada5d0c",
        "filename": "polygerrit-ui/app/models/bulk-actions/bulk-actions-model.ts",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-03-08T09:54:56Z",
      "side": 1,
      "message": "Why do you not like it?\n\nFrom my point of view we are not \"forcing\" anything into state props, but we have chosen to do so, because we get a lot benefit from that:\n1. Everything is reactive: Can be observed and selected from.\n2. Every model manages exactly one state object.\n3. The state object is pure data. Everything in there is immutable.\n\nWhat is it that you don\u0027t like about putting state into state props?",
      "parentUuid": "db12a96a_fe3d6d57",
      "revId": "46bf43a776b0cfbf1a3e5dbe2370370811b319f4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}