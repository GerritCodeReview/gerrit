{
  "comments": [
    {
      "key": {
        "uuid": "947052ea_28d7fd7d",
        "filename": "polygerrit-ui/app/elements/shared/gr-feature-flag/gr-feature-flag.html",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2019-12-17T14:21:29Z",
      "side": 1,
      "message": "remove?",
      "revId": "46ecd9b7af0f19d7373eb0f43ebeea287a74e264",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "449da81f_413c5eb5",
        "filename": "polygerrit-ui/app/elements/shared/gr-feature-flag/gr-feature-flag.js",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2019-12-17T14:21:29Z",
      "side": 1,
      "message": "That should go into its own files. Some parts of the app may not sue the gr-feature-flag component, but directly call the provider. Then they should just depend on the provider file, not the entire component.",
      "range": {
        "startLine": 34,
        "startChar": 8,
        "endLine": 34,
        "endChar": 27
      },
      "revId": "46ecd9b7af0f19d7373eb0f43ebeea287a74e264",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99d20448_4347e8ff",
        "filename": "polygerrit-ui/app/elements/shared/gr-feature-flag/gr-feature-flag.js",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-12-17T09:25:53Z",
      "side": 1,
      "message": "What are the future plans about _featureStore? Will it use persistent storage (cookies/Local Storage, etc...) ?",
      "range": {
        "startLine": 36,
        "startChar": 11,
        "endLine": 36,
        "endChar": 24
      },
      "revId": "46ecd9b7af0f19d7373eb0f43ebeea287a74e264",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d2eec1f_698f50ca",
        "filename": "polygerrit-ui/app/elements/shared/gr-feature-flag/gr-feature-flag.js",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2019-12-17T14:21:29Z",
      "side": 1,
      "message": "Why not a whitelist per flag? (Also a blacklist would be nice.)",
      "range": {
        "startLine": 53,
        "startChar": 17,
        "endLine": 53,
        "endChar": 39
      },
      "revId": "46ecd9b7af0f19d7373eb0f43ebeea287a74e264",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9918e367_2c5f78d0",
        "filename": "polygerrit-ui/app/elements/shared/gr-feature-flag/gr-feature-flag.js",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-12-17T09:23:56Z",
      "side": 1,
      "message": "I see the following problems with this approach (if you have 2 or more feature flags):\n1) If percentage for features are the same, user has\neither all features enabled together or doesn\u0027t have any feature enabled. Later you can decide to release only one feature and there is a chance that it doesn\u0027t work separately.\n\n2) If feature flags are used for A/B testing the results can be incorrect. For example,you have 10% for a feature A and 20% for a feature B. With the current implementation this mean, that if you have feature B, then you have feature A. Opposite - if you have feature A then you have feature B with probability 50%. And there are no users with the feature A only. It is hard to make statistical analysis on such data.",
      "range": {
        "startLine": 59,
        "startChar": 6,
        "endLine": 59,
        "endChar": 68
      },
      "revId": "46ecd9b7af0f19d7373eb0f43ebeea287a74e264",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31cea62e_d90e308e",
        "filename": "polygerrit-ui/app/elements/shared/gr-feature-flag/gr-feature-flag.js",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2019-12-17T09:28:26Z",
      "side": 1,
      "message": "ya as you can see that this `_hashCode` is just a placeholder for proof of concept :)  we can definitely change that to support multiple features, use better hash generator (take feature in when generate hash, etc). same for #2 :) \n\nI will hope you focus on the concept other than implementation detail, I did not plan to have this as the final implementation but just a concept to review as one of ways to support feature flags :)",
      "parentUuid": "9918e367_2c5f78d0",
      "range": {
        "startLine": 59,
        "startChar": 6,
        "endLine": 59,
        "endChar": 68
      },
      "revId": "46ecd9b7af0f19d7373eb0f43ebeea287a74e264",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}