{
  "comments": [
    {
      "key": {
        "uuid": "50c758d5_e5b2f68d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-10-21T13:21:39Z",
      "side": 1,
      "message": "Actually this was a bad proposal. WebLinkInfos without name or URL were also not returned before this change, only the check for this was moved from the caller into the WebLinks class. Maybe something like this is better:\n\n  Make handling of web links consistent\n\n  The WebLinks class now provides all web links as lists  \n  which avoids unnecessary copying in the caller. Web \n  links that do not have a name or URL are now always\n  filtered out in the WebLinks class and callers don\u0027t need \n  to do this anymore. In addition, if there are no web \n  links, the web_links field is not set in the JSON that \n  is sent to clients.\n\n  These improvements were already done for file web links \n  by b62414c0c and 2ae832e7e.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "4720d3ac781c760f0e94c787901faba291174e66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50c758d5_65a72649",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-10-22T09:34:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50c758d5_e5b2f68d",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "4720d3ac781c760f0e94c787901faba291174e66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "503af8a9_6d08d5c4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-10-21T13:22:58Z",
      "side": 1,
      "message": "[optional]: Do the filtering in all these methods in functional style:\n\n  return List.newArrayList(\n      Iterables.filter(webLink.getPathSetWebLink(project, commit),\n          EMPTY_WEB_LINK));\n\nWhere EMPTY_WB_LINK is denied something like that (untested):\n\n  private static final Predicate\u003cWebLinkInfo\u003e EMPTY_WEB_LINK \u003d\n    new Predicate\u003cWebLinkInfo\u003e() {\n      @Override\n      public boolean apply(WebLinkInfo l) {\n        return !Strings.isNullOrEmpty(webLink.name)\n          \u0026\u0026 !Strings.isNullOrEmpty(webLink.url);\n      }\n    };",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 56,
        "endChar": 3
      },
      "revId": "4720d3ac781c760f0e94c787901faba291174e66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b53fa6b4_d063fcfc",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-10-22T09:34:43Z",
      "side": 1,
      "message": "What are the benefits?\nYou create two ArrayLists with this approach.",
      "parentUuid": "503af8a9_6d08d5c4",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 56,
        "endChar": 3
      },
      "revId": "4720d3ac781c760f0e94c787901faba291174e66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b53fa6b4_d03f7caa",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-10-22T14:48:09Z",
      "side": 1,
      "message": "You can use FluentIterator instead and create zero lists instances because it exposes isEmpty() method. See Luis\u0027s answer for more details [1].\n\n  if (FluentIterable.from(foo).filter(predicate).isEmpty()) {...\n\n\n* [1] http://stackoverflow.com/questions/12649445/guava-iterables-filter-how-do-you-test-for-an-empty-return",
      "parentUuid": "b53fa6b4_d063fcfc",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 56,
        "endChar": 3
      },
      "revId": "4720d3ac781c760f0e94c787901faba291174e66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}