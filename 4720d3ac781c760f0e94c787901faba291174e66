{
  "comments": [
    {
      "key": {
        "uuid": "50c758d5_e5b2f68d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-10-21T13:21:39Z",
      "side": 1,
      "message": "Actually this was a bad proposal. WebLinkInfos without name or URL were also not returned before this change, only the check for this was moved from the caller into the WebLinks class. Maybe something like this is better:\n\n  Make handling of web links consistent\n\n  The WebLinks class now provides all web links as lists  \n  which avoids unnecessary copying in the caller. Web \n  links that do not have a name or URL are now always\n  filtered out in the WebLinks class and callers don\u0027t need \n  to do this anymore. In addition, if there are no web \n  links, the web_links field is not set in the JSON that \n  is sent to clients.\n\n  These improvements were already done for file web links \n  by b62414c0c and 2ae832e7e.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "4720d3ac781c760f0e94c787901faba291174e66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50c758d5_65a72649",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-10-22T09:34:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50c758d5_e5b2f68d",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "4720d3ac781c760f0e94c787901faba291174e66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "503af8a9_6d08d5c4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-10-21T13:22:58Z",
      "side": 1,
      "message": "[optional]: Do the filtering in all these methods in functional style:\n\n  return List.newArrayList(\n      Iterables.filter(webLink.getPathSetWebLink(project, commit),\n          EMPTY_WEB_LINK));\n\nWhere EMPTY_WB_LINK is denied something like that (untested):\n\n  private static final Predicate\u003cWebLinkInfo\u003e EMPTY_WEB_LINK \u003d\n    new Predicate\u003cWebLinkInfo\u003e() {\n      @Override\n      public boolean apply(WebLinkInfo l) {\n        return !Strings.isNullOrEmpty(webLink.name)\n          \u0026\u0026 !Strings.isNullOrEmpty(webLink.url);\n      }\n    };",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 56,
        "endChar": 3
      },
      "revId": "4720d3ac781c760f0e94c787901faba291174e66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b53fa6b4_d063fcfc",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-10-22T09:34:43Z",
      "side": 1,
      "message": "What are the benefits?\nYou create two ArrayLists with this approach.",
      "parentUuid": "503af8a9_6d08d5c4",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 56,
        "endChar": 3
      },
      "revId": "4720d3ac781c760f0e94c787901faba291174e66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b53fa6b4_d03f7caa",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-10-22T14:48:09Z",
      "side": 1,
      "message": "You can use FluentIterator instead and create zero lists instances because it exposes isEmpty() method. See Luis\u0027s answer for more details [1].\n\n  if (FluentIterable.from(foo).filter(predicate).isEmpty()) {...\n\n\n* [1] http://stackoverflow.com/questions/12649445/guava-iterables-filter-how-do-you-test-for-an-empty-return",
      "parentUuid": "b53fa6b4_d063fcfc",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 56,
        "endChar": 3
      },
      "revId": "4720d3ac781c760f0e94c787901faba291174e66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b53fa6b4_9039f4c6",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-10-22T15:25:02Z",
      "side": 1,
      "message": "\u003e Iterables.filter(webLink.getPathSetWebLink(project, commit), EMPTY_WEB_LINK)\nIterables.filter doesn\u0027t take a WebLinkInfo so IIAC you\u0027ll have to:\n1. Create an ArrayList\n2. Populate it with the WebLinkInfos generated by th *WebLinks\n3. Then filter it\n4. Create a new ArrayList.\n\nI don\u0027t see the benefits of filtering it after the list is populated as opposed to before you populate the list.\nThese lists will be in the size range 0..10.",
      "parentUuid": "b53fa6b4_d03f7caa",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 56,
        "endChar": 3
      },
      "revId": "4720d3ac781c760f0e94c787901faba291174e66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b53fa6b4_d0ed3cca",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-10-23T06:50:08Z",
      "side": 1,
      "message": "Well, i thought this is clear. You use transform before. Here is complete working solution for my suggestion: [1]. Note: that your approach is non effective: Links is something that only plugins can provide. 99% all sites are running without any plugins, or with plugins that don\u0027t provide any web links. Still with your apporach you are *always* creating new ListArray\u003c4\u003e for *all* kinds (!) of web links. You are doing this for each and every request. Uncached. The way to go is to use Fluent iterator and not to create anything:\n\n   public FluentIterable\u003cWebLinkInfo\u003e getPatchSetLinks(final String project, final String commit) {\n    return FluentIterable.from(patchSetLinks)\n        .transform(\n            new Function\u003cPatchSetWebLink, WebLinkInfo\u003e() {\n              @Override\n              public WebLinkInfo apply(PatchSetWebLink l) {\n                return l.getPathSetWebLink(project, commit);\n              }\n            })\n        .filter(\n            new Predicate\u003cWebLinkInfo\u003e() {\n              @Override\n              public boolean apply(WebLinkInfo l) {\n                if (Strings.isNullOrEmpty(l.name)\n                    || Strings.isNullOrEmpty(l.url)) {\n                  log.warn(String.format(\"Weblink %s is missing name and/or url\",\n                      l.getClass().getName()));\n                  return false;\n                }\n                return true;\n              }\n            });\n  }\n\nFilter part should be externalized to be used in other web links retrieval methods, see my previous comment.\n\n [1] http://paste.openstack.org/show/123417",
      "parentUuid": "b53fa6b4_9039f4c6",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 56,
        "endChar": 3
      },
      "revId": "4720d3ac781c760f0e94c787901faba291174e66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b53fa6b4_90bc54ae",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-10-23T08:39:55Z",
      "side": 1,
      "message": "Done\nThanks for explaining.",
      "parentUuid": "b53fa6b4_d0ed3cca",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 56,
        "endChar": 3
      },
      "revId": "4720d3ac781c760f0e94c787901faba291174e66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95446258_cfc47d4c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-10-23T06:50:08Z",
      "side": 1,
      "message": "Not 4 but 0. here and in all places: because Gerrit core doens\u0027t have any web Links.",
      "range": {
        "startLine": 60,
        "startChar": 46,
        "endLine": 60,
        "endChar": 47
      },
      "revId": "4720d3ac781c760f0e94c787901faba291174e66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}