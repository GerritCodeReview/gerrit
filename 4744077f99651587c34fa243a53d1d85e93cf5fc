{
  "comments": [
    {
      "key": {
        "uuid": "AAABEX//7V8\u003d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/ChangeConstants.java",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-26T02:18:41Z",
      "side": 1,
      "message": "To avoid potential confusion with any error message related to an actual merge attempt, I suggest: messageFailsMergeTest.",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7eQ\u003d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/ChangeConstants.properties",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-26T02:18:41Z",
      "side": 1,
      "message": "If we trust the test enough to disable the submit button, let\u0027s be more assertive here, maybe something like: This change will currently fail to merge to the tip.",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7WE\u003d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/PatchSetComplexDisclosurePanel.java",
        "patchSetId": 3
      },
      "lineNbr": 178,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-26T02:18:41Z",
      "side": 1,
      "message": "Nit/suggestion: the above 3 lines would be simpler as one.",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7WA\u003d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/PatchSetComplexDisclosurePanel.java",
        "patchSetId": 3
      },
      "lineNbr": 415,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-26T02:18:41Z",
      "side": 1,
      "message": "Should the config also be checked here?",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7eM\u003d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/PatchSetComplexDisclosurePanel.java",
        "patchSetId": 3
      },
      "lineNbr": 529,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-26T02:18:41Z",
      "side": 1,
      "message": "I am having a hard time understanding the reason for this change?",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7eI\u003d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/PublishCommentScreen.java",
        "patchSetId": 3
      },
      "lineNbr": 324,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-26T02:18:41Z",
      "side": 1,
      "message": "Shouldn\u0027t this second test be negated?",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7Tg\u003d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/PublishCommentScreen.java",
        "patchSetId": 3
      },
      "lineNbr": 324,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-07-26T10:16:02Z",
      "side": 1,
      "message": "Yes. Fixed in the version we are locally working.",
      "parentUuid": "AAABEX//7eI\u003d",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7WI\u003d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/changedetail/ChangeDetailFactory.java",
        "patchSetId": 3
      },
      "lineNbr": 166,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-26T02:18:41Z",
      "side": 1,
      "message": "Nit: this comment just repeats the two lines below.",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7dg\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/ChangeUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 188,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-26T02:18:41Z",
      "side": 1,
      "message": "The merge could still fail below.  Would it not be better to set this on merge?",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7Tc\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/ChangeUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 188,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-07-26T10:16:02Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "AAABEX//7dg\u003d",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7WM\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/CommitMergeStatus.java",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-26T02:18:41Z",
      "side": 1,
      "message": "Nit: unnecessary this.",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7TY\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/CommitMergeStatus.java",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-07-26T10:16:02Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "AAABEX//7WM\u003d",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7dY\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 207,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-26T02:18:41Z",
      "side": 1,
      "message": "This doesn\u0027t quite seem named right since it does not always run the merge test.  Perhaps verifyMergeability, or something like that would be clearer?",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//718\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-21T18:02:20Z",
      "side": 1,
      "message": "Would it make more sense to pass this Change around instead of setting a class var?  In general: the less state the class needs to store, the better, and I it doesn\u0027t look like you would need to pass it to too many functions.  Since this class is large enough as is, it would be particularly helpful to avoid adding more state to it.   If possible, it would be nice to do the same with the isMergeable variable (but I haven\u0027t figure out how yet)?\n\nTo support these ideas, perhaps merge() should be refactored to become isMergeable() and merge()?",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//71g\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 1004010
      },
      "writtenOn": "2011-07-21T18:16:09Z",
      "side": 1,
      "message": "Agree... BTW, it would be very nice re-code such things on top of \"MergeOp refactoring\" you tagged +1 :-)",
      "parentUuid": "AAABEX//718\u003d",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7zk\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-21T19:26:45Z",
      "side": 1,
      "message": "Agreed also, but since there was a -1 in that change from someone (Shawn) earlier which has not been turned into a +1...  I would ping him. :)",
      "parentUuid": "AAABEX//71g\u003d",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7yg\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 1004010
      },
      "writtenOn": "2011-07-21T20:49:22Z",
      "side": 1,
      "message": "Pinged again!",
      "parentUuid": "AAABEX//7zk\u003d",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//72g\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 232,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-21T18:02:20Z",
      "side": 1,
      "message": "Hmm, if this disables the submit button, then this will have the side-effect that people will no longer be able to submit dependent changes out of order and let the mergequeue work it out by merging the dependencies in order.\n\nThis may be OK, but I figure that this should be pointed out and thought about.\n\nPerhaps changes should be considered mergeable even when they have dependencies which are not merged as long as the dependencies are mergeable? Or perhaps there should be a 3rd state, mergeable_with_dependencies and the submit button would stay enabled in this state?  \n\nThis third state might be what you need for atomic commits anyway?   It would making it possible to eventually add another submit button, \"submit with dependencies\" which would enable atomic commits in a single repo.  With the existence of such a button, the regular \"submit\" button could become disabled in this state, but this new \"submit with dependencies\" button could stay enabled.  This idea is not a suggestion for your change, just a follow on idea for anyone, but it might help you get (or see) one step closer to atomic commit.  \n\nFor now, I think that simply adding the third state and enabling the submit button in that third state may make sense?\n\nNote: I think that this section of the code only applies to a new branch and changes with unmerged dependencies, but I think that my comment applies to all cases where changes have unmerged dependencies.",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7zY\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 232,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-21T19:26:45Z",
      "side": 1,
      "message": "Another question, are changes are being tested for mergeability along with their dependencies?  In other words, given unmerged changes A \u003c- B, is B being test for mergeability straight to HEAD, or A is being tested and then on a branch with HEAD - A, is B being tested?  Depending on the merge strategy, I think we want to test the later, the first seems only useful for cherry-pick I think.",
      "parentUuid": "AAABEX//72g\u003d",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7yU\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 232,
      "author": {
        "id": 1004010
      },
      "writtenOn": "2011-07-21T20:49:22Z",
      "side": 1,
      "message": "Well, the test happens as a normal merge would, but if it\u0027s test we just don\u0027t \"updateBranch\".\nThe change is not mergeable if it has dependencies.\n\nBut considering your previous comment, in the next patch set we will set those changes to the 3rd state if the dependency is mergeable true, if false, those changes will also be false.",
      "parentUuid": "AAABEX//7zY\u003d",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7l8\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 232,
      "author": {
        "id": 1004010
      },
      "writtenOn": "2011-07-22T14:57:05Z",
      "side": 1,
      "message": "we have been thinking about it internally and we consider 2 options:\n\n1 - Let it as already done, the change mergeability is false if it has dependencies and the submit button is not visible.\n\n2 - Apply the 3rd state and disable the submit button if it has dependencies no matter if the dependency is mergeable or not.\n(If we check the dependencies mergeability to define the merge status of a change it would increase complexity too much, wouldn\u0027t? for each new patch set of the dependency we would have to invalid the test for all who have that dependency.)\n\nWhat do u think?",
      "parentUuid": "AAABEX//7yU\u003d",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7lg\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 232,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-22T16:56:10Z",
      "side": 1,
      "message": "I think that it is your call either way since if admins don\u0027t like it, they can just disable this feature.\n\nThat being said...  I suspect that if atomic commit is your alterior motive here, you will need to solve the case of testing changes along/ontop of their dependencies too.  Since in some cases their will be changes which people will want to merge atomically with their dependencies.  With approach #1, that will simply be impossible since the dependent change will never be submitable.  But, I see no reason why this can\u0027t be addressed in future changes.  What you have here is a nice infrastructure to build on.",
      "parentUuid": "AAABEX//7l8\u003d",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7dA\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-26T02:18:41Z",
      "side": 1,
      "message": "I think that you should not make the schema an instance variable, it makes it very hard to track its lifespan.",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7TU\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-07-26T10:16:02Z",
      "side": 1,
      "message": "The point is that schema was originally an instance variable in MergeOp. We meant to cause the minimum impact in MergeOp. schema is used for several methods in MergeOp, including some called by runTestMerge.",
      "parentUuid": "AAABEX//7dA\u003d",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7TI\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 1004010
      },
      "writtenOn": "2011-07-26T12:34:42Z",
      "side": 1,
      "message": "BTW, I feel like sewing new cloth to old garment.\nI don\u0027t think we should use this feature to solve all design issues within MergeOp, let\u0027s use \"MergeOp refactoring\" change instead.\nEven though we are fixing few things here..",
      "parentUuid": "AAABEX//7TU\u003d",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//710\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 312,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-21T18:02:20Z",
      "side": 1,
      "message": "Will all this extra testing without actually merging cause a serious garbage collection problem in repos (or is it all done in memory only)?  Since this merge checking feature is optional, I would think that ignoring this potential problem (if it even is a problem) should not block your change, but it may be something to think about long term and maybe even make a note in the code about?",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//73E\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 3
      },
      "lineNbr": 1116,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-21T18:02:20Z",
      "side": 1,
      "message": "Maybe you can make this:\n\n  private Capable isSubmitStillPossible(...) {...}\n\nThe Capable object allow you to return \"OK\", or an error message.  This way you do not have to store this state at the class level, when really what you are trying to do is return a boolean and an error message in case of false.",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//73Q\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ReceiveCommits.java",
        "patchSetId": 3
      },
      "lineNbr": 1172,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-21T18:02:20Z",
      "side": 1,
      "message": "If this is just a default, maybe it should be set in Change?",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//70U\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ReceiveCommits.java",
        "patchSetId": 3
      },
      "lineNbr": 1172,
      "author": {
        "id": 1004024
      },
      "writtenOn": "2011-07-21T18:40:43Z",
      "side": 1,
      "message": "Hi Martin,\nHere we are receiving a new PatchSet for an existing change so we need to reset the lastSha1MergeTested in order to this change be re-tested because this invalidates the las test executed.",
      "parentUuid": "AAABEX//73Q\u003d",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//7zo\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ReceiveCommits.java",
        "patchSetId": 3
      },
      "lineNbr": 1172,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-21T19:26:45Z",
      "side": 1,
      "message": "Yeah, that makes sense.  I missread where we were, thinking it was a new Change.",
      "parentUuid": "AAABEX//70U\u003d",
      "revId": "4744077f99651587c34fa243a53d1d85e93cf5fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}