{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2bb4fd0c_0d427b37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-04T00:24:16Z",
      "side": 1,
      "message": "@Davido this is one of the slowdown issue we\u0027ve noticed on GerritHub.io after the migration of the first site.",
      "revId": "47f2099668a7e8b8dfb23c4942cff059410dee62",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b6f092f_6ba90ddf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-12-04T08:01:40Z",
      "side": 1,
      "message": "Good catch! Can we add a test for that? Also, why we havn\u0027t noticed the increased payload on gerrit-review?",
      "revId": "47f2099668a7e8b8dfb23c4942cff059410dee62",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34c27c05_f8933df3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2020-12-04T08:11:03Z",
      "side": 1,
      "message": "Accept: application/json was removed when implementing preloading https://gerrit-review.googlesource.com/c/gerrit/+/276355/20/polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js\n\nAdding application/json will make preloaded queries not matched with this fetch so it will not use cached one.\n\nThis will make loading dashboard 20% slower on first page load.",
      "revId": "47f2099668a7e8b8dfb23c4942cff059410dee62",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "831af75e_b943c884",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2020-12-04T08:28:08Z",
      "side": 1,
      "message": "I didn\u0027t know there is compressing application/json. It was added by me a year ago for not getting html as response for 404, 403. https://gerrit-review.googlesource.com/c/gerrit/+/234352 So I removed it that easily since Gerrit was many years without that.\n\nI would remove detailed label first and we can discuss if this is needed. My first idea is to make */* for first render and application/json for rest, if compressing will make impact.",
      "parentUuid": "34c27c05_f8933df3",
      "revId": "47f2099668a7e8b8dfb23c4942cff059410dee62",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a18ebd0b_b5b6034f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-04T08:32:12Z",
      "side": 1,
      "message": "thanks for your feedback.I am wondering why I see the opposite: 30% higher payload and consequently slower page load? does the JSON get compressed for you?",
      "parentUuid": "831af75e_b943c884",
      "revId": "47f2099668a7e8b8dfb23c4942cff059410dee62",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91207ae9_e760b60f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2020-12-04T08:45:17Z",
      "side": 1,
      "message": "What page load are we discussing? It\u0027s cold page load (full restart) or hot page load (internal navigation)? Do you have performance snapshot that I could look at? \n\nMy assumption was that calculation on back-end for changes is much higher than sending JSON through network. What is network connection that you are testing? What actual size is your JSON? On gerrit-review my dashboard request (o\u003d181) is 16kb transfers, where 30% is just 5kb.",
      "parentUuid": "a18ebd0b_b5b6034f",
      "revId": "47f2099668a7e8b8dfb23c4942cff059410dee62",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dae9a3d1_1fa41421",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-04T09:22:20Z",
      "side": 1,
      "message": "\u003e What page load are we discussing? It\u0027s cold page load (full restart) or hot page load (internal navigation)? Do you have performance snapshot that I could look at? \n\nI am looking at the moment at the list of changes in different status (no caching):\n- /q/status:open+-is:wip\n- /q/status:merged\n- /q/status:abandoned\n\n\u003e My assumption was that calculation on back-end for changes is much higher than sending JSON through network. \n\nI believe is a bit of both, also the processing on a larger payload on the browser I believe it would take longer, WDYT?\n\n\u003e What is network connection that you are testing? What actual size is your JSON? On gerrit-review my dashboard request (o\u003d181) is 16kb transfers, where 30% is just 5kb.\n\nYes, the 30% isn\u0027t *that* much, agreed. However, as you know, performance is always a bit of everything: 30% here, 15% there, 10% other there ... and you sum them all together and you get to 30+15+10 \u003d\u003e 55% :-)\n\nAlso, we could manage that on the backend, if the \u0027Accept: */*\u0027 is required by PolyGerrit.\n\nOut of curiosity: I see that some of the REST-API calls are passing \u0027Accept: application/json\u0027 and others are sending \u0027Accept: */*\u0027. Wouldn\u0027t then make sense to always send \u0027Accept: */*\u0027 for all calls?\n\nThanks again for your time reviewing this change.",
      "parentUuid": "91207ae9_e760b60f",
      "revId": "47f2099668a7e8b8dfb23c4942cff059410dee62",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aaca45e6_e568a8f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-12-04T09:28:07Z",
      "side": 1,
      "message": "Moving myself and Dmitrii to CC while Milutin is handling the review. Feel free to add us back, if you need another opinion or +2 or anything.",
      "revId": "47f2099668a7e8b8dfb23c4942cff059410dee62",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a893b97_7d6b4c5a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-04T09:57:04Z",
      "side": 1,
      "message": "@Milutin I checked the backend code and it looks like it is really a designed behaviour to enable pretty-print if you don\u0027t have \u0027Accept: application/json:\n\n pp \u003d acceptsJson(req) ? \"0\" : \"1\";",
      "parentUuid": "dae9a3d1_1fa41421",
      "revId": "47f2099668a7e8b8dfb23c4942cff059410dee62",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}