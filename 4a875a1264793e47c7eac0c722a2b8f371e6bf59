{
  "comments": [
    {
      "key": {
        "uuid": "68712757_8926191d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-08-24T15:08:48Z",
      "side": 1,
      "message": "nit: unused import",
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c84e930b_1c97b539",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-08-23T23:50:11Z",
      "side": 1,
      "message": "Nit: Don\u0027t use wildcard imports",
      "range": {
        "startLine": 55,
        "startChar": 14,
        "endLine": 55,
        "endChar": 16
      },
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8899fb95_227eeeb8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-08-24T15:27:30Z",
      "side": 1,
      "message": "https://google.github.io/styleguide/javaguide.html#s3.3.1-wildcard-imports",
      "parentUuid": "c84e930b_1c97b539",
      "range": {
        "startLine": 55,
        "startChar": 14,
        "endLine": 55,
        "endChar": 16
      },
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "886c9b82_6a8ab716",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-08-24T04:46:45Z",
      "side": 1,
      "message": "For reads we could first try to parse the notes with Gson.fromJson, and fall back to the old deserializer if it throws JsonSyntaxException.\n\nFor writes, always write new notes as Json?  Is it OK to leave the existing ones as they are?  Or will everything get rebuilt with the new format anyway?",
      "range": {
        "startLine": 101,
        "startChar": 2,
        "endLine": 103,
        "endChar": 75
      },
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8899fb95_02aaca1d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-08-24T15:27:30Z",
      "side": 1,
      "message": "Yes, the read code path should accept both, and write should always write the new format. We will need to backfill googlesource.com. Upstream we don\u0027t yet have a story for doing this kind of migration (other than telling people to run RebuildNoteDb), but that\u0027s why we\u0027re doing this now instead of after 3.0.",
      "parentUuid": "886c9b82_6a8ab716",
      "range": {
        "startLine": 101,
        "startChar": 2,
        "endLine": 103,
        "endChar": 75
      },
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "288e4f81_cf9f3d4e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-08-24T04:46:45Z",
      "side": 1,
      "message": "\"Json\", to make it consistent with existing naming.",
      "range": {
        "startLine": 147,
        "startChar": 41,
        "endLine": 147,
        "endChar": 45
      },
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8899fb95_c2a3c245",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-08-24T15:27:30Z",
      "side": 1,
      "message": "https://google.github.io/styleguide/javaguide.html#s5.3-camel-case",
      "parentUuid": "288e4f81_cf9f3d4e",
      "range": {
        "startLine": 147,
        "startChar": 41,
        "endLine": 147,
        "endChar": 45
      },
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8899fb95_a2a8be22",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-08-24T15:27:30Z",
      "side": 1,
      "message": "It\u0027s technically ok to let a ByteArrayInputStream leak because it doesn\u0027t do any real I/O, but it\u0027s easier to reason about if you always handle every InputStream with a try-with-resources.",
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4862a390_a8f0bb8f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-08-24T15:08:48Z",
      "side": 1,
      "message": "nit: missing space after \u0027-\u0027",
      "range": {
        "startLine": 149,
        "startChar": 39,
        "endLine": 149,
        "endChar": 40
      },
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4862a390_48e6dfdd",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-08-24T15:08:48Z",
      "side": 1,
      "message": "PatchLineComment is the class that represents an inline comment in the database. I think it\u0027s not a good choice for the JSON format. The JSON format should be similar to CommentInfo which is used in the REST API. Maybe we should just use CommentInfo?",
      "range": {
        "startLine": 152,
        "startChar": 39,
        "endLine": 152,
        "endChar": 55
      },
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8899fb95_c25e2251",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-08-24T15:27:30Z",
      "side": 1,
      "message": "Yeah PatchLineComment sucks. For example the hack we have to do of calling setCommentRevId everywhere because that value is not persisted in ReviewDb. Except (groan) CommentInfo doesn\u0027t have a RevId field either.\n\nIt saved work during the NoteDb transition to be able to continuee using the native ReviewDb types, but my long term hope was to drop those and use something saner and closer to the JSON output format. Now might be a good time to consider that.\n\nOf course, the downside is you would then have to write a CommentInfo -\u003e PatchLineComment converter. (Or conversely convert PatchLineComment from ReviewDb into ChangeInfo, but then you have to change all callers of PatchLineCommentUtil as well, so that\u0027s more work. Work we will probably want to do eventually, but still.)",
      "parentUuid": "4862a390_48e6dfdd",
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8899fb95_829edafd",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-08-24T15:27:30Z",
      "side": 1,
      "message": "This can be a class-level constant.",
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "288e4f81_2f94c931",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-08-24T04:46:45Z",
      "side": 1,
      "message": "This can be inlined into a single return statement without the intermediate list.\n\n return gson.fromJson(r, listType);",
      "range": {
        "startLine": 154,
        "startChar": 4,
        "endLine": 155,
        "endChar": 13
      },
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8899fb95_629bd60f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-08-24T15:27:30Z",
      "side": 1,
      "message": "Conversely, you could check if the first thing is a REVISION field or not (see checkHeaderLineFormat for the canonical way to do this). This has the advantage of supporting arbitrary leading whitespace in the JSON, which is valid.",
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a84b1ffc_db9f134e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 479,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-08-23T23:50:11Z",
      "side": 1,
      "message": "Nit: Wrap long lines.",
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c84e930b_3c94f131",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 480,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-08-23T23:50:11Z",
      "side": 1,
      "message": "OutputStreamWriter implements AutoCloseable, so it should be instantiated in try-with-resource.",
      "range": {
        "startLine": 480,
        "startChar": 4,
        "endLine": 480,
        "endChar": 57
      },
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8899fb95_2295ced6",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 484,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-08-24T15:27:30Z",
      "side": 1,
      "message": "PLC_ORDER already compares patch set IDs, but it compares filenames first, so this doesn\u0027t give you the right order.\n\nThis can all just be:\n\n List\u003cPatchLineComment\u003e asList \u003d PLC_ORDER.sortedCopy(comments.values());",
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c84e930b_dc9f0d4e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 491,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-08-23T23:50:11Z",
      "side": 1,
      "message": "nit: Missing new lines.",
      "range": {
        "startLine": 491,
        "startChar": 27,
        "endLine": 491,
        "endChar": 37
      },
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8899fb95_4298d210",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 491,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-08-24T15:27:30Z",
      "side": 1,
      "message": "https://google.github.io/styleguide/javaguide.html#s4.1.2-blocks-k-r-style",
      "parentUuid": "c84e930b_dc9f0d4e",
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c84e930b_fca449a0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 500,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-08-23T23:50:11Z",
      "side": 1,
      "message": "This internal try-block won\u0027t be needed if osw is opened in t-w-r per comment at #480.",
      "range": {
        "startLine": 496,
        "startChar": 4,
        "endLine": 500,
        "endChar": 5
      },
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8899fb95_02552a2d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 500,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-08-24T15:27:30Z",
      "side": 1,
      "message": "And the answer to what to do about exceptions is just let them propagate. The old code just happens to not throw any exceptions because it uses PrintWriter. (PrintWriter is kind of a mistake of an API, since it requires you to call checkError() after each write to detect errors, which of course has its benefits relative to exceptions but this is Java so literally nobody ever does that.)\n\nIn practice the only caller is RevisionNoteBuilder#build which passes a ByteArrayOutputStream so it won\u0027t throw.",
      "parentUuid": "c84e930b_fca449a0",
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8899fb95_e259266b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-08-24T15:27:30Z",
      "side": 1,
      "message": "As above I think you can just inline buildNoteJson here and drop the old code.",
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a84b1ffc_fba44fa0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/NoteDbModule.java",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-08-23T23:50:11Z",
      "side": 1,
      "message": "Unintentional change?",
      "revId": "4a875a1264793e47c7eac0c722a2b8f371e6bf59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}