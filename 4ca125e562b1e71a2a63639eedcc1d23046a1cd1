{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "83835c86_293f8b08",
        "filename": "java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 2
      },
      "lineNbr": 282,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-21T17:13:59Z",
      "side": 1,
      "message": "nit: unrelated change",
      "range": {
        "startLine": 281,
        "startChar": 0,
        "endLine": 282,
        "endChar": 33
      },
      "revId": "4ca125e562b1e71a2a63639eedcc1d23046a1cd1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aae23beb_1674c9c2",
        "filename": "java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 2
      },
      "lineNbr": 282,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-04-21T17:35:53Z",
      "side": 1,
      "message": "noticed that but this is how gjf (called from command line treats it as of version 1.10.0) can try to revert it.",
      "parentUuid": "83835c86_293f8b08",
      "range": {
        "startLine": 281,
        "startChar": 0,
        "endLine": 282,
        "endChar": 33
      },
      "revId": "4ca125e562b1e71a2a63639eedcc1d23046a1cd1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49634e72_c9d450af",
        "filename": "java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 2
      },
      "lineNbr": 293,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-21T17:13:59Z",
      "side": 1,
      "message": "nit: unrelated change",
      "range": {
        "startLine": 291,
        "startChar": 1,
        "endLine": 293,
        "endChar": 0
      },
      "revId": "4ca125e562b1e71a2a63639eedcc1d23046a1cd1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5bb5207_f76e47e5",
        "filename": "java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 2
      },
      "lineNbr": 324,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-21T17:13:59Z",
      "side": 1,
      "message": "Have you measured the performance implications of this dump?",
      "range": {
        "startLine": 324,
        "startChar": 20,
        "endLine": 324,
        "endChar": 41
      },
      "revId": "4ca125e562b1e71a2a63639eedcc1d23046a1cd1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc7f64bf_5529439b",
        "filename": "java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 2
      },
      "lineNbr": 324,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-04-21T17:35:53Z",
      "side": 1,
      "message": "not yet, wanted to gather some feedback on the presented solution - there is no dedicated method hence dump needs to be performed...",
      "parentUuid": "f5bb5207_f76e47e5",
      "range": {
        "startLine": 324,
        "startChar": 20,
        "endLine": 324,
        "endChar": 41
      },
      "revId": "4ca125e562b1e71a2a63639eedcc1d23046a1cd1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d412e6d0_8c65a9f5",
        "filename": "java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 2
      },
      "lineNbr": 324,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-04-21T17:57:04Z",
      "side": 1,
      "message": "in the worst case we could have it as configurable/optional but I would treat it as the last resort option ;)",
      "parentUuid": "bc7f64bf_5529439b",
      "range": {
        "startLine": 324,
        "startChar": 20,
        "endLine": 324,
        "endChar": 41
      },
      "revId": "4ca125e562b1e71a2a63639eedcc1d23046a1cd1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3e39570_a0795759",
        "filename": "java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 2
      },
      "lineNbr": 324,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-21T19:26:31Z",
      "side": 1,
      "message": "Because this is a callback metric, it will get invoked every time that the metric is read. If this method is very very cheap (micro-secs) then it would take millions of calls per second to exploit it. However, if this method is expensive (msecs) then a much lower rate could create problems.\n\nCan you measure it with a simple loop?",
      "parentUuid": "d412e6d0_8c65a9f5",
      "range": {
        "startLine": 324,
        "startChar": 20,
        "endLine": 324,
        "endChar": 41
      },
      "revId": "4ca125e562b1e71a2a63639eedcc1d23046a1cd1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a35afff_6c5914b6",
        "filename": "java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 2
      },
      "lineNbr": 324,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-04-22T05:03:14Z",
      "side": 1,
      "message": "sure I will develop sth to measure it (under java8 and java11), thanks for the hint",
      "parentUuid": "e3e39570_a0795759",
      "range": {
        "startLine": 324,
        "startChar": 20,
        "endLine": 324,
        "endChar": 41
      },
      "revId": "4ca125e562b1e71a2a63639eedcc1d23046a1cd1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}