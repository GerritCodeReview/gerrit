{
  "comments": [
    {
      "key": {
        "uuid": "280d141b_f368a1d7",
        "filename": "polygerrit-ui/app/behaviors/rest-client-behavior.html",
        "patchSetId": 26
      },
      "lineNbr": 135,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-03-13T23:06:42Z",
      "side": 1,
      "message": "This might look cleaner as an ES5 getter method, so the parens can be omitted when it\u0027s used.\n\nget baseUrl: {\n  // ...\n}\n\nIf not defined as an ES5 getter, I\u0027d recommend naming it like `getBaseUrl`, but that feels little heavier.",
      "range": {
        "startLine": 135,
        "startChar": 4,
        "endLine": 135,
        "endChar": 25
      },
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94c9d9bc_15cee3ec",
        "filename": "polygerrit-ui/app/behaviors/rest-client-behavior.html",
        "patchSetId": 26
      },
      "lineNbr": 135,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2017-03-13T23:35:31Z",
      "side": 1,
      "message": "It seems that fails. So i will name the variable getBaseUrl :)",
      "parentUuid": "280d141b_f368a1d7",
      "range": {
        "startLine": 135,
        "startChar": 4,
        "endLine": 135,
        "endChar": 25
      },
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7dc7232_06c1bb07",
        "filename": "polygerrit-ui/app/behaviors/rest-client-behavior.html",
        "patchSetId": 26
      },
      "lineNbr": 136,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-03-13T23:06:42Z",
      "side": 1,
      "message": "Since this is only interested in base URLs defined on `window`, I\u0027d recommend the following test:\n\n  if (window.polygerrit_baseurl) {",
      "range": {
        "startLine": 136,
        "startChar": 10,
        "endLine": 136,
        "endChar": 51
      },
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f9481a7_2e60d926",
        "filename": "polygerrit-ui/app/behaviors/rest-client-behavior.html",
        "patchSetId": 26
      },
      "lineNbr": 136,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2017-03-13T23:35:31Z",
      "side": 1,
      "message": "Thanks, done.",
      "parentUuid": "c7dc7232_06c1bb07",
      "range": {
        "startLine": 136,
        "startChar": 10,
        "endLine": 136,
        "endChar": 51
      },
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd640ccd_a1f21a59",
        "filename": "polygerrit-ui/app/behaviors/rest-client-behavior.html",
        "patchSetId": 26
      },
      "lineNbr": 140,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-03-13T23:06:42Z",
      "side": 1,
      "message": "Nitpick: no need for the else. Can just end with:\n\n return \u0027\u0027;",
      "range": {
        "startLine": 138,
        "startChar": 7,
        "endLine": 140,
        "endChar": 7
      },
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f94c0192_b63baad3",
        "filename": "polygerrit-ui/app/behaviors/rest-client-behavior.html",
        "patchSetId": 26
      },
      "lineNbr": 140,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2017-03-13T23:35:31Z",
      "side": 1,
      "message": "Thanks, done.",
      "parentUuid": "cd640ccd_a1f21a59",
      "range": {
        "startLine": 138,
        "startChar": 7,
        "endLine": 140,
        "endChar": 7
      },
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d320824_12473342",
        "filename": "polygerrit-ui/app/elements/core/gr-router/gr-router.js",
        "patchSetId": 26
      },
      "lineNbr": 38,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-03-13T23:06:42Z",
      "side": 1,
      "message": "ðŸ˜ƒ",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 38,
        "endChar": 3
      },
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94ab154f_b2331750",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 26
      },
      "lineNbr": 182,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-03-13T23:06:42Z",
      "side": 1,
      "message": "Since we require prefixing with the base URL on every API request, it seems safer to prefix it inside of the underlying methods.\n\nThis file has a few utility networking methods such as:\n\n* _fetchSharedCacheURL\n* send\n* fetchJSON\n* _fetchB64File\n\nSince they\u0027ll never be used without the prefix, I\u0027d prefer if they could be passed un-prefixed URLs to them, and have them set the prefix internally. Possibly it only needs to be added to the implementation of `send`.\n\nThat way, there aren\u0027t so many modifications needed in this file.",
      "range": {
        "startLine": 182,
        "startChar": 39,
        "endLine": 182,
        "endChar": 53
      },
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d1c7c0c_b58b16ca",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 26
      },
      "lineNbr": 182,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2017-03-14T16:22:39Z",
      "side": 1,
      "message": "Hi it seems i have to do this as testing your feedback locally fails because it needs to be in fetchJSON and _fetchSharedCacheURL",
      "parentUuid": "94ab154f_b2331750",
      "range": {
        "startLine": 182,
        "startChar": 39,
        "endLine": 182,
        "endChar": 53
      },
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6daac564_bb2b5e64",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 26
      },
      "lineNbr": 182,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2017-03-14T16:38:51Z",
      "side": 1,
      "message": "I\u0027ve managed to do it now :)",
      "parentUuid": "6d1c7c0c_b58b16ca",
      "range": {
        "startLine": 182,
        "startChar": 39,
        "endLine": 182,
        "endChar": 53
      },
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20b88ae4_45835bef",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 26
      },
      "lineNbr": 1049,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-03-13T23:06:42Z",
      "side": 1,
      "message": "Nitpicking the name of this property: what about something like ...\n\n window.CONFIG_BASE_URL\n\n... to distinguish the property as a configuration constant?",
      "range": {
        "startLine": 1049,
        "startChar": 17,
        "endLine": 1049,
        "endChar": 35
      },
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcfa20cc_f9e39149",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 26
      },
      "lineNbr": 1049,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2017-03-13T23:35:31Z",
      "side": 1,
      "message": "Would that mean doing var CONFIG_BASE_URL \u003d \u0027/r\u0027; ?",
      "parentUuid": "20b88ae4_45835bef",
      "range": {
        "startLine": 1049,
        "startChar": 17,
        "endLine": 1049,
        "endChar": 35
      },
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcb8b07b_b26fc4f3",
        "filename": "polygerrit-ui/app/index.html",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 1011624
      },
      "writtenOn": "2017-03-13T09:13:38Z",
      "side": 1,
      "message": "An alternative approach: \n\nRender index.html through a template system (soy is used at other places) before serving it (currently done from gerrit/httpd/raw/StaticModule.java) and inject the necessary parts at this point (the information is available from canonicalUrl etc in the config). Then no need arises to add a special js file at a possibly otherwise unrelated location.\n\nThe you could also use fixed instead of computed hrefs.",
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bd87a20_1a9bc646",
        "filename": "polygerrit-ui/app/index.html",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2017-03-13T09:17:00Z",
      "side": 1,
      "message": "Oh I have no idea how to do that.\n\nWould you know how to do that please?",
      "parentUuid": "dcb8b07b_b26fc4f3",
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "930b3691_c97a79b7",
        "filename": "polygerrit-ui/app/index.html",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2017-03-13T16:31:49Z",
      "side": 1,
      "message": "what we could do is create a js file through java code like we already do for gwt for gerrit. The variable could be based on the canonicalUrl or a new config introduced. Though im not sure how to do that either but i have been looking into doing that.",
      "parentUuid": "dcb8b07b_b26fc4f3",
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20d6bcf4_b8c7dfbd",
        "filename": "polygerrit-ui/app/index.html",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 1011624
      },
      "writtenOn": "2017-03-13T16:56:14Z",
      "side": 1,
      "message": "That would not help too much in all setups. We host gerrit (and a few other things) on different machines, and the canonical host just proxies to the via different pathes. The toplevel is occupied by another application. So the the script file needs to get resolved on inital loading. \nAs the index.hmtl file is fixed during runtime, one could even generate it during init (store it in static? )and point gerrit/httpd/raw/StaticModule.java#getPolyGerritUiIndexServlet  to this new file.",
      "parentUuid": "930b3691_c97a79b7",
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c00b2b07_6d4c10f7",
        "filename": "polygerrit-ui/app/index.html",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2017-03-13T17:12:45Z",
      "side": 1,
      "message": "Generating it with init sounds better though not sure how that will work. Will it be like Documentation?",
      "parentUuid": "20d6bcf4_b8c7dfbd",
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d583fd8e_0513db2f",
        "filename": "polygerrit-ui/app/index.html",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2017-03-13T17:13:30Z",
      "side": 1,
      "message": "Im Wondering is there any other things in gerrit core that does what we want to do? I could follow those examples on doing this.",
      "parentUuid": "c00b2b07_6d4c10f7",
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75a4cc9b_157a4f2a",
        "filename": "polygerrit-ui/app/index.html",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-03-13T23:06:42Z",
      "side": 1,
      "message": "I like the idea of using Soy for this. Soy would provide a few additional advantages to PG. I\u0027ll look into it.\n\nLoading a separate script feels like the wrong approach, since it would add an additional request to all page-loads just to get a single, optional string.\n\nIn the meantime, for configuring the base-URL, would it be feasible to add the following script by manually editing the index.html or by inserting it through a Java request filter?\n\n  \u003cscript\u003ewindow.polygerrit_baseurl \u003d \u0027/my/path/\u0027;\u003c/script\u003e",
      "parentUuid": "d583fd8e_0513db2f",
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77331d34_e6e8e72b",
        "filename": "polygerrit-ui/app/index.html",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2017-03-13T23:35:31Z",
      "side": 1,
      "message": "I have been looking into java doing that one havn\u0027t found a way to do it.\n\nHow would i do that please?",
      "parentUuid": "75a4cc9b_157a4f2a",
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "305c211e_0d609dda",
        "filename": "polygerrit-ui/app/index.html",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2017-03-14T17:02:18Z",
      "side": 1,
      "message": "Also by editing the html woulden\u0027t you have to rebuild it? What happends if a user uses the offical gerrit war. We should get java request filter to do that though i have no idea how to do that and have done alot of github searches on doing that.",
      "parentUuid": "77331d34_e6e8e72b",
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5555d65_b0ec9995",
        "filename": "polygerrit-ui/app/index.html",
        "patchSetId": 26
      },
      "lineNbr": 23,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2017-03-14T18:48:27Z",
      "side": 1,
      "message": "We could also do that in a follow up change? As this patch will at least fix running polygerrit under prefixed url. We could do the java request filter in a follow up change as i have no idea how to do it currently.\n\nAnd would like to get this change into the gerrit 2.14 release :)",
      "parentUuid": "305c211e_0d609dda",
      "revId": "4cba70e54d8cbbb02948ed9de9fde5e3ad704a45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}