{
  "comments": [
    {
      "key": {
        "uuid": "AAAA1n///74\u003d",
        "filename": "Documentation/cmd-create-project.txt",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2010-07-16T18:17:00Z",
      "side": 1,
      "message": "Style-nit: Trailing whitespace.",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA1n///70\u003d",
        "filename": "Documentation/cmd-create-project.txt",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2010-07-16T18:17:00Z",
      "side": 1,
      "message": "Style-nit: Trailing whitespace.",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA1n///7k\u003d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/admin/ProjectRightsPanel.java",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2010-07-16T18:17:00Z",
      "side": 1,
      "message": "Why not Create Project at the root?\n\nHaving this would replace the need for repository.*.createGroup in gerrit.config.  I think there is less risk associated with creating a project than there is with being able to modify permissions for any project in the system.",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA1n///7o\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/ApprovalCategory.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2010-07-16T18:17:00Z",
      "side": 1,
      "message": "How about \"CPRJ\" instead?",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA1n///7s\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/ConfigUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 283,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2010-07-16T18:17:00Z",
      "side": 1,
      "message": "Style-nit: Please don\u0027t modify a file that hasn\u0027t changed.",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA1n///7g\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/GerritGlobalModule.java",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2010-07-16T18:17:00Z",
      "side": 1,
      "message": "Please don\u0027t change unmodified files.",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA1n///7c\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/PushReplication.java",
        "patchSetId": 1
      },
      "lineNbr": 417,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2010-07-16T18:17:00Z",
      "side": 1,
      "message": "Please don\u0027t change unmodified files.",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA1n///7Y\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/SchemaCreator.java",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2010-07-16T18:17:00Z",
      "side": 1,
      "message": "Style-nit: I\u0027d prefer to avoid changing this whitespace if we can.",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA1n///7U\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/SchemaCreator.java",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2010-07-16T18:17:00Z",
      "side": 1,
      "message": "Style-nit: We only put 1 blank line between methods.",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA1n///7M\u003d",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/commands/CreateProject.java",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2010-07-16T18:17:00Z",
      "side": 1,
      "message": "Why do we need to test isOwnerAnyRef here?  Shouldn\u0027t it be sufficient that canCreateParent() is true?",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA1n///7I\u003d",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/commands/CreateProject.java",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2010-07-16T18:17:00Z",
      "side": 1,
      "message": "My problem with this logic is there is no validation that the new child is below the parent.\n\nBy that I mean, if I create \"kernel\" as a permissions only project and grant \"Create Project\" on it to \"people\"... anyone in people can create any project they want on the server, such as \"secret/foo\", so long as they set the parent to be \"kernel\".\n\nSo all this is doing is forcing you to pick a particular parent project for permissions inheritance.  But it doesn\u0027t restrict what namespace(s) you are permitted to perform the creation under.\n\nBased on the commit message and the description of the AccessCategory, I expected this to validate that the new project name is prefixed by the parent project name.  So Create Project in \"kernel\" permits me to create \"kernel/common\" as a new project, but not \"secret/foo\".",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA3H///2A\u003d",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/commands/CreateProject.java",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1004010
      },
      "writtenOn": "2010-07-21T16:23:36Z",
      "side": 1,
      "message": "Ok, so what you want is only avoid child project creation with a prefix name different from the parent when using slash as part of the name?\n\nIs that right?",
      "parentUuid": "AAAA1n///7I\u003d",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA3H///1E\u003d",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/commands/CreateProject.java",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2010-07-21T16:38:53Z",
      "side": 1,
      "message": "Maybe we just are assuming different requirements.  As I understand this code, it lets you create a project with any name, but you are required to inherit particular permissions into that new project.\n\nBut based on the description of the feature, and how we implement branch level ownership, I assumed this would restrict the name you can give projects to be under a particular directory tree.  So that on a single server you can give permission to create \"kernel/*\" to kernel engineers, and platform/external/* to external library maintainers, and platform/services/* to the services folks... and they can\u0027t accidentally create a project outside of that directory.\n\nWhat was the original goal of this code?  To just enforce that permissions are inherited when Bob creates a project?  Or to restrict the area Bob can create a project in?  Or both?",
      "parentUuid": "AAAA3H///2A\u003d",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA3H///z8\u003d",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/commands/CreateProject.java",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1004010
      },
      "writtenOn": "2010-07-21T17:28:47Z",
      "side": 1,
      "message": "well, as far as I understood from the requirements I got from Ulrik, we just need to permit for a certain group to create projects only as children of a specific parent, in other words, under a specific subtree of the project inheritance.\n\nSo, the goal is to restrict the area Bob can create a project in. Correct.\nBut also the rights will be automatically inherited for children projects as it is currently.\nAnyway, if Bob can create a project under a specific parent, he will be able to create children of this child project just created. \n\nI don\u0027t think the project name is relevant in this case... \nThis feature was finished before we implement branch level ownership... we were not supposed to consider branches on it.\nI don\u0027t know if there is connection between the project name and the branch it is stored. Is there?",
      "parentUuid": "AAAA3H///1E\u003d",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA3H///zs\u003d",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/commands/CreateProject.java",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2010-07-21T17:43:17Z",
      "side": 1,
      "message": "So Ulrik\u0027s only requirement was that permission inheritance was enforced but the name wasn\u0027t relevant?  Odd.  Its not how I would have assumed it.  I think most admins would want the name to be part of the restriction.  If you can create projects that are children of the \"kernel\" project then I think most people would assume that means you can only create projects whose name starts with \"kernel/\".\n\nUnles Ulrik disagrees, I think we should check the project name prefix here too.",
      "parentUuid": "AAAA3H///z8\u003d",
      "revId": "4d9ff6e7f544e6d6de96b71e3a4af80a36aca6e3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}