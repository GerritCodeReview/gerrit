{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6d0bff0a_612202c4",
        "filename": "java/com/google/gerrit/server/notedb/AbstractChangeNotes.java",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-10-05T09:21:34Z",
      "side": 1,
      "message": "it seems that query lookup that was hoped to be avoided is still here...",
      "range": {
        "startLine": 236,
        "startChar": 6,
        "endLine": 236,
        "endChar": 61
      },
      "revId": "4e32e5dcc3c9912e50079d5b6113270a329da5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e8555c8_cb1bbe5d",
        "filename": "java/com/google/gerrit/server/notedb/AbstractChangeNotes.java",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-10-05T21:04:43Z",
      "side": 1,
      "message": "Yes, but I\u0027m not sure why this is needed (it was from Han-Wen\u0027s change). There\u0027s already a \u0027shouldExist\u0027 boolean in ChangeNotes that seems to have a similar purpose. Maybe they can be consolidated?",
      "parentUuid": "6d0bff0a_612202c4",
      "range": {
        "startLine": 236,
        "startChar": 6,
        "endLine": 236,
        "endChar": 61
      },
      "revId": "4e32e5dcc3c9912e50079d5b6113270a329da5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f803adc3_1bf69d88",
        "filename": "java/com/google/gerrit/server/notedb/AbstractChangeNotes.java",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-10-06T11:13:48Z",
      "side": 1,
      "message": "from a quick look, shouldExist serves a different purpose, as it might throw NoSuchChangeException.\n\nThe verification here is so we can return 412 if we get a SHA-1 that doesn\u0027t exist on the meta branch. That can be a signal of replication delay, and signals to the caller that they should wait and retry. (This is for the use-case of getting a ref update through some other pubsub mechanism.)\n\nYou could try to lift this check into GetChange instead.",
      "parentUuid": "6e8555c8_cb1bbe5d",
      "range": {
        "startLine": 236,
        "startChar": 6,
        "endLine": 236,
        "endChar": 61
      },
      "revId": "4e32e5dcc3c9912e50079d5b6113270a329da5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "905674f3_c7f08317",
        "filename": "java/com/google/gerrit/server/notedb/AbstractChangeNotes.java",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-10-06T19:57:58Z",
      "side": 1,
      "message": "\u003e from a quick look, shouldExist serves a different purpose, as it might throw NoSuchChangeException.\n\u003e \n\u003e The verification here is so we can return 412 if we get a SHA-1 that doesn\u0027t exist on the meta branch. That can be a signal of replication delay, and signals to the caller that they should wait and retry. (This is for the use-case of getting a ref update through some other pubsub mechanism.)\n\u003e \n\u003e You could try to lift this check into GetChange instead.\n\nI see, then it is correct NOT to do the check in stable-3.3 because there isn\u0027t the ability to request the meta-SHA1 from the REST-API. The method is only exposed as a Java API. I would try to minimise the moving parts to make the merge up easier.\n\n@Han-Wen: WDYT?",
      "parentUuid": "f803adc3_1bf69d88",
      "range": {
        "startLine": 236,
        "startChar": 6,
        "endLine": 236,
        "endChar": 61
      },
      "revId": "4e32e5dcc3c9912e50079d5b6113270a329da5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69d3ddbc_d070644e",
        "filename": "java/com/google/gerrit/server/notedb/AbstractChangeNotes.java",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-10-06T20:27:49Z",
      "side": 1,
      "message": "\u003e \u003e from a quick look, shouldExist serves a different purpose, as it might throw NoSuchChangeException.\n\nBut wouldn\u0027t that NoSuchChangeException also potentially indicate replication delay?\n\n\u003e I see, then it is correct NOT to do the check in stable-3.3 because there isn\u0027t the ability to request the meta-SHA1 from the REST-API. The method is only exposed as a Java API. I would try to minimise the moving parts to make the merge up easier.\n\nThe difference I see is that this verifyMetaId() proves the id is on this meta ref vs just being an object that\u0027s available somehow. Is that accurate? If yes, is it an important distinction for either the GetChange use case or the use case Luca is pursuing? It seems like a \"trust\" kind of idea, which is probably more applicable to the GetChange use case since there the id comes from user input. i.e. if the user somehow had the metaRefId for some other change they\u0027re not allowed to see, does not confirming that id belongs to the expected change present a security risk?\n\nIf we need separate trusted and untrusted paths, I would like to figure that out now so that the merge up doesn\u0027t break anything unexpectedly.",
      "parentUuid": "905674f3_c7f08317",
      "range": {
        "startLine": 236,
        "startChar": 6,
        "endLine": 236,
        "endChar": 61
      },
      "revId": "4e32e5dcc3c9912e50079d5b6113270a329da5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8257d12e_f5b5589d",
        "filename": "java/com/google/gerrit/server/notedb/AbstractChangeNotes.java",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-10-06T21:12:53Z",
      "side": 1,
      "message": "\u003e \u003e I see, then it is correct NOT to do the check in stable-3.3 because there isn\u0027t the ability to request the meta-SHA1 from the REST-API. The method is only exposed as a Java API. I would try to minimise the moving parts to make the merge up easier.\n\u003e \n\u003e The difference I see is that this verifyMetaId() proves the id is on this meta ref vs just being an object that\u0027s available somehow. Is that accurate?\n\nAlmost: the verifyMetaId() is an input validation that assumes that the SHA1 is coming from outside and therefore needs to be checked.\n\n\u003e If yes, is it an important distinction for either the GetChange use case or the use case Luca is pursuing?\n\nYes.\n\n\u003e It seems like a \"trust\" kind of idea, which is probably more applicable to the GetChange use case since there the id comes from user input. i.e. if the user somehow had the metaRefId for some other change they\u0027re not allowed to see, does not confirming that id belongs to the expected change present a security risk?\n\nI believe the verification of the meta-id is a check that needs to stay on master, possibly pulled closer to the REST-API.\n\n\u003e If we need separate trusted and untrusted paths, I would like to figure that out now so that the merge up doesn\u0027t break anything unexpectedly.\n\nThere isn\u0027t that distinction on stable-3.3, because the untrusted path doesn\u0027t exist. But I agree with you that we need that structure to be adapted on master *before* the merge up, so that the check happens closer to the REST-API and we do not risk to forget to validate the SHA1 in input.",
      "parentUuid": "69d3ddbc_d070644e",
      "range": {
        "startLine": 236,
        "startChar": 6,
        "endLine": 236,
        "endChar": 61
      },
      "revId": "4e32e5dcc3c9912e50079d5b6113270a329da5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ced7f134_fdef3d72",
        "filename": "java/com/google/gerrit/server/notedb/AbstractChangeNotes.java",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-10-07T10:10:21Z",
      "side": 1,
      "message": "\u003e But wouldn\u0027t that NoSuchChangeException also potentially indicate replication delay?\n\nyes; if you get a NSCE on an update (000000..00 -\u003e abcd123.. ) you should also retry.",
      "parentUuid": "8257d12e_f5b5589d",
      "range": {
        "startLine": 236,
        "startChar": 6,
        "endLine": 236,
        "endChar": 61
      },
      "revId": "4e32e5dcc3c9912e50079d5b6113270a329da5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "402e3842_fe9fc1c9",
        "filename": "java/com/google/gerrit/server/notedb/AbstractChangeNotes.java",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-10-08T00:02:53Z",
      "side": 1,
      "message": "This part has been removed in stable-3.3. Marking this as resolved. Feel free to re-open it if there is anything else to clarify.",
      "parentUuid": "ced7f134_fdef3d72",
      "range": {
        "startLine": 236,
        "startChar": 6,
        "endLine": 236,
        "endChar": 61
      },
      "revId": "4e32e5dcc3c9912e50079d5b6113270a329da5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f960ef61_1e7449e6",
        "filename": "java/com/google/gerrit/server/notedb/AbstractChangeNotes.java",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-10-13T16:46:53Z",
      "side": 1,
      "message": "\u003e But I agree with you that we need that structure to be adapted on master *before* the merge up, so that the check happens closer to the REST-API and we do not risk to forget to validate the SHA1 in input.\n\nDo you have a change for master ready that does this?",
      "parentUuid": "402e3842_fe9fc1c9",
      "range": {
        "startLine": 236,
        "startChar": 6,
        "endLine": 236,
        "endChar": 61
      },
      "revId": "4e32e5dcc3c9912e50079d5b6113270a329da5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fca3bf5_c73a1e33",
        "filename": "java/com/google/gerrit/server/notedb/AbstractChangeNotes.java",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-10-13T21:40:54Z",
      "side": 1,
      "message": "Done with I1145392f8 (WIP). I realised that the original change Ia54acb37e1 did not include any tests, which I am going to address as a separate change.\n\nOnce I\u0027ve got tests, I can finalise I1145392f8.",
      "parentUuid": "f960ef61_1e7449e6",
      "range": {
        "startLine": 236,
        "startChar": 6,
        "endLine": 236,
        "endChar": 61
      },
      "revId": "4e32e5dcc3c9912e50079d5b6113270a329da5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce51756a_dd6e9af7",
        "filename": "java/com/google/gerrit/server/notedb/AbstractChangeNotes.java",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-10-13T23:16:36Z",
      "side": 1,
      "message": "\u003e Done with I1145392f8 (WIP). I realised that the original change Ia54acb37e1 did not include any tests, which I am going to address as a separate change.\n\u003e \n\u003e Once I\u0027ve got tests, I can finalise I1145392f8.\n\nTests and change on master done, so that we are covered and we don\u0027t forget about it 👍",
      "parentUuid": "9fca3bf5_c73a1e33",
      "range": {
        "startLine": 236,
        "startChar": 6,
        "endLine": 236,
        "endChar": 61
      },
      "revId": "4e32e5dcc3c9912e50079d5b6113270a329da5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}