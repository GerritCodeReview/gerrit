{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "04d347a2_07eea8b6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 11,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-01-03T23:59:33Z",
      "side": 1,
      "message": "Maybe link to https://github.com/ben-manes/caffeine/wiki/Guava#asynchronous-notifications ?",
      "revId": "4e93d7bbdef2228f3e90e7e44b0565d62c180558",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b0f6a48_0c6cc7b3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 11,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-01-06T23:25:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04d347a2_07eea8b6",
      "revId": "4e93d7bbdef2228f3e90e7e44b0565d62c180558",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5af2fc87_96985870",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-01-03T00:06:35Z",
      "side": 1,
      "message": "This is now ready for review.",
      "revId": "4e93d7bbdef2228f3e90e7e44b0565d62c180558",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21cb231f_4bbb4c7f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-01-04T00:18:22Z",
      "side": 1,
      "message": "Thanks @nasser.grainawi@linaro.org for the review and useful pointers, fully appreciated üëç",
      "revId": "4e93d7bbdef2228f3e90e7e44b0565d62c180558",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fe12025_60419bd8",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 11
      },
      "lineNbr": 709,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-01-03T18:46:59Z",
      "side": 1,
      "message": "nit: `s/are assume/assume`",
      "range": {
        "startLine": 709,
        "startChar": 31,
        "endLine": 709,
        "endChar": 41
      },
      "revId": "4e93d7bbdef2228f3e90e7e44b0565d62c180558",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4617cca6_b9b9e5a2",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 11
      },
      "lineNbr": 709,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-01-06T23:25:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4fe12025_60419bd8",
      "range": {
        "startLine": 709,
        "startChar": 31,
        "endLine": 709,
        "endChar": 41
      },
      "revId": "4e93d7bbdef2228f3e90e7e44b0565d62c180558",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe4716ce_a38c694e",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 11
      },
      "lineNbr": 710,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-01-03T18:46:59Z",
      "side": 1,
      "message": "nit: either `in Gerrit v3.1 or earlier versions` or IMHO better `prior Gerrit 3.2`",
      "range": {
        "startLine": 710,
        "startChar": 15,
        "endLine": 710,
        "endChar": 46
      },
      "revId": "4e93d7bbdef2228f3e90e7e44b0565d62c180558",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4cc7f3b_fd3a47ae",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 11
      },
      "lineNbr": 710,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-01-06T23:37:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe4716ce_a38c694e",
      "range": {
        "startLine": 710,
        "startChar": 15,
        "endLine": 710,
        "endChar": 46
      },
      "revId": "4e93d7bbdef2228f3e90e7e44b0565d62c180558",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05abb7d4_bd7d2e0b",
        "filename": "java/com/google/gerrit/server/cache/mem/DefaultMemoryCacheFactory.java",
        "patchSetId": 11
      },
      "lineNbr": 122,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-01-03T23:59:33Z",
      "side": 1,
      "message": "This affects more than just the listeners, it\u0027s all [async operations][1].\n\nIf we specifically want the removal listener to run synchronously, caffeine has [instructions for how to do that][2] and says to use `Caffeine.evictionListener()`\n\n[1]: https://www.javadoc.io/static/com.github.ben-manes.caffeine/caffeine/3.1.2/com.github.benmanes.caffeine/com/github/benmanes/caffeine/cache/Caffeine.html#executor(java.util.concurrent.Executor)\n[2]: https://github.com/ben-manes/caffeine/wiki/Removal#removal-listeners",
      "range": {
        "startLine": 122,
        "startChar": 6,
        "endLine": 122,
        "endChar": 55
      },
      "revId": "4e93d7bbdef2228f3e90e7e44b0565d62c180558",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88ec70be_ec468275",
        "filename": "java/com/google/gerrit/server/cache/mem/DefaultMemoryCacheFactory.java",
        "patchSetId": 11
      },
      "lineNbr": 122,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-01-04T00:18:22Z",
      "side": 1,
      "message": "Good catch, let me look at that.",
      "parentUuid": "05abb7d4_bd7d2e0b",
      "range": {
        "startLine": 122,
        "startChar": 6,
        "endLine": 122,
        "endChar": 55
      },
      "revId": "4e93d7bbdef2228f3e90e7e44b0565d62c180558",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32bbc162_542d27e8",
        "filename": "java/com/google/gerrit/server/cache/mem/DefaultMemoryCacheFactory.java",
        "patchSetId": 11
      },
      "lineNbr": 122,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-01-04T09:23:44Z",
      "side": 1,
      "message": "IIUIC the problem with _eviction listener_ is that it is called _only_ when the policy caused removal happens however AFAIU both plugins use this functionality in the context of manually called invalidation:\n* site A removes entry from cache and the removal gets notified to site B\n* site B listens on the event in question, configures thread local variables to ensure that it is not notified back and calls `invalidate*` on cache to get rid of the value in question...\n\nLuca, Tony WDYT?",
      "parentUuid": "88ec70be_ec468275",
      "range": {
        "startLine": 122,
        "startChar": 6,
        "endLine": 122,
        "endChar": 55
      },
      "revId": "4e93d7bbdef2228f3e90e7e44b0565d62c180558",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84365977_4db42f7c",
        "filename": "java/com/google/gerrit/server/cache/mem/DefaultMemoryCacheFactory.java",
        "patchSetId": 11
      },
      "lineNbr": 122,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-01-06T23:25:21Z",
      "side": 1,
      "message": "\u003e If we specifically want the removal listener to run synchronously, caffeine has instructions for how to do that and says to use Caffeine.evictionListener()\n\nTrue, but only starting from Caffeine v2.9.x.\n\nAlso, the `Caffeine.evictionListener()` is different from the `Caffeine.removalListener()`:\n\nRemoval cause | Removal | Eviction | Description\n--------------+---------+----------+-------------\nEXPLICIT      | True    | False    | Entry evicted explicitly\nREPLACED      | True    | False    | Entry replaced with a new value\nCOLLECTED     | True    | True     | Entry garbage collected\nEXPIRED       | True    | True     | MaxAge expired\nSIZE          | True    | True     | Entry removed for saving space\n\nSee the [RemovalCause](https://github.com/ben-manes/caffeine/blob/master/caffeine/src/main/java/com/github/benmanes/caffeine/cache/RemovalCause.java) documentation.\n\nIf we were replacing the `removalListener` with `evictionListener` we would change the semantics and then potentially failing to invoke the listeners, introducing bugs.",
      "parentUuid": "32bbc162_542d27e8",
      "range": {
        "startLine": 122,
        "startChar": 6,
        "endLine": 122,
        "endChar": 55
      },
      "revId": "4e93d7bbdef2228f3e90e7e44b0565d62c180558",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d767bd01_d318d122",
        "filename": "java/com/google/gerrit/server/cache/mem/DefaultMemoryCacheFactory.java",
        "patchSetId": 11
      },
      "lineNbr": 122,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-01-06T23:37:42Z",
      "side": 1,
      "message": "A middle-ground and more consistent approach could be doing this:\n\n```\n[[cache.threads]]cache.threads::\n+\nNumber of threads to use when running asynchronous tasks.\nThe threads executor is delegated to when sending removal notifications to listeners,\nwhen asynchronous computations like refresh refreshAfterWrite are performed, or when\nperforming periodic maintenance.\n+\n**NOTE**: Setting it to 0 disables the dedicated thread pool and indexing will be done in the\nsame thread as the operation. This may result in evictions taking longer because the\nlisteners are executed in the caller\u0027s thread.\n+\nBy default, the JVM common ForkJoinPool is used.\n```\n\nBy having a generic definition of the executor\u0027s threads we would make this setting more aligned with the rest of Gerrit (see index.threads for instance).\n\nAlso, we would allow de-coupling the cache executor form the ForkJoinPool which could be busy in performing other asynchronous tasks not related to the cache.",
      "parentUuid": "84365977_4db42f7c",
      "range": {
        "startLine": 122,
        "startChar": 6,
        "endLine": 122,
        "endChar": 55
      },
      "revId": "4e93d7bbdef2228f3e90e7e44b0565d62c180558",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}