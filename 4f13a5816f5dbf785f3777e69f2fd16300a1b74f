{
  "comments": [
    {
      "key": {
        "uuid": "48907f99_0ffb05ef",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCache.java",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-12-18T01:41:36Z",
      "side": 1,
      "message": "Its not really serializable if the key fields used in hashCode/equals are transient.",
      "range": {
        "startLine": 70,
        "startChar": 4,
        "endLine": 72,
        "endChar": 42
      },
      "revId": "4f13a5816f5dbf785f3777e69f2fd16300a1b74f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6864639a_c8dc0f89",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCache.java",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-12-18T01:49:16Z",
      "side": 1,
      "message": "I\u0027m confused. This is what PatchListKey does. I have failed at finding the magic that depends on getters existing; can you point me to that so I can get a better understanding?",
      "parentUuid": "48907f99_0ffb05ef",
      "range": {
        "startLine": 70,
        "startChar": 4,
        "endLine": 72,
        "endChar": 42
      },
      "revId": "4f13a5816f5dbf785f3777e69f2fd16300a1b74f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e87e9324_ece1eb43",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCache.java",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-12-18T04:31:00Z",
      "side": 1,
      "message": "Look at PatchListKeyMarshaller in our internal tree for the code using the getters. This is unique to the Google build of Gerrit. Using transient has nothing to do with the getters existing (or not existing).\n\nPatchListKey can use transient because it implements its own serialization by implementing:\n\n  private void writeObject(final ObjectOutputStream out) throws IOException;\n  private void readObject(final ObjectInputStream in) throws IOException;\n\nSee line 117 and 123 of PatchListKey in open source Gerrit for the custom logic.",
      "parentUuid": "6864639a_c8dc0f89",
      "range": {
        "startLine": 70,
        "startChar": 4,
        "endLine": 72,
        "endChar": 42
      },
      "revId": "4f13a5816f5dbf785f3777e69f2fd16300a1b74f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48907f99_2ff849ef",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCache.java",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-12-18T01:41:36Z",
      "side": 1,
      "message": "I wonder if we should null out the Repository instance in the key in case that instance was held by the cache?\n\nIn normal gerrit its also held in the RepositoryCache. In our gerrit its a memory leak.",
      "range": {
        "startLine": 184,
        "startChar": 23,
        "endLine": 184,
        "endChar": 63
      },
      "revId": "4f13a5816f5dbf785f3777e69f2fd16300a1b74f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6864639a_e8e1d343",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCache.java",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-12-18T01:49:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48907f99_2ff849ef",
      "range": {
        "startLine": 184,
        "startChar": 23,
        "endLine": 184,
        "endChar": 63
      },
      "revId": "4f13a5816f5dbf785f3777e69f2fd16300a1b74f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}