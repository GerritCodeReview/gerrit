{
  "comments": [
    {
      "key": {
        "uuid": "399bf2ae_9e181913",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-04-28T18:27:11Z",
      "side": 1,
      "message": "Is this change really addressed to *one* single change?\nHow do you know how many changes the reindex failed for?\nPerhaps the same parsing exception would fail _hundreds_ of changes, but this change would still consider the reindex successful?",
      "range": {
        "startLine": 7,
        "startChar": 38,
        "endLine": 7,
        "endChar": 51
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2b5f12c_b5606a47",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-29T10:02:58Z",
      "side": 1,
      "message": "yes you are right. It is not a single change. The indexing already has a mechanism to warn/error if too many changes are failing.\n\nWe will have to decide if this non-fatal errors are mean to be counted as errors or not.",
      "parentUuid": "399bf2ae_9e181913",
      "range": {
        "startLine": 7,
        "startChar": 38,
        "endLine": 7,
        "endChar": 51
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f99d5de3_8ccabb09",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-30T11:44:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2b5f12c_b5606a47",
      "range": {
        "startLine": 7,
        "startChar": 38,
        "endLine": 7,
        "endChar": 51
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60ce7d18_2d9287c0",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-04-28T18:27:11Z",
      "side": 1,
      "message": "So any Runtime exception is considered non-fatal?",
      "range": {
        "startLine": 103,
        "startChar": 2,
        "endLine": 103,
        "endChar": 77
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3300fac0_6ca02ecf",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-29T10:02:58Z",
      "side": 1,
      "message": "Nope...the NonFatalChaneNotesExceoption is jsut extending the RuntimeException. It doesn\u0027t mean all the RuntimeException are non-fatal.",
      "parentUuid": "60ce7d18_2d9287c0",
      "range": {
        "startLine": 103,
        "startChar": 2,
        "endLine": 103,
        "endChar": 77
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eddb6f3e_f31e923f",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-30T11:44:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3300fac0_6ca02ecf",
      "range": {
        "startLine": 103,
        "startChar": 2,
        "endLine": 103,
        "endChar": 77
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c66a29cd_56d46e73",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-28T13:07:15Z",
      "side": 1,
      "message": "Transforming the exception in an OrmException is not the best, but it is the only exception type accepted by ChangeNotesResult.error :/",
      "range": {
        "startLine": 398,
        "startChar": 62,
        "endLine": 398,
        "endChar": 105
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bd8bd38_56ced1a7",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-29T11:24:36Z",
      "side": 1,
      "message": "This isn\u0027t the right way to wrap the exception, because the stack trace of the exception is lost. Most of the times the message isn\u0027t enough.",
      "parentUuid": "c66a29cd_56d46e73",
      "range": {
        "startLine": 398,
        "startChar": 62,
        "endLine": 398,
        "endChar": 105
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fce20cf_ab0e529a",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-29T11:40:40Z",
      "side": 1,
      "message": "I am not even sure it is correct to wrap it:\n* ideally I would have thrown an OrmException from CommentTimestampAdapter, but we can\u0027t change the \"read\" signature\n* probably this shouldn\u0027t even add up as an error, hence we should just probably catch the exception but not increase the number of errors (I think there is a mechanism in place to make indexing fails if the number of errors passes a certain threshold) \n* if we want to increase the error, maybe we should change the  ChangeNoteReult.error method signature\n\nSo probably the first question is: shall we account it as an error or not? I don\u0027t think we should.\n\nWDYT?",
      "parentUuid": "8bd8bd38_56ced1a7",
      "range": {
        "startLine": 398,
        "startChar": 62,
        "endLine": 398,
        "endChar": 105
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d97c29bc_51ac6a2d",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-30T11:44:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fce20cf_ab0e529a",
      "range": {
        "startLine": 398,
        "startChar": 62,
        "endLine": 398,
        "endChar": 105
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d701c9fc_1a0bf436",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-28T14:31:40Z",
      "side": 1,
      "message": "In this case I should probably re-throw the exception",
      "range": {
        "startLine": 399,
        "startChar": 8,
        "endLine": 399,
        "endChar": 9
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bafc8fad_d644a49f",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-04-29T11:19:58Z",
      "side": 1,
      "message": "yes you lost the exception if it\u0027s not NonFatalChangeNotesException",
      "parentUuid": "d701c9fc_1a0bf436",
      "range": {
        "startLine": 399,
        "startChar": 8,
        "endLine": 399,
        "endChar": 9
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27ffeb8b_fc4fb248",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-30T11:44:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bafc8fad_d644a49f",
      "range": {
        "startLine": 399,
        "startChar": 8,
        "endLine": 399,
        "endChar": 9
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5970548_99bea9d6",
        "filename": "java/com/google/gerrit/server/notedb/CommentTimestampAdapter.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-04-28T18:27:11Z",
      "side": 1,
      "message": "Why do we need to wrap this at all?\ncouldn\u0027t we just catch DateTimeParseException in c.g.g.s.n.ChangeNotes#L397",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 69,
        "endChar": 7
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "024688c6_98127b98",
        "filename": "java/com/google/gerrit/server/notedb/CommentTimestampAdapter.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-29T10:02:58Z",
      "side": 1,
      "message": "I wanted to categorise somehow exceptions which are not considered fatal since I believe this might not be the only case.\n\nI believe that in the \"toResult\" method we only want to know if an exception is fatal of not, we don\u0027 want to know where it has been raised or its real type.",
      "parentUuid": "b5970548_99bea9d6",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 69,
        "endChar": 7
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2cbce38_5af29254",
        "filename": "java/com/google/gerrit/server/notedb/CommentTimestampAdapter.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-04-29T11:19:58Z",
      "side": 1,
      "message": "But I\u0027m not sure if this class should decide what is fatal or non fatal exception. I believe client of this class should decide what to do with DataTimeParseException",
      "parentUuid": "024688c6_98127b98",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 69,
        "endChar": 7
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4305f6d_c73e37c7",
        "filename": "java/com/google/gerrit/server/notedb/CommentTimestampAdapter.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-29T11:24:36Z",
      "side": 1,
      "message": "IMHO we would in theory returned an Either[Exception,Timestamp] but Java doesn\u0027t have this data-type :-(\n\nAlso, we can\u0027t control this method signature because we are just parsing a JSON object type.\n\nWe we want to wrap, not using the IOException then?",
      "parentUuid": "024688c6_98127b98",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 69,
        "endChar": 7
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a1a9a1e_d7706a74",
        "filename": "java/com/google/gerrit/server/notedb/CommentTimestampAdapter.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-29T11:40:40Z",
      "side": 1,
      "message": "\u003e IMHO we would in theory returned an Either[Exception,Timestamp] but Java doesn\u0027t have this data-type :-(\n\nYep, unfortunately not :(\n\n\u003e \n\u003e Also, we can\u0027t control this method signature because we are just parsing a JSON object type.\n\u003e \n\nYep, otherwise I would have probably thrown a generic OrmException \n\n\u003e We we want to wrap, not using the IOException then?\n\nWe need a way to distinguish this exception from another IOExcpetion, right?\n\nThe way I thought of doing that is by wrapping it in a client defined exception. Where you thinking something different?",
      "parentUuid": "c4305f6d_c73e37c7",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 69,
        "endChar": 7
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84e70670_bd853bfc",
        "filename": "java/com/google/gerrit/server/notedb/CommentTimestampAdapter.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-30T10:08:15Z",
      "side": 1,
      "message": "We could throw an IOException, but when we will have to do loads of unfolding of exceptions client side. Client side this is the stack we will get:\n\ncom.google.gson.JsonSyntaxException \u003d\u003e java.io.IOException \u003d\u003e java.time.format.DateTimeParseException\n\nIf we use a custom (i.e.: NonFatalChangeNotesException) exception we will just have a level of nesting.\n\nWDYT?",
      "parentUuid": "6a1a9a1e_d7706a74",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 69,
        "endChar": 7
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81703e8c_69bd04cd",
        "filename": "java/com/google/gerrit/server/notedb/CommentTimestampAdapter.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-30T10:10:32Z",
      "side": 1,
      "message": "Then just leave it as-is and just catch JsonSyntaxException on the upper layer and do not fail.",
      "parentUuid": "84e70670_bd853bfc",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 69,
        "endChar": 7
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c9f01ba_ecfdfdc5",
        "filename": "java/com/google/gerrit/server/notedb/CommentTimestampAdapter.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-04-30T11:44:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81703e8c_69bd04cd",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 69,
        "endChar": 7
      },
      "revId": "4fffa563b862cb4127588948d421df0e5897ddb5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}