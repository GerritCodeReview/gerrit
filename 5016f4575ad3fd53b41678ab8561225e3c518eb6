{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "90bc6e5a_2c6e1757",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-12-27T13:04:31Z",
      "side": 1,
      "message": "Apparently, these bug patterns: JdkObsolete and JavaUtilDate are overlapping?\nSee: issue 15492. It\u0027s just fine to fix all of them in the context of JdkObsolete.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 16
      },
      "revId": "5016f4575ad3fd53b41678ab8561225e3c518eb6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5f84770_18e98c08",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-27T13:07:53Z",
      "side": 1,
      "message": "Yes.\n\nIt may be that for JdkObsolete we are not able to remove all usages of Date (because some libs return this type and do not provide Instant). In this case maybe for these remaining usages of Date JavaUtilDate could still report anything useful?",
      "parentUuid": "90bc6e5a_2c6e1757",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 16
      },
      "revId": "5016f4575ad3fd53b41678ab8561225e3c518eb6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f2affb9_515d963d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-27T13:28:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e5f84770_18e98c08",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 16
      },
      "revId": "5016f4575ad3fd53b41678ab8561225e3c518eb6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f89c026_e9361828",
        "filename": "java/com/google/gerrit/server/restapi/config/ListTasks.java",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-01-02T08:16:22Z",
      "side": 1,
      "message": "This is a problematic change, as it changed the type from Timestamp to Instant in serializable class, without adding custom Serializer/Deserializer on GSon serialization machinery.\n\nThe problem was only detected by my attempt to make Gerrit@HEAD work on current JDK 17. I wrote issue 15502.\n\nI think there are two possible fixes:\n\n* Revert this change\n* Provide custom Serializer/Deserializer adapter for Instant type",
      "range": {
        "startLine": 122,
        "startChar": 4,
        "endLine": 122,
        "endChar": 29
      },
      "revId": "5016f4575ad3fd53b41678ab8561225e3c518eb6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}