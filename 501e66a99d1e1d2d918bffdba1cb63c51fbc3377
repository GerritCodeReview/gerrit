{
  "comments": [
    {
      "key": {
        "uuid": "ae6eb9f0_c531f904",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 21
      },
      "lineNbr": 349,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-05-16T20:21:48Z",
      "side": 1,
      "message": "person.toExternalString().toLowerCase(Locale.US)",
      "range": {
        "startLine": 349,
        "startChar": 23,
        "endLine": 349,
        "endChar": 60
      },
      "revId": "501e66a99d1e1d2d918bffdba1cb63c51fbc3377",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08097657_00237cce",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 21
      },
      "lineNbr": 349,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-05-17T16:02:24Z",
      "side": 1,
      "message": "We can\u0027t use this as it will append a timestamp at the end.\n\n[1]https://github.com/eclipse/jgit/blob/master/org.eclipse.jgit/src/org/eclipse/jgit/lib/PersonIdent.java#L363",
      "parentUuid": "ae6eb9f0_c531f904",
      "range": {
        "startLine": 349,
        "startChar": 23,
        "endLine": 349,
        "endChar": 60
      },
      "revId": "501e66a99d1e1d2d918bffdba1cb63c51fbc3377",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba0bd99b_6f1137a4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 21
      },
      "lineNbr": 349,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-05-17T17:10:31Z",
      "side": 1,
      "message": "Right, good point. You should use PersonIdent#appendSanitized instead of String.format, though.",
      "parentUuid": "08097657_00237cce",
      "range": {
        "startLine": 349,
        "startChar": 23,
        "endLine": 349,
        "endChar": 60
      },
      "revId": "501e66a99d1e1d2d918bffdba1cb63c51fbc3377",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c266303_1b14194a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 21
      },
      "lineNbr": 349,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-05-23T14:12:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba0bd99b_6f1137a4",
      "range": {
        "startLine": 349,
        "startChar": 23,
        "endLine": 349,
        "endChar": 60
      },
      "revId": "501e66a99d1e1d2d918bffdba1cb63c51fbc3377",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16f56871_8b6fba3a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 21
      },
      "lineNbr": 1128,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-05-16T20:21:48Z",
      "side": 1,
      "message": "We can only generate predicates with the exact variants if the exact field is present in the index, otherwise it will be an error, I believe. In other words I don\u0027t think this will work with old versions of the index; maybe try rebasing on Edwin\u0027s series to run tests against old schema versions and seeing if it passes?",
      "revId": "501e66a99d1e1d2d918bffdba1cb63c51fbc3377",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c23e62e_77742c04",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 21
      },
      "lineNbr": 1128,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-05-16T20:21:48Z",
      "side": 1,
      "message": "We can only generate predicates with the exact variants if the exact field is present in the index, otherwise it will be an error, I believe. In other words I don\u0027t think this will work with old versions of the index; maybe try rebasing on Edwin\u0027s series to run tests against old schema versions and seeing if it passes?",
      "revId": "501e66a99d1e1d2d918bffdba1cb63c51fbc3377",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4c57e0d_c83ef8d6",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 21
      },
      "lineNbr": 1128,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-05-17T16:02:24Z",
      "side": 1,
      "message": "Tests have been separated into \"EXACT\" and \"FULL_TEXT\". For FULL_TEXT tests, they will not try to construct \"EXACT\" field. So it should be fine?\n\nOf course, I have to remove the exact part in the following comments.",
      "parentUuid": "6c23e62e_77742c04",
      "revId": "501e66a99d1e1d2d918bffdba1cb63c51fbc3377",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "176f506e_4e167500",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 21
      },
      "lineNbr": 1128,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-05-17T17:10:31Z",
      "side": 1,
      "message": "It\u0027s not just about tests, it\u0027s about running in a live server.\n\nIf a server is running the old schema version (no exact fields present in the schema), and they search for [author:\"John Doe \u003cjdoe@example.com\u003e\"], won\u0027t that generate a predicate against the exactauthor field? That\u0027s what we need to avoid.",
      "parentUuid": "e4c57e0d_c83ef8d6",
      "revId": "501e66a99d1e1d2d918bffdba1cb63c51fbc3377",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86c085ee_7f85618a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 21
      },
      "lineNbr": 1128,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-05-18T06:59:52Z",
      "side": 1,
      "message": "Right. We add a new field, which may be used in the old execution path. \n\nThen how about split this fix into two steps:\n1- Add new fields and upgrdade ST-BTI schema.\n2- Update ChangeQueryBuilder to query with the new fields.",
      "parentUuid": "176f506e_4e167500",
      "revId": "501e66a99d1e1d2d918bffdba1cb63c51fbc3377",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5138eaed_098e0304",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 21
      },
      "lineNbr": 1128,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-05-18T09:26:46Z",
      "side": 1,
      "message": "Splitting the commit will only fix the problem for us, but upstream servers would still run into the issue:\n\n1. upstream uses old index without the field\n2. upstream deploys a new release that contains both your changes\n3. online reindexing starts to upgrade the index to the new version\n4. while the online reindexing is not finished yet, your new code runs against the old index and fails\n\nRather check with\n\n  if (args.getSchema().hasField(ChangeField.EXACT_AUTHOR)) {\n\nif the new field exists and execute the new code if yes, and otherwise the old code.",
      "parentUuid": "86c085ee_7f85618a",
      "revId": "501e66a99d1e1d2d918bffdba1cb63c51fbc3377",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28f03ca6_c40b438a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 21
      },
      "lineNbr": 1225,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-05-16T20:21:48Z",
      "side": 1,
      "message": "Hm, I think this can never match if Address.tryParse(who) returned null?",
      "range": {
        "startLine": 1225,
        "startChar": 24,
        "endLine": 1225,
        "endChar": 53
      },
      "revId": "501e66a99d1e1d2d918bffdba1cb63c51fbc3377",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20f8555b_1970ebc4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 21
      },
      "lineNbr": 1225,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-05-17T16:02:24Z",
      "side": 1,
      "message": "If the query is a name like \"John Doe\", it will match. \n\nIf \"exactPredicateFunc.apply(who)\" has results, then it should be a subset of \"Predicate.and(predicates)\". So it\u0027s useless, I will remove it.\n\nAnother thing in my mind is for query \"John Doe\", our current logic will return results of \"Doe John\", which is not strict. If we just want to return results matching user\u0027s query. Then we may not use FULL_TEXT at all. We can directly use EXACT fields.",
      "parentUuid": "28f03ca6_c40b438a",
      "range": {
        "startLine": 1225,
        "startChar": 24,
        "endLine": 1225,
        "endChar": 53
      },
      "revId": "501e66a99d1e1d2d918bffdba1cb63c51fbc3377",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}