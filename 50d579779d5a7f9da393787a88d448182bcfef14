{
  "comments": [
    {
      "key": {
        "uuid": "8b3bb366_17f5970b",
        "filename": "java/com/google/gerrit/extensions/api/changes/RevisionApi.java",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-08-14T10:02:13Z",
      "side": 1,
      "message": "I hope this doesn\u0027t break any client implementations. But I would say the risk for this is rather low.",
      "revId": "50d579779d5a7f9da393787a88d448182bcfef14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efe1cbc1_ecda134b",
        "filename": "java/com/google/gerrit/server/api/changes/RevisionApiImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 552,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-08-14T10:02:13Z",
      "side": 1,
      "message": "If the response is Response.None() this throws an UnsupportedOperationException. So maybe we should handle this case specially?",
      "range": {
        "startLine": 552,
        "startChar": 54,
        "endLine": 552,
        "endChar": 59
      },
      "revId": "50d579779d5a7f9da393787a88d448182bcfef14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35d47580_56bd00af",
        "filename": "java/com/google/gerrit/server/api/changes/RevisionApiImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 552,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-08-26T12:50:05Z",
      "side": 1,
      "message": "I went the other way here: Prolog can\u0027t produce Optional.empty as that would result in a ruleError. I added checkState calls and removed Optional from the method signature.\n\nbtw: We return Response.none() in other places too and I don\u0027t think we have Optionals there.",
      "parentUuid": "efe1cbc1_ecda134b",
      "range": {
        "startLine": 552,
        "startChar": 54,
        "endLine": 552,
        "endChar": 59
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "50d579779d5a7f9da393787a88d448182bcfef14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b223363b_aa56ad09",
        "filename": "java/com/google/gerrit/server/rules/PrologRuleEvaluator.java",
        "patchSetId": 2
      },
      "lineNbr": 270,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-08-14T10:02:13Z",
      "side": 1,
      "message": "I\u0027m a bit surprised that we can abort the loop here.\nI mean, the status would not change anymore and always stay OK, but maybe we would still collect more labels.\nAnyway, since this is not changed, I assume it\u0027s okay.",
      "range": {
        "startLine": 270,
        "startChar": 8,
        "endLine": 270,
        "endChar": 14
      },
      "revId": "50d579779d5a7f9da393787a88d448182bcfef14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68af3929_4e0f3025",
        "filename": "java/com/google/gerrit/server/rules/PrologRuleEvaluator.java",
        "patchSetId": 2
      },
      "lineNbr": 270,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-08-26T12:50:05Z",
      "side": 1,
      "message": "Likewise. This whole code is really hairy :(\n\nI hope we can move forward with moving it into a plugin soon.",
      "parentUuid": "b223363b_aa56ad09",
      "range": {
        "startLine": 270,
        "startChar": 8,
        "endLine": 270,
        "endChar": 14
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "50d579779d5a7f9da393787a88d448182bcfef14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}