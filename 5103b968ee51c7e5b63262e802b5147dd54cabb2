{
  "comments": [
    {
      "key": {
        "uuid": "AAABCH///I4\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 4
      },
      "lineNbr": 261,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-06-13T19:51:52Z",
      "side": 1,
      "message": "log.error(\"Error consulting rules.pl in \" + getProject().getName(), e);",
      "revId": "5103b968ee51c7e5b63262e802b5147dd54cabb2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABCH///I8\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 4
      },
      "lineNbr": 264,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-06-13T19:51:52Z",
      "side": 1,
      "message": "log.error(\"Error consulting rules.pl in \" + getProject().getName(), e);",
      "revId": "5103b968ee51c7e5b63262e802b5147dd54cabb2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABCH///IM\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ProjectState.java",
        "patchSetId": 4
      },
      "lineNbr": 141,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-06-13T19:51:52Z",
      "side": 1,
      "message": "Instead of exporting IOException, lets wrap that inside of a CompileException so the caller doesn\u0027t have to handle a ton of exception types.",
      "revId": "5103b968ee51c7e5b63262e802b5147dd54cabb2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABCH///Ik\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ProjectState.java",
        "patchSetId": 4
      },
      "lineNbr": 146,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-06-13T19:51:52Z",
      "side": 1,
      "message": "Style-nit: These two lines should be declared as one.",
      "revId": "5103b968ee51c7e5b63262e802b5147dd54cabb2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABCH///Ic\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ProjectState.java",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-06-13T19:51:52Z",
      "side": 1,
      "message": "Also include the name of the file, rules.pl.",
      "revId": "5103b968ee51c7e5b63262e802b5147dd54cabb2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABCH///H8\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ProjectState.java",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-06-13T19:51:52Z",
      "side": 1,
      "message": "Instead of doing this, lets drop the block altogether and add a new predicate to common_rules.pl:\n\n  locate_submit_rule(RuleName) :-\n    clause(user:submit_rule(_), _),\n    !\n    RuleName \u003d user:submit_rule\n    .\n  locate_submit_rule(RuleName) :-\n    \u0027$compiled_predicate\u0027(user, submit_rule, 1),\n    !\n    RuleName \u003d user:submit_rule\n    .\n  locate_submit_rule(RuleName) :-\n    RuleName \u003d \u0027com.google.gerrit.rules.common\u0027:default_submit.\n\nThen modify ChangeControl and can_submit predicate to run locate_submit_rule to find out what the rule name is, rather than having it be passed in.\n\nThis way in the future we can define more than just submit_rule in the rules.pl file of a repository, and we don\u0027t need to come back and change how this else block is handled.\n\nSorry I didn\u0027t think of this last week, it came to me over the weekend that we need to make this slightly more generic.",
      "revId": "5103b968ee51c7e5b63262e802b5147dd54cabb2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABCH///Ig\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ProjectState.java",
        "patchSetId": 4
      },
      "lineNbr": 291,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-06-13T19:51:52Z",
      "side": 1,
      "message": "Style-nit: space after exception name before {",
      "revId": "5103b968ee51c7e5b63262e802b5147dd54cabb2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABCH///I0\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ProjectState.java",
        "patchSetId": 4
      },
      "lineNbr": 294,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-06-13T19:51:52Z",
      "side": 1,
      "message": "config can be null. We ran into a bug about this just today that I had to fix elsewhere.\n\nIf config is null, you need to return null, as there are no rules.",
      "revId": "5103b968ee51c7e5b63262e802b5147dd54cabb2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABCH///Hs\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ProjectState.java",
        "patchSetId": 4
      },
      "lineNbr": 295,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-06-13T19:51:52Z",
      "side": 1,
      "message": "It may be better to move this to ProjectConfig. If we add a new member:\n\n  private String prologRules;\n\nwith a public accessor:\n\n  /**\n   * @return the project\u0027s Prolog based rules.pl script,\n   *    if present in the branch. Null if there are no rules.\n   */\n  public String getPrologRules();\n\nAnd in onLoad() use readUTF8(\"rules.pl\") to load the rule text. Its a bit ugly because ProjectConfig will always hold onto the rule text, with no way to GC it. But this should be acceptable for now. Later we can worry about making this rule string GC-able.",
      "revId": "5103b968ee51c7e5b63262e802b5147dd54cabb2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABCH///Io\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ProjectState.java",
        "patchSetId": 4
      },
      "lineNbr": 299,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-06-13T19:51:52Z",
      "side": 1,
      "message": "Style-nit: Put a blank line before this line.",
      "revId": "5103b968ee51c7e5b63262e802b5147dd54cabb2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABCH///Is\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ProjectState.java",
        "patchSetId": 4
      },
      "lineNbr": 301,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-06-13T19:51:52Z",
      "side": 1,
      "message": "Thinking about Martin\u0027s comments, I would prefer to throw an exception here, as it indicates the project configuration is malformed:\n\n  throw new IOException(\"Expected BLOB for rules.pl in \"\n    + config.getName() + \" of \" + getProject().getName());",
      "revId": "5103b968ee51c7e5b63262e802b5147dd54cabb2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}