{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9be01b12_784715a9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-11-17T07:19:50Z",
      "side": 1,
      "message": "Even though, node 18 is supported until 2025, we could upgrade directly to LTS node release 20.x with this minimal invasive patch: [1].\n\n[1]: https://gerrit-review.googlesource.com/c/gerrit/+/392716/10/tools/rules_nodejs-5.8.4-node_versions.bzl.patch",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 35
      },
      "revId": "511ca197e5c86c216025f86900cb0f6906989d32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c84277a_84376cda",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-11-13T21:31:42Z",
      "side": 1,
      "message": "Unrelated to this change, but we should migrate to `rules_js`: [1] from Aspect Dev: [2].\n\nFor one, all `rules_nodejs` maintainers moved to `rules_js` now, for another they are using `esbuild` bundler that appears to be factor 100 time faster than `rollup` with `terser`, that we are using: [3].\n\nLast but not least, `rules_js` is also available on bazel central registry: [4], that is required for us to switch to using `bzlmod`: [5].\n\n[1]: https://github.com/aspect-build/rules_js\n[2]: https://www.aspect.dev\n[3]: https://esbuild.github.io\n[4]: https://github.com/bazelbuild/bazel-central-registry\n[5]: https://issues.gerritcodereview.com/issues/303819949",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 34
      },
      "revId": "511ca197e5c86c216025f86900cb0f6906989d32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b72d2dd_1b76efeb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-11-14T10:08:38Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "2c84277a_84376cda",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 34
      },
      "revId": "511ca197e5c86c216025f86900cb0f6906989d32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4951493_7cb1ee01",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2023-11-14T10:45:58Z",
      "side": 1,
      "message": "esbuild is super fast, we use it for local development. rollup is still king afaik for minifying and supporting wide range of browsers. This split setup is very popular, the most popular web build tool authors are looking to rewrite rollup out of javascript to get acceptable perf for local dev.",
      "parentUuid": "2c84277a_84376cda",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 34
      },
      "revId": "511ca197e5c86c216025f86900cb0f6906989d32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b83cb27c_cf22e848",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-11-14T11:10:42Z",
      "side": 1,
      "message": "\u003e rollup is still king afaik for minifying and supporting wide range of browsers.\n\nThanks for pointing this out. We could of course still keep using `rollup/terser` after migration from `rules_nodejs` to `rules_js`. We should still consider to migrate for the other reasons, that I mentioned.\n\nFor inspiration, we could check how `sourcegraph`: [1] project switched to `rules_js`.\n\n[1]: https://github.com/sourcegraph/sourcegraph",
      "parentUuid": "f4951493_7cb1ee01",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 34
      },
      "revId": "511ca197e5c86c216025f86900cb0f6906989d32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b1e1620_50e13ed1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2023-11-15T10:48:51Z",
      "side": 1,
      "message": "the aspect docs are nice, and they are maintaining the \"upstream\" rules_js too that they depend on. It looks like they are forking pnpm, which is a nice tool. There is a flag -dev that is not possible in npm/yarn that could let us dedupe our multiple package.json files that confuses some tools and slows down our installs. Additionally the aspect rule will convert our yarn lock to a pnpm lock internally, it could be a smooth migration.\n\nhttps://docs.aspect.build/rulesets/aspect_rules_js/docs/npm_translate_lock#dev",
      "parentUuid": "b83cb27c_cf22e848",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 34
      },
      "revId": "511ca197e5c86c216025f86900cb0f6906989d32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8dfb9aa7_e9e47541",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-11-17T06:57:58Z",
      "side": 1,
      "message": "I files issue 311424381, we should continue the discussion there.",
      "parentUuid": "6b1e1620_50e13ed1",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 34
      },
      "revId": "511ca197e5c86c216025f86900cb0f6906989d32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8329fd63_52b3276f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-11-14T08:17:21Z",
      "side": 1,
      "message": "Kudos to @david.ostrovsky@gmail.com for updating the image on RBE !",
      "revId": "511ca197e5c86c216025f86900cb0f6906989d32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d99880fc_913b7b0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-11-14T08:21:23Z",
      "side": 1,
      "message": "Thanks for your review and help @luca.milanesio@gmail.com!",
      "parentUuid": "8329fd63_52b3276f",
      "revId": "511ca197e5c86c216025f86900cb0f6906989d32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ce9a469_7d1ba9c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-11-14T10:08:38Z",
      "side": 1,
      "message": "LC label is needed.",
      "revId": "511ca197e5c86c216025f86900cb0f6906989d32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48ae2919_f5d81c6a",
        "filename": "WORKSPACE",
        "patchSetId": 3
      },
      "lineNbr": 145,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-11-14T07:07:47Z",
      "side": 1,
      "message": "18.x NodeJS release line is outdated. 20.x release line is the current one: [1].\n\nThe reason you cannot update to 18.18.0 or even directly to 20.9.0, is because rules_nodejs 5.8 release line stopped to become node version updates.\n\nI fixed that by patching one single file in rules_nodejs distribution: [1], conducted a custom `rules_nodejs` release and uploaded change 392716.\n\n[1]: https://github.com/bazelbuild/rules_nodejs/blob/main/nodejs/private/node_versions.bzl#L2565",
      "range": {
        "startLine": 145,
        "startChar": 20,
        "endLine": 145,
        "endChar": 27
      },
      "revId": "511ca197e5c86c216025f86900cb0f6906989d32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d954fd22_be3a5ae7",
        "filename": "WORKSPACE",
        "patchSetId": 3
      },
      "lineNbr": 145,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-11-14T10:08:38Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "48ae2919_f5d81c6a",
      "range": {
        "startLine": 145,
        "startChar": 20,
        "endLine": 145,
        "endChar": 27
      },
      "revId": "511ca197e5c86c216025f86900cb0f6906989d32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}