{
  "comments": [
    {
      "key": {
        "uuid": "a466372b_be7fc981",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/group/Groups.java",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-08-01T07:27:34Z",
      "side": 1,
      "message": "Is it okay that now we load the groups from the database each time when the account cache loads an account? The old code used the group cache to resolve groups.",
      "range": {
        "startLine": 95,
        "startChar": 45,
        "endLine": 95,
        "endChar": 82
      },
      "revId": "511f1e3c925d7d45d91f586c4a07bbd21dbc730e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af81f23_9f1aeec8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/group/Groups.java",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-08-01T09:27:36Z",
      "side": 1,
      "message": "Well, I am a bit torn on that matter.\n\nArguments in favor of the cache:\n- Retrieval of cached values is probably faster.\n- Cached values don\u0027t require IO.\n- Retrieved values are cached for future access.\n\nArguments in favor of the database:\n- ReviewDb: We can execute a batch operation instead of querying for each group.\n- NoteDb: We only need to check for the existence of the refs and avoid creating the group object (and possibly parsing the group note).\n- We never used the cache when doing the similar operation getParentGroups(subGroupUuid). (see [1])\n- We don\u0027t introduce a circular dependency. (The cache depends on this class and if we used the cache here, we would introduce a backward dependency to the cache.)\n\n[1] https://gerrit-review.googlesource.com/c/116092/4/gerrit-server/src/main/java/com/google/gerrit/server/account/GroupIncludeCacheImpl.java#b181\n\nMy biggest worry is the circular dependency. To avoid it, we could split this class into two (a part for direct group lookup and another one for the members/subgroups) but then we should also split GroupsUpdate to be consistent.\n\nWhat\u0027s your opinion?",
      "parentUuid": "a466372b_be7fc981",
      "range": {
        "startLine": 95,
        "startChar": 45,
        "endLine": 95,
        "endChar": 82
      },
      "revId": "511f1e3c925d7d45d91f586c4a07bbd21dbc730e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}