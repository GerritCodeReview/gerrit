{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0ca146aa_d6333cc6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2023-02-15T09:20:30Z",
      "side": 1,
      "message": "isn\u0027t the API request cached at the Rest API level?\nWhy are we caching it again at the model level?",
      "range": {
        "startLine": 10,
        "startChar": 6,
        "endLine": 10,
        "endChar": 44
      },
      "revId": "527875526756dcb9b6013f64ff3277c0098a120b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "642e7131_66472dad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2023-02-15T09:20:30Z",
      "side": 1,
      "message": "what is the sync issue?",
      "range": {
        "startLine": 19,
        "startChar": 23,
        "endLine": 19,
        "endChar": 47
      },
      "revId": "527875526756dcb9b6013f64ff3277c0098a120b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2168d3ae_9c84efc2",
        "filename": "polygerrit-ui/app/models/accounts-model/accounts-model.ts",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2023-02-15T09:20:30Z",
      "side": 1,
      "message": "can you describe the sync issues here as well?",
      "range": {
        "startLine": 15,
        "startChar": 12,
        "endLine": 15,
        "endChar": 23
      },
      "revId": "527875526756dcb9b6013f64ff3277c0098a120b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2143d8da_f53390fe",
        "filename": "polygerrit-ui/app/models/accounts-model/accounts-model.ts",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2023-02-15T09:33:57Z",
      "side": 1,
      "message": "Storing promises in state objects is a no-go. State objects should just be data. Let\u0027s find an alternative solution. Happy to chat.",
      "revId": "527875526756dcb9b6013f64ff3277c0098a120b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2382722_556de588",
        "filename": "polygerrit-ui/app/models/accounts-model/accounts-model.ts",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2023-02-15T09:00:50Z",
      "side": 1,
      "message": "Can we add return type here. It\u0027s not obvious without reading code carefully.\n\nAdditionally let\u0027s add a docstring. In particular it should explain when \"undefined\" is returned by the promise (if request failed)",
      "range": {
        "startLine": 42,
        "startChar": 2,
        "endLine": 42,
        "endChar": 49
      },
      "revId": "527875526756dcb9b6013f64ff3277c0098a120b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa534162_464fcc66",
        "filename": "polygerrit-ui/app/models/accounts-model/accounts-model.ts",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2023-02-15T09:00:50Z",
      "side": 1,
      "message": "Can we reword this comment. We don\u0027t really pass an empty error function. Instead we pass a function, that updates state with the input, instead of request result.",
      "range": {
        "startLine": 47,
        "startChar": 70,
        "endLine": 48,
        "endChar": 51
      },
      "revId": "527875526756dcb9b6013f64ff3277c0098a120b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}