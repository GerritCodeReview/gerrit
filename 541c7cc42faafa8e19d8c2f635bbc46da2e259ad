{
  "comments": [
    {
      "key": {
        "uuid": "AAAD9X///+Q\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/HasDraftByPredicate.java",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-03-15T02:09:49Z",
      "side": 1,
      "message": "When a PatchSet was passed in we should only match drafts on the patch set. (The PatchLineComment is associated with a specific patch set).",
      "revId": "541c7cc42faafa8e19d8c2f635bbc46da2e259ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAD9X///84\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/HasDraftByPredicate.java",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1006257
      },
      "writtenOn": "2012-03-15T17:41:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAD9X///+Q\u003d",
      "revId": "541c7cc42faafa8e19d8c2f635bbc46da2e259ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAD9X///+M\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/IsReviewedPredicate.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-03-15T02:09:49Z",
      "side": 1,
      "message": "When a PatchSet is supplied we should only match on that patch set, not the current patch set.",
      "revId": "541c7cc42faafa8e19d8c2f635bbc46da2e259ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAD9X///80\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/IsReviewedPredicate.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1006257
      },
      "writtenOn": "2012-03-15T17:41:05Z",
      "side": 1,
      "message": "Are you sure about this?\n\nUnless I\u0027m mistaken, this creates a situation where:\n  match(o, c) -\u003e true, but\n  match(o, null) -\u003e false\nwhich seems to be in violation of the suggested relationship of parent and child...\n\nPerhaps if we provide a patchset we should check both the patch set provided and the current patch set?  Or perhaps we should only return true of the patchset is the current patchset?",
      "parentUuid": "AAAD9X///+M\u003d",
      "revId": "541c7cc42faafa8e19d8c2f635bbc46da2e259ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAD7H///+w\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/IsReviewedPredicate.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-03-15T17:59:44Z",
      "side": 1,
      "message": "Ick. I see the problem you are describing, but I think its a reasonable behavior here.\n\nWe have a predicate that specifies some sort of patch set level conditional test. When looking for changes, we assume the only reasonable thing to do is look only at the current patch set. It might be necessary to later support ways to look at all patch sets on a change when looking at changes... but today we don\u0027t, we use patch set level things to filter changes by the current patch set. Whee.\n\nBut once we have a ChangeData and are looking for a matching PatchSet, we have a specific patch set. We should match the predicate based on the patch set given, *not* the current patch set.\n\nSo I still think my suggestion stands. We might later want to modify ChangeQueryBuilder to have a mode where it configures these predicates to match any patch set when the child is null rather than only the current. You might need to that to correctly search for specific patch sets. :-(",
      "parentUuid": "AAAD9X///80\u003d",
      "revId": "541c7cc42faafa8e19d8c2f635bbc46da2e259ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAD9X///+I\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/LabelPredicate.java",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-03-15T02:09:49Z",
      "side": 1,
      "message": "If the PatchSet is supplied we should match only on the approvals for that patch set.",
      "revId": "541c7cc42faafa8e19d8c2f635bbc46da2e259ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAD9X///8w\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/LabelPredicate.java",
        "patchSetId": 1
      },
      "lineNbr": 150,
      "author": {
        "id": 1006257
      },
      "writtenOn": "2012-03-15T17:41:05Z",
      "side": 1,
      "message": "Once again, should we just assert that subobject is the current patchset?",
      "parentUuid": "AAAD9X///+I\u003d",
      "revId": "541c7cc42faafa8e19d8c2f635bbc46da2e259ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAD9X///+E\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/MessagePredicate.java",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-03-15T02:09:49Z",
      "side": 1,
      "message": "When a PatchSet is supplied we should only match on that one patch set rather than the current patch set.",
      "revId": "541c7cc42faafa8e19d8c2f635bbc46da2e259ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAD9X///8s\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/MessagePredicate.java",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1006257
      },
      "writtenOn": "2012-03-15T17:41:05Z",
      "side": 1,
      "message": "Same question",
      "parentUuid": "AAAD9X///+E\u003d",
      "revId": "541c7cc42faafa8e19d8c2f635bbc46da2e259ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAD9X///+A\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/RegexFilePredicate.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2012-03-15T02:09:49Z",
      "side": 1,
      "message": "As discussed we should match on the files within the PatchSet if the PatchSet is supplied rather than matching on the current patch set.",
      "revId": "541c7cc42faafa8e19d8c2f635bbc46da2e259ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAD9X///8o\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/RegexFilePredicate.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1006257
      },
      "writtenOn": "2012-03-15T17:41:05Z",
      "side": 1,
      "message": "same question.",
      "parentUuid": "AAAD9X///+A\u003d",
      "revId": "541c7cc42faafa8e19d8c2f635bbc46da2e259ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}