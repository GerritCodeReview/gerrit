{
  "comments": [
    {
      "key": {
        "uuid": "AAABEX//9B8\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "You never mentioned the refactoring you did to StoredValues and the existing predicates. Which is yet another argument for breaking that stuff out to its own change.",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9DE\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/rules/StoredValue.java",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "I would have preferred to see this be its own commit.",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9DA\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/rules/StoredValue.java",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "Documentation?",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9C8\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/rules/StoredValue.java",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "Hmm, I think you can simplify the code and inline msg:\n\n  throw new SystemException(\"No \" + key + \" available\");",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9C4\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/rules/StoredValues.java",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "Given the size of these inline ones, lets put a blank line before/after their declarations.\n\nYou can drop the PatchSetInfo.class argument to the constructor, that was the point of the change to add a default no-arg constructor in StoredValue.\n\nThis refactoring of the old predicates should be separate from the change that adds new predicates.",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9Cw\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/rules/StoredValues.java",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "Why can info be null here and not have thrown PatchSetInfoNotAvailableException above?",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9C0\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/rules/StoredValues.java",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "This should be just set(env, info) since you are in the PATCH_SET_INFO object.\n\nBut I wonder if we can\u0027t make this cleaner. Put instead in StoredValue\u0027s default get(Prolog):\n\n  T obj \u003d getOrNull(engine);\n  if (obj \u003d\u003d null) {\n    obj \u003d create();\n    set(obj);\n  }\n  return obj;\n\nand move the throw exception handling into the default create. Then the subclass just has to override create() and doesn\u0027t need all of this test/set logic itself.",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9Cs\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/rules/StoredValues.java",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "Who closes this repository?  If you don\u0027t close it, it leaks resources.",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9CU\u003d",
        "filename": "gerrit-server/src/main/java/gerrit/PRED_commit_edits_2.java",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "This isn\u0027t a good name for the variable given that you have another regexEdit also in the same scope.\n\nHow about fileRegex and lineRegex?",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9Cg\u003d",
        "filename": "gerrit-server/src/main/java/gerrit/PRED_commit_edits_2.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "There is a corner case here. If bCommit is the first commit in the repository, there is no parent. Instead you need to make aTree be the empty tree.",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9CI\u003d",
        "filename": "gerrit-server/src/main/java/gerrit/PRED_commit_edits_2.java",
        "patchSetId": 2
      },
      "lineNbr": 124,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "I don\u0027t think this is going to work as users expect.\n\nConsider I write a pattern like \"^License:\". I want to find all lines that start with \"License\" that are impacted by a change. You compiled the pattern without multiline option enabled, so ^ anchors to the start of the string, not the start of a line. You grabbed a range of lines together here. So this pattern will match only some of the time. It matches when the user edits only one line, if they also edited the surrounding lines, this fails.\n\nI think the reasonable semantic for our edit regex is to have ^ and $ match line start/line end. So you need to either compile the pattern that way, or extract only one line at a time so the matcher only sees one line at a time.",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9CM\u003d",
        "filename": "gerrit-server/src/main/java/gerrit/PRED_commit_edits_2.java",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "What are you cutting here? We shouldn\u0027t need to perform a cut within the Java predicate.",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9Ck\u003d",
        "filename": "gerrit-server/src/main/java/gerrit/PRED_commit_edits_2.java",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "Eh, I would have called this \"compileRegex\". :-)",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9Cc\u003d",
        "filename": "gerrit-server/src/main/java/gerrit/PRED_commit_edits_2.java",
        "patchSetId": 2
      },
      "lineNbr": 163,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "This is banging open and closed an ObjectReader for each call. Can\u0027t you recycle the one you created above to parse the commit?",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9CY\u003d",
        "filename": "gerrit-server/src/main/java/gerrit/PRED_commit_edits_2.java",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "This is banging open and closed an ObjectReader for each call. Can\u0027t you recycle the one you created above to parse the commit?",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9CE\u003d",
        "filename": "gerrit-server/src/main/prolog/gerrit_common.pl",
        "patchSetId": 2
      },
      "lineNbr": 403,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "This isn\u0027t worth abbreviating.\n\ncommit_message_matches() is a better name.",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//9CA\u003d",
        "filename": "gerrit-server/src/main/prolog/gerrit_common.pl",
        "patchSetId": 2
      },
      "lineNbr": 405,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-07-14T03:19:24Z",
      "side": 1,
      "message": "For that matter, I\u0027m regretting letting this predicate be called regex. re_match or regex_matches is a better name.",
      "revId": "54d3f3ab97b28b2103f6cd275d96000f4ea38928",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}