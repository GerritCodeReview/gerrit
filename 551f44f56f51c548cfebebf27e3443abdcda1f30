{
  "comments": [
    {
      "key": {
        "uuid": "859e57f4_c57e7470",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 11,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2017-12-18T09:15:40Z",
      "side": 1,
      "message": "this seems to depend on which version of mysql you are using, see https://dev.mysql.com/doc/refman/5.7/en/innodb-restrictions.html",
      "revId": "551f44f56f51c548cfebebf27e3443abdcda1f30",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55696b86_9ecc03e3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 11,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-01-09T13:25:39Z",
      "side": 1,
      "message": "Even with the limit of 3072 bytes it wouldn\u0027t work as the file_name column is of type varchar(4096) as it must support max path length on Linux.",
      "parentUuid": "859e57f4_c57e7470",
      "revId": "551f44f56f51c548cfebebf27e3443abdcda1f30",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bc8fcea_606a723d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 11,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2018-01-15T08:00:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "55696b86_9ecc03e3",
      "revId": "551f44f56f51c548cfebebf27e3443abdcda1f30",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da69d1eb_e6522b90",
        "filename": "Documentation/pgm-UpdateAccountPatchReviewDb.txt",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2017-12-18T09:15:40Z",
      "side": 1,
      "message": "upgraded",
      "range": {
        "startLine": 19,
        "startChar": 13,
        "endLine": 19,
        "endChar": 22
      },
      "revId": "551f44f56f51c548cfebebf27e3443abdcda1f30",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed994323_1c46a03d",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/UpdateAccountPatchReviewDb.java",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2017-12-18T09:15:40Z",
      "side": 1,
      "message": "why don\u0027t we store SHA1 as BINARY(20) which would need only half of the space ?",
      "range": {
        "startLine": 47,
        "startChar": 81,
        "endLine": 47,
        "endChar": 92
      },
      "revId": "551f44f56f51c548cfebebf27e3443abdcda1f30",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e7b7236_68e35590",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/UpdateAccountPatchReviewDb.java",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-01-09T13:25:39Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ed994323_1c46a03d",
      "range": {
        "startLine": 47,
        "startChar": 81,
        "endLine": 47,
        "endChar": 92
      },
      "revId": "551f44f56f51c548cfebebf27e3443abdcda1f30",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f69b65cd_7007df72",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/UpdateAccountPatchReviewDb.java",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-01-15T13:18:52Z",
      "side": 1,
      "message": "A more detailed examination of supported data types for the databases we support I found out that BINARY string is not supported the same way in all of them. For example:\n* mysql does have exactly such a data type [1]\n* postgres does not provide a data type named BINARY but a datatype called \"bytea\", see [2]\n\nThis alone is already a good reason to keep the VARCHAR(40) here.\nRemember: for the database where the account_patch_reviews are stored we do not use\nthe gwtorm as a mapping layer, but the pure JDBC API. This was done so that, once\nthe notedb is ready, the dependency to gwtorm can be removed.\n\nThis also means that we should stick to the most basic data types here and avoid\nsupporting less commonly supported data types.\n\nMy proposal is to keep this code as-is. \n\n[1] https://dev.mysql.com/doc/refman/5.7/en/binary-varbinary.html\n[2] https://www.postgresql.org/docs/9.5/static/datatype-binary.html",
      "parentUuid": "7e7b7236_68e35590",
      "range": {
        "startLine": 47,
        "startChar": 81,
        "endLine": 47,
        "endChar": 92
      },
      "revId": "551f44f56f51c548cfebebf27e3443abdcda1f30",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5f820e4_6f619138",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/UpdateAccountPatchReviewDb.java",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2017-12-18T09:15:40Z",
      "side": 1,
      "message": "the sha1 column was just added, doesn\u0027t that mean its column index would be 5 ?\nLooking at https://gerrit-review.googlesource.com/c/gerrit/+/142192/6/gerrit-server/src/main/java/com/google/gerrit/server/schema/JdbcAccountPatchReviewStore.java\nit looks like the sha1 column index is 4 ? Also see the markReviewed() method there.",
      "revId": "551f44f56f51c548cfebebf27e3443abdcda1f30",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b71c8eaa_20172bc3",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/UpdateAccountPatchReviewDb.java",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-01-09T13:25:39Z",
      "side": 1,
      "message": "The index is defined by the position of this column in the update statement (lines 64 - 69).",
      "parentUuid": "f5f820e4_6f619138",
      "revId": "551f44f56f51c548cfebebf27e3443abdcda1f30",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "679e4736_9ccd590a",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/UpdateAccountPatchReviewDb.java",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2018-01-09T14:18:53Z",
      "side": 1,
      "message": "my fault, thanks",
      "parentUuid": "b71c8eaa_20172bc3",
      "revId": "551f44f56f51c548cfebebf27e3443abdcda1f30",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "304d3b6c_4f074957",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/JdbcAccountPatchReviewStore.java",
        "patchSetId": 6
      },
      "lineNbr": 195,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2018-01-18T20:09:39Z",
      "side": 1,
      "message": "I thought that the limitation of 767 character was only on column used in a primary key so we would keep file_name a VARCHAR(4096).\n\nInserting a review flag for a file path longer than 256 will fail otherwise. With maven folder structure and nested java packages, it not that unlikely to have a file path longer that 256 characters.",
      "range": {
        "startLine": 195,
        "startChar": 33,
        "endLine": 195,
        "endChar": 36
      },
      "revId": "551f44f56f51c548cfebebf27e3443abdcda1f30",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "972da9dc_9a86764a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/JdbcAccountPatchReviewStore.java",
        "patchSetId": 6
      },
      "lineNbr": 195,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-02-14T11:03:06Z",
      "side": 1,
      "message": "This is obviously a mistake, actually a left over from the first patch-set. When file_name_sha1 column was introduced, I should have reverted file_name column length back to 4096. \n\nWill provide a new PS",
      "parentUuid": "304d3b6c_4f074957",
      "range": {
        "startLine": 195,
        "startChar": 33,
        "endLine": 195,
        "endChar": 36
      },
      "revId": "551f44f56f51c548cfebebf27e3443abdcda1f30",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}