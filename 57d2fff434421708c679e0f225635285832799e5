{
  "pushCert": "certificate version 0.1\npusher A0D0EF51 1518191396 +0100\nnonce AFD2Vu2ZcB05UwnJCIu9JmtyoeZX1Dz+B8DcVcOQCuBeHQltkdk5P3X3/fjoeEo4+7wkTivUbuHC\n\n0000000000000000000000000000000000000000 57d2fff434421708c679e0f225635285832799e5 refs/for/master\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEjcOJ9ZBmQPrFqZA3UbX9l6DQ71EFAlp9wyQACgkQUbX9l6DQ\n71Fd+Af6Aux9ujzeWVSf7ZqdVomWdmAbjGcR2jfGa/KE4CYHqgGcpaeGn7nYpbN5\nSm7cqe4AI0NsoFX8KjU+EZy9OdsA3zIIGeHxZzUc93okoNSEJ3R3TobFDNTcAi9h\newTXnui+Zt+EPqkgFzc1qnWAFOzyADEsAoOMyIXsgIdMH/9QeDMu9fH0f/8suWdv\nBDGBClrOfOLop0tWks1/Z4O0/Xb1Mc3/5Y6lAB9I7nbZxBCbXfztTJP+NMbqydis\nkW6cju051dIujBvWjaJ5c4HiQZMX6v+4bfvh/DpAVly3YgH4dgm9RcKnB4em1C9d\nSazx37+cS85eSSc3v1VVHTmmeGxeOA\u003d\u003d\n\u003dmR9M\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "d5ed721b_176309ae",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-02-09T19:17:55Z",
      "side": 1,
      "message": "I think in addition to the possibly unintended semantics of String.split, there is the general argument that Splitter has nicer methods that make it clearer what the high-level operation you\u0027re trying to do is. For example, I mentioned a few places where you might want to do Splitter.on(CharMatcher.anyOf(something)) or trimResults(). You could leave these as using Splitter.on(Pattern) of course, but I think we should take this opportunity to improve readability as well.",
      "revId": "57d2fff434421708c679e0f225635285832799e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f73d337b_2478206f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-02-09T19:17:55Z",
      "side": 1,
      "message": "I think this is the only surprising one, TBH. The others all match Splitter.on(\u0027:\u0027).omitEmptyStrings().split(input).",
      "revId": "57d2fff434421708c679e0f225635285832799e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "282a0c10_1d0a70eb",
        "filename": "java/com/google/gerrit/httpd/gitweb/GitwebServlet.java",
        "patchSetId": 1
      },
      "lineNbr": 466,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-02-09T19:17:55Z",
      "side": 1,
      "message": "Splitter.on(CharMatcher.anyOf(\"\u0026;\"))?",
      "revId": "57d2fff434421708c679e0f225635285832799e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19980f0d_21761bcb",
        "filename": "java/com/google/gerrit/pgm/init/UpgradeFrom2_0_x.java",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-02-09T19:17:55Z",
      "side": 1,
      "message": "\u0027\u003d\u0027",
      "range": {
        "startLine": 172,
        "startChar": 37,
        "endLine": 172,
        "endChar": 40
      },
      "revId": "57d2fff434421708c679e0f225635285832799e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58f30784_2d46e45f",
        "filename": "java/com/google/gerrit/server/account/AuthorizedKeys.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-02-09T19:17:55Z",
      "side": 1,
      "message": "I feel like the most supported way to do this is with a BufferedReader. But really this should be reading the object from a stream, since it\u0027s coming from a file anyway. That would require some refactoring to VersionedMetaData so I think we don\u0027t have to shave that yak today.",
      "revId": "57d2fff434421708c679e0f225635285832799e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c8b65a0_9040f4bb",
        "filename": "java/com/google/gerrit/server/git/ProjectConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 683,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-02-09T19:17:55Z",
      "side": 1,
      "message": "Splitter.on(\u0027,\u0027).trimResults()? Though arguably that is more of a behavior change.",
      "revId": "57d2fff434421708c679e0f225635285832799e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d89b4cc6_462ed9d5",
        "filename": "java/com/google/gerrit/sshd/SshModule.java",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-02-09T19:17:55Z",
      "side": 1,
      "message": "CharMatcher.whitespace()?",
      "range": {
        "startLine": 117,
        "startChar": 57,
        "endLine": 117,
        "endChar": 75
      },
      "revId": "57d2fff434421708c679e0f225635285832799e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c45a9be_5c41c31d",
        "filename": "java/com/google/gerrit/sshd/SshModule.java",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-02-09T19:17:55Z",
      "side": 1,
      "message": ".splitToList",
      "range": {
        "startLine": 117,
        "startChar": 26,
        "endLine": 117,
        "endChar": 44
      },
      "revId": "57d2fff434421708c679e0f225635285832799e5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}