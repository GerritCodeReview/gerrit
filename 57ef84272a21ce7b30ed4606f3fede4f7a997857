{
  "comments": [
    {
      "key": {
        "uuid": "c4faa581_0cd257e2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-06-24T00:58:11Z",
      "side": 1,
      "message": "Nit: Gerrit\u0027s commit messages are usually written in the imperative form.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 37
      },
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_cbab1574",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Missing close paren",
      "range": {
        "startLine": 14,
        "startChar": 60,
        "endLine": 14,
        "endChar": 61
      },
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_0ca6d7b4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "I don\u0027t mentioning \"bytes\" in this line so it\u0027s clear to a human reader, but the whole \"Length (in bytes):\" thing makes it kinda verbose, don\u0027t you think?\n\nAlso I would move this line down to immediately above the comment text, since that\u0027s what the length is referring to.",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_2b8a990c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Mention in the change description why UUIDs are still necessary despite this no longer living in the reviewdb",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_6c9b1b65",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Space",
      "range": {
        "startLine": 58,
        "startChar": 9,
        "endLine": 58,
        "endChar": 10
      },
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_abe049ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-06-24T00:58:11Z",
      "side": 1,
      "message": "This parenthesis is not closed.",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 1
      },
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_6cc79b24",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-06-24T00:58:11Z",
      "side": 1,
      "message": "If it\u0027s expected that external programs will need to use this data, this ought to be included in the documentation, rather than only in the commit message.",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 61,
        "endChar": 55
      },
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_4ca0df95",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/CommentRange.java",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Use ComparisonChagin",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_0b8fdd1c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/PatchLineCommentsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Optional nit: can be one line:\n\n /** Utility functions to manipulate {@link PatchLineComments}. */",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_6b94a12d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/PatchLineCommentsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Don\u0027t pass this into a static method, make it a non-static method and inject it into the constructor.",
      "range": {
        "startLine": 34,
        "startChar": 33,
        "endLine": 34,
        "endChar": 58
      },
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_8cb127e8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/PatchLineCommentsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "You appear to be implicitly assuming that all the comments have the same patch set. You should:\n* document this assumption in the javadoc for this method\n* throw an IllegalArgumentException if they don\u0027t. (Easiest way is to use checkArgument in the loop below)\n\nAlso, I don\u0027t think this constraint is enough. Remember that the comments in the notedb are stored as a note on a commit SHA-1, not a patch set ID. For a given patch set PS, comments may either be on the SHA-1 of that patch set\u0027s revision, or the parent of that patch set\u0027s revision, depending on the value of the side field.",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_ab7de93b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/PatchLineCommentsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Space before :",
      "range": {
        "startLine": 48,
        "startChar": 27,
        "endLine": 48,
        "endChar": 28
      },
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_8b7aad3f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/PatchLineCommentsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Filenames can contain newlines or other special characters. Escape this using QuotedString.GIT_PATH.",
      "range": {
        "startLine": 52,
        "startChar": 20,
        "endLine": 52,
        "endChar": 35
      },
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_4b99e561",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/PatchLineCommentsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "FormatUtil is not really what you want here. That\u0027s for consistent human-readable formats across the web UI. I don\u0027t think we have any guarantees that the format used by AccountGeneralPreferences is going to stay stable over the long term.\n\nWhat is guaranteed to be more stable is JGit\u0027s GitDateFormatter. Unfortunately that\u0027s not particularly easy to use. The thing to do would probably be to inject @GerritPersonIdent PersonIdent serverIdent, then construct a new PersonIdent(serverIdent, c.getWrittenOn()).\n\n(Meanwhile I\u0027ll look at adding a method to GitDateFormatter that just takes a Date instead of a PersonIdent.)",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_acb4e3d7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/PatchLineCommentsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Use StandardCharsets.UTF_8 instead of the name. I think that should also let you drop UnsupportedEncodingException from the method signature.\n\nAlso, FYI:\n\nhttp://stackoverflow.com/questions/8511490/calculating-length-in-utf-8-of-java-string-without-actually-encoding-it\n\nBut I think doing that in this change would be a premature optimization.",
      "range": {
        "startLine": 70,
        "startChar": 52,
        "endLine": 70,
        "endChar": 60
      },
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_ecaeeb85",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/PatchLineCommentsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Due to a typo here this doesn\u0027t match the format you laid out in the commit message.\n\nThe more unnecessary text you have lying around in the format the higher the likelihood of something like this happening, which I consider to be an argument for parsimonious formats :)",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_eb87f1fd",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/PatchLineCommentsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Optional: you could factor out a bunch of these three-line blocks:\n\n private static StringBuilder appendField(StringBuilder sb,\n     String field, String value) {\n   return sb.append(field).append(\": \").append(value).append(\u0027\\n\u0027);\n }",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_ac7d033c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Nit: comment formatting.",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_8c7ac73f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Use ComparisonChain. I think if you use ComparisonChain it will actually be clear enough to omit these comments entirely.",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_ccab2f74",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 321,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Just a heads up I think this file is getting too large and needs to be broken up into some separate classes. I\u0027m not going to block this change on you fixing that, but I think it should happen sooner rather than later.",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_cb84b5fc",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Unnecessary blank line",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_2b73b96c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 2
      },
      "lineNbr": 203,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Check that the patch set of the comment matches the patch set ID of this update.",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_2c8ab30c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Nits: space after //, and make it a complete sentence (start with a capital, end with a period).",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_0b787d43",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 2
      },
      "lineNbr": 243,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Comment format nits.",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_6b6dc185",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 2
      },
      "lineNbr": 249,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "You need to separate out notes for the base vs. notes for the patch set revision; see also my comments in PatchLineCommentsUtil",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_0c8ff71c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Unnecessary this",
      "range": {
        "startLine": 253,
        "startChar": 35,
        "endLine": 253,
        "endChar": 40
      },
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_4b728565",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "In buildNote() it feels a little inefficient to be converting back and forth between strings and bytes, especially when you convert to bytes just to check the length of the returned array. And noteMap.set() is just going to convert the note string to bytes to write it to the object database anyway.\n\nWhat if instead buildNote just returned a byte[]? Instead of using a StringBuilder you could use an OutputStreamWriter wrapping a ByteArrayOutputStream, which would be a very similar interface, except you can also write bytes directly. Then you would only have to encode each note text once.\n\nIt would make this code just a tiny bit more complicated:\n\n byte[] noteContents \u003d buildNote(...);\n ObjectId noteId \u003d inserter.insert(\n     Constants.OBJ_BLOB, noteContents, 0, noteContents.length);\n noteMap.set(oId, noteId);",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f77198_ab6689a7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 2
      },
      "lineNbr": 255,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "This doesn\u0027t really have any effect. NoteMap is just an in-memory structure mapping object IDs to notes.\n\nWhat you want to do is call noteMap.write(inserter), and then in commit() pass the returned tree ID to setTree on the CommitBuilder.",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_4c99ff61",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 2
      },
      "lineNbr": 268,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "You\u0027re passing the wrong commit here. This will cause the note to annotate the commit in the notedb graph.\n\nThe commit you want to annotate with a note is the revId of the patch set being modified (if side \u003d\u003d 1) or its parent (if side \u003d\u003d 0).",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_2ccd9344",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 2
      },
      "lineNbr": 268,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-24T01:00:05Z",
      "side": 1,
      "message": "The way to get the \"parent\" is to inject a PatchListCache and call getOldId() on the resulting PatchList.",
      "parentUuid": "c4faa581_4c99ff61",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4faa581_6c94bb2d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 2
      },
      "lineNbr": 271,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-23T18:19:42Z",
      "side": 1,
      "message": "Wrap in IOException and rethrow.",
      "revId": "57ef84272a21ce7b30ed4606f3fede4f7a997857",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}