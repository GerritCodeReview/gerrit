{
  "comments": [
    {
      "key": {
        "uuid": "bf9360d9_db9433f2",
        "filename": "polygerrit-ui/app/behaviors/gr-element-behavior/gr-element-behavior.html",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-11T19:00:18Z",
      "side": 1,
      "message": "Looks to me like this should not be a behavior, since it\u0027s just a regular function (doesn\u0027t use `this` or modify the behavior of the element it\u0027s mixed into). As it stands, this would be more useful as a regular JS file.",
      "revId": "58432d809e9c8835b19e5e38ae61a5607013ad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf9360d9_3b7c37b9",
        "filename": "polygerrit-ui/app/behaviors/gr-element-behavior/gr-element-behavior.html",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-11T19:05:27Z",
      "side": 1,
      "message": "I was told that behaviors are the way we\u0027re passing around utility functions for the foreseeable future...?\n\nAlso, I kinda agree on the JS thing, but all of the other behaviors are html files except for the tooltip one, so for consistency\u0027s sake I say we leave it as is.",
      "parentUuid": "bf9360d9_db9433f2",
      "revId": "58432d809e9c8835b19e5e38ae61a5607013ad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff8dd8b6_dd942bf2",
        "filename": "polygerrit-ui/app/behaviors/gr-element-behavior/gr-element-behavior.html",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-11T19:14:51Z",
      "side": 1,
      "message": "If `elementDescendedFromClass` is shared in a behavior, it can only be used by Polymer components. Sharing code in behaviors is definitely something we should be doing more, but I think we should only do it when it actually encodes the behavior of Polymer components -- not when it\u0027s just a vanilla JS function.\n\nFor example, look at gr-annotation.js and the various places it\u0027s used.",
      "parentUuid": "bf9360d9_3b7c37b9",
      "revId": "58432d809e9c8835b19e5e38ae61a5607013ad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c9fd279_a0979a3b",
        "filename": "polygerrit-ui/app/behaviors/gr-element-behavior/gr-element-behavior.html",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2016-10-13T16:56:55Z",
      "side": 1,
      "message": "/me also expresses concern for this behavior being very generic.\nAlso - this is a larger topic, but I\u0027d love to cover it at some point in more detail - but generally Elements should be as hermetic as possible to reduce coupling and simplify replacing and moving them around.\nSo generally, parent/child relations should be minimized as much as possible.\n\nIf I remember history of this piece of code correctly, it was looking for a line element in diff by child. Looks like it was over-generalized over time.\n\nAs far as the purpose of this behavior goes, could be Polymer\u0027s event retargeting used for the same purpose?\nhttps://www.polymer-project.org/1.0/docs/devguide/events#retargeting\nWould it work if _handleBodyTap() in gr-autocomplete would check event\u0027s localTarget to be contained by gr-autocomplete?",
      "parentUuid": "ff8dd8b6_dd942bf2",
      "revId": "58432d809e9c8835b19e5e38ae61a5607013ad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c9fd279_40c0ce22",
        "filename": "polygerrit-ui/app/behaviors/gr-element-behavior/gr-element-behavior.html",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-13T18:02:55Z",
      "side": 1,
      "message": "I don\u0027t necessarily agree with the characterization of it being \u0027over-generalized\u0027... Diffs became more complicated, so looking for a plain old line element wasn\u0027t good enough anymore. \n\nI don\u0027t really understand the opposition to this utility function. Could someone try to explain it more clearly? Is it that it\u0027s inefficient? I have no problem renaming it \u0027gr-*****.js\u0027 and reworking the tests and imports accordingly. All I was trying to do here was take redundant code and consolidate it.",
      "parentUuid": "5c9fd279_a0979a3b",
      "revId": "58432d809e9c8835b19e5e38ae61a5607013ad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf9360d9_bbe4c79f",
        "filename": "polygerrit-ui/app/behaviors/gr-element-behavior/gr-element-behavior.html",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1027267
      },
      "writtenOn": "2016-10-11T18:46:07Z",
      "side": 1,
      "message": "I think of \"parent\" as immediate ancestor. Consider naming this \"top\" or \"container\" or something.",
      "range": {
        "startLine": 28,
        "startChar": 24,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "58432d809e9c8835b19e5e38ae61a5607013ad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff8dd8b6_1df4d348",
        "filename": "polygerrit-ui/app/behaviors/gr-element-behavior/gr-element-behavior.html",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-11T18:55:56Z",
      "side": 1,
      "message": "How about opt_ancestorElement?",
      "parentUuid": "bf9360d9_bbe4c79f",
      "revId": "58432d809e9c8835b19e5e38ae61a5607013ad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf9360d9_dbd993ea",
        "filename": "polygerrit-ui/app/behaviors/gr-element-behavior/gr-element-behavior.html",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1027267
      },
      "writtenOn": "2016-10-11T18:46:07Z",
      "side": 1,
      "message": "I think isElementDescendedFromClass would be more clear.",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 29
      },
      "revId": "58432d809e9c8835b19e5e38ae61a5607013ad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff8dd8b6_3df18f59",
        "filename": "polygerrit-ui/app/behaviors/gr-element-behavior/gr-element-behavior.html",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-11T18:55:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf9360d9_dbd993ea",
      "revId": "58432d809e9c8835b19e5e38ae61a5607013ad51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}