{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cbdb8863_074d4612",
        "filename": "/COMMIT_MSG",
        "patchSetId": 28
      },
      "lineNbr": 7,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-20T06:48:17Z",
      "side": 1,
      "message": "\"Implement API endpoint to apply a fix directly from input\"",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 39
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6cc7428_6dac4a47",
        "filename": "/COMMIT_MSG",
        "patchSetId": 28
      },
      "lineNbr": 7,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-25T07:07:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbdb8863_074d4612",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 39
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c75e1a14_82abbc08",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-20T06:48:17Z",
      "side": 1,
      "message": "Please add a footer to the commit message:\n\nRelease-Notes: Implement API endpoint to apply a fix directly from input",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c3f7311_c1c6b5e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-05-23T18:47:58Z",
      "side": 1,
      "message": "@Patrick curious what your thoughts are on this. It feels like there\u0027s several naming/API/organization challenges here that aren\u0027t new problems with this change, but are existing with the current \"Apply Fix\" API. It\u0027s things like what\u0027s a FixReplacement? Is it a \"Fix\" or a \"Replacement\"? How can it be both?\n\nI don\u0027t want to burden Sharad with fixing all of that, but it\u0027s going to be hard to build on top of it in a clear way without some improvements. Do you have ideas for how to approach it and what\u0027s manageable now vs what needs to happen later?",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9911bb69_23222ef3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-24T11:57:08Z",
      "side": 1,
      "message": "I am all for better entity names and names in documentation, I\u0027d rather not change the actual endpoint names as that entails migrating callers (i.e. existing fixes are called \u0027fixes\u0027 and that is part if the API: /changes/1/revisions/2/fixes/...).\n\nI wonder what we would name things on the green field. Maybe \"suggested edit\" though that\u0027s a bit verbose.\n\nWe have two cases:\n\n(1) We stored a suggested edit in the robot comment. That was posted by a linter, CI etc.\n(2) Same case, but we didn\u0027t store it in Gerrit before, instead, a checker (frontend plugin) is suggesting them directly on the diff page and the user just accepts.\n\nSo in both cases a robot suggested a modification for the human to accept.\n\nSuggestion 1:\n\nchanges/1/revisions/1/fixes/12/apply\nhandler: ApplyStoredFix\nresource: FixResurce\nentity: Replacement(Info/Input) (was: FixReplacement)\n\nchanges/1/revisions/1/apply_fix\nhandler: ApplyFix (new class in this change)\nresource: none (working atop patch set)\nentity: Replacements(Info/Input) (was: DirectFixInput, holds a list of Replacement).\n\nFeel free to nit-pick these names. I think if we reach a naming we like, we can change all names that this change adds here and the names of existing classes in a predecessor change.",
      "parentUuid": "0c3f7311_c1c6b5e9",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a94a90f9_c25890b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-26T07:04:07Z",
      "side": 1,
      "message": "I don\u0027t fully understand why we should have the two cases. Specifically my doubts are\nIn case of 1) Won\u0027t user also need to accept the suggestions before it is applied?  \nI am not sure of the definition of Robot comment. Isn\u0027t case 2 also a Robot comment as no human generated it?\n\nIn longer term shouldn\u0027t both cases be merged?\n\nI like the Suggestion 1. With handler do you mean class name? In that case the current class name for name for the changes/1/revisions/1/fixes/12/apply is already ApplyFix, so renaming the new API\u0027s class to be ApplyFix and the existing one to something else maybe confusing to people who are familiar with the code.\n\n\nRegarding Replacemnt(Info/Input), we already have two class `FixReplacementInfo` and `FixReplacement`. Both hold exactly the same thing, I am not sure why do we have two different entities holding exact same thing.",
      "parentUuid": "9911bb69_23222ef3",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9e576b1_d67514dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-26T07:04:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c75e1a14_82abbc08",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3853033_b9fbb85e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-31T21:18:56Z",
      "side": 1,
      "message": "Any thoughts?",
      "parentUuid": "a94a90f9_c25890b3",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0aa97601_dbc1618c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-01T22:28:35Z",
      "side": 1,
      "message": "Sorry for the delay in getting back to this, holiday and just busy.\n\n\u003e I\u0027d rather not change the actual endpoint names as that entails migrating callers\n\nAgreed! I think the actual endpoints are ok anyway, just the idea of a \"fix\" is a bit vague. It\u0027s fine once you understand it though.\n\n\u003e We have two cases: [snip]\n\n@Patrick, so it took me a few minutes to actually read all the words you had for your second use case, notably the \"frontend plugin\" part, and now I\u0027m pretty excited about that case. We should definitely have that example in the commit message.\n\nI assume the frontend plugin will have some way for a user to be able to accept/select multiple fixes suggested by the plugin at once? Or would they accept individually and each fix would update the same change edit (until the user publishes it)?\n\nI think your Suggestion 1 naming for both APIs makes sense. For the `apply` endpoint where is that `FixReplacement` entity actually used? `apply` has no input object, only the resource. Both endpoints should respond with an `EditInfo`, correct?\n\n\u003e so renaming the new API\u0027s class to be ApplyFix and the existing one to something else maybe confusing to people who are familiar with the code.\n\nI think this is ok. It\u0027s not an area of the code that\u0027s central to a lot of development, so renaming only affects a small set of folks.\n\n\u003e Regarding Replacement(Info/Input), we already have two class `FixReplacementInfo`  and `FixReplacement`. Both hold exactly the same thing, I am not sure why do we have two different entities holding exact same thing.\n\n`FixReplacement` is an \"entity\" and has more code vs the \"extension\" `FixReplacementInfo` which should just be more of a data container object. Subtly, you\u0027ll also notice they use different `Comment.Range` classes which also have different code. @Patrick, I would have assumed the entity classes would/should somehow leverage the extension classes. Does that make sense?",
      "parentUuid": "a3853033_b9fbb85e",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a54a0c31_27a80ae2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-06-02T07:11:04Z",
      "side": 1,
      "message": "\u003e so it took me a few minutes to actually read all the words you had for your second use case, notably the \"frontend plugin\" part, and now I\u0027m pretty excited about that case. We should definitely have that example in the commit message.\n\nPlease see the new commit message and see if it makes sense.\n\n\u003e I assume the frontend plugin will have some way for a user to be able to accept/select multiple fixes suggested by the plugin at once? Or would they accept individually and each fix would update the same change edit (until the user publishes it)?\n\n@Patrick please guide, I am unsure of the answer.\n\n\u003e I think your Suggestion 1 naming for both APIs makes sense\nI had started making changes before you had replied. The new API is named as `apply_provided_fix` and the existing one remains as `apply`. Please let me know if we should still change something.\n\n\u003e For the  apply  endpoint where is that  FixReplacement  entity actually used?  apply  has no input object, only the resource. Both endpoints should respond with an  EditInfo , correct?\n\nThe apply endpoint doesn\u0027t use or expects \u0027FixReplacement`. Yes, both the endpoints respond with an `EditInfo`.\n\n\u003e I think this is ok. It\u0027s not an area of the code that\u0027s central to a lot of development, so renaming only affects a small set of folks.\n\nOk, Please take a fresh look with the new patchset and documentation and let me know if I should still rename or move anything.\n\n\u003e FixReplacement  is an \"entity\" and has more code vs the \"extension\"  FixReplacementInfo  which should just be more of a data container object. Subtly, you\u0027ll also notice they use different  Comment.Range  classes which also have different code. @Patrick, I would have assumed the entity classes would/should somehow leverage the extension classes. Does that make sense?\n\nThanks",
      "parentUuid": "0aa97601_dbc1618c",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8af1e85_aecf265c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-02T20:12:57Z",
      "side": 1,
      "message": "\u003e \u003e so it took me a few minutes to actually read all the words you had for your second use case, notably the \"frontend plugin\" part, and now I\u0027m pretty excited about that case. We should definitely have that example in the commit message.\n\u003e \n\u003e Please see the new commit message and see if it makes sense.\n\nWill do.\n\n\u003e \n\u003e \u003e I assume the frontend plugin will have some way for a user to be able to accept/select multiple fixes suggested by the plugin at once? Or would they accept individually and each fix would update the same change edit (until the user publishes it)?\n\u003e \n\u003e @Patrick please guide, I am unsure of the answer.\n\nThis isn\u0027t critical to this change, I\u0027m just curious.\n\n\u003e \n\u003e \u003e I think your Suggestion 1 naming for both APIs makes sense\n\u003e I had started making changes before you had replied. The new API is named as `apply_provided_fix` and the existing one remains as `apply`. Please let me know if we should still change something.\n\nI think the existing one remains `apply` and the new one becomes `fix:apply` or `fix.apply`.",
      "parentUuid": "a54a0c31_27a80ae2",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7b8b524_728a9686",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-05-20T16:17:19Z",
      "side": 1,
      "message": "Maybe this should be \"Apply Fix\" and the current \"Apply Fix\" is renamed to \"Apply Suggested Fix\"? Or maybe this becomes \"Apply Fix Directly\"? A \"Direct Fix\" is a confusing concept to me because my brain wants to compare it to an \"Indirect Fix\" and that\u0027s obviously not a thing.",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee8f2c7b_77d12011",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-23T09:02:08Z",
      "side": 1,
      "message": "I do agree, but we need to rename an API that is currently in use. Which purely for the sake of naming, I think is too much effort. So my suggestion is to leave as-is.\n\nDo we have other naming options that would allow us to keep the name of the existing API?",
      "parentUuid": "c7b8b524_728a9686",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4175182c_52d7803f",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-05-23T18:47:58Z",
      "side": 1,
      "message": "\u003e I do agree, but we need to rename an API that is currently in use. Which purely for the sake of naming, I think is too much effort. So my suggestion is to leave as-is.\n\nWe wouldn\u0027t be changing the API signature, just the docs, correct? I know that\u0027s still not preferred, but does that actually create a lot of effort? I\u0027m asking for future knowledge here too; we\u0027ll inevitably mess up an API sometime and need to rename it, so I\u0027m curious how much of an impact you see that having.\n\n\u003e \n\u003e Do we have other naming options that would allow us to keep the name of the existing API?\n\nCalling this \"Apply Fix Directly\" was my only idea there. Maybe \"Apply Provided Fix\"?",
      "parentUuid": "ee8f2c7b_77d12011",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59e3ebfa_92b55128",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-24T11:57:08Z",
      "side": 1,
      "message": "\u003e We wouldn\u0027t be changing the API signature, just the docs, correct? \n\nAren\u0027t the headings here consistent with the endpoint name? \n\nSo \u0027POST /changes/\u003c\u003cchange-id,\\{change-id\\}\u003e\u003e/revisions/\u003c\u003crevision-id,\\{revision-id\\}\u003e\u003e/apply_direct_fix\u0027 means this section is called Apply Direct Fix.\n\nIf that is not the case, we can change the header here. In any case we can be more verbose in documentation.",
      "parentUuid": "4175182c_52d7803f",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da128a17_1fd1f47b",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-24T11:57:33Z",
      "side": 1,
      "message": "Sorry, this comment was noise. Just ignore.",
      "parentUuid": "59e3ebfa_92b55128",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "757cc8df_d5e24105",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-26T07:04:07Z",
      "side": 1,
      "message": "So, do we agree that we can name this section of the doc as \u0027Apply Fix Directly\u0027? \nI can also rename the API to `apply_fix_directly` so that we are consistent with the naming and the documentation.\nAs I am introducing this API, I am fine even if a lot of code change is needed to make the API\u0027s purpose self-evident.\n\nJust some history. In naming this API as \u0027apply_direct_fix\u0027, I was thinking of communicating the idea that in this case the fix is directly provided by the user through the REST API body and it is directly applied on the Gerrit UI without needing any `fix-id` as is the case with the existing API `apply`.  \nIdeal name would have been something like \u0027apply_fix_provided_in_request_body_directly\u0027 but this will be too long.",
      "parentUuid": "da128a17_1fd1f47b",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98ac3020_18b3a74f",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-31T06:15:28Z",
      "side": 1,
      "message": "\"Apply Fix Directly\" and \"Apply Provided Fix\" both work for me. I slightly like the latter more.\n\n\u003e so that we are consistent with the naming and the documentation.\n\nplease do so",
      "parentUuid": "757cc8df_d5e24105",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b6c7989_44843b10",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-31T21:18:56Z",
      "side": 1,
      "message": "Ok, I will start making changes to name the API as `apply_provided_fix` and update the documentation here. I will also update \n1) The new class created with this change, to be `ApplyProvidedFix` instead of `ApplyDirectFix`.  \n2) test names that refer to the original name.  \n3) The new class holding the content of the REST body, from `DirectFixInput` to `ApplyProvidedFixInput`",
      "parentUuid": "98ac3020_18b3a74f",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecd41994_b1d7e8fc",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-01T22:28:35Z",
      "side": 1,
      "message": "Going with Patrick\u0027s suggestion above, I think the doc should have both of these listed as \"Apply Fix\", with the difference being the endpoint including the fix-id or not. To do that we probably need to break up the big \"Revision Endpoints\" section and at least create a \"Fix Endpoints\" subsection within it for the existing \"Apply Fix\" and \"Preview Fix\" endpoints. I think those sections are supposed to represent resources anyway? Even if not, it probably makes the API docs a lot nicer if things are grouped together like that. Is that reasonable to do as part of this series?",
      "parentUuid": "9b6c7989_44843b10",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24cc60d2_08b1b732",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-06-02T07:11:04Z",
      "side": 1,
      "message": "Made subsecions inside the section \u0027Apply Fix\u0027.\nDoes the new subsection names and details looks good?\n\nFYI, the subsection \u0027Apply Fix From Server\u0027 and \u0027Apply Provided Fix\u0027 don\u0027t show on the left side panel that has a hyperlink to all APIs. The left side panel has link only to \u0027Apply Fix\u0027 apart from whatever was there previously.",
      "parentUuid": "ecd41994_b1d7e8fc",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59ef4302_bc46b4d6",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-02T20:12:57Z",
      "side": 1,
      "message": "\u003e Made subsections inside the section \u0027Apply Fix\u0027.\n\u003e Does the new subsection names and details looks good?\n\nThat\u0027s not quite what I was suggesting. I was thinking the endpoints under `/changes/{change-id}/revisions/{revision-id}/fixes/{fix-id}/` would share a subsection. And because those exist before this change, I think that refactor should happen in a separate change. But see below, I don\u0027t think we need to do this now.\n\n\u003e \n\u003e FYI, the subsection \u0027Apply Fix From Server\u0027 and \u0027Apply Provided Fix\u0027 don\u0027t show on the left side panel that has a hyperlink to all APIs. The left side panel has link only to \u0027Apply Fix\u0027 apart from whatever was there previously.\n\nMaybe there\u0027s a setting for what depth to show there?\n\nOr you could follow the pattern of Revision Reviewer Endpoints (which are all under `/revisions/`) and create this new section at a higher level.\n\nNew thoughts:\nSeeing the existing cases of List Revision Reviewers [1] and List Reviewers [2] and some of the Change Edit endpoints [3], it seems we have a lot of options (too many probably, our APIs don\u0027t have a lot of consistency). Based on those, we\u0027d still want different names in the doc, but we could use \u0027/apply\u0027 as the endpoint base name for both. But `apply` doesn\u0027t tell you enough about the API when it\u0027s on the revision and not the fix, so I think for the new API, use `/fix.apply` or `/fix:apply` (again, both syntaxes are used in the APIs...).\n\nSince we have those different names anyway, I don\u0027t know that we need a new subsection [4]. @Patrick, how do you feel about that?\n\nSummary (with a couple options for doc naming, I have a slight preference for option 2 for all cases, but I think either option would be acceptable):\n\n Existing \"Apply Fix\" API:\n POST /changes/1/revisions/1/fixes/12/apply\n handler: ApplyStoredFix (rename from ApplyFix, done in a parent change)\n resource: FixResource (existing)\n entity: none (no input provided, uses fix-id in resource)\n response: EditInfo (existing)\n doc name (option 1): Apply Fix From Server\n doc name (option 2): Apply Previously Suggested Fix\n\n New API:\n POST /changes/1/revisions/1/fix.apply\n handler: ApplyFix (new class in this change)\n resource: RevisionResource (existing)\n entity: ApplyProvidedFixInput (new class in this change)\n response: EditInfo (existing)\n doc name (option 1): Apply Provided Fix\n doc name (option 2): Apply Fix\n\n Existing \"Preview Fix\" API (relevant to child change):\n GET /changes/1/revisions/1/fixes/12/preview\n handler: GetFixPreview (existing)\n resource: FixResource (existing)\n entity: none (no input provided, uses fix-id in resource)\n response: DiffInfo (existing)\n doc name (option 1): Preview Fix From Server\n doc name (option 2): Preview Previously Suggested Fix\n \n New API in child change (not a GET since we have to provide the input):\n POST /changes/1/revisions/1/fix.preview\n handler: PreviewFix (new class in that change)\n resource: RevisionResource (existing)\n entity: ApplyProvidedFixInput (new class in this change)\n response: DiffInfo (existing)\n doc name (option 1): Preview Provided Fix\n doc name (option 2): Preview Fix\n\n[1] https://gerrit-review.googlesource.com/Documentation/rest-api-changes.html#list-revision-reviewers\n[2] https://gerrit-review.googlesource.com/Documentation/rest-api-changes.html#list-reviewers\n[3] https://gerrit-review.googlesource.com/Documentation/rest-api-changes.html#get-edit-message\n[4] The subsection isn\u0027t needed for this, but it would be nice to group all the `/revisions/{rev-id}/files/` APIs together if you just wanted to do some doc cleanup.",
      "parentUuid": "24cc60d2_08b1b732",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fbb751f_9f1ac63d",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-06-03T09:44:38Z",
      "side": 1,
      "message": "\u003e Since we have those different names anyway, I don\u0027t know that we need a new subsection [4]. @Patrick, how do you feel about that?\n\n+1 we can spare the separate sub section",
      "parentUuid": "59ef4302_bc46b4d6",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b98cf7ec_3da2b26e",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-06-08T14:45:32Z",
      "side": 1,
      "message": "I am refactoring to rename ApplyFix to ApplyStoredFix and all the related changes suggested in 2 comments above.\nThe change is at https://gerrit-review.googlesource.com/c/gerrit/+/338854\n\nAdditionally, I have also renamed GetFixPreview to GetStoredFixPreview as I think it keeps the naming consistent with ApplyStoredFix and does not cause confusion with the newly coming class of PreviewFix. Let me know if you think otherwise and I can revert that.",
      "parentUuid": "7fbb751f_9f1ac63d",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47a8a4a0_cd293625",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-09T09:58:19Z",
      "side": 1,
      "message": "\u003e We wouldn\u0027t be changing the API signature, just the docs, correct?\n\nUnfortunately the rename would break the Java API.\n\nI don\u0027t mind much about the names, but want to point out that everything in the java/com/google/gerrit/extensions/api/ package is considered as an API that should remain backwards compatible across releases (and renaming methods there, as done in [1], breaks this). E.g. the interfaces of this API may also be implemented by client-side libraries (the one I know is the gerrit-rest-java-client [2]) and we don\u0027t want to break those. It seems that the gerrit-rest-java-client does not implement the applyFix and getFixPreview methods [3], so the rename wouldn\u0027t affect this library and may stay unnoticed. However I wonder if the rename is important enough to break this API and if we cannot avoid it. If it\u0027s not possible to avoid renaming methods in the java/com/google/gerrit/extensions/api/ package I would suggest to note in the commit message of [1] that this is breaking the API, but that no known implementor (e.g. the gerrit-rest-java-client) will be affected by this.\n\nNasser, do you think breaking this API for this rename is worth it?\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/338854\n[2] https://github.com/uwolfer/gerrit-rest-java-client\n[3] https://github.com/uwolfer/gerrit-rest-java-client/blob/master/src/main/java/com/urswolfer/gerrit/client/rest/http/changes/RevisionApiRestClient.java",
      "parentUuid": "b98cf7ec_3da2b26e",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05cc16fe_2ab75bda",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-09T15:23:20Z",
      "side": 1,
      "message": "\u003e \u003e We wouldn\u0027t be changing the API signature, just the docs, correct?\n\u003e \n\u003e Unfortunately the rename would break the Java API.\n\nGood catch, thank you. Maybe we need a JGit-style check on renames in java/com/google/gerrit/extensions/api/.\n\n\u003e Nasser, do you think breaking this API for this rename is worth it?\n\nNo.\n\nThat said, how do you feel about having both of these with the same method name in RevisionApi? Since they\u0027re doing the same thing, just in slightly different ways, I think keeping the same method name would be good.\n\n  EditInfo applyFix(String fixId) // current API\n  EditInfo applyFix(ApplyProvidedFixInput applyProvidedFixInput) // new API\n  \nThen in [1] we\u0027d keep the class ApplyFix-\u003eApplyStoredFix rename, but not the RevisionApi method rename.\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/338854/3/java/com/google/gerrit/server/restapi/change/ApplyStoredFix.java",
      "parentUuid": "47a8a4a0_cd293625",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36ba8d32_d9f20baa",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-09T15:37:09Z",
      "side": 1,
      "message": "Thanks, this proposal sounds good to me.",
      "parentUuid": "05cc16fe_2ab75bda",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5a00a95_98924e30",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5378,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-13T19:11:11Z",
      "side": 1,
      "message": "Needs to be rebased on top of 338854: Refactor classes related to applying fix | https://gerrit-review.googlesource.com/c/gerrit/+/338854",
      "parentUuid": "36ba8d32_d9f20baa",
      "range": {
        "startLine": 5378,
        "startChar": 4,
        "endLine": 5378,
        "endChar": 20
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e66e7d95_9c78c022",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5383,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-05-20T16:17:19Z",
      "side": 1,
      "message": "This is going to be confusing because a \"FixInput\" is completely unrelated to the \"Apply Fix\" concepts and is instead used for doing consistency checks on a change and fixing any problems. Maybe \"ApplyFixInput\"?",
      "range": {
        "startLine": 5383,
        "startChar": 19,
        "endLine": 5383,
        "endChar": 33
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "089b67ff_0bb8f0eb",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5383,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-23T09:02:08Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "e66e7d95_9c78c022",
      "range": {
        "startLine": 5383,
        "startChar": 19,
        "endLine": 5383,
        "endChar": 33
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2be287c8_e970253d",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5383,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-26T07:04:07Z",
      "side": 1,
      "message": "We already have an existing section named \u0027Apply Fix\u0027 that doesn\u0027t need any input. Will naming this entity as `ApplyFixInput` become confusing?  \nI think this will also depend, on what we end up naming the new API, whether it will remain as `apply_direct_fix` or something else, that we are discussing in the previous comments.",
      "parentUuid": "089b67ff_0bb8f0eb",
      "range": {
        "startLine": 5383,
        "startChar": 19,
        "endLine": 5383,
        "endChar": 33
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cff330ff_bc1e7a95",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5383,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-31T21:18:56Z",
      "side": 1,
      "message": "As agreed in a different comment, I will rename the input to `ApplyProvidedFixInput`. There will be no confusions then.",
      "parentUuid": "2be287c8_e970253d",
      "range": {
        "startLine": 5383,
        "startChar": 19,
        "endLine": 5383,
        "endChar": 33
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0049d38_a5eead08",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5384,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-20T06:48:17Z",
      "side": 1,
      "message": "nit: remove extra blank",
      "range": {
        "startLine": 5384,
        "startChar": 52,
        "endLine": 5384,
        "endChar": 53
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5312350_a0b0c032",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5384,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-25T07:07:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0049d38_a5eead08",
      "range": {
        "startLine": 5384,
        "startChar": 52,
        "endLine": 5384,
        "endChar": 53
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "905d764b_5ee257f4",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5385,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-05-20T16:17:19Z",
      "side": 1,
      "message": "Which entity should have this reference?",
      "range": {
        "startLine": 5385,
        "startChar": 27,
        "endLine": 5385,
        "endChar": 62
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff4f93e6_60007c42",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5385,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-23T09:02:08Z",
      "side": 1,
      "message": "It\u0027s part of the URL. Maybe state that explicitly?",
      "parentUuid": "905d764b_5ee257f4",
      "range": {
        "startLine": 5385,
        "startChar": 27,
        "endLine": 5385,
        "endChar": 62
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf06bdc9_5ee72b33",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5385,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-05-23T18:47:58Z",
      "side": 1,
      "message": "Right! Yeah, if this mentioned \u0027revision-id\u0027 somehow, I think I would have made the connection.",
      "parentUuid": "ff4f93e6_60007c42",
      "range": {
        "startLine": 5385,
        "startChar": 27,
        "endLine": 5385,
        "endChar": 62
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11a2a93c_0c506b05",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5385,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-25T07:07:31Z",
      "side": 1,
      "message": "Does this look better? I am not sure if I am accurate here. I think we need to allow the `Apply Direct Fix` on only current patchset.",
      "parentUuid": "bf06bdc9_5ee72b33",
      "range": {
        "startLine": 5385,
        "startChar": 27,
        "endLine": 5385,
        "endChar": 62
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3cfb2b2_c4e1a559",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 28
      },
      "lineNbr": 5385,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-31T06:15:28Z",
      "side": 1,
      "message": "\u003e I think we need to allow the  Apply Direct Fix  on only current patchset.\n\nCorrect. At least for now.",
      "parentUuid": "11a2a93c_0c506b05",
      "range": {
        "startLine": 5385,
        "startChar": 27,
        "endLine": 5385,
        "endChar": 62
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "681a4eb4_3addde76",
        "filename": "java/com/google/gerrit/extensions/api/changes/RevisionApi.java",
        "patchSetId": 28
      },
      "lineNbr": 123,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-20T06:48:17Z",
      "side": 1,
      "message": "nit: \"Instead of using a fix stored at the server, this applies the fix provided in {@code DirectFixInput}\"",
      "range": {
        "startLine": 122,
        "startChar": 53,
        "endLine": 123,
        "endChar": 21
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6beb621d_05c9cfa6",
        "filename": "java/com/google/gerrit/extensions/api/changes/RevisionApi.java",
        "patchSetId": 28
      },
      "lineNbr": 123,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-25T07:07:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "681a4eb4_3addde76",
      "range": {
        "startLine": 122,
        "startChar": 53,
        "endLine": 123,
        "endChar": 21
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33b34ef3_24c991d2",
        "filename": "java/com/google/gerrit/extensions/common/DirectFixInput.java",
        "patchSetId": 28
      },
      "lineNbr": 19,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-05-20T16:17:19Z",
      "side": 1,
      "message": "This comment doesn\u0027t match my understanding of the intent of this class. I don\u0027t think there\u0027s anything \"Reviewer\" specific and it\u0027s not a suggestion if the API is applying it without further user interaction.",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99f1c50e_cc35af29",
        "filename": "java/com/google/gerrit/extensions/common/DirectFixInput.java",
        "patchSetId": 28
      },
      "lineNbr": 19,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-23T09:02:08Z",
      "side": 1,
      "message": "+1 maybe:\n\n\"Input containing a fix to apply a fix directly to the change.\"",
      "parentUuid": "33b34ef3_24c991d2",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ea0e161_721b51ee",
        "filename": "java/com/google/gerrit/extensions/common/DirectFixInput.java",
        "patchSetId": 28
      },
      "lineNbr": 19,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-05-23T18:47:58Z",
      "side": 1,
      "message": "\u003e +1 maybe:\n\u003e \n\u003e \"Input containing a fix to apply a fix directly to the change.\"\n\nThere\u0027s a list of fixes, so I think you\u0027d want: \"Input containing fixes to apply directly to the change.\"\n\nbut \u0027directly\u0027 in that statement seems both unnecessary and insufficient (\"apply to the change\" would work, but that still leaves out that the fixes are provided in the API and not stored on the server).\n\nI mostly like \"Input containing fix definitions to apply directly to the change.\" but I don\u0027t like the mismatch between \"fix definitions\" and \"FixReplacementInfos\". I guess you could reference FixReplacementInfos instead, but that name doesn\u0027t tell me what the object is (see my patchset level comment), so I think I was unconsciously avoiding it.",
      "parentUuid": "99f1c50e_cc35af29",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5165a8df_d87a58f7",
        "filename": "java/com/google/gerrit/extensions/common/DirectFixInput.java",
        "patchSetId": 28
      },
      "lineNbr": 19,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-25T07:07:31Z",
      "side": 1,
      "message": "Does the uploaded definition look good?\n\nI will rename this class to `ApplyFixInput` in a later patchset, as commented in your comments on file rest-api-changes.txt",
      "parentUuid": "9ea0e161_721b51ee",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02fc555c_171de233",
        "filename": "java/com/google/gerrit/extensions/common/DirectFixInput.java",
        "patchSetId": 28
      },
      "lineNbr": 19,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-31T06:15:28Z",
      "side": 1,
      "message": "SGTM. Or ApplyProvidedFixInput depending on what name we end up with.",
      "parentUuid": "5165a8df_d87a58f7",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5976603_31236ede",
        "filename": "java/com/google/gerrit/extensions/common/DirectFixInput.java",
        "patchSetId": 28
      },
      "lineNbr": 19,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-31T21:18:56Z",
      "side": 1,
      "message": "Will Update this class name to `ApplyProvidedFixInput`.",
      "parentUuid": "02fc555c_171de233",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94b8d713_b041bc4e",
        "filename": "java/com/google/gerrit/extensions/common/DirectFixInput.java",
        "patchSetId": 28
      },
      "lineNbr": 19,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-06-02T07:11:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f5976603_31236ede",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3d22554_1dcc4325",
        "filename": "java/com/google/gerrit/server/restapi/change/ApplyDirectFix.java",
        "patchSetId": 28
      },
      "lineNbr": 84,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-20T06:52:09Z",
      "side": 1,
      "message": "Please check if the user has \"ADD_PATCH_SET\" permission (via PermissionBackend)\n\nAnd add a test that the operation fails in case the user lacks that permission.",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b86e834_551cd934",
        "filename": "java/com/google/gerrit/server/restapi/change/ApplyDirectFix.java",
        "patchSetId": 28
      },
      "lineNbr": 84,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-25T07:07:31Z",
      "side": 1,
      "message": "added the code. Trying to figure out the test.\n\nI am guessing the test case will be: a change is created by admin. A user (non-admin without ADD_PATCH_SET permission) calls apply_direct_fix and the user doesn\u0027t have the ADD_PATCH_SET permission. Does this sound like the right test case?\nI am trying to figure out how to make a custom user, call apply_direct_fix. Any example will help.\nAlso, is it possible that a non-author can upload a patchset?",
      "parentUuid": "c3d22554_1dcc4325",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ad8f98f_4a75858d",
        "filename": "java/com/google/gerrit/server/restapi/change/ApplyDirectFix.java",
        "patchSetId": 28
      },
      "lineNbr": 84,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-26T07:04:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b86e834_551cd934",
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72d1557f_38c4a849",
        "filename": "javatests/com/google/gerrit/acceptance/api/revision/ApplyDirectFixIT.java",
        "patchSetId": 28
      },
      "lineNbr": 64,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-20T06:48:17Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 64,
        "endChar": 53
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f84126c1_f8ff5df5",
        "filename": "javatests/com/google/gerrit/acceptance/api/revision/ApplyDirectFixIT.java",
        "patchSetId": 28
      },
      "lineNbr": 64,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-25T07:07:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72d1557f_38c4a849",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 64,
        "endChar": 53
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00a7ddb3_0463486b",
        "filename": "javatests/com/google/gerrit/acceptance/api/revision/ApplyDirectFixIT.java",
        "patchSetId": 28
      },
      "lineNbr": 283,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-05-20T06:48:17Z",
      "side": 1,
      "message": "remove this and other commented out lines",
      "range": {
        "startLine": 283,
        "startChar": 4,
        "endLine": 283,
        "endChar": 56
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9216424c_b30ffed1",
        "filename": "javatests/com/google/gerrit/acceptance/api/revision/ApplyDirectFixIT.java",
        "patchSetId": 28
      },
      "lineNbr": 283,
      "author": {
        "id": 1091592
      },
      "writtenOn": "2022-05-25T07:07:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00a7ddb3_0463486b",
      "range": {
        "startLine": 283,
        "startChar": 4,
        "endLine": 283,
        "endChar": 56
      },
      "revId": "58d3cddf808d8ef7f1acc0c4f8616e69b77537fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}