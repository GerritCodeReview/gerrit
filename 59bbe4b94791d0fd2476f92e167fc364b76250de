{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cd0df166_2b6b5def",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-04-05T09:21:49Z",
      "side": 1,
      "message": "Can you briefly talk about the idempotency of the migration (running it more than once on a single repo produces exactly the same result as running it just once on that repo)?\n\nThe case that looks interesting to talk about is:\n\ncopyAllScoresIfNoChange is unset, hence true. So we go and add \"change-kind:NO_CHANGE OR ...existing...\". Now we run the migration again, will we add this once more?",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 36,
        "endChar": 44
      },
      "revId": "59bbe4b94791d0fd2476f92e167fc364b76250de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60b21565_3a8c7e2b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-04-13T12:30:10Z",
      "side": 1,
      "message": "\u003e Can you briefly talk about the idempotency of the migration (running\n\u003e it more than once on a single repo produces exactly the same result as\n\u003e running it just once on that repo)?\n\nSure, added a paragraph about this.\n\n\u003e The case that looks interesting to talk about is:\n\u003e \n\u003e copyAllScoresIfNoChange is unset, hence true. So we go and add\n\u003e \"change-kind:NO_CHANGE OR ...existing...\". Now we run the migration\n\u003e again, will we add this once more?\n\nThis was already covered by the tests, but I reworked them a bit to make it clearer that this is covered.",
      "parentUuid": "cd0df166_2b6b5def",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 36,
        "endChar": 44
      },
      "revId": "59bbe4b94791d0fd2476f92e167fc364b76250de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6940d3d1_7ac824c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-04-13T13:27:10Z",
      "side": 1,
      "message": "Actually you are right that there is a problem here.\n\nIf copyAllScoresIfNoChange is initially set to false running the migration a second time does a wrong update:\n* 1. migration run: Removes the copyAllScoresIfNoChange flag, doesn\u0027t add anything to the copy condition\n* 2. migration run: Adds the \"change-kind:NO_CHANGE\" predicate (because true is assumed for copyAllScoresIfNoChange when it is not set)\n\nAfterwards it\u0027s idempotent, but the update that is done by the second run is wrong.\n\nFYI, this scenario is covered by the test case that I added newly, only that this test doesn\u0027t work as intended (calling setCopyAllScoresIfNoChange(false) has no effect anymore since with this change the default value for copyAllScoresIfNoChange is changed to false, except for the migration code, so since the value to be set matches the default value the flag is not added in project.config).\n\nNot sure yet, how to fix this.",
      "parentUuid": "60b21565_3a8c7e2b",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 36,
        "endChar": 44
      },
      "revId": "59bbe4b94791d0fd2476f92e167fc364b76250de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "170a5f54_b7c6ce37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-04-05T09:21:49Z",
      "side": 1,
      "message": "LGTM minus comment on idempotency",
      "revId": "59bbe4b94791d0fd2476f92e167fc364b76250de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}