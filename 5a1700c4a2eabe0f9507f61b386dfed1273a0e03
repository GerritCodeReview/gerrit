{
  "comments": [
    {
      "key": {
        "uuid": "926c6149_63f30221",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-08-31T17:54:39Z",
      "side": 1,
      "message": "I wonder if we should do this automatically in the server when filtering UiActions. If the UiAction has a @RequiresCapability annotation maybe we should check that before we even call the isVisible method?",
      "range": {
        "startLine": 12,
        "startChar": 21,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "5a1700c4a2eabe0f9507f61b386dfed1273a0e03",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_e0e80231",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-08-31T18:34:36Z",
      "side": 1,
      "message": "Completely agreed with you! Here is a possible UiAction code where i did it manually:\n\n https://gerrit-review.googlesource.com/#/c/49250/18/src/main/java/com/googlesource/gerrit/plugins/deleteproject/DeleteAction.java\n\nTBH as i wrote it i\u0027ve felt very wrong: why do i need to do all that in actual UiAction isVisible() code and not rely on the framework to do it all for me.\n\nThe only question is, we need to retrieve IdentifiedUser on all places where the gathering of UiActions take place.",
      "parentUuid": "926c6149_63f30221",
      "revId": "5a1700c4a2eabe0f9507f61b386dfed1273a0e03",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12a6b1d3_7ff80ffa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-08-31T18:52:46Z",
      "side": 1,
      "message": "... and we need to know the plugin name if UiAction was contributed by a plugin to check the required capabilities by framework in some place that it is not RestApiServlet. Right now i don\u0027t know hot to do it. What i know is that this abandoned change did just that:\n\n https://gerrit-review.googlesource.com/48203",
      "parentUuid": "32a1f5ba_e0e80231",
      "revId": "5a1700c4a2eabe0f9507f61b386dfed1273a0e03",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "529ca983_81f81afb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-08-31T20:40:14Z",
      "side": 1,
      "message": "Done\n\n https://gerrit-review.googlesource.com/49372\n\nWe can even check it before we called UiAction.getDescription()\n\nAnd you\u0027ve defined sensible default in Description class:\n\n private boolean visible \u003d true;\n\nSo in a normal case we don\u0027t need to mess around with setVisible() at all ...\n\nAnother thought: if a UiAction is not annotated with RequiresCapability annotation, may be we should still check if the user is authenticated? I can\u0027t think of any UiAction for not authenticated user? So we can remove the tests like:\n\n UiAction.Description.setVisible(currentUser instanceof IdentifiedUser);\n\nfrom cookbook plugin.",
      "parentUuid": "926c6149_63f30221",
      "revId": "5a1700c4a2eabe0f9507f61b386dfed1273a0e03",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "926c6149_23e90a33",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/CapabilityUtils.java",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-08-31T17:54:39Z",
      "side": 1,
      "message": "This can be written as a loop:\n\n  for (; clazz !\u003d null; clazz \u003d clazz.getSuperclass()) {\n    T t \u003d clazz.getAnnotation(annotationClass);\n    if (t !\u003d null) {\n      return t;\n    }\n  }\n  return null;",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 87,
        "endChar": 17
      },
      "revId": "5a1700c4a2eabe0f9507f61b386dfed1273a0e03",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "529ca983_e1e80631",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/CapabilityUtils.java",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-08-31T18:34:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "926c6149_23e90a33",
      "revId": "5a1700c4a2eabe0f9507f61b386dfed1273a0e03",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "926c6149_43ee063c",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/DispatchCommand.java",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-08-31T17:54:39Z",
      "side": 1,
      "message": "e.getMessage()",
      "range": {
        "startLine": 127,
        "startChar": 10,
        "endLine": 127,
        "endChar": 42
      },
      "revId": "5a1700c4a2eabe0f9507f61b386dfed1273a0e03",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "529ca983_c1ed023f",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/DispatchCommand.java",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-08-31T18:34:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "926c6149_43ee063c",
      "revId": "5a1700c4a2eabe0f9507f61b386dfed1273a0e03",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}