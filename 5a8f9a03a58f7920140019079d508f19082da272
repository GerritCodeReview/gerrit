{
  "comments": [
    {
      "key": {
        "uuid": "7c89f63d_49938151",
        "filename": "polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.js",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-12T22:08:08Z",
      "side": 1,
      "message": "This looks like it should be consolidated into just an array.",
      "revId": "5a8f9a03a58f7920140019079d508f19082da272",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c9fd279_60aab271",
        "filename": "polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.js",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2016-10-13T17:04:43Z",
      "side": 1,
      "message": "+1, definitely is a bit confusing and has a code smell.\nIt takes reading other code to understand what\u0027s going on.\nHow those two properties are different and why they can not be combined?\nWould it be possible to hide one or the other in a closure, if one is used for caching?",
      "parentUuid": "7c89f63d_49938151",
      "revId": "5a8f9a03a58f7920140019079d508f19082da272",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c9fd279_802816f1",
        "filename": "polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.js",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-13T18:28:19Z",
      "side": 1,
      "message": "The reason _labelArray is a thing is because in order to ensure that Polymer restamps the dom-repeat associated with labels within the dialogue, the items referenced must be a computed property, as opposed to just a function within the brackets to compute the value. This the same issue that I encountered last week in this change: https://gerrit-review.googlesource.com/c/87195/\n\nI worked with cdata@, a member of the Polymer team, to arrive at that solution.\n\nI don\u0027t know how I feel about having this property be an implicitly-computed one. I took this approach because, in this very same file, _reviewers is handled the same way, and I didn\u0027t want to rock the boat. I wouldn\u0027t be opposed to refactoring the whole file to reflect a more Polymer-forward data flow if others think that\u0027s a worthwhile task though!",
      "parentUuid": "5c9fd279_60aab271",
      "revId": "5a8f9a03a58f7920140019079d508f19082da272",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c9fd279_60563228",
        "filename": "polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.js",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-13T22:25:08Z",
      "side": 1,
      "message": "It makes sense to have a labels property (such as `_labelsArray`) local to \nthis component, in order to facilitate the dom-repeat and avoid that bug.\n\nThe code smell is that these two properties -- along with `change.labels` -- \nrepresent *three* replications of the same data, whereas ideally there would \nonly ever be a one version of any piece of data.\n\nIt probably needs to be an array so that it can be looped over by \ndom-repeat, so these should be consolidated into one array property.\n\nThe benefit of declaring such properties using `computed` expressions is \nit\u0027s clear that it\u0027s a projection of other data, and that it\u0027s kept up-to-\ndate automatically by Polymer.\n\nIf, instead, they\u0027re declared as regular properties and manually \nsynchronized using an observer, then:\n* Someone who maintains the code may not realize how it works because the\n  wire-up is distributed in three places of the file.\n* The properties can be edited directly, making them out sync.\n\nP.S. you should absolutely feel free to rock the boat.",
      "parentUuid": "5c9fd279_802816f1",
      "revId": "5a8f9a03a58f7920140019079d508f19082da272",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c9fd279_6008723b",
        "filename": "polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.js",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-13T23:05:35Z",
      "side": 1,
      "message": "Trimmed it down to two!",
      "parentUuid": "5c9fd279_60563228",
      "revId": "5a8f9a03a58f7920140019079d508f19082da272",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c89f63d_09998971",
        "filename": "polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.js",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-12T22:08:08Z",
      "side": 1,
      "message": "How about\n\n    return Object.keys(labelsObj).sort().map(function(key) {\n      return {\n        name: key,\n        value: this._getVoteForAccount(labelsObj, key, this._account),\n      };\n    }.bind(this));",
      "revId": "5a8f9a03a58f7920140019079d508f19082da272",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c89f63d_6998456b",
        "filename": "polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.js",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-12T22:25:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7c89f63d_09998971",
      "revId": "5a8f9a03a58f7920140019079d508f19082da272",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c89f63d_299e4d5a",
        "filename": "polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.js",
        "patchSetId": 1
      },
      "lineNbr": 378,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-12T22:08:08Z",
      "side": 1,
      "message": "Why not write this as computed expressions on `_labels` and `_labelArray`?",
      "revId": "5a8f9a03a58f7920140019079d508f19082da272",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c89f63d_89ac998d",
        "filename": "polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.js",
        "patchSetId": 1
      },
      "lineNbr": 378,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-12T22:25:51Z",
      "side": 1,
      "message": "I need to watch for deep subpath changes and modify both of these values when they happen... I think an observer makes the most sense here. Plus this is the pattern already followed in this file.\n\nI could be misunderstanding you, though üòÅ",
      "parentUuid": "7c89f63d_299e4d5a",
      "revId": "5a8f9a03a58f7920140019079d508f19082da272",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c9fd279_20502a27",
        "filename": "polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.js",
        "patchSetId": 1
      },
      "lineNbr": 378,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-13T22:25:08Z",
      "side": 1,
      "message": "As I note above, since these are direct projections of data on `change`, the wireup should be done using `computed`. You can listen to deep paths in `computed` expressions.",
      "parentUuid": "7c89f63d_89ac998d",
      "revId": "5a8f9a03a58f7920140019079d508f19082da272",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cad5ab1_de1ba588",
        "filename": "polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.js",
        "patchSetId": 1
      },
      "lineNbr": 378,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-13T23:05:35Z",
      "side": 1,
      "message": "Done! Thanks for the patience :)",
      "parentUuid": "5c9fd279_20502a27",
      "revId": "5a8f9a03a58f7920140019079d508f19082da272",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c84ea25_0a997b71",
        "filename": "polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog_test.html",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-12T22:08:08Z",
      "side": 1,
      "message": "Add a trailing comma. Also on ll.73,75-77.",
      "revId": "5a8f9a03a58f7920140019079d508f19082da272",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c84ea25_eaa34798",
        "filename": "polygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog_test.html",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-12T22:25:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c84ea25_0a997b71",
      "revId": "5a8f9a03a58f7920140019079d508f19082da272",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}