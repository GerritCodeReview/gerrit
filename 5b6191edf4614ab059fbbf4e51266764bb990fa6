{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a35cf2a9_8537b27c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1146977
      },
      "writtenOn": "2022-03-31T02:48:28Z",
      "side": 1,
      "message": "What if you tighten it more and make the cache scoped to the request only? Then I think it\u0027s safe to ignore eviction.",
      "revId": "5b6191edf4614ab059fbbf4e51266764bb990fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c21c3632_6f6be326",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-03-31T18:51:27Z",
      "side": 1,
      "message": "\u003e What if you tighten it more and make the cache scoped to the request only? \n\nYes, but there are operations that are happing outside a request scope (e.g. batch indexing).\n\n\u003e Then I think it\u0027s safe to ignore eviction.\n\nNot sure: even with a request scope, some operation are changing the NoteDb\u0027s ref and therefore would require eviction anyway.",
      "parentUuid": "a35cf2a9_8537b27c",
      "revId": "5b6191edf4614ab059fbbf4e51266764bb990fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47f9066f_4a86dbba",
        "filename": "java/com/google/gerrit/pgm/http/jetty/JettyServer.java",
        "patchSetId": 9
      },
      "lineNbr": 468,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-03-31T19:10:57Z",
      "side": 1,
      "message": "This should also be done in the WorkQueue.Executor where other thread pools are created in Gerrit.\n\nE.g. Interactive and Batch indexers are created by the WorkQueue and needs releasing the RefCache once the thread has finished its indexing work.",
      "revId": "5b6191edf4614ab059fbbf4e51266764bb990fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}