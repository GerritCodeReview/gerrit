{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a35cf2a9_8537b27c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1146977
      },
      "writtenOn": "2022-03-31T02:48:28Z",
      "side": 1,
      "message": "What if you tighten it more and make the cache scoped to the request only? Then I think it\u0027s safe to ignore eviction.",
      "revId": "5b6191edf4614ab059fbbf4e51266764bb990fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c21c3632_6f6be326",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-03-31T18:51:27Z",
      "side": 1,
      "message": "\u003e What if you tighten it more and make the cache scoped to the request only? \n\nYes, but there are operations that are happing outside a request scope (e.g. batch indexing).\n\n\u003e Then I think it\u0027s safe to ignore eviction.\n\nNot sure: even with a request scope, some operation are changing the NoteDb\u0027s ref and therefore would require eviction anyway.",
      "parentUuid": "a35cf2a9_8537b27c",
      "revId": "5b6191edf4614ab059fbbf4e51266764bb990fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6bc7e4f0_4302e000",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-04-01T00:53:07Z",
      "side": 1,
      "message": "The eviction should be sorted, upon ref-updates and runnable execution completed.",
      "parentUuid": "c21c3632_6f6be326",
      "revId": "5b6191edf4614ab059fbbf4e51266764bb990fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4d9fde8_883887ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-04-04T15:43:07Z",
      "side": 1,
      "message": "\u003e \u003e What if you tighten it more and make the cache scoped to the request only?\n\u003e Yes, but there are operations that are happing outside a request scope (e.g. batch indexing).\n\nBut do those contribute to user-facing time? If not, a minimal solution wouldn\u0027t use any caching for them.\n\n\u003e \u003e Then I think it\u0027s safe to ignore eviction.\n\u003e Not sure: even with a request scope, some operation are changing the NoteDb\u0027s ref and therefore would require eviction anyway.\n\nCan you elaborate on this? What scenario would be unsafe?\n\n\u003e The eviction should be sorted, upon ref-updates and runnable execution completed.\n\nI don\u0027t understand this comment, can you add more context please?",
      "parentUuid": "6bc7e4f0_4302e000",
      "revId": "5b6191edf4614ab059fbbf4e51266764bb990fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd85eecc_723f6d9e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-04-05T07:05:08Z",
      "side": 1,
      "message": "\u003e \u003e \u003e What if you tighten it more and make the cache scoped to the request only?\n\u003e \u003e Yes, but there are operations that are happing outside a request scope (e.g. batch indexing).\n\u003e \n\u003e But do those contribute to user-facing time? If not, a minimal solution wouldn\u0027t use any caching for them.\n\nEventually, yes, they do, because they may fill-up all the internal thread pools.\nHowever, they could be addressed as two separate changes, I agree.\n\n\u003e \u003e \u003e Then I think it\u0027s safe to ignore eviction.\n\u003e \u003e Not sure: even with a request scope, some operation are changing the NoteDb\u0027s ref and therefore would require eviction anyway.\n\u003e \n\u003e Can you elaborate on this? What scenario would be unsafe?\n\nSubmitting a change and all the other REST-API that have an impact on NoteDb.\n\n\u003e \n\u003e \u003e The eviction should be sorted, upon ref-updates and runnable execution completed.\n\u003e \n\u003e I don\u0027t understand this comment, can you add more context please?\n\nWhenever a \u0027/meta\u0027 ref-update happens, we should evict the in-memory cache, even if it is in the same thread.",
      "parentUuid": "e4d9fde8_883887ab",
      "revId": "5b6191edf4614ab059fbbf4e51266764bb990fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47f9066f_4a86dbba",
        "filename": "java/com/google/gerrit/pgm/http/jetty/JettyServer.java",
        "patchSetId": 9
      },
      "lineNbr": 468,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-03-31T19:10:57Z",
      "side": 1,
      "message": "This should also be done in the WorkQueue.Executor where other thread pools are created in Gerrit.\n\nE.g. Interactive and Batch indexers are created by the WorkQueue and needs releasing the RefCache once the thread has finished its indexing work.",
      "revId": "5b6191edf4614ab059fbbf4e51266764bb990fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9d74f2d_de6f83bf",
        "filename": "java/com/google/gerrit/pgm/http/jetty/JettyServer.java",
        "patchSetId": 9
      },
      "lineNbr": 468,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-03-31T19:20:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47f9066f_4a86dbba",
      "revId": "5b6191edf4614ab059fbbf4e51266764bb990fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}