{
  "comments": [
    {
      "key": {
        "uuid": "117b5c38_4b390511",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/project/ReviewProjectAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 156,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-08T18:34:52Z",
      "side": 1,
      "message": "Nit: long line",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dd9683d_3f866706",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/project/ReviewProjectAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 156,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-02-09T15:05:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "117b5c38_4b390511",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d2530a9_edd8653a",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/project/ReviewProjectAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 172,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-08T18:34:52Z",
      "side": 1,
      "message": "Nit: long line",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9db840d6_1981cbed",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/project/ReviewProjectAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 172,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-02-09T15:05:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d2530a9_edd8653a",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31fdc0c1_4486ae89",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-02-08T16:21:20Z",
      "side": 1,
      "message": "nit: still one unused import",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9db840d6_f92417f5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-02-09T15:05:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31fdc0c1_4486ae89",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d2530a9_0df4d1a7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 232,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-08T18:34:52Z",
      "side": 1,
      "message": "It looks like you\u0027re using google-java-format. The problem with that is we currently use 80 cols in Gerrit. GJF defaults to 100 cols, and its breaking and indenting behaviors definitely eat up a lot of horizontal whitespace, like you can see here.\n\nAlthough the whitespace behavior is not exactly like you might see elsewhere in Gerrit, I can live with it. But you should pass --length\u003d80 and avoid longer lines.\n\n(We can have a separate discussion if we want to move Gerrit\u0027s actual standard towards GJF+100 cols, but this change is not the place for it :)",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dd9683d_1f1a83b5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 232,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-02-09T15:05:59Z",
      "side": 1,
      "message": "I looked into this.  --length takes a list of byte (character?) offsets to go with --offset. By design, it has no configuration knobs, so it\u0027s either AOSP style or Google.\n\nHow can I start the discussion to move to GJF+100 cols?",
      "parentUuid": "1d2530a9_0df4d1a7",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dd5942a_b6eec8d7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 232,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-09T15:35:55Z",
      "side": 1,
      "message": "\u003e How can I start the discussion to move to GJF+100 cols?\n\nEmail repo-discuss@googlegroups.com",
      "parentUuid": "5dd9683d_1f1a83b5",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "117b5c38_8b1e0d9f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-08T18:34:52Z",
      "side": 1,
      "message": "An alternative way of breaking this down would be to have your Op class only add a single reviewer, then you loop over reviewers here and make multiple calls to addOp.\n\nI\u0027m not convinced that would substantially improve readability (though it might), so if you\u0027re happy with this approach, you can leave it.",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9db840d6_b92a9fc0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-02-09T15:05:59Z",
      "side": 1,
      "message": "ack.",
      "parentUuid": "117b5c38_8b1e0d9f",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d2530a9_4dc3f955",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 253,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-08T18:34:52Z",
      "side": 1,
      "message": "Nit: we tend to order non-final fields after final.",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dd9683d_df273bf7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 253,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-02-09T15:05:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d2530a9_4dc3f955",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d2530a9_2db8aded",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 254,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-08T18:34:52Z",
      "side": 1,
      "message": "Nit: private final (https://google.github.io/styleguide/javaguide.html#s4.8.7-modifiers)",
      "range": {
        "startLine": 254,
        "startChar": 4,
        "endLine": 254,
        "endChar": 17
      },
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dd9683d_bf2a77c0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 254,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-02-09T15:05:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d2530a9_2db8aded",
      "range": {
        "startLine": 254,
        "startChar": 4,
        "endLine": 254,
        "endChar": 17
      },
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d2530a9_2def8dd7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-08T18:34:52Z",
      "side": 1,
      "message": "Any particular reason for passing in an empty mutable \"return value\" instance, rather than just constructing it here and having the caller access the field after the BatchUpdate is complete?",
      "range": {
        "startLine": 258,
        "startChar": 28,
        "endLine": 258,
        "endChar": 45
      },
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dd9683d_9f2db3dd",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-02-09T15:05:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d2530a9_2def8dd7",
      "range": {
        "startLine": 258,
        "startChar": 28,
        "endLine": 258,
        "endChar": 45
      },
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31fdc0c1_24aa92ef",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-02-08T16:21:20Z",
      "side": 1,
      "message": "This should be moved out of the batch as well. It must be invoked after result.reviewers has been populated. Otherwise it has no effect.\n\nLooks like then we also don\u0027t need to pass PostResult into PostReviewers.Op",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dd9683d_1f81a3ed",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-02-09T15:05:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31fdc0c1_24aa92ef",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "117b5c38_ab23c9e5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-08T18:34:52Z",
      "side": 1,
      "message": "I would move this lookup into updateChange, because then any database lookup happens in the same transaction. Although it doesn\u0027t make a difference in this case (if you read what PatchSetUtil is doing), I think it\u0027s a best practice because sometimes there might be races with other writes, and performance is slightly better on gerrit-review\u0027s Megastore backend.\n\nYou would then have to store patchSet as an instance field in order to communicate between these phases.\n\n(You may wonder why I didn\u0027t make the same recommendation for the accountLoadFactory call a few lines up. The answer is that AccountLoader reads the Accounts table which does not share root entities with Changes, so it doesn\u0027t really matter. But you could move it if you like.)",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dd9683d_ff24fff4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-02-09T15:05:59Z",
      "side": 1,
      "message": "if you would do an Op per reviewer, you\u0027d duplicate the lookup for patchSet, right?",
      "parentUuid": "117b5c38_ab23c9e5",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dd5942a_76d9503c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReviewers.java",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-09T15:35:55Z",
      "side": 1,
      "message": "Good point. You could hack around it with an AtomicReference, or just eat the latency (which should be relatively low inside a transaction), but that might tip the scales away from the Op per reviewer model.",
      "parentUuid": "5dd9683d_ff24fff4",
      "revId": "5bfa237c64551789059b13eb517b0b067bae6b00",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}