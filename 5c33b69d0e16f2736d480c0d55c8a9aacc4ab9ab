{
  "comments": [
    {
      "key": {
        "uuid": "a96b536e_01ef38f3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-05-08T19:40:56Z",
      "side": 1,
      "message": "Shouldn\u0027t this change depend on 105052?",
      "range": {
        "startLine": 9,
        "startChar": 26,
        "endLine": 9,
        "endChar": 32
      },
      "revId": "5c33b69d0e16f2736d480c0d55c8a9aacc4ab9ab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7a68f3f_b5101cdb",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.html",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1030207
      },
      "writtenOn": "2017-05-08T21:51:03Z",
      "side": 1,
      "message": "not in alphabetical order",
      "revId": "5c33b69d0e16f2736d480c0d55c8a9aacc4ab9ab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f473c68_1fc5afcd",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.html",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-05-08T22:54:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7a68f3f_b5101cdb",
      "revId": "5c33b69d0e16f2736d480c0d55c8a9aacc4ab9ab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da5be89f_2b8f4c1e",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 2
      },
      "lineNbr": 355,
      "author": {
        "id": 1030207
      },
      "writtenOn": "2017-05-08T21:51:03Z",
      "side": 1,
      "message": "I feel like a gr-overlay may look nicer than this?",
      "revId": "5c33b69d0e16f2736d480c0d55c8a9aacc4ab9ab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d7ddd03_8e57439c",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 2
      },
      "lineNbr": 355,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-05-08T22:11:40Z",
      "side": 1,
      "message": "In addition, the endpoint supports a \u0027reason\u0027... I think we should expose this and make it mandatory to supply one before submitting the request.\n\nMaybe we can use a gr-confirm-dialog, similar to how abandoning works.",
      "parentUuid": "da5be89f_2b8f4c1e",
      "revId": "5c33b69d0e16f2736d480c0d55c8a9aacc4ab9ab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4897a75c_8250161d",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 2
      },
      "lineNbr": 355,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-05-08T22:43:04Z",
      "side": 1,
      "message": "Isn\u0027t it an overkill since this is essentially a spam-fighting feature for admins?",
      "parentUuid": "4d7ddd03_8e57439c",
      "revId": "5c33b69d0e16f2736d480c0d55c8a9aacc4ab9ab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f83408a1_e3b56be9",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 2
      },
      "lineNbr": 355,
      "author": {
        "id": 1030207
      },
      "writtenOn": "2017-05-08T23:15:43Z",
      "side": 1,
      "message": "I think as an admin, it still feels strange if the UI isn\u0027t in line with the rest of the app. I think it could make users nervous that something is wrong.",
      "parentUuid": "4897a75c_8250161d",
      "revId": "5c33b69d0e16f2736d480c0d55c8a9aacc4ab9ab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24254a3e_2605fe44",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 2
      },
      "lineNbr": 355,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-05-08T23:19:19Z",
      "side": 1,
      "message": "^seconded. Also, definitely think it\u0027s important to allow admins to supply a reason as to why the comment is deleted, as the comment then gets populated with that reason.",
      "parentUuid": "f83408a1_e3b56be9",
      "revId": "5c33b69d0e16f2736d480c0d55c8a9aacc4ab9ab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b10e0135_55ff554d",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 2
      },
      "lineNbr": 355,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-05-11T01:12:32Z",
      "side": 1,
      "message": "¯\\_(ツ)_/¯\nDone",
      "parentUuid": "24254a3e_2605fe44",
      "revId": "5c33b69d0e16f2736d480c0d55c8a9aacc4ab9ab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7e2a770_de40dcc0",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 2
      },
      "lineNbr": 350,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-05-08T19:40:56Z",
      "side": 1,
      "message": "This resolves the promise with `undefined`, which it looks like is the reason for the capabilities falsy-check in the chained `.then` below.\n\nWould it feel a little tidier to only check the capabilities if it was requested?\n\ngetIsAdmin: function() {\n  return this.getLoggedIn().then(function(isLoggedIn) {\n    if (!isLoggedIn) { return Promise.resolve(false); }\n\n    return this.getAccountCapabilities().then(function(capabilities) {\n      return capabilities.administrateServer;\n    });\n  }.bind(this));\n},",
      "range": {
        "startLine": 350,
        "startChar": 10,
        "endLine": 350,
        "endChar": 35
      },
      "revId": "5c33b69d0e16f2736d480c0d55c8a9aacc4ab9ab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b05a428c_70add30d",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 2
      },
      "lineNbr": 350,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-05-08T22:54:38Z",
      "side": 1,
      "message": "\u003e This resolves the promise with `undefined`, which it looks like is the reason for the capabilities falsy-check in the chained `.then` below.\n\nYes.\nFirst step in chain gets capabilities, which may be undefined.\nSecond step receives capabilities and checks for admin ones.\n\nI\u0027m not feeling strongly about this implementation or your one, and will update if current one seems confusing.",
      "parentUuid": "f7e2a770_de40dcc0",
      "range": {
        "startLine": 350,
        "startChar": 10,
        "endLine": 350,
        "endChar": 35
      },
      "revId": "5c33b69d0e16f2736d480c0d55c8a9aacc4ab9ab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91ad5821_ddd85a60",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface_test.html",
        "patchSetId": 2
      },
      "lineNbr": 617,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-05-08T19:40:56Z",
      "side": 1,
      "message": "You use an arrow function here, but not elsewhere (e.g. in the `getIsAdmin` promise chain). Is this intended? It seems to me that if we can start using them in tests then we can use them anywhere.",
      "range": {
        "startLine": 617,
        "startChar": 26,
        "endLine": 617,
        "endChar": 33
      },
      "revId": "5c33b69d0e16f2736d480c0d55c8a9aacc4ab9ab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ef46a75_789be016",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface_test.html",
        "patchSetId": 2
      },
      "lineNbr": 617,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-05-08T22:54:38Z",
      "side": 1,
      "message": "I\u0027ve used arrow function here because this file uses arrow functions.",
      "parentUuid": "91ad5821_ddd85a60",
      "range": {
        "startLine": 617,
        "startChar": 26,
        "endLine": 617,
        "endChar": 33
      },
      "revId": "5c33b69d0e16f2736d480c0d55c8a9aacc4ab9ab",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}