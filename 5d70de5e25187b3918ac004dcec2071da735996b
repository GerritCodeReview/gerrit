{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "07965dfb_07ee9c63",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-06-10T08:32:42Z",
      "side": 1,
      "message": "[Optional] my thoughts:\n\nHow important is it to include the \"by \u003cuser_id\u003e\" in the change message? Or in other words, why are we doing special handling for the approverIn, and only if present we do include \"by \u003cuser_id\u003e\" here (In the general case, we don\u0027t include voting users in CMs).\n\nIf we get rid of that, and also replace the approvals sorting to something else not using the account cache, we can make all methods in CopiedApprovalsInChangeMessage static. Hence we can split the test into two classes:\n  * the formatting tests (no need for it to be IT)\n  * the last 3~5 tests: make sure messages are appended on PS creation, upload, ...\n  \nWDYT?",
      "revId": "5d70de5e25187b3918ac004dcec2071da735996b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1048b3a1_0e45ff21",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-10T08:52:58Z",
      "side": 1,
      "message": "Imagine you have:\n\n* label Foo with copy condition \u0027is:ANY approverin:123\u0027\n* group 123 with member UserA\n* a change with approvals: Foo+1 by UserA and Foo+1 by UserB\n\nThen\n* Foo+1 by UserA is copied because UserA is a member of group 123 and the copy condition matches\n* Foo+1 by UserB is not copied because UserB is not a member of group 123 and the copy condition doesn\u0027t match\n\nIn the change message we would show this as:\n\n  Copied Votes:\n  * Foo+1 by UserA (copy condition: is:ANY approverin:123)\n  \n  Outdated Votes:\n  * Foo+1 by UserB (copy condition: is:ANY approverin:123)\n  \nThis allows users to understand that the copying depends on who did the approval.\n  \nIf we would drop the user information that would become:\n\n  Copied Votes:\n  * Foo+1 (copy condition: is:ANY approverin:123)\n  \n  Outdated Votes:\n  * Foo+1 (copy condition: is:ANY approverin:123)\n  \nand users would likely be confusing how Foo+1 can be copied and outdated at the same time.",
      "parentUuid": "07965dfb_07ee9c63",
      "revId": "5d70de5e25187b3918ac004dcec2071da735996b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efcf32f6_a4b081b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-06-10T09:17:09Z",
      "side": 1,
      "message": "Makes sense. SGTM.\n\nbtw, is this the only predicate where the same {label name, label vote} might lead to different copying outcomes? (there is nothing preventing users from saying `copyCondition \u003d label:Code-Review\u003d+1,user\u003dekempin`).\n\n(I don\u0027t want to overcomplicate stuff, and I think current implementation is good)\n\nCan we include this reason somewhere in the code? e.g.\n\"We check for the approverin predicate since this is the only predicate that might result in the same {label name, label vote} to have different copying outcomes depending on the voting user. To make this clear, we also include the user ID who made the vote.\"",
      "parentUuid": "1048b3a1_0e45ff21",
      "revId": "5d70de5e25187b3918ac004dcec2071da735996b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c07718d9_312e6e84",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-10T09:45:30Z",
      "side": 1,
      "message": "\u003e btw, is this the only predicate where the same {label name, label vote} might lead to different copying outcomes?\n\nBesides \u0027approverin\u0027 there is also \u0027uploaderin\u0027. Both of these predicates are subclasses of the UserInPredicate and hence handled by the code.\n\n\u003e there is nothing preventing users from saying  copyCondition \u003d label:Code-Review\u003d+1,user\u003dekempin\n\nGood point. I didn\u0027t think of this case. I\u0027ll have a look at this and see if I can address this by a follow-up change (I think it\u0027s a rare enough configuration so that it\u0027s okay if this change doesn\u0027t handle this, or if we don\u0027t handle this at all until it becomes a real user issue).\n\n\u003e Can we include this reason somewhere in the code?\n\nIt was supposed to be covered by this comment [1], but I guess I can make this comment more verbose and hence easier to understand.\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/338680/3/java/com/google/gerrit/server/approval/ApprovalsUtil.java#593",
      "parentUuid": "efcf32f6_a4b081b6",
      "revId": "5d70de5e25187b3918ac004dcec2071da735996b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ce47d37_761abc92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-10T11:52:47Z",
      "side": 1,
      "message": "\u003e It was supposed to be covered by this comment [1], but I guess\n\u003e I can make this comment more verbose and hence easier to understand.\n\nDone",
      "parentUuid": "c07718d9_312e6e84",
      "revId": "5d70de5e25187b3918ac004dcec2071da735996b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3812222_4a15373e",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/CopiedApprovalsInChangeMessageIT.java",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-06-10T08:32:42Z",
      "side": 1,
      "message": "Nice thorough testing.",
      "revId": "5d70de5e25187b3918ac004dcec2071da735996b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}