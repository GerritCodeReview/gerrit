{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8ef85f07_462d6408",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2021-05-20T05:22:04Z",
      "side": 1,
      "message": "I believe this issue is due to the #notes being null and introduced in below change. This bug is part of the codebase since stable-2.14\n\nI622dbbb334b5a Store in index the state of all refs that contribute to a change",
      "revId": "5e1fe046949d60b5247893c85538a8e8ccfa2f7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6600426_060a0cb8",
        "filename": "java/com/google/gerrit/entities/RefNames.java",
        "patchSetId": 1
      },
      "lineNbr": 201,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-05-12T22:43:53Z",
      "side": 1,
      "message": "Line 85 implies Account.Id#fromRef() already does this for you?",
      "range": {
        "startLine": 201,
        "startChar": 27,
        "endLine": 201,
        "endChar": 55
      },
      "revId": "5e1fe046949d60b5247893c85538a8e8ccfa2f7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c59393d_2b766d60",
        "filename": "java/com/google/gerrit/entities/RefNames.java",
        "patchSetId": 1
      },
      "lineNbr": 201,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-05-21T12:15:16Z",
      "side": 1,
      "message": "Awesome, thanks for the pointer! Done.",
      "parentUuid": "f6600426_060a0cb8",
      "range": {
        "startLine": 201,
        "startChar": 27,
        "endLine": 201,
        "endChar": 55
      },
      "revId": "5e1fe046949d60b5247893c85538a8e8ccfa2f7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6da82ce4_2ad587a1",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 1
      },
      "lineNbr": 1067,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2021-05-19T12:34:20Z",
      "side": 1,
      "message": "issue was with \u0027notes\u0027 variable being \u0027null\u0027 .. we are hitting null pointer exception here.. ? if we use notes() instead of notes variable, all the drafts tests in FakeIndex are working. doesn\u0027t it solve the bug..? or am I missing something here ..?",
      "range": {
        "startLine": 1067,
        "startChar": 47,
        "endLine": 1067,
        "endChar": 52
      },
      "revId": "5e1fe046949d60b5247893c85538a8e8ccfa2f7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d9ebfa1_8225ab8f",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 1
      },
      "lineNbr": 1067,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-05-19T12:52:15Z",
      "side": 1,
      "message": "This doesn\u0027t work because we have acceptance tests that assert that some logic (e.g. diff caches, diff computation) is only called a certain amount of times.\n\nIf we use a fresh ChangeData instead of a ChangeData reconstructed from index fields these tests would break and it would also mean the fake index behaves differently compared to real indices (who do not call #notes)",
      "parentUuid": "6da82ce4_2ad587a1",
      "range": {
        "startLine": 1067,
        "startChar": 47,
        "endLine": 1067,
        "endChar": 52
      },
      "revId": "5e1fe046949d60b5247893c85538a8e8ccfa2f7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64c1b70f_b83ef5cf",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 1
      },
      "lineNbr": 1067,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2021-05-21T12:55:27Z",
      "side": 1,
      "message": "Hi Patrick.., I have tried to run [1] and [2] diff cache acceptance tests with notes() and with #notes variable. They were passing in both cases. Also tried to test on the CI with a test change [0] and all the tests are passing. Can you kindly let me, when you said \"we have acceptance tests that assert that some logic\" which exact tests are those ..? and are they not enabled on the CI ..?\n\n\n[0] https://gerrit-review.googlesource.com/c/gerrit/+/307362\n\n[1] //javatests/com/google/gerrit/acceptance/api/revision:RevisionNewDiffCacheForSingleFileIT\n\n[2] //javatests/com/google/gerrit/acceptance/api/revision:RevisionNewDiffCacheIT",
      "parentUuid": "5d9ebfa1_8225ab8f",
      "range": {
        "startLine": 1067,
        "startChar": 47,
        "endLine": 1067,
        "endChar": 52
      },
      "revId": "5e1fe046949d60b5247893c85538a8e8ccfa2f7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee02fe36_9043ed3a",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 1
      },
      "lineNbr": 1067,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-05-26T07:30:24Z",
      "side": 1,
      "message": "Sorry, I was wrong in parts :-)\n\nYou are right, the tests pass after your notes-\u003enotes() fix. This means that we load change notes on the ChangeData we reconstructed from the index or draft comments by user would not be available. For serving query responses in the REST API we don\u0027t allow loading change notes because that\u0027s too slow. Instead, the query response (with the exception of queries that require lazy loading) are served solely from the index.\n\nSo recovering any fields in ChangeData that we can recover from the index is a plus in my opinion. So suggest still submitting this change.",
      "parentUuid": "64c1b70f_b83ef5cf",
      "range": {
        "startLine": 1067,
        "startChar": 47,
        "endLine": 1067,
        "endChar": 52
      },
      "revId": "5e1fe046949d60b5247893c85538a8e8ccfa2f7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d47a35b8_20b7b6a4",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 1
      },
      "lineNbr": 1271,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-05-12T22:43:53Z",
      "side": 1,
      "message": "Why do you need to add this? I admit I haven\u0027t really investigated how/where/why setRefStates is used, so maybe it\u0027s obvious if I go look at that?",
      "range": {
        "startLine": 1271,
        "startChar": 6,
        "endLine": 1271,
        "endChar": 35
      },
      "revId": "5e1fe046949d60b5247893c85538a8e8ccfa2f7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87e572e9_e8b461bf",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 1
      },
      "lineNbr": 1271,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-05-21T12:15:16Z",
      "side": 1,
      "message": "Done\n\nThe fake index has to convert from ChangeData to Indexed doc (map of fields) back to change data because ChangeData is a mutable object (so we can\u0027t just hold onto it when indexed). We can also not just recreate a ChangeData when indexing because there are tests that assert that certain calls are made only once (e.g. calls to the diff cache, submit rules, ...) and these would break if we recreated ChangeData.\n\nI hope we\u0027ll refactor this in the future so that ChangeData gets an immutable snapshot. But for now, it was the easiest to just recover edits and drafts and I think that\u0027s actually a plus overall.",
      "parentUuid": "d47a35b8_20b7b6a4",
      "range": {
        "startLine": 1271,
        "startChar": 6,
        "endLine": 1271,
        "endChar": 35
      },
      "revId": "5e1fe046949d60b5247893c85538a8e8ccfa2f7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}