{
  "comments": [
    {
      "key": {
        "uuid": "2ac736e1_dd6aa803",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-03-14T10:52:57Z",
      "side": 1,
      "message": "In what conditions do we get an invalid path?\n\nI would think that in this case we should fail the build rather than silently ignoring it.\n\nThe problem here is that it was failing without a clear error message that helps track it down.",
      "revId": "5e8adcb790bdddcff86aba6853b1c026e088b97b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "128e3fa0_414471cd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-03-14T11:25:01Z",
      "side": 1,
      "message": "\u003e The problem here is that it was failing without a clear error\n \u003e message that helps track it down.\n\nRight, but this is UX Bazel bug, that was accepted in discussion to this issue: [1], quoting:\n\n  Agreed, this is a UX failure on our side.\n  @aehlig, can we print a more helpful error message if the --  \n  workspace_status_command fails than \"Process exited with status 1\"?\n\n* [1] https://github.com/bazelbuild/bazel/issues/2040#issuecomment-258451629",
      "parentUuid": "2ac736e1_dd6aa803",
      "revId": "5e8adcb790bdddcff86aba6853b1c026e088b97b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81007e12_fe8cd25b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-03-14T11:51:41Z",
      "side": 1,
      "message": "In that case I prefer that we wait for a fix in bazel rather than trying to work around or hide the problem here, particularly since it only seems to occur in a very specific condition.",
      "parentUuid": "128e3fa0_414471cd",
      "revId": "5e8adcb790bdddcff86aba6853b1c026e088b97b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd92d166_01e11c92",
        "filename": "tools/workspace-status.sh",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-03-14T10:41:41Z",
      "side": 1,
      "message": "echo would always overwrite the return code of second command, and would even dump garbage. I would prefer the build to fail in that case, instead having garbage as git version. Consider plugin that wasn\u0027t added to the git yet:\n\n  $ echo $(\"${describe[@]}\")-dirty\n  fatal: Not a git repository (or any of the parent directories): .git\n  -dirty\n\nWhat about avoid passing --dirty second time, if we know that can fail:\n\n  \"${describe[@]}\" --dirty || \"${describe[@]}\"",
      "range": {
        "startLine": 16,
        "startChar": 30,
        "endLine": 16,
        "endChar": 34
      },
      "revId": "5e8adcb790bdddcff86aba6853b1c026e088b97b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0af9e589_6b56624c",
        "filename": "tools/workspace-status.sh",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2017-03-16T20:51:58Z",
      "side": 1,
      "message": "Won\u0027t this fail if gerrit was checked out from a tarball instead of a git repository?",
      "parentUuid": "cd92d166_01e11c92",
      "range": {
        "startLine": 16,
        "startChar": 30,
        "endLine": 16,
        "endChar": 34
      },
      "revId": "5e8adcb790bdddcff86aba6853b1c026e088b97b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}