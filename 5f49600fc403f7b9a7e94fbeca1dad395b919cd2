{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0a988aff_1584c809",
        "filename": "java/com/google/gerrit/server/restapi/change/GetChange.java",
        "patchSetId": 15
      },
      "lineNbr": 147,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-11-01T17:27:11Z",
      "side": 1,
      "message": "I don\u0027t know how consistent we\u0027re trying to be about this, but I think you could have @Nullable on both the method and the id param.",
      "revId": "5f49600fc403f7b9a7e94fbeca1dad395b919cd2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "380dca7a_942a76f4",
        "filename": "java/com/google/gerrit/server/restapi/change/GetChange.java",
        "patchSetId": 15
      },
      "lineNbr": 147,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-11-02T19:05:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a988aff_1584c809",
      "revId": "5f49600fc403f7b9a7e94fbeca1dad395b919cd2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa6f13ad_4f13e029",
        "filename": "java/com/google/gerrit/server/restapi/change/GetChange.java",
        "patchSetId": 15
      },
      "lineNbr": 168,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-11-01T17:27:11Z",
      "side": 1,
      "message": "This and the message below both appear to leak sensitive data to users? i.e. if I give a fake meta-ref id, I\u0027ll get an i/o error, but if I give a real but not reachable id, I get the not reachable message below.",
      "range": {
        "startLine": 165,
        "startChar": 10,
        "endLine": 168,
        "endChar": 37
      },
      "revId": "5f49600fc403f7b9a7e94fbeca1dad395b919cd2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "929ee55a_aa40a833",
        "filename": "java/com/google/gerrit/server/restapi/change/GetChange.java",
        "patchSetId": 15
      },
      "lineNbr": 168,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-11-02T13:50:06Z",
      "side": 1,
      "message": "the error below doesn\u0027t leak. If you provide a fake ID, the condition in l.159 never triggers, and you get to l.172. The l.172 just reproduces the input data, so it doesn\u0027t leak.\n\nnot sure why you need to handle IOException. I think it\u0027s fine to propagate?",
      "parentUuid": "fa6f13ad_4f13e029",
      "range": {
        "startLine": 165,
        "startChar": 10,
        "endLine": 168,
        "endChar": 37
      },
      "revId": "5f49600fc403f7b9a7e94fbeca1dad395b919cd2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a52fcb77_e650beb7",
        "filename": "java/com/google/gerrit/server/restapi/change/GetChange.java",
        "patchSetId": 15
      },
      "lineNbr": 168,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-11-02T16:33:11Z",
      "side": 1,
      "message": "\u003e the error below doesn\u0027t leak. If you provide a fake ID, the condition in l.159 never triggers, and you get to l.172.\n\nBad id should throw a MissingObjectException from l.156, which is an IOException, so we\u0027ll hit this catch, correct?\n\n\u003e The l.172 just reproduces the input data, so it doesn\u0027t leak.\n\n\"not reachable from\" is more than just the input data, right? That\u0027s our internal analysis. I agree that if both missing objects and unreachable objects have this same message, then attackers couldn\u0027t learn anything new, but as of this patchset, they have different messages.\n\nAnd I assume by \"doesn\u0027t leak\" you mean the data going to the client isn\u0027t privileged, not that data doesn\u0027t go to the client, correct? If it\u0027s the latter, javadoc at https://gerrit.googlesource.com/gerrit/+/f060dbacb2b8205f75e4781cdb74f958f342c5b8/java/com/google/gerrit/extensions/restapi/PreconditionFailedException.java#21 would need an update.",
      "parentUuid": "929ee55a_aa40a833",
      "range": {
        "startLine": 165,
        "startChar": 10,
        "endLine": 168,
        "endChar": 37
      },
      "revId": "5f49600fc403f7b9a7e94fbeca1dad395b919cd2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fa34cea_2872632e",
        "filename": "java/com/google/gerrit/server/restapi/change/GetChange.java",
        "patchSetId": 15
      },
      "lineNbr": 168,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-11-02T16:55:11Z",
      "side": 1,
      "message": "\u003e Bad id should throw a MissingObjectException from l.156, which is an IOException, so we\u0027ll hit this catch, correct?\n\nl.156 doesn\u0027t do parseCommit on the user-supplied fake ID. It does parseCommit on the meta ref, ie. it will throw if the meta ref is fubar.\n\n\u003e \"not reachable from\" is more than just the input data, right? \n\nif you can call this endpoint, you can see the change. Then you can fetch the meta ref, and walk back through its history. This would give you the same information that we expose here.",
      "parentUuid": "a52fcb77_e650beb7",
      "range": {
        "startLine": 165,
        "startChar": 10,
        "endLine": 168,
        "endChar": 37
      },
      "revId": "5f49600fc403f7b9a7e94fbeca1dad395b919cd2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e6b4648_18562043",
        "filename": "java/com/google/gerrit/server/restapi/change/GetChange.java",
        "patchSetId": 15
      },
      "lineNbr": 168,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-11-02T17:37:40Z",
      "side": 1,
      "message": "\u003e \u003e Bad id should throw a MissingObjectException from l.156, which is an IOException, so we\u0027ll hit this catch, correct?\n\u003e \n\u003e l.156 doesn\u0027t do parseCommit on the user-supplied fake ID. It does parseCommit on the meta ref, ie. it will throw if the meta ref is fubar.\n\nSorry, need more coffee. Thanks for pointing that out. I was thrown off by the exception text which talks about \"reading meta-ref id\" and uses id.getName().\n\n\u003e \n\u003e \u003e \"not reachable from\" is more than just the input data, right? \n\u003e \n\u003e if you can call this endpoint, you can see the change. Then you can fetch the meta ref, and walk back through its history. This would give you the same information that we expose here.\n\nGot it, thanks. Now that I\u0027m reading this correctly (I think), I do still think there\u0027s a leak, but the \u0027id\u0027 part is above this. l.130 parses the input id and fails with \"invalid meta SHA1\" if it\u0027s not an object we have. So you could probe SHA1s and see which fail with invalid there (HTTP 400) vs \"not reachable\" here (HTTP 412).\n\nWe probably have this problem elsewhere too. I think a lot (all?) of the time that we give a \"bad data/request\" response, we also need to ensure there isn\u0027t a separate \"inaccessible\" response.\n\nThere\u0027s also this unresolved earlier comment from you. @Luca?\n\n\u003e not sure why you need to handle IOException. I think it\u0027s fine to propagate?",
      "parentUuid": "0fa34cea_2872632e",
      "range": {
        "startLine": 165,
        "startChar": 10,
        "endLine": 168,
        "endChar": 37
      },
      "revId": "5f49600fc403f7b9a7e94fbeca1dad395b919cd2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d516fef4_a11e73bb",
        "filename": "java/com/google/gerrit/server/restapi/change/GetChange.java",
        "patchSetId": 15
      },
      "lineNbr": 168,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-11-02T17:43:22Z",
      "side": 1,
      "message": "\u003e l.130 parses the input id and fails with \"invalid meta SHA1\" if it\u0027s not an object we have. \n\nIt just converts the hex digits into 5 32-bit integers. It doesn\u0027t check for existence; you\u0027d need a repo for that.\n\n\u003e I think a lot (all?) of the time that we give a \"bad data/request\" response, we also need to ensure there isn\u0027t a separate \"inaccessible\" response.\n\nIn the aftermath of the hole we plugged about one year ago, I and Patrick went over all of the REST API to look for info leaks, and we found a couple (which were fixed). So I\u0027m skeptical that there is a widespread problem.",
      "parentUuid": "1e6b4648_18562043",
      "range": {
        "startLine": 165,
        "startChar": 10,
        "endLine": 168,
        "endChar": 37
      },
      "revId": "5f49600fc403f7b9a7e94fbeca1dad395b919cd2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd869659_98afbdc3",
        "filename": "java/com/google/gerrit/server/restapi/change/GetChange.java",
        "patchSetId": 15
      },
      "lineNbr": 168,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-11-02T18:16:40Z",
      "side": 1,
      "message": "\u003e \u003e l.130 parses the input id and fails with \"invalid meta SHA1\" if it\u0027s not an object we have. \n\u003e \n\u003e It just converts the hex digits into 5 32-bit integers. It doesn\u0027t check for existence; you\u0027d need a repo for that.\n\nDoh. Sorry again. I\u0027ll admit, I filled my coffee mug, but did not finish drinking it.\n\n\u003e \n\u003e \u003e I think a lot (all?) of the time that we give a \"bad data/request\" response, we also need to ensure there isn\u0027t a separate \"inaccessible\" response.\n\u003e \n\u003e In the aftermath of the hole we plugged about one year ago, I and Patrick went over all of the REST API to look for info leaks, and we found a couple (which were fixed). So I\u0027m skeptical that there is a widespread problem.\n\nThat\u0027s great! I wasn\u0027t trying to claim a widespread problem, just noting the pattern that could lead to this kind of problem. Awesome that you and Patrick already did an audit and fixed those issues. I\u0027ll keep working on my reading and coffee drinking skills so I can find any new real ones that pop up.",
      "parentUuid": "d516fef4_a11e73bb",
      "range": {
        "startLine": 165,
        "startChar": 10,
        "endLine": 168,
        "endChar": 37
      },
      "revId": "5f49600fc403f7b9a7e94fbeca1dad395b919cd2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c336592d_a9d7252e",
        "filename": "java/com/google/gerrit/server/restapi/change/GetChange.java",
        "patchSetId": 15
      },
      "lineNbr": 168,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-11-02T19:34:08Z",
      "side": 1,
      "message": "@Nasser thanks for your feedback. Did you see other issues associated to this section of the code?",
      "parentUuid": "cd869659_98afbdc3",
      "range": {
        "startLine": 165,
        "startChar": 10,
        "endLine": 168,
        "endChar": 37
      },
      "revId": "5f49600fc403f7b9a7e94fbeca1dad395b919cd2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22c81919_2d908fcf",
        "filename": "java/com/google/gerrit/server/restapi/change/GetChange.java",
        "patchSetId": 15
      },
      "lineNbr": 168,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-11-02T20:02:00Z",
      "side": 1,
      "message": "Just this earlier comment from Han-Wen:\n\n\u003e not sure why you need to handle IOException. I think it\u0027s fine to propagate?",
      "parentUuid": "c336592d_a9d7252e",
      "range": {
        "startLine": 165,
        "startChar": 10,
        "endLine": 168,
        "endChar": 37
      },
      "revId": "5f49600fc403f7b9a7e94fbeca1dad395b919cd2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6373c268_c6c767f7",
        "filename": "java/com/google/gerrit/server/restapi/change/GetChange.java",
        "patchSetId": 15
      },
      "lineNbr": 168,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-11-02T20:26:25Z",
      "side": 1,
      "message": "\u003e Just this earlier comment from Han-Wen:\n\u003e \n\u003e \u003e not sure why you need to handle IOException. I think it\u0027s fine to propagate?\n\nI don\u0027t think it is fine to simply propagate the IOException because it will change the all chain of methods signatures, which also include the exceptions thrown.\n\nWhat it could be instead more appropriate is to throw a BadRequestException instead of PreconditionFailedException. What do you think?",
      "parentUuid": "22c81919_2d908fcf",
      "range": {
        "startLine": 165,
        "startChar": 10,
        "endLine": 168,
        "endChar": 37
      },
      "revId": "5f49600fc403f7b9a7e94fbeca1dad395b919cd2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64da0fe2_f9fc79d8",
        "filename": "java/com/google/gerrit/server/restapi/change/GetChange.java",
        "patchSetId": 15
      },
      "lineNbr": 168,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-11-03T09:49:17Z",
      "side": 1,
      "message": "IOException happens when something is corrupted on the server, so it should translate in a 5xx.",
      "parentUuid": "6373c268_c6c767f7",
      "range": {
        "startLine": 165,
        "startChar": 10,
        "endLine": 168,
        "endChar": 37
      },
      "revId": "5f49600fc403f7b9a7e94fbeca1dad395b919cd2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d18b7ee8_2edf4597",
        "filename": "java/com/google/gerrit/server/restapi/change/GetChange.java",
        "patchSetId": 15
      },
      "lineNbr": 168,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-11-03T09:54:15Z",
      "side": 1,
      "message": "Cool, let me do that and report a 500 instead. We should also add a test for that, isn\u0027t it?",
      "parentUuid": "64da0fe2_f9fc79d8",
      "range": {
        "startLine": 165,
        "startChar": 10,
        "endLine": 168,
        "endChar": 37
      },
      "revId": "5f49600fc403f7b9a7e94fbeca1dad395b919cd2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}