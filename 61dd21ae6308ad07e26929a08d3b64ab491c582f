{
  "comments": [
    {
      "key": {
        "uuid": "e8f5d6e8_63cd57f5",
        "filename": "java/com/google/gerrit/extensions/validators/CommentForValidation.java",
        "patchSetId": 14
      },
      "lineNbr": 40,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-01-21T15:49:57Z",
      "side": 1,
      "message": "It would work perfectly fine if you remove this and passed in an empty list as \u0027comments\u0027.\n\nHaving a single item in a list being sent to the interface complicates it, I think.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 40,
        "endChar": 29
      },
      "revId": "61dd21ae6308ad07e26929a08d3b64ab491c582f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52ac30d8_a5598236",
        "filename": "java/com/google/gerrit/extensions/validators/CommentValidationContext.java",
        "patchSetId": 14
      },
      "lineNbr": 37,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-01-21T15:49:57Z",
      "side": 1,
      "message": "I think we are on the right track overall, the interface is currently complicated a bit by mixing up human comments and robot comments quite a bit. Here is a suggestion for separating these concerns a bit more:\n\nCommentValidationContext {\n  String projectName\n  int changeId\n}\n\nRobotCommentsMetadata {\n  int numNewRobotComments\n  long sizeInBytes\n}\n\nList\u003cValidationFalureException\u003e validateComments(CommentValidationContext ctx, List\u003cCommentForValidation\u003e comments)\n\nList\u003cValidationFalureException\u003e validateRobotComments(CommentValidationContext ctx, RobotCommentsMetadata meta)\n\nThe idea behind this is that human comments are subject to various validations (leaks, size limits, offensive speak, etc.) but that robot comments are only subject to size limits under the premise that a robot that leaks data or is offensive should not have been created in the first place. There are potential other use cases that I could think of, for example, making sure that robots posting have to be configured as checkers by comparing their ID with a checker UUID, but that is far-fetched from now. Adapting to this later if-need-be seems reasonable to me.\n\nThis is just a suggestion, totally up for discussion.\n\nIf you prefer to stick with the current implementation, I would remove the placeholder and have the list be empty in case there are just robot comments.",
      "revId": "61dd21ae6308ad07e26929a08d3b64ab491c582f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}