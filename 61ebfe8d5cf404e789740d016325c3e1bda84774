{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bd809e8f_9e0ab6f1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-03-13T17:35:20Z",
      "side": 1,
      "message": "What if the outer operation refreshes some state/cache when it retries that will then make the inner operation succeed?",
      "revId": "61ebfe8d5cf404e789740d016325c3e1bda84774",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddb32037_c9247bd2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2024-03-13T17:45:11Z",
      "side": 1,
      "message": "With this change such requests will fail now, but I think that\u0027s better than nested retries. Do you have an example in mind?",
      "parentUuid": "bd809e8f_9e0ab6f1",
      "revId": "61ebfe8d5cf404e789740d016325c3e1bda84774",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97f20da7_a5738e8c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-03-13T17:55:56Z",
      "side": 1,
      "message": "I don\u0027t know if I have a perfect example, @kaushik.lingarkar@linaro.org might be able to add more. I do know the SnapshottingRefDirectory\u0027s update* methods will invalidate its snapshot of refs if they encounter any exceptions (such as a LockFailure), and then an outer operation like PostReview could see an updated change note ref that might allow the outer operation to succeed. If the inner operation were retried on its own it might continue to fail (maybe because it\u0027s trying to make an update based on some invalid/outdated data).",
      "parentUuid": "ddb32037_c9247bd2",
      "revId": "61ebfe8d5cf404e789740d016325c3e1bda84774",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b5fea08_1b426716",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2024-03-13T18:08:56Z",
      "side": 1,
      "message": "Is a bug then that the inner operation is retried at all?",
      "parentUuid": "97f20da7_a5738e8c",
      "revId": "61ebfe8d5cf404e789740d016325c3e1bda84774",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64590359_ffa155ca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-03-13T20:55:10Z",
      "side": 1,
      "message": "I don\u0027t think so, but it might depend on what exactly the update is? @kaushik.lingarkar@linaro.org when you were trying to add retries to ReceiveCommits, was the challenge that you needed the retry to happen at a lower level or at a higher level? From what I recall it was lower level (like a BatchUpdate), so the inner retry being discussed here would have been helpful.",
      "parentUuid": "1b5fea08_1b426716",
      "revId": "61ebfe8d5cf404e789740d016325c3e1bda84774",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a437b0a_6f316d73",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2024-03-13T21:08:01Z",
      "side": 1,
      "message": "\u003e I don\u0027t think so, but it might depend on what exactly the update is? @kaushik.lingarkar@linaro.org when you were trying to add retries to ReceiveCommits, was the challenge that you needed the retry to happen at a lower level or at a higher level? \n\nYeah, it was at a lower level.\n\n\u003e From what I recall it was lower level (like a BatchUpdate), so the inner retry being discussed here would have been helpful.",
      "parentUuid": "64590359_ffa155ca",
      "revId": "61ebfe8d5cf404e789740d016325c3e1bda84774",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fc7ed07_a03095c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2024-03-13T21:33:41Z",
      "side": 1,
      "message": "FYI, I tried to implement generic retrying for all BatchUpdates in [1]. In this change the lower retrying in BatchUpdate takes care to reset the state that was created by the failed BatchUpdate attempt before attempting a retry (from the RetryListener). This worked for most BatchUpdates, but not for some BatchUpdates that have an updateRepo phase because updates from this phase were not reset (because in this phase we do not use an InMemoryInserter (yet) which would allow us to reset the state). So in this case the retry of the inner operation failed because it didn\u0027t properly reset all its modifications. So for all operations that properly reset their state before retrying, retrying should just work and then there is no need for retrying the outer operation (if there is a need I would say it\u0027s a bug that the inner retry didn\u0027t properly reset the state).\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/413241",
      "parentUuid": "6a437b0a_6f316d73",
      "revId": "61ebfe8d5cf404e789740d016325c3e1bda84774",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}