{
  "comments": [
    {
      "key": {
        "uuid": "78522cda_2b955dc1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-12-14T09:38:08Z",
      "side": 1,
      "message": "I don\u0027t think that this functionality should be implemented by labels. Labels are intended for voting on changes. Using a label to disable existing permissions to vote on other labels sounds weird to me and I would prefer to not do this in Gerrit core.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 26
      },
      "revId": "627a5db2884f3203e9f75f73730886789fe0f08a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "935a1a19_beecec70",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1073507
      },
      "writtenOn": "2018-12-20T23:17:17Z",
      "side": 1,
      "message": "We want to lock label changes while CI system is evaluating changes. How do you propose to do this? \n\nThis change was implemented following the idea of patchset lock (implemented in https://gerrit-review.googlesource.com/c/gerrit/+/72174/1)\n\nSome of the advantages of having a label function to do this are:\n1. Label locks would be visible to everyone.\n2. It can be easily removed by admins.\n3. It can be accompanied with comments that explains the reason for the label lock.\n4. It can be managed by the existing ACL framework.",
      "parentUuid": "78522cda_2b955dc1",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 26
      },
      "revId": "627a5db2884f3203e9f75f73730886789fe0f08a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66524e98_ac86e860",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-12-21T08:12:20Z",
      "side": 1,
      "message": "I think you can just write a plugin that implements the SubmitRule extension point.\nHave a look at the simplesubmitrules plugin for an example.",
      "parentUuid": "935a1a19_beecec70",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 26
      },
      "revId": "627a5db2884f3203e9f75f73730886789fe0f08a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81c00394_ec35b92f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-12-21T08:16:17Z",
      "side": 1,
      "message": "Oh wait maybe not. Because you want to prevent applying of new labels while the lock is there.\nThis won\u0027t work with the SubmitRule extension point, which for me is rather a proof that what you are trying to do here shouldn\u0027t be done by labels.\n\nI\u0027m aware of the patchset lock, I think doing this with labels was a mistake too.\n\nSo I would prefer if there was a clean extension point that allows plugin to validate/reject votes that are being done on a change and then have the lock logic in a plugin.",
      "parentUuid": "66524e98_ac86e860",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 26
      },
      "revId": "627a5db2884f3203e9f75f73730886789fe0f08a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "989b4bff_c0a9d1c4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-12-21T08:17:06Z",
      "side": 1,
      "message": "Also keep in mind that there is active work being done to remove Prolog from Gerrit core.",
      "parentUuid": "81c00394_ec35b92f",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 26
      },
      "revId": "627a5db2884f3203e9f75f73730886789fe0f08a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}