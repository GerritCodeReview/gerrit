{
  "comments": [
    {
      "key": {
        "uuid": "90646fc9_9aae2db7",
        "filename": "Documentation/cmd-logging-ls-level.txt",
        "patchSetId": 20
      },
      "lineNbr": 21,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-09-24T16:38:04Z",
      "side": 1,
      "message": "any special reason to use this library and not the standard JDK regex API?",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "505e77fe_b8d4d95a",
        "filename": "Documentation/cmd-logging-ls-level.txt",
        "patchSetId": 20
      },
      "lineNbr": 21,
      "author": {
        "id": 1016317
      },
      "writtenOn": "2014-09-24T18:44:23Z",
      "side": 1,
      "message": "I was told in an earlier comment that the convention is to use this library when regex comes from users.",
      "parentUuid": "90646fc9_9aae2db7",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b095f3be_bb6127e2",
        "filename": "Documentation/cmd-logging-ls-level.txt",
        "patchSetId": 20
      },
      "lineNbr": 25,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-09-24T16:38:04Z",
      "side": 1,
      "message": "Or have the administrate_server capability?",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10787f6e_96cfecc7",
        "filename": "Documentation/cmd-logging-ls-level.txt",
        "patchSetId": 20
      },
      "lineNbr": 25,
      "author": {
        "id": 1016317
      },
      "writtenOn": "2014-09-24T18:44:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b095f3be_bb6127e2",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90646fc9_bab3f11d",
        "filename": "Documentation/cmd-logging-ls-level.txt",
        "patchSetId": 20
      },
      "lineNbr": 32,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-09-24T16:38:04Z",
      "side": 1,
      "message": "This will also match: com.googleeee.xyz, comxgooglex.y.z...\n\nTo be more precise the dots needs to be escaped:\n\n  ^com\\.google\\..*\n\nFor most cases you example will work and is easier to type. However, you could provide a remark on what I commented here.",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "505e77fe_d8d98d91",
        "filename": "Documentation/cmd-logging-ls-level.txt",
        "patchSetId": 20
      },
      "lineNbr": 32,
      "author": {
        "id": 1016317
      },
      "writtenOn": "2014-09-24T18:44:23Z",
      "side": 1,
      "message": "I had to use ^com\u0027\\\\\u0027.google\u0027\\\\\u0027..* to get the exact behaviour (gross). I\u0027m thinking of replacing regex with a simple String.contains() since it\u0027ll be cleaner and I don\u0027t think a regex brings that much more to the table.",
      "parentUuid": "90646fc9_bab3f11d",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b095f3be_5b9d8386",
        "filename": "Documentation/cmd-logging-ls-level.txt",
        "patchSetId": 20
      },
      "lineNbr": 32,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-09-25T07:51:46Z",
      "side": 1,
      "message": "I agree.",
      "parentUuid": "505e77fe_d8d98d91",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b095f3be_db56f308",
        "filename": "Documentation/cmd-logging-set-level.txt",
        "patchSetId": 20
      },
      "lineNbr": 39,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-09-24T16:38:04Z",
      "side": 1,
      "message": "here it may be more important to be precise about escaping the dot as the regex may match more than expected.",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90646fc9_daa8a5ac",
        "filename": "gerrit-sshd/BUCK",
        "patchSetId": 20
      },
      "lineNbr": 30,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-09-24T16:38:04Z",
      "side": 1,
      "message": "why not the standard JDK regex support?",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b095f3be_fb5baf2d",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/commands/ListLoggingLevelCommand.java",
        "patchSetId": 20
      },
      "lineNbr": 55,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-09-24T16:38:04Z",
      "side": 1,
      "message": "this method is called only when the given logger pattern starts with the \"^\" (lines 45-46). Therefore this if condition is always true and can be removed.",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10787f6e_b6d4e85a",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/commands/ListLoggingLevelCommand.java",
        "patchSetId": 20
      },
      "lineNbr": 55,
      "author": {
        "id": 1016317
      },
      "writtenOn": "2014-09-24T18:44:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b095f3be_fb5baf2d",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b095f3be_1b713bab",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/commands/ListLoggingLevelCommand.java",
        "patchSetId": 20
      },
      "lineNbr": 62,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-09-24T16:38:04Z",
      "side": 1,
      "message": "I still don\u0027t see why to use the brics library here and not the standard regex",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10a15f0c_ae5c572a",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/commands/ListLoggingLevelCommand.java",
        "patchSetId": 20
      },
      "lineNbr": 62,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-09-25T10:32:20Z",
      "side": 1,
      "message": "See [1].  I also seem to remember it being mentioned that brics is the preferred lib to use, but I can\u0027t find it.  There are a few hits on a search \"comment:brics\" but unfortunately there\u0027s no easy way to quickly find the relevant comments.\n\n[1] https://groups.google.com/d/msg/repo-discuss/i_Eht3j1Fcc/gxRYsIhqukoJ",
      "parentUuid": "b095f3be_1b713bab",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b095f3be_fbae4f6c",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/commands/ListLoggingLevelCommand.java",
        "patchSetId": 20
      },
      "lineNbr": 62,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-09-26T08:08:22Z",
      "side": 1,
      "message": "We actually already make use of the standard java.util.regex in many places.\n\n  $ git grep \u0027import java.util.regex\u0027 | wc -l\n  41\n\nOne reason to use the brics for the regex support in the ref patterns in the access control was, as I understood it, the \"getShortestExample\" method...\nwhich generates a shortest string which is matched by that regex. This is then used for computing the edit distance of each matching ref pattern to the target branch in order to decide which pattern is the most specific. \n\nThe brics library also has its disadvantages... If I remember well it doesn\u0027t support the negative/positive lookahead and because of that it is impossible (I guess) to express something like: \"all branches except master\" in the ref pattern.\n\nSince we are already using java.util.regex I would vote to also make use of it here.... assuming we really want regular expression here?\nA simple String.contains or String.startsWith is probably more than enough.\nIt also avoids the issue with escaping the dot in command line:\n\n  com\\\\.google\\\\.gerrit...\n\nwhich would be as simple as:\n\n  com.google.gerrit\n\nif we don\u0027t use regular expressions.",
      "parentUuid": "10a15f0c_ae5c572a",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b095f3be_3b6ef7cb",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/commands/SetLoggingLevelCommand.java",
        "patchSetId": 20
      },
      "lineNbr": 96,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-09-24T16:38:04Z",
      "side": 1,
      "message": "this is always true, remove",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10787f6e_d6d96491",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/commands/SetLoggingLevelCommand.java",
        "patchSetId": 20
      },
      "lineNbr": 96,
      "author": {
        "id": 1016317
      },
      "writtenOn": "2014-09-24T18:44:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b095f3be_3b6ef7cb",
      "revId": "62fbc670d56829558853147478423535fc81f855",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}