{
  "comments": [
    {
      "key": {
        "uuid": "59534955_188f2537",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RefPatternMatcher.java",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-06-01T16:16:53Z",
      "side": 0,
      "message": "This line shouldn\u0027t be removed, but it should rather be:\n\n  return Iterables.concat(emails, ImmutableSet.of(user.getUserName()));",
      "range": {
        "startLine": 147,
        "startChar": 8,
        "endLine": 147,
        "endChar": 70
      },
      "revId": "64dd60b305b63dbfe66327c238081de5b9506f7d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39569546_378af826",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RefPatternMatcher.java",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-06-01T16:18:25Z",
      "side": 0,
      "message": "I suspect the intent was to do:\n\n emails \u003d Iterables.concat(emails, ImmutableSet.of(user.getUserName());\n\nThis block is unnecessarily obtuse though. I would just say:\n\n Set\u003cString\u003e emails \u003d new HashSet\u003c\u003e(user.asIdentifiedUser().getEmailAddresses());\n if (user.getUserName() !\u003d null) {\n   emails.add(user.getUserName());\n }\n\nEverything else is premature optimization and, as we can see, error-prone.",
      "revId": "64dd60b305b63dbfe66327c238081de5b9506f7d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "196d5111_368af826",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RefPatternMatcher.java",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-06-01T16:20:57Z",
      "side": 0,
      "message": "This optimization was requested during the review:\n\n  https://gerrit-review.googlesource.com/#/c/77077/2/gerrit-server/src/main/java/com/google/gerrit/server/project/RefPatternMatcher.java@128",
      "parentUuid": "39569546_378af826",
      "revId": "64dd60b305b63dbfe66327c238081de5b9506f7d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9679d2f_358af026",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RefPatternMatcher.java",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-06-01T16:25:55Z",
      "side": 0,
      "message": "Ok, I guess we can make the minimal change to fix this bug.\n\nBut I\u0027m not sure I agree with that. Is this called in a tight loop somewhere? If it\u0027s not, it still smells like premature optimization to me. If it is, wouldn\u0027t it make more sense to hoist the Iterable\u003cString\u003e construction out of the loop entirely, i.e. not provide a method that takes a (ref, user)?",
      "parentUuid": "196d5111_368af826",
      "revId": "64dd60b305b63dbfe66327c238081de5b9506f7d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}