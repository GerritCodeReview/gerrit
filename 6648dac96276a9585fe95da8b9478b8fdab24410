{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "646491e2_ede7451f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-06-15T14:01:48Z",
      "side": 1,
      "message": "I dropped the ball on this one, but here are my concerns about having this as a commit footer instead of as a tag/label in the commit message (as in the 1:st patch-set) if you think they are something to consider:\n\n* A commit footer normally has a key and a value.\n* In this case we don\u0027t care about the value.\n* This means that any of these footers makes the change submitable:\n\n    FW_COMPATIBLE: no\n    \n    FW_COMPATIBLE: false\n    \n    FW_COMPATIBLE:\n    \nIt sort-of serves it\u0027s purpose but is somewhat confusing.",
      "revId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a513c41c_5a2c88e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-06-15T14:08:52Z",
      "side": 1,
      "message": "I\u0027m more inclined to your opinion and would have preferred a tag instead of a commit footer but I don\u0027t have a strong opinion. I could also update it to `footer:\u0027FW_COMPATIBLE\u003dchecked\u0027`, eliminating any wrong values.\n\nWhat do you think?",
      "parentUuid": "646491e2_ede7451f",
      "revId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe92dbb1_143150bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-16T00:05:16Z",
      "side": 1,
      "message": "\u003e I\u0027m more inclined to your opinion and would have preferred a tag instead of a commit footer but I don\u0027t have a strong opinion. I could also update it to `footer:\u0027FW_COMPATIBLE\u003dchecked\u0027`, eliminating any wrong values.\n\u003e \n\u003e What do you think?\n\nIf you use a \"tag\", where in the message does it go? If it\u0027s just anywhere in the message, how do you avoid accidental misuse (FW_COMPATIBLE\u003dno/false, \"this change is not FW_COMPATIBLE\", etc)?\n\nIf we want a footer, then maybe since \"FW_COMPATIBLE\" is shorthand for \"Forward Compatible\", a \u0027Compatible:\u0027 footer with appropriate values (\u0027Compatible: Forward\u0027 for this use case) would address Sven\u0027s concern and allow for future flexibility? For example, we care about backwards compatibility for any changes to the extensions package, so we could do \u0027Compatible: Backwards\u0027 as required on those changes. Another future thought is that it might make sense to use something like \u0027Compatible: BREAKING\u0027 to provide extra scrutiny on some changes.",
      "parentUuid": "a513c41c_5a2c88e4",
      "revId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f6045a9_3fe56ba0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-08T10:09:29Z",
      "side": 1,
      "message": "David, sorry for the delay. I replied to your comments.",
      "revId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99116f6b_c00891da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-08T10:18:00Z",
      "side": 1,
      "message": "\u003e In this case we don\u0027t care about the value.\n\nWe actually adjusted it to require footer `Forward-Compatible: checked` https://gerrit-review.googlesource.com/c/gerrit/+/339936 hence it no longer accepts any value for the footer.\n\n\u003e a \u0027Compatible:\u0027 footer with appropriate values\n\n(just thinking) about your suggestion for a possible future extension to include `Compatible: forward` and `Compatible: backward`. I don\u0027t know if the server supports having multiple footers with same name. I quickly looked at the code and it seems like this is possible.\n\nFor now, we did not encounter a case where we needed an alert on backward compatibility, but we could easily change this config (if needed) in the future.",
      "parentUuid": "fe92dbb1_143150bd",
      "revId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cdfc037_17c1f91f",
        "filename": "project.config",
        "patchSetId": 5
      },
      "lineNbr": 119,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-06-28T05:58:17Z",
      "side": 1,
      "message": "Upper-Case and \u0027-\u0027 with \u0027_\u0027 mismatch is inconsistent with previous SR: \"Release-Notes\":\n\n  Release-Notes: skip\n  FW_COMPATIBLE: checked\n  \nCan we use consistent spelling of both SR? May be:\n\n  Release-Notes: skip\n  Forward-Compatible: checked",
      "range": {
        "startLine": 119,
        "startChar": 9,
        "endLine": 119,
        "endChar": 22
      },
      "revId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5f24efd_062adf72",
        "filename": "project.config",
        "patchSetId": 5
      },
      "lineNbr": 119,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-08T10:09:29Z",
      "side": 1,
      "message": "Agree. That was actually done in https://gerrit-review.googlesource.com/c/gerrit/+/339936.\n\nThanks for taking care of it.",
      "parentUuid": "0cdfc037_17c1f91f",
      "range": {
        "startLine": 119,
        "startChar": 9,
        "endLine": 119,
        "endChar": 22
      },
      "revId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f24d6e03_43c70679",
        "filename": "project.config",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-06-25T11:41:29Z",
      "side": 1,
      "message": "This doesn\u0027t appear to work as expected, as it is flagging (merge) changes that didn\u0027t change any files from those directories to require SR: Change-Is-FW-Compatible.\n\nShould this be reverted to unblock approving and merging changes?",
      "range": {
        "startLine": 120,
        "startChar": 45,
        "endLine": 120,
        "endChar": 164
      },
      "revId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9618bfed_eb3df53e",
        "filename": "project.config",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-06-25T11:41:29Z",
      "side": 1,
      "message": "Is this actually needed (or copy/paste from the previous rule)? There is a restriction to changes in Java files in specified directories, that would never be added to the refs/meta/config branch.",
      "range": {
        "startLine": 120,
        "startChar": 16,
        "endLine": 120,
        "endChar": 44
      },
      "revId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4960eb0_a289f3cc",
        "filename": "project.config",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-06-28T05:39:54Z",
      "side": 1,
      "message": "This one was clarified, the merge commit actually touched a file from those directories. Sorry for the noise.",
      "parentUuid": "f24d6e03_43c70679",
      "range": {
        "startLine": 120,
        "startChar": 45,
        "endLine": 120,
        "endChar": 164
      },
      "revId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "388a9b69_cf6bc824",
        "filename": "project.config",
        "patchSetId": 5
      },
      "lineNbr": 120,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-08T10:09:29Z",
      "side": 1,
      "message": "\u003e There is a restriction to changes in Java files in specified directories, that would never be added to the refs/meta/config branch.\n\nYes, that\u0027s true. I actually copied it from previous rule but it does not hurt. Maybe it\u0027s nice to have it explicit that the rule does not apply on refs-config.\n\nBut yes, it can be removed given the RHS for the java file patterns.",
      "parentUuid": "9618bfed_eb3df53e",
      "range": {
        "startLine": 120,
        "startChar": 16,
        "endLine": 120,
        "endChar": 44
      },
      "revId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d36fe61_ca99a77d",
        "filename": "project.config",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-06-25T11:41:29Z",
      "side": 1,
      "message": "Is this needed? Gerrit project doesn\u0027t have any child project.",
      "range": {
        "startLine": 122,
        "startChar": 1,
        "endLine": 122,
        "endChar": 35
      },
      "revId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c77700d2_23711f7b",
        "filename": "project.config",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-08T10:09:29Z",
      "side": 1,
      "message": "No, that\u0027s not really needed and can be removed (i.e. yes we don\u0027t care about this config being true or false because no project inherits from the Gerrit project). The default is false anyway [1].\n\n[1] https://gerrit.googlesource.com/gerrit/+/e01801a0b8f0714abfaf04b49fc3a503f7b49060/java/com/google/gerrit/server/project/ProjectConfig.java#987",
      "parentUuid": "5d36fe61_ca99a77d",
      "range": {
        "startLine": 122,
        "startChar": 1,
        "endLine": 122,
        "endChar": 35
      },
      "revId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Style",
        "description": {
          "value": "Code has correct style and format"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Style\u003dMAX AND -label:Code-Style\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["branch:refs/meta/config"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Style=MAX AND -label:Code-Style=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Library-Compliance",
        "description": {
          "value": "Changes to specific library/metadata files require additional approval"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Library-Compliance\u003dMAX,user\u003dnon_uploader AND -label:Library-Compliance\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["branch:refs/meta/config"],"failingAtoms":["file:\"^lib/.*\"","file:\"^WORKSPACE$\"","file:\"^.gitmodule$\"","file:\"^tools/deps.bzl$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Library-Compliance=MAX,user=non_uploader AND -label:Library-Compliance=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Release-Notes",
        "description": {
          "value": "Changes must include a \u0027Release-Notes\u0027 footer with a single sentence to mention in the release notes. Changes not worth mentioning in the release notes should put \u0027Release-Notes: skip\u0027"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Release-Notes\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["branch:refs/meta/config"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Release-Notes\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["branch:refs/meta/config"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6648dac96276a9585fe95da8b9478b8fdab24410",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}