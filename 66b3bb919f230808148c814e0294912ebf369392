{
  "comments": [
    {
      "key": {
        "uuid": "fca1425f_3c91d13b",
        "filename": "polygerrit-ui/app/elements/shared/gr-date-formatter/gr-date-formatter.js",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1023872
      },
      "writtenOn": "2016-03-16T21:46:12Z",
      "side": 1,
      "message": "based on what is happening on line 61 there is the potential for this to be false.\n\nshould we handle that here? or is false what you want",
      "revId": "66b3bb919f230808148c814e0294912ebf369392",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c729620_0594125e",
        "filename": "polygerrit-ui/app/elements/shared/gr-date-formatter/gr-date-formatter.js",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2016-03-17T18:48:49Z",
      "side": 1,
      "message": "Sorry, late for the party, but here\u0027s a slightly different idea - why not make this check in restAPI, keep, and serve defaults there?\n\nThis would simplify other usage of getPreferences() in future\n\nJust a thought, up to you.",
      "revId": "66b3bb919f230808148c814e0294912ebf369392",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fca1425f_bc23a1ed",
        "filename": "polygerrit-ui/app/elements/shared/gr-date-formatter/gr-date-formatter.js",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1023872
      },
      "writtenOn": "2016-03-16T21:46:12Z",
      "side": 1,
      "message": "make this default a property?",
      "revId": "66b3bb919f230808148c814e0294912ebf369392",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc9c7e2c_fb292fcf",
        "filename": "polygerrit-ui/app/elements/shared/gr-date-formatter/gr-date-formatter.js",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1023872
      },
      "writtenOn": "2016-03-16T21:46:12Z",
      "side": 1,
      "message": "ditto class level default",
      "revId": "66b3bb919f230808148c814e0294912ebf369392",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fca1425f_dc754dd4",
        "filename": "polygerrit-ui/app/elements/shared/gr-date-formatter/gr-date-formatter.js",
        "patchSetId": 4
      },
      "lineNbr": 92,
      "author": {
        "id": 1023872
      },
      "writtenOn": "2016-03-16T21:46:12Z",
      "side": 1,
      "message": "ditto class level default",
      "revId": "66b3bb919f230808148c814e0294912ebf369392",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc92be65_4b9e257e",
        "filename": "polygerrit-ui/app/elements/shared/gr-date-formatter/gr-date-formatter_test.html",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2016-03-17T18:48:49Z",
      "side": 1,
      "message": "/me expresses general concern about stubbing private methods.\nhttps://www.objc.io/issues/15-testing/bad-testing-practices/#don-t-stub-private-methods\n\nWhat you could do here, is to add multiple stubs to gr-rest-api-interface (for getLoggedIn and getPreferences), and then return Promise.all(allOfThem) so tests will wait for them to resolve and trigger thenables in gr-date-formatter",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 59,
        "endChar": 22
      },
      "revId": "66b3bb919f230808148c814e0294912ebf369392",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c729620_25ebcecc",
        "filename": "polygerrit-ui/app/elements/shared/gr-date-formatter/gr-date-formatter_test.html",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2016-03-17T21:03:38Z",
      "side": 1,
      "message": "Considering the method we’re stubbing is one line I don’t think having a hard rule about stubbing private methods is really a concern here. If the solution is going to make the code more complex then I don’t think we should do it. If not, then go for it.",
      "parentUuid": "dc92be65_4b9e257e",
      "revId": "66b3bb919f230808148c814e0294912ebf369392",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c729620_65f5c6a3",
        "filename": "polygerrit-ui/app/elements/shared/gr-date-formatter/gr-date-formatter_test.html",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1023872
      },
      "writtenOn": "2016-03-17T21:04:05Z",
      "side": 1,
      "message": "in this case, since _getTimeFormat is a helper to hit a REST endpoint and return a value, stubbing at this level is fine.\n\nThe fn isprivate to external consumers however internally it still has a contract that it is following, by stubbing it here we are simply bypassing the request and assuming that the contract has been fulfilled with a given value.\n\nIn general, I agree with you about not stubbing private fns, but in the end with any rule, we need to critically think about if it is the correct move to follow said rule.\n\nIn this case +1 to roll as is.",
      "parentUuid": "dc92be65_4b9e257e",
      "revId": "66b3bb919f230808148c814e0294912ebf369392",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c8e7a42_ceb1430e",
        "filename": "polygerrit-ui/app/elements/shared/gr-date-formatter/gr-date-formatter_test.html",
        "patchSetId": 4
      },
      "lineNbr": 128,
      "author": {
        "id": 1013702
      },
      "writtenOn": "2016-03-17T18:28:24Z",
      "side": 1,
      "message": "I think this should be preferencesPromise.",
      "range": {
        "startLine": 128,
        "startChar": 43,
        "endLine": 128,
        "endChar": 54
      },
      "revId": "66b3bb919f230808148c814e0294912ebf369392",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}