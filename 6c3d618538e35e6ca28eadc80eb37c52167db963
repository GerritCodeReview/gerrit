{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c85a0ef9_11aaf823",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-12-08T05:51:54Z",
      "side": 1,
      "message": "It doesn\u0027t hurt, but strictly speaking, it is not needed. Imagine, someone would erroneously add a change (up until stable-3.9 branch), and use some Java 17 compiler features, then she would check that change locally with java17 configuration:\n\n  $\u003e bazel build --config\u003djava17 headless\n\nThat would pass, but on the CI it would fail, because java 11 is used.\n\nBecause our CI is enforcing this already. This (and all other changes) up to stable-3.9 branch (where we bumped the toolchain to java17 per default) is building with java compiler level 11:\n\nbuild --java_language_version\u003d11\nbuild --java_runtime_version\u003dremotejdk_11\nbuild --tool_java_language_version\u003d11\nbuild --tool_java_runtime_version\u003dremotejdk_11\n\nA more appropriate place for this change would be on stable-3.9 branch, where we bumped java compiler level to Java 17 per default in this change: [1].\n\n[1]: https://gerrit-review.googlesource.com/c/gerrit/+/327739",
      "revId": "6c3d618538e35e6ca28eadc80eb37c52167db963",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a921355_696ce15c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-13T21:32:33Z",
      "side": 1,
      "message": "\u003e It doesn\u0027t hurt, but strictly speaking, it is not needed. Imagine, someone would erroneously add a change (up until stable-3.9 branch), and use some Java 17 compiler features, then she would check that change locally with java17 configuration:\n\nI agree; however, ...\n\n\u003e A more appropriate place for this change would be on stable-3.9 branch, where we bumped java compiler level to Java 17 per default in this change: [1].\n\nI am intending to solve that problem, but I didn\u0027t want to do this until I made the earlier stable branches consistent with the same java 17 configuration. So I will be fixing this potential issue on stable-3.9, but via a merge up from stable-3.6. Does that make sense?",
      "parentUuid": "c85a0ef9_11aaf823",
      "revId": "6c3d618538e35e6ca28eadc80eb37c52167db963",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c05a30e6_c45da680",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-12-07T22:19:56Z",
      "side": 1,
      "message": "Tests pass:\n```\n$ bazel build --config\u003djava17 release \u0026\u0026 \\\n    bazel test --config\u003djava17 --flaky_test_attempts 3 \\\n    --test_timeout 3600 --test_tag_filters\u003d-flaky \\\n    //...\n[snip]\nExecuted 197 out of 202 tests: 202 tests pass.\nINFO: Build completed successfully, 1337 total actions\n```\n\nAnd it still creates java17 bytecode:\n```\n$ jar -xf ./bazel-bin/gerrit.war Main.class\n$ file ./Main.class\n./Main.class: compiled Java class data, version 61.0\n```",
      "revId": "6c3d618538e35e6ca28eadc80eb37c52167db963",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}