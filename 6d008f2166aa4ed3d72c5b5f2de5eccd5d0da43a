{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "41379470_42444939",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-03-21T16:03:27Z",
      "side": 1,
      "message": "add a link to the change which implemented this check ?",
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16064cbf_a23c7eff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-03-27T07:47:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41379470_42444939",
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5be0959_0d512211",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-03-22T08:58:53Z",
      "side": 1,
      "message": "Missing `Release-Notes:` footer.",
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa60b0eb_d0d2bdcb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 15,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-03-24T14:33:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5be0959_0d512211",
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36629a64_9adb1515",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-03-21T15:37:19Z",
      "side": 1,
      "message": "I don\u0027t quite understand this. From what I recall you wouldn\u0027t end up here if `c` is the latest patch-set of a merged change. Am I remembering wrong?\nAnyhow, this optimization isn\u0027t mentioned in the commit-message.",
      "range": {
        "startLine": 82,
        "startChar": 14,
        "endLine": 82,
        "endChar": 66
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e6b3c42_327bbbcb",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-03-24T06:28:23Z",
      "side": 1,
      "message": "You are right. My bad.\nBut it actually sometimes ends up in there. I managed to reproduce that issue once on my local machine during debugging. When it occurred, `c` was the top-most commit of a change series (i.e. equal to `n`) consisting of two changes that required a rebase to submit. I ended up in line 82 (PS9) (where I had set a breakpoint), but when I checked the result of the conditions in line 81, it shouldn\u0027t have, i.e. `!c.has(canMergeFlag) || !incoming.contains(c)` returned `false`. So there seems to be a race. That would also fit the observations on our productive systems, where we see performance issues during peak load times and where the issue occurs sporadicly. I can however not find any place in the code, where the `incoming`-set would be changed after it is initially created. The `RevWalk` is shared, since the `OpenRepo` is cached, but the `canMergeFlag` is never removed, it is only set. Thus, it shouldn\u0027t be an issue that the RevWalk is not thread safe, since I also saw the correct commit `c`, i.e. the start of the RevWalk didn\u0027t change.\nWhen I tried to reproduce again, I was unable to do so.\nSo while my change would mitigate the issue, it does not solve the real problem. I will try to figure out what might cause this.",
      "parentUuid": "36629a64_9adb1515",
      "range": {
        "startLine": 82,
        "startChar": 14,
        "endLine": 82,
        "endChar": 66
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfa76872_a56e3986",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-03-24T11:19:02Z",
      "side": 1,
      "message": "I see, reminds me of how fun it is to fix stuff in the submit-code.\nI don\u0027t know if we have to solve it if we can mitigate it first.\nAdd a ticket to the bug-tracker that explains your findings for now?\n\nAdd a comment about this here? The submit-code is so complex that you are generally very grateful for all the hints you can get.\n\n```suggestion\n          /* We shouldn\u0027t end up here if c is the latest patch-set of a merged \n           * change, but due to what seems like a race-condition we sometimes do.\n           * When this happens we don\u0027t want to risk doing a full rev-walk if\n           * the information we\u0027re after is available in the index.\n           */\n          if (isAlreadyMergedInSameBranch(c, n.change().getDest())\n```",
      "parentUuid": "2e6b3c42_327bbbcb",
      "range": {
        "startLine": 82,
        "startChar": 14,
        "endLine": 82,
        "endChar": 66
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9aa22962_aa799127",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-03-24T14:33:36Z",
      "side": 1,
      "message": "I will open a ticket. The code is indeed very complex and since the issue can\u0027t be reproduced well in a development context, this is hard to track.",
      "parentUuid": "dfa76872_a56e3986",
      "range": {
        "startLine": 82,
        "startChar": 14,
        "endLine": 82,
        "endChar": 66
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81530763_4c1b8379",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-03-24T15:40:45Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "9aa22962_aa799127",
      "range": {
        "startLine": 82,
        "startChar": 14,
        "endLine": 82,
        "endChar": 66
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fba52945_b9497f9e",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 83,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-03-21T15:37:19Z",
      "side": 1,
      "message": "If it only makes sense to perform this check when there\u0027s a merge in the list of commits to be submitted, wouldn\u0027t it make sense performance-wise to check for this first?\n\n`if (toSortContainsMerge\n              \u0026\u0026 (isAlreadyMergedInSameBranch(c, n.change().getDest()) || isAlreadyMergedInAnyBranch(c)))`",
      "range": {
        "startLine": 82,
        "startChar": 10,
        "endLine": 83,
        "endChar": 74
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c4b1e02_26506c36",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 83,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-03-24T14:33:36Z",
      "side": 1,
      "message": "There is at least one other case where c is not mergeable: If it is an outdated patchset of a submitted change earlier in the change series. In that case, we still want to do the `isAlreadyMergedInSameBranch` check and mark the commit as uninteresting. Thus, we have to do this check this late.",
      "parentUuid": "fba52945_b9497f9e",
      "range": {
        "startLine": 82,
        "startChar": 10,
        "endLine": 83,
        "endChar": 74
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7ce80ed_b0c89857",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 118,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-03-21T16:03:27Z",
      "side": 1,
      "message": "I think additional performance improvements are possible here:\n\nWe should pass all branches to RevWalk#isMergedInto(RevCommit, Collection\u003cRef\u003e) in one go instead of looping over all branches and running isMergedInto for each branch individually.\n\nIn addition RevWalk#isMergedIntoAny(RevCommit commit, Collection\u003cRef\u003e refs) could be improved to exit early when it found a first Ref the commit is merged into.",
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ddfb2c0_d907a6da",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 118,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-03-24T14:33:36Z",
      "side": 1,
      "message": "Since this check is only interesting, if the commit was added to the current history by a merge, wouldn\u0027t it be enough to check the branches that were merged into the target branch by those merge commits?\n\nE.g. if a change merges `dev` into `master`, wouldn\u0027t it be enough to look for this commit in `dev`, but not in `production`?\n\nSince we have a list of all changes to be submitted, we could collect those branches and loop through those instead.",
      "range": {
        "startLine": 118,
        "startChar": 32,
        "endLine": 118,
        "endChar": 47
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38f8c68e_886b2948",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 118,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-03-24T15:40:45Z",
      "side": 1,
      "message": "But FWICT at this level we only know which commits are parent of the merge commit, not which branches they are or were tips of. Hence the need to look through all branches.",
      "parentUuid": "0ddfb2c0_d907a6da",
      "range": {
        "startLine": 118,
        "startChar": 32,
        "endLine": 118,
        "endChar": 47
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0848c7a1_a99a1826",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 118,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-03-25T21:22:16Z",
      "side": 1,
      "message": "with commit-graph and Kyle\u0027s series https://git.eclipse.org/r/c/jgit/jgit/+/187541 we have a good chance to speedup isMergedInto considerably",
      "parentUuid": "38f8c68e_886b2948",
      "range": {
        "startLine": 118,
        "startChar": 32,
        "endLine": 118,
        "endChar": 47
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28ac3e70_2887dd6e",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 118,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-03-27T07:47:39Z",
      "side": 1,
      "message": "I would do that in a separate change, since this will be a larger effort:\n\n- We need a Collection of Refs instead of RevCommits\n- isMergedIntoAny currently does not have an early stop, if it found any hit and thus at the moment wouldn\u0027t safe us computation time",
      "parentUuid": "b7ce80ed_b0c89857",
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb8b7823_4700ba1e",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 118,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-03-27T07:47:39Z",
      "side": 1,
      "message": "Right :-(. And we can\u0027t walk up the commit graph.",
      "parentUuid": "0848c7a1_a99a1826",
      "range": {
        "startLine": 118,
        "startChar": 32,
        "endLine": 118,
        "endChar": 47
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fea5cb8_8a28bd0b",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 131,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-03-21T15:37:19Z",
      "side": 1,
      "message": "`isMergedInBranchAsSubmittedChange` or similar.\n\n* This method won\u0027t find commits that aren\u0027t patch-sets of merged changes.\n* `InSameBranch` doesn\u0027t make sense to me in this context since it reads \"merged in same branch as `dest`\", when it\u0027s really \"merged in `dest`\".",
      "range": {
        "startLine": 131,
        "startChar": 18,
        "endLine": 131,
        "endChar": 45
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "862d4b73_e46c1afa",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 131,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-03-24T14:33:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4fea5cb8_8a28bd0b",
      "range": {
        "startLine": 131,
        "startChar": 18,
        "endLine": 131,
        "endChar": 45
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "709c6abc_0e13fc2e",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-03-21T15:37:19Z",
      "side": 1,
      "message": "nit: Wouldn\u0027t this theoretically also include changes where `commit` isn\u0027t the latest patch-set?\nIf so would we need to filter such changes from `changes`?",
      "range": {
        "startLine": 132,
        "startChar": 21,
        "endLine": 132,
        "endChar": 28
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "907be60d_3c4acb03",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-03-21T15:37:19Z",
      "side": 1,
      "message": "Let the index do the filtering?\n```suggestion\n    List\u003cChangeData\u003e changes \u003d queryProvider.get().byBranchCommit(dest, commit);\n```",
      "range": {
        "startLine": 132,
        "startChar": 51,
        "endLine": 132,
        "endChar": 59
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6b96115_da4a7f1d",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-03-24T14:33:36Z",
      "side": 1,
      "message": "Yes, it would find older patchsets.\nThis is currently expected by at least one test, which expects an error by an outdated patchset to be handled in a specific way. However, I believe directly noticing the missing dependency at this point would be better. I will fix that in a separate change.",
      "parentUuid": "709c6abc_0e13fc2e",
      "range": {
        "startLine": 132,
        "startChar": 21,
        "endLine": 132,
        "endChar": 28
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4074627_2fbcb4aa",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-03-24T14:33:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "907be60d_3c4acb03",
      "range": {
        "startLine": 132,
        "startChar": 51,
        "endLine": 132,
        "endChar": 59
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "768b0743_3035b8f9",
        "filename": "java/com/google/gerrit/server/submit/RebaseSorter.java",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-03-24T15:40:45Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "b6b96115_da4a7f1d",
      "range": {
        "startLine": 132,
        "startChar": 21,
        "endLine": 132,
        "endChar": 28
      },
      "revId": "6d008f2166aa4ed3d72c5b5f2de5eccd5d0da43a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}