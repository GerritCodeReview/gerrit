{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8465fe1d_e825cf8d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-11-20T12:17:21Z",
      "side": 1,
      "message": "Thanks, this change looks already very good. I only have some minor and optional comments.",
      "revId": "6d6db58e844f3970907aaa18926f4d03e39d5cd7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15d6da52_6906aacc",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 3
      },
      "lineNbr": 466,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-11-20T12:17:21Z",
      "side": 1,
      "message": "[optional] Instead of returning null if the change wasn\u0027t merged, you may consider changing the return type to Optional\u003cTimestamp\u003e and then returning Optional.empty(). This way it\u0027s more obvious to callers that they must expect that the timestamp may not be present.",
      "range": {
        "startLine": 465,
        "startChar": 2,
        "endLine": 466,
        "endChar": 34
      },
      "revId": "6d6db58e844f3970907aaa18926f4d03e39d5cd7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a52b3c6f_d540e61f",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 3
      },
      "lineNbr": 466,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2020-11-23T09:17:31Z",
      "side": 1,
      "message": "I was considering this too, but came to the conclusion that I would keep null behaviour for the consistency with the other methods in the interface.\n\nIf I go for Optional, I would have to do the null conversion in ChangeField anyway, smth like cd -\u003e cd.getMergedOn().isPresent() ? cd.getMergedOn().get(): null\n\nAnd similar in predicates.\n\nI  agree Optional is cleaner, I just don\u0027t feel like it adds much to the readability of the existing classes in this case.\n\nChanging the Nulluble methods to Optional in both ChangeNotes and ChangeData could be a separate clean-up change, WDYT?",
      "parentUuid": "15d6da52_6906aacc",
      "range": {
        "startLine": 465,
        "startChar": 2,
        "endLine": 466,
        "endChar": 34
      },
      "revId": "6d6db58e844f3970907aaa18926f4d03e39d5cd7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "617abcd6_eb6d6e30",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesCache.java",
        "patchSetId": 3
      },
      "lineNbr": 161,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-11-20T12:17:21Z",
      "side": 1,
      "message": "It seems you are adding weighs for fields here that were forgotten so far, but which are unrelated to this change. It\u0027s good that you noticed this and that you are fixing it right away. However it would be better if you would do this in a separate (predecessor) change. This way we will be able to cherry-pick this fix to the stable branches if we want, while not integrating the new feature too. Decoupling the bug-fix from the new feature in a separate change also has the advantage that we can keep the bug-fix in case the feature needs to be reverted. So if you don\u0027t mind it would be nice if you could split out this bug-fix into a separate change.",
      "range": {
        "startLine": 156,
        "startChar": 9,
        "endLine": 161,
        "endChar": 45
      },
      "revId": "6d6db58e844f3970907aaa18926f4d03e39d5cd7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3eb2e03c_346ff0c9",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesCache.java",
        "patchSetId": 3
      },
      "lineNbr": 161,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2020-11-23T09:17:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "617abcd6_eb6d6e30",
      "range": {
        "startLine": 156,
        "startChar": 9,
        "endLine": 161,
        "endChar": 45
      },
      "revId": "6d6db58e844f3970907aaa18926f4d03e39d5cd7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e90c181a_f70e7296",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 3
      },
      "lineNbr": 620,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-11-20T12:17:21Z",
      "side": 1,
      "message": "[optional] Consider using Optional\u003cTimestamp\u003e",
      "range": {
        "startLine": 620,
        "startChar": 9,
        "endLine": 620,
        "endChar": 18
      },
      "revId": "6d6db58e844f3970907aaa18926f4d03e39d5cd7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c689ecd_b70b4b71",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 3
      },
      "lineNbr": 620,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2020-11-23T09:17:31Z",
      "side": 1,
      "message": "See the comment in ChangeNotes, WDYT?",
      "parentUuid": "e90c181a_f70e7296",
      "range": {
        "startLine": 620,
        "startChar": 9,
        "endLine": 620,
        "endChar": 18
      },
      "revId": "6d6db58e844f3970907aaa18926f4d03e39d5cd7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "229b0fcc_bfa6aa46",
        "filename": "javatests/com/google/gerrit/server/notedb/ChangeNotesTest.java",
        "patchSetId": 3
      },
      "lineNbr": 684,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-11-20T12:17:21Z",
      "side": 1,
      "message": "nit: setting a topic seems to be not relevant for this test, can this line be dropped?",
      "revId": "6d6db58e844f3970907aaa18926f4d03e39d5cd7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9caf7cc_dd0bf5e8",
        "filename": "javatests/com/google/gerrit/server/notedb/ChangeNotesTest.java",
        "patchSetId": 3
      },
      "lineNbr": 684,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2020-11-23T09:17:31Z",
      "side": 1,
      "message": "I just really wanted to verify merged is not set on any update accidentally. Added a line about this.",
      "parentUuid": "229b0fcc_bfa6aa46",
      "revId": "6d6db58e844f3970907aaa18926f4d03e39d5cd7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "188d8005_73afd1f8",
        "filename": "javatests/com/google/gerrit/server/notedb/ChangeNotesTest.java",
        "patchSetId": 3
      },
      "lineNbr": 712,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-11-20T12:17:21Z",
      "side": 1,
      "message": "FYI, we need to be careful with timestamp assertions as the timestamp precision in NoteDb is only 1s. This means if tests are executed with real time it often happens that 2 subsequent NoteDb commits have the same timestamp and as result of this tests can become flaky. To avoid this tests that rely on timestamps use a fake clock that ensures that all timestamps differ by 1s. For this test this is ensured in the base class in setUpTestEnvironment -\u003e setTimeForTesting. So this assertion is fine. If needed it\u0027s also possible to use the @UseClockStep annotation on individual test methods for this.",
      "revId": "6d6db58e844f3970907aaa18926f4d03e39d5cd7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}