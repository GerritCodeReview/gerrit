{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "086019a0_66637b29",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-08-23T21:35:27Z",
      "side": 1,
      "message": "Please add docs for the new cache",
      "range": {
        "startLine": 18,
        "startChar": 19,
        "endLine": 18,
        "endChar": 47
      },
      "revId": "6e80489d378dc437cd02e997e341b6754f1ed7e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ca7b225_78c29475",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-08-23T21:35:27Z",
      "side": 1,
      "message": "I\u0027m going to say that anything that admins may need to configure needs a release note",
      "range": {
        "startLine": 22,
        "startChar": 15,
        "endLine": 22,
        "endChar": 19
      },
      "revId": "6e80489d378dc437cd02e997e341b6754f1ed7e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6efbab76_daca4614",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2022-08-23T17:26:03Z",
      "side": 1,
      "message": "how does this cache work in a distributed setting? If I post a draft comment in datacenter A, how does datacenter B evict? ",
      "revId": "6e80489d378dc437cd02e997e341b6754f1ed7e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7209663_be96dc0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-08-23T21:38:51Z",
      "side": 1,
      "message": "Commenting to make this unresolved as I also share this concern. Should admins with a multi-primary setup have an aggressive maxAge setting for the cache so these are evicted sooner? Would doing that negate the value of the cache?",
      "parentUuid": "6efbab76_daca4614",
      "revId": "6e80489d378dc437cd02e997e341b6754f1ed7e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e5903f6_4e0cf63e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-08-23T22:06:39Z",
      "side": 1,
      "message": "@hanwen@google.com Thanks for bringing to my attention.\n\nInternally we have a custom implementation of MemoryCacheFactory (SiteCacheFactory). There exists a removalListener (GuavaCachePool#createCache) that publishes pubsub events on cache invalidations (GuavaCachePool#onInvalidate). Other tasks should receive these events and evict their caches (GuavaCachePool#onGlobalUpdateEvent).\n\nFinally we need to register this cache (internally) to be invalidated via PubSub. We have this setup for other in-memory caches (e.g. Project cache \"projects\" and others - GobCaches for a pointer).\n\n@nasser.grainawi@linaro.org I was unsure about the existence of a pubsub mechanism for cache invalidations in OS code/plugins. I did a quick code search but it looks like there isn\u0027t. In this case, yes you can set aggressive maxAge. Note that this problem is not specific to this cache, for example other in-memory caches (e.g. \"groups\" cache - see [1]) are invalidated in the same way.\nTo bring more context, Iba2284a7586b (which is guarded by an experiment) is now rolled out to all our instances and caused an increase to the p90 latencies - among others - which I\u0027m trying to enhance with this change.\n\nWe can also set this cache to disabled by default with a hint that it can optimize performance for \"has:drafts\" queries.\n\n[1] https://gerrit-review.googlesource.com/Documentation/config-gerrit.html#cache_names",
      "parentUuid": "6efbab76_daca4614",
      "revId": "6e80489d378dc437cd02e997e341b6754f1ed7e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecb050be_c110d9fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-08-25T18:07:24Z",
      "side": 1,
      "message": "\u003e @nasser.grainawi@linaro.org I was unsure about the existence of a pubsub mechanism for cache invalidations in OS code/plugins. I did a quick code search but it looks like there isn\u0027t.\n\nI think the high-availability plugin does do some cache evictions across primaries.\n\n\u003e In this case, yes you can set aggressive maxAge. Note that this problem is not specific to this cache, for example other in-memory caches (e.g. \"groups\" cache - see [1]) are invalidated in the same way.\n\nAgreed. We have a set of caches where we set maxAge to something like 5 minutes because we know they won\u0027t get updates from other primaries otherwise. We use refreshAfterWrite to try and mitigate the impact of expiring those entries and hopefully prevent user threads from waiting for a cache miss (at least for frequently used entries).\n\nWhat\u0027s your analysis of configuring this cache that way? Will it work well to mitigate the increase in latencies?\n\n\u003e To bring more context, Iba2284a7586b (which is guarded by an experiment) is now rolled out to all our instances and caused an increase to the p90 latencies - among others - which I\u0027m trying to enhance with this change.\n\u003e \n\u003e We can also set this cache to disabled by default with a hint that it can optimize performance for \"has:drafts\" queries.\n\nAssuming we\u0027re talking about future when this is non-experiment, I\u0027d be worried about disabling by default if you\u0027re already seeing performance issues, unless you somehow think those issues wouldn\u0027t affect a typical non-Google instance. I don\u0027t think reading from noteDb is guaranteed to be faster for non-Google though (and in fact, the commit message of Iba2284a7586b seems to say this was already measured and confirmed as a regression?).",
      "parentUuid": "3e5903f6_4e0cf63e",
      "revId": "6e80489d378dc437cd02e997e341b6754f1ed7e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0789de2b_9fefe104",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-08-29T16:18:45Z",
      "side": 1,
      "message": "Sorry for putting this on-hold for a while. We found out that the performance of getRefsByPrefix [1] was specifically slow (O(hundreds of millis) with tracing), so did put this on hold and am trying to understand the slowness.\n\nI\u0027ll put this temporarily as WIP.\n\n[1] https://gerrit.googlesource.com/gerrit/+/3daae68771b895e13227b1e043ca45411601d198/java/com/google/gerrit/server/CommentsUtil.java#487",
      "parentUuid": "ecb050be_c110d9fa",
      "revId": "6e80489d378dc437cd02e997e341b6754f1ed7e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}