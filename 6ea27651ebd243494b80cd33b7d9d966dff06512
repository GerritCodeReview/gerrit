{
  "comments": [
    {
      "key": {
        "uuid": "29fa20a6_4fa5b7fb",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-22T11:10:20Z",
      "side": 1,
      "message": "New features should go to the master branch.",
      "range": {
        "startLine": 24,
        "startChar": 41,
        "endLine": 25,
        "endChar": 5
      },
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f43f405_04700ebc",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-22T11:10:20Z",
      "side": 1,
      "message": "Improvement of existing features should go into one of the supported (non-EOL) branches, assuming they do not break any existing configuration or functionality and do not require data migration steps.",
      "range": {
        "startLine": 26,
        "startChar": 2,
        "endLine": 27,
        "endChar": 19
      },
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6c7e90c_9c8358a7",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1012155
      },
      "writtenOn": "2020-06-21T12:46:07Z",
      "side": 1,
      "message": "Totally not sure if these 3 items are remotely what we want to employ.\nBut I obviously failed to hit the correct branch for quite a few\nchanges lately, so I figured it\u0027s better to start discussing what is\nexpected.",
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86983464_3de4f227",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2020-06-21T12:53:55Z",
      "side": 1,
      "message": "TBH there\u0027s no hard and fast rule for this.  Often a fix will get accepted on the branch it was originally pushed for, and then get cherry picked by one of the maintainers (or someone else) back to an earlier branch.",
      "parentUuid": "e6c7e90c_9c8358a7",
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd5922a8_bb1df3fa",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1012155
      },
      "writtenOn": "2020-06-21T14:50:43Z",
      "side": 1,
      "message": "I know there are no hard and fast rules for this, but having some guidelines\nwould certainly help.\n\nBut I can see that writing it down might be hurtful as it removes part of a\ngrey area. So if you prefer to not have this section at all, it\u0027s more than\nunderstandable and I\u0027ll easily abandon this change :-)",
      "parentUuid": "86983464_3de4f227",
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7adf8c9_5138499a",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-22T11:10:20Z",
      "side": 1,
      "message": "I believe this point is correct, I would leave it with one addition:\n\"Should the merged fix to be applicable to another supported branch, it can be cherry-picked and re-merged afterwards\"",
      "parentUuid": "cd5922a8_bb1df3fa",
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f9ad452_2e49e997",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-22T11:10:20Z",
      "side": 1,
      "message": "New features should go to master as a norm. I do not understand the statement \"caring about the Gerrit version\".",
      "range": {
        "startLine": 35,
        "startChar": 44,
        "endLine": 36,
        "endChar": 18
      },
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e64c735f_b16fb71e",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2020-06-21T12:52:08Z",
      "side": 1,
      "message": "Typically a completely new feature should be done on master.",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 40,
        "endChar": 14
      },
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb3ccffa_d03d1597",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1012155
      },
      "writtenOn": "2020-06-21T14:50:43Z",
      "side": 1,
      "message": "I can see that. And I know that a few years back it was far more strict\n\"develop features on master and have bugfixes on all supported, affected\nbranches.\"\n\nThat made it hard to contribute from/for sites that ran an old version.\n\nI see that the rule is no longer that strict as it once was. And I like\nthat, because it makes contributing so much easier. WMF is on 2.15 and we\nfirst targeted to upgrade to 3.1 and changed into upgrading straight to\n3.2 next Saturday. Being able to upload changes on stable-3.1 and\nstable-3.2 helps us scratch our itches while it brings new features to\nevery user.\n\nBut I struggle to find out on which branch to best submit things, so I\u0027m\ntrying to distill some guidelines.\n\nFor example, one thing I struggled with when getting back to WMFs Gerrit was\nthat I did not know which plugn ran in which version and how they got built etc.\nSome relevant people were no longer around and it seems artifacts got deployed\nfrom private commits that cannot be recreated.\nSo I worked on that a bit. And for example getting the API version into the plugin\njars\u0027 manifests is a new feature, so it should go into master. That means,\nWMF does not get to use that in the upcoming 3.2 upgrade (unless we fork).\nSince I find the version that useful, I instead of master uploaded for\nstable-2.16 and it landed fine. I think that is a good violation of the old,\nstrict rule.\nSo even 2.16 users can now check if all plugins they run got build with the\ncorrect API with a few lines of shell code.\n\nShowing this API version in the UI is also a new, but separate feature. So it\nshould go into master as well. I instead uploaded for stable-3.1 as that\u0027s\nwhere we\u0027d thought we\u0027d like to use it. And I was told to move it onto an\neven older branch.\n\nThe reindex speedup that you recently reviewed for me (Thanks again!) should\nhave been uploaded for master, as it\u0027s not a bug fix, but an improvement.\nIf uploading for master is required for such things, it limits the value\nusers con get out of it. And it might be cheaper for WMFs to keep such\ncode unpublished instead of having it to develop for a version they cannot use.\n\nAnd since some time, WMF had a plugin called barricade that mitigated\nthe \"HTTP session use of inactive users\" issue. It was the quickest and\ncheapest way to get their code running. They only need to develop for their running\nGerrit and do not need to pass reviews (aka great quality control) etc.\nWMF was fully supportive of me trying to get that upstream, and it is now merged\nin a completely different form for the benefit of everyone.\nIf we had to submit for master, it would probably have gotten green light only\nbecause WMF is awesome around Open Source, but their (immediate) benefit would\nvanish completely. It would have only cost them.\n\nI\u0027m sure other organizations/cooperations are in a similar position. So there is real\nvalue in allowing new features older branches.\n\nAs you see above, there are plenty of examples of new features landing in older\nbranches. It it provides value. Having that written down in a guideline document\nwould help me to feel more confident when uploading changes.",
      "parentUuid": "e64c735f_b16fb71e",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 40,
        "endChar": 14
      },
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ac89594_2962be31",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-22T11:10:20Z",
      "side": 1,
      "message": "I believe the problem is the \"new feature\" vs. \"improvement of existing feature\".\nAdding more details to the plugin version API is an \"improvement of existing feature\" whilst developing a clustering of the replication mechanism or the attention set is a \"new feature\".\n\nBear in mind that developing a \"new feature\" requires now a design document which needs to be submitted for approval beforehand. In the design document you specify also what is the target branch that you would like the feature to land and the ESC and the community will discuss that.\n\nI don\u0027t see anyone starting a \"brand new feature\" in a stable branch without any design document, unless it is an improvement of an existing feature.\n\nThe exception to the norm is your account deactivation listener, which was done in stable-3.1 and did not go through the design document process. That is because it was part of the solution of a security bug fix.",
      "parentUuid": "bb3ccffa_d03d1597",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 40,
        "endChar": 14
      },
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5924822_2bc486aa",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-06-22T18:07:20Z",
      "side": 1,
      "message": "I think the conclusion here is few things are really \"brand new features\". Often we\u0027re improving something existing, the difference is to what extent a given improvement is risky or disruptive to the code base.\n\nAlso a nit Luca:\n\n\u003e Bear in mind that developing a \"new feature\" requires now a design document which needs to be submitted for approval beforehand.\n\nThis is not strictly true if you read the contribution process. Design docs are recommended, but not required.\n\nI personally would be happy to see small features / improvements developed on stable branches because it gets them used faster. I think an alternative to that if we want to strongly discourage features on stable branches would be to find some collaborative way to make more releases. I can see it being a hard sell for organizations to put effort into developing a feature that won\u0027t be in a release for 3+ months on average.",
      "parentUuid": "8ac89594_2962be31",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 40,
        "endChar": 14
      },
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ab013fb_86e39af8",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-06-22T19:07:42Z",
      "side": 1,
      "message": "I personally tried convince a dev from gerrit stakeholder company to move a fix from master to stable-2.16 branch  (year ago or something as stable-2.16 was still active), but got the answer: Why would I invest my time, and spent the effort? Then I gave up and it was merged to master only. So, let\u0027s face it: it is not just a rule but someone would have to invest time and resources to back port something to older releases.\n\nVery good example is: [1] and temporary fix: [2] and then it was realized that the problem was already investigated and partly fixed: [3] but unfortunately only on master. Now it was cherry-picked to earlier releases: [4], and even this issue was created: [5], but only because someone complained about it...\n\nBottom line: there cannot be any rule. If you ask a dev to move a fix from master to stable-3.0, but if she doesn\u0027t care about stable-3.0 she would not. If you do care about it, feel free to spend *your* time and resource to back port that change, now, or later, or never.\n\n[1] https://groups.google.com/d/topic/repo-discuss/4hvo-mw4vxA/discussion\n[2] https://gerrit-review.googlesource.com/c/gerrit/+/271174\n[3] https://gerrit-review.googlesource.com/c/gerrit/+/246835\n[4] https://gerrit-review.googlesource.com/c/gerrit/+/272580\n[5] https://bugs.chromium.org/p/gerrit/issues/detail?id\u003d12952",
      "parentUuid": "e5924822_2bc486aa",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 40,
        "endChar": 14
      },
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76b1b765_96fc9a2a",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-06-22T19:44:58Z",
      "side": 1,
      "message": "\u003e Bottom line: there cannot be any rule. If you ask a dev to move a fix from master to stable-3.0, but if she doesn\u0027t care about stable-3.0 she would not. If you do care about it, feel free to spend *your* time and resource to back port that change, now, or later, or never.\n\nI agree with this. We can always ask and see if someone wishes to take on that work, but I don\u0027t think we should reject a fix because it could be applied to an earlier branch.",
      "parentUuid": "3ab013fb_86e39af8",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 40,
        "endChar": 14
      },
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9183b1f9_9d4eb7c9",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-22T20:11:36Z",
      "side": 1,
      "message": "The risks with developing brand-new features on stable branches are twofold:\n\n1) Difficulty in merging the feature up to master: that is high as the stable branch is far away from master. E.g. A brand new feature on stable-2.16 would require significant effort in merging it up to master. Also, post-merge, would create a lot more maintenance and conflicts on the subsequent merges.\n\n2) Instability: a brand-new feature would potentially require some refactoring and could introduce regressions on a stable branch, which could be highly problematic for all those users that don\u0027t need that new feature and just wanted to get the latest fixes on a stable branch.\n\nIf a stable-N branch was named \"stable\" and not \"fork\", it\u0027s because they are supposed to keep a stable API and a stable set of features. Minor backward compatible improvements are always welcomed, however, major refactoring and brand-new features could be risky.",
      "parentUuid": "76b1b765_96fc9a2a",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 40,
        "endChar": 14
      },
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da9c7fb7_613632cf",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-06-22T18:07:20Z",
      "side": 1,
      "message": "This feels a bit out of place with the specific version recommendations. I\u0027m sure it\u0027s accurate, but it probably doesn\u0027t age well as an example of what to do in the future.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 48,
        "endChar": 17
      },
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf586576_daf9a918",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-06-22T18:07:20Z",
      "side": 1,
      "message": "I don\u0027t think we want to discourage people from fixing bugs on the version in which they were introduced. Just because a new release might not be made on that old version, doesn\u0027t mean folks aren\u0027t running it and wouldn\u0027t benefit from a bug fix on a stable branch.",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 61
      },
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d932e05_08c39bdf",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-22T20:11:36Z",
      "side": 1,
      "message": "I recently fixed a security problem on stable-2.14 :-) and I am happy to do it on stable-2.13 or earlier if anyone requests it.\n\nI don\u0027t believe we never said \"do not fix bugs\", but rather we \"actively support from version X onwards\". Also, we do release earlier EOL versions (e.g. see the recent security fixes on v2.14.21, released on the 9th of June), but not on a regular basis.",
      "parentUuid": "cf586576_daf9a918",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 61
      },
      "revId": "6ea27651ebd243494b80cd33b7d9d966dff06512",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}