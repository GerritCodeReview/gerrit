{
  "comments": [
    {
      "key": {
        "uuid": "24a51a34_96541c3f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/DiffSummary.java",
        "patchSetId": 11
      },
      "lineNbr": 38,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-02-16T12:29:09Z",
      "side": 1,
      "message": "If those are added don\u0027t we need to update serialVersionUID in DiffSummaryKey?\n\nAt least if I reindex an existing site I now get a lot of such warnings:\n\nReindexing changes: projects: 66% (2/3)[2017-02-16 13:19:27,131] [Index-Batch-4] WARN  com.google.gerrit.server.cache.h2.H2CacheImpl : Cannot read cache jdbc:h2:file:///usr/local/google/home/ekempin/site/cache/diff_summary for DiffSummaryKey[BASE..a01222505919ad29230a362e077026f3da4f618b IGNORE_NONE]\norg.h2.jdbc.JdbcSQLException: Deserialization failed, cause: \"java.util.zip.ZipException: incorrect header check\" [90027-176]\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:344)\n\tat org.h2.message.DbException.get(DbException.java:167)\n\tat org.h2.util.Utils.deserialize(Utils.java:419)\n\tat org.h2.jdbc.JdbcConnection.convertToDefaultObject(JdbcConnection.java:1911)\n\tat org.h2.jdbc.JdbcResultSet.getObject(JdbcResultSet.java:504)\n\tat com.google.gerrit.server.cache.h2.H2CacheImpl$SqlStore.getIfPresent(H2CacheImpl.java:442)\n\tat com.google.gerrit.server.cache.h2.H2CacheImpl$LoadingCallable.call(H2CacheImpl.java:254)\n\tat com.google.gerrit.server.cache.h2.H2CacheImpl$LoadingCallable.call(H2CacheImpl.java:242)\n\tat com.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4904)\n\tat com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3628)\n\tat com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2336)\n\tat com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2295)\n\tat com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2208)\n\tat com.google.common.cache.LocalCache.get(LocalCache.java:4053)\n\tat com.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4899)\n\tat com.google.gerrit.server.cache.h2.H2CacheImpl.get(H2CacheImpl.java:134)\n\tat com.google.gerrit.server.patch.PatchListCacheImpl.getDiffSummary(PatchListCacheImpl.java:170)\n\tat com.google.gerrit.server.patch.PatchListCacheImpl.getDiffSummary(PatchListCacheImpl.java:162)\n\tat com.google.gerrit.server.query.change.ChangeData.getDiffSummary(ChangeData.java:620)\n\tat com.google.gerrit.server.query.change.ChangeData.filePaths(ChangeData.java:594)\n\tat com.google.gerrit.server.query.change.ChangeData.currentFilePaths(ChangeData.java:582)\n\tat com.google.gerrit.server.index.change.ChangeField.getFileParts(ChangeField.java:224)\n\tat com.google.gerrit.server.index.change.ChangeField$14.get(ChangeField.java:263)\n\tat com.google.gerrit.server.index.change.ChangeField$14.get(ChangeField.java:260)\n\tat com.google.gerrit.server.index.Schema$1.apply(Schema.java:187)\n\tat com.google.gerrit.server.index.Schema$1.apply(Schema.java:182)\n\tat com.google.common.collect.Iterators$7.transform(Iterators.java:750)\n\tat com.google.common.collect.TransformedIterator.next(TransformedIterator.java:47)\n\tat com.google.common.collect.Iterators$6.computeNext(Iterators.java:616)\n\tat com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:145)\n\tat com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:140)\n\tat com.google.gerrit.lucene.AbstractLuceneIndex.toDocument(AbstractLuceneIndex.java:313)\n\tat com.google.gerrit.lucene.LuceneChangeIndex.replace(LuceneChangeIndex.java:214)\n\tat com.google.gerrit.lucene.LuceneChangeIndex.replace(LuceneChangeIndex.java:105)\n\tat com.google.gerrit.server.index.change.ChangeIndexer.index(ChangeIndexer.java:202)\n\tat com.google.gerrit.server.index.change.AllChangesIndexer$ProjectIndexer.index(AllChangesIndexer.java:296)\n\tat com.google.gerrit.server.index.change.AllChangesIndexer$ProjectIndexer.call(AllChangesIndexer.java:276)\n\tat com.google.gerrit.server.index.change.AllChangesIndexer$1.call(AllChangesIndexer.java:224)\n\tat com.google.gerrit.server.index.change.AllChangesIndexer$1.call(AllChangesIndexer.java:203)\n\tat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:111)\n\tat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:58)\n\tat com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:75)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:295)\n\tat com.google.gerrit.server.git.WorkQueue$Task.run(WorkQueue.java:418)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: java.util.zip.ZipException: incorrect header check\n\tat java.util.zip.InflaterInputStream.read(InflaterInputStream.java:164)\n\tat java.util.zip.InflaterInputStream.read(InflaterInputStream.java:122)\n\tat com.google.gerrit.server.ioutil.BasicSerialization.safeRead(BasicSerialization.java:45)\n\tat com.google.gerrit.server.ioutil.BasicSerialization.readVarInt32(BasicSerialization.java:87)\n\tat com.google.gerrit.server.ioutil.BasicSerialization.readBytes(BasicSerialization.java:110)\n\tat com.google.gerrit.server.ioutil.BasicSerialization.readString(BasicSerialization.java:134)\n\tat com.google.gerrit.server.patch.DiffSummary.readObject(DiffSummary.java:71)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1058)\n\tat java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1909)\n\tat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1808)\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1353)\n\tat java.io.ObjectInputStream.readObject(ObjectInputStream.java:373)\n\tat org.h2.util.Utils.deserialize(Utils.java:417)\n\t... 47 more",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 38,
        "endChar": 34
      },
      "revId": "6fd1b6f1f657e4e9e9561bcd92752b19fe15f366",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}