{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "60de4f06_6d18c10b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 10,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-12-03T16:24:04Z",
      "side": 1,
      "message": "nit: an",
      "range": {
        "startLine": 10,
        "startChar": 56,
        "endLine": 10,
        "endChar": 59
      },
      "revId": "727575119a275cb642215c37db897f89da433bc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f66201dc_d7403e6d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-12-03T16:24:04Z",
      "side": 1,
      "message": "nit: UUIDs",
      "range": {
        "startLine": 17,
        "startChar": 31,
        "endLine": 17,
        "endChar": 35
      },
      "revId": "727575119a275cb642215c37db897f89da433bc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "347da8c3_5d6d5a73",
        "filename": "java/com/google/gerrit/entities/PatchSetApproval.java",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-12-03T16:24:04Z",
      "side": 1,
      "message": "nit: missing .",
      "range": {
        "startLine": 47,
        "startChar": 71,
        "endLine": 47,
        "endChar": 72
      },
      "revId": "727575119a275cb642215c37db897f89da433bc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f5519db_d101fa98",
        "filename": "java/com/google/gerrit/entities/PatchSetApproval.java",
        "patchSetId": 8
      },
      "lineNbr": 65,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-12-03T16:24:04Z",
      "side": 1,
      "message": "Where is the decoding happening?\n\nIf I have a string \"foo\" is \"foo\".equals(uuid(foo).get()) in all cases? I think it should.\n\nActually, why do we need to encode/decode at all :-)",
      "range": {
        "startLine": 65,
        "startChar": 13,
        "endLine": 65,
        "endChar": 27
      },
      "revId": "727575119a275cb642215c37db897f89da433bc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16f30792_c9bb2ede",
        "filename": "java/com/google/gerrit/entities/PatchSetApproval.java",
        "patchSetId": 8
      },
      "lineNbr": 90,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-12-03T16:24:04Z",
      "side": 1,
      "message": "You can remove the Optional here. Auto builders are aware of optinals in AutoValues.\n\nso you can have:\n\nAutoValue:\n\nOptional\u003cString\u003e foo\n\nand Builder:\n\nsetFoo(String foo)",
      "range": {
        "startLine": 90,
        "startChar": 33,
        "endLine": 90,
        "endChar": 41
      },
      "revId": "727575119a275cb642215c37db897f89da433bc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c659d7d9_e4e00b60",
        "filename": "java/com/google/gerrit/server/approval/PatchSetApprovalUuid.java",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-12-03T16:24:04Z",
      "side": 1,
      "message": "It seems this only contains the generator and that you might want to make that an extension point in the future. So I would move the Generator interface and impl into two files: PatchSetUuidGenerator and *Impl.",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 13
      },
      "revId": "727575119a275cb642215c37db897f89da433bc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1db98a59_d7d54123",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 8
      },
      "lineNbr": 993,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-12-03T16:24:04Z",
      "side": 1,
      "message": "Can you list 3 examples for different cases (UUID present, absent, real author present, absent).",
      "revId": "727575119a275cb642215c37db897f89da433bc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0a83f38_54a07bc7",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 8
      },
      "lineNbr": 1001,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-12-03T16:24:04Z",
      "side": 1,
      "message": "This parsing is getting more complicated. What do you think about using some standard serializer instead medium-term (outside of the scope of this change)? e.g. protos?",
      "revId": "727575119a275cb642215c37db897f89da433bc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ade2e1ff_36132776",
        "filename": "javatests/com/google/gerrit/server/notedb/ChangeNotesParserTest.java",
        "patchSetId": 8
      },
      "lineNbr": 165,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-12-03T16:24:04Z",
      "side": 1,
      "message": "It is hard to see if parsing this format will work for all inputs.\n\nWhenever you offer the Generator as extension point, implementations can return a string potentially breaking this serialization/deserialization.\n\nIs that why you encoded the string in the UUID autovalue class?",
      "range": {
        "startLine": 165,
        "startChar": 15,
        "endLine": 165,
        "endChar": 99
      },
      "revId": "727575119a275cb642215c37db897f89da433bc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf7e7862_163d1c4d",
        "filename": "proto/entities.proto",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-12-03T16:24:04Z",
      "side": 1,
      "message": "11\n\n(was forgotten to be updated when copied was added)",
      "range": {
        "startLine": 128,
        "startChar": 12,
        "endLine": 128,
        "endChar": 14
      },
      "revId": "727575119a275cb642215c37db897f89da433bc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}