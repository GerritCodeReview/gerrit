{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6b85a918_0dba1098",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-10-05T13:33:57Z",
      "side": 1,
      "message": "maybe say something about the last iteration as well (ie. moving it to project level)",
      "range": {
        "startLine": 15,
        "startChar": 2,
        "endLine": 15,
        "endChar": 45
      },
      "revId": "73ac371be0f0152240b455e68a514a57e169ff57",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13f43cf8_806775b5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2021-10-06T08:40:51Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "6b85a918_0dba1098",
      "range": {
        "startLine": 15,
        "startChar": 2,
        "endLine": 15,
        "endChar": 45
      },
      "revId": "73ac371be0f0152240b455e68a514a57e169ff57",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ac64bff_6da1dfe7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-10-05T13:33:57Z",
      "side": 1,
      "message": "I did a quick look over it, seems good overall. Thanks for testing the visibility as well. I\u0027ll leave to Martin \u0026 Nasser to +2 if they want to delve into details.\n\n(I wonder if it\u0027s worth it to try to provide ref-hints for the tags as well; not sure if tag visibility is expensive for you.)",
      "revId": "73ac371be0f0152240b455e68a514a57e169ff57",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f1b6349_112e1407",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2021-10-05T16:55:57Z",
      "side": 1,
      "message": "\u003e (I wonder if it\u0027s worth it to try to provide ref-hints for the tags as well; not sure if tag visibility is expensive for you.)\ncould you kindly elaborate on what \"ref-hints\" mean..?",
      "parentUuid": "6ac64bff_6da1dfe7",
      "revId": "73ac371be0f0152240b455e68a514a57e169ff57",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d922dd18_02ee86a8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-10-06T11:09:18Z",
      "side": 1,
      "message": "if you get a tag, you have to find a branch through which the tag is reachable to verify readability of the tag. We have a tag visibility cache that helps, but I\u0027m not sure how well that works (Martin should know, though). If the data isn\u0027t in the cache, you have to do a revwalk to find a branch to go with the tag.\n\nI don\u0027t know your use case, but if the caller already knows a branch through which the tag should be reachable, they could supply that branch to winnow down the search.\n\nI can\u0027t judge if this matches your use-case.",
      "parentUuid": "5f1b6349_112e1407",
      "revId": "73ac371be0f0152240b455e68a514a57e169ff57",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0eb2767_91f72024",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 7
      },
      "lineNbr": 1066,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-10-05T13:35:01Z",
      "side": 1,
      "message": "if you want to generalize to multiple commits later on, this data type might be sub-optimal.\n\nyour call.",
      "range": {
        "startLine": 1066,
        "startChar": 4,
        "endLine": 1066,
        "endChar": 23
      },
      "revId": "73ac371be0f0152240b455e68a514a57e169ff57",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8aece651_6148ec57",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 7
      },
      "lineNbr": 1066,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2021-10-05T17:33:29Z",
      "side": 1,
      "message": "Right. We could update the API name to /projects/{project-name}/commitsin \nand send out a map with commitId as key and list of refs as value.\nAnd later add support for multiple commits.\n\nHandling different cases(for this change):\n1. invalid input commit sha1\n    - return 404 not found\n2. non of the input refs are valid or visible\n    - return empty map\n3. all/few of the input refs are valid and visible\n    a. commit exists and reachable from one or more visible refs\n        - returns commitId as key with list of reachable refs.\n    b. commit does not exist\n        - map will not contain the commitId\n    c. commit exist and not reachable from any visible refs\n        - map will not contain the commitId\n        \nShall I update this change accordingly ..?",
      "parentUuid": "f0eb2767_91f72024",
      "range": {
        "startLine": 1066,
        "startChar": 4,
        "endLine": 1066,
        "endChar": 23
      },
      "revId": "73ac371be0f0152240b455e68a514a57e169ff57",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e17ee656_3ad54e29",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 7
      },
      "lineNbr": 1066,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-10-05T18:22:23Z",
      "side": 1,
      "message": "\u003e Right. We could update the API name to /projects/{project-name}/commitsin \n\u003e and send out a map with commitId as key and list of refs as value.\n\u003e And later add support for multiple commits.\n\u003e \n\u003e Handling different cases(for this change):\n\u003e 1. invalid input commit sha1\n\u003e     - return 404 not found\n\nWhat does invalid mean? How would this work if two commits were given and one was \"valid\" and not the other?\n\nI suspect you want this to be the same response as 2.\n\n\u003e 2. non of the input refs are valid or visible\n\u003e     - return empty map\n\u003e 3. all/few of the input refs are valid and visible\n\u003e     a. commit exists and reachable from one or more visible refs\n\u003e         - returns commitId as key with list of reachable refs.\n\u003e     b. commit does not exist\n\u003e         - map will not contain the commitId\n\u003e     c. commit exist and not reachable from any visible refs\n\u003e         - map will not contain the commitId\n\u003e         \n\u003e Shall I update this change accordingly ..?",
      "parentUuid": "8aece651_6148ec57",
      "range": {
        "startLine": 1066,
        "startChar": 4,
        "endLine": 1066,
        "endChar": 23
      },
      "revId": "73ac371be0f0152240b455e68a514a57e169ff57",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f408c4e_a27fd8c5",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 7
      },
      "lineNbr": 1066,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2021-10-06T08:40:51Z",
      "side": 1,
      "message": "\u003e What does invalid mean? How would this work if two commits were given and one was \"valid\" and not the other? I suspect you want this to be the same response as 2.\nInvalid means that the commit sha1 is not a sha1, eg:abc. Yes, we can respond with empty map.\n\nDone. Updated the change accordingly.",
      "parentUuid": "e17ee656_3ad54e29",
      "range": {
        "startLine": 1066,
        "startChar": 4,
        "endLine": 1066,
        "endChar": 23
      },
      "revId": "73ac371be0f0152240b455e68a514a57e169ff57",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}