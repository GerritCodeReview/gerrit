{
  "comments": [
    {
      "key": {
        "uuid": "685383fd_3041c8c3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-01-02T22:37:32Z",
      "side": 1,
      "message": "OK. I can live with this format.",
      "range": {
        "startLine": 27,
        "startChar": 2,
        "endLine": 27,
        "endChar": 23
      },
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dfb5d35_fe8b8152",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 10
      },
      "lineNbr": 122,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-01-02T22:37:32Z",
      "side": 1,
      "message": "fwiw this should not be necessary. The first traversal in the RevWalk for interesting objects will retain body.",
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "685383fd_50b56c5e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 10
      },
      "lineNbr": 122,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-01-02T23:01:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2dfb5d35_fe8b8152",
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48315fd0_a7d82a0b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 10
      },
      "lineNbr": 146,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-01-02T22:37:32Z",
      "side": 1,
      "message": "This should never be true. Commits are walked most recent first, so the newly parsed psa is always older than an existing one.",
      "range": {
        "startLine": 146,
        "startChar": 25,
        "endLine": 146,
        "endChar": 73
      },
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "685383fd_70b27079",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 10
      },
      "lineNbr": 146,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-01-02T23:01:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48315fd0_a7d82a0b",
      "range": {
        "startLine": 146,
        "startChar": 25,
        "endLine": 146,
        "endChar": 73
      },
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48315fd0_c7cd1e4c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 10
      },
      "lineNbr": 176,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-01-02T22:37:32Z",
      "side": 1,
      "message": "Why not use committer ident? If we require committer ident to be strictly increasing we can get a sane linear history imposed on the order of operations.",
      "range": {
        "startLine": 176,
        "startChar": 24,
        "endLine": 176,
        "endChar": 57
      },
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48587f1a_cfc0ddcc",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 10
      },
      "lineNbr": 176,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-01-02T23:01:22Z",
      "side": 1,
      "message": "Done.\n\nWhile I was in here, did a bunch of s/vote/approval/ per our previous conversation.",
      "parentUuid": "48315fd0_c7cd1e4c",
      "range": {
        "startLine": 176,
        "startChar": 24,
        "endLine": 176,
        "endChar": 57
      },
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48315fd0_e7d222e7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 10
      },
      "lineNbr": 115,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-01-02T22:37:32Z",
      "side": 1,
      "message": "Looks like setup for this comparator is not thread safe in the server. The positions map is not initialized in a safe way.",
      "range": {
        "startLine": 115,
        "startChar": 37,
        "endLine": 115,
        "endChar": 64
      },
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "685383fd_90dd14ad",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 10
      },
      "lineNbr": 115,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-01-02T23:01:22Z",
      "side": 1,
      "message": "It doesn\u0027t do double-checked locking but that just means it might repeat work. It\u0027s still threadsafe assuming the list passed to the LabelTypes constructor doesn\u0027t change (which it doesn\u0027t in our usages).\n\nI can tighten that up but I don\u0027t think there\u0027s a correctness issue here worth blocking this change.",
      "parentUuid": "48315fd0_e7d222e7",
      "range": {
        "startLine": 115,
        "startChar": 37,
        "endLine": 115,
        "endChar": 64
      },
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48315fd0_27e51ac3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 10
      },
      "lineNbr": 115,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-01-02T23:04:34Z",
      "side": 1,
      "message": "The code in question is not safe:\n\n    if (positions \u003d\u003d null) {\n      positions \u003d new HashMap\u003cString, Integer\u003e();\n      if (labelTypes !\u003d null) {\n        int i \u003d 0;\n        for (LabelType t : labelTypes) {\n          positions.put(t.getName(), i++);\n        }\n      }\n    }\n\nThe write to publish the reference to the new HashMap can be visible before the HashMap is even created internally, let alone the labels being stored in it. A concurrent thread could NPE trying to invoke .get() on the map because the HashMap hasn\u0027t even finished its constructor yet.\n\nThis code needs to be synchronized, or the publish of the reference needs to be done through a volatile field after all mutations have been performed.",
      "parentUuid": "685383fd_90dd14ad",
      "range": {
        "startLine": 115,
        "startChar": 37,
        "endLine": 115,
        "endChar": 64
      },
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "685383fd_b0e2186e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 10
      },
      "lineNbr": 115,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-01-02T23:08:31Z",
      "side": 1,
      "message": "My bad, missed that it was assigning to the member rather than a local. This is an issue currently with ChangeJson as well :(",
      "parentUuid": "48315fd0_27e51ac3",
      "range": {
        "startLine": 115,
        "startChar": 37,
        "endLine": 115,
        "endChar": 64
      },
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dfb5d35_1e606de4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 10
      },
      "lineNbr": 115,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-01-02T23:40:31Z",
      "side": 1,
      "message": "Done and rebased.",
      "parentUuid": "685383fd_b0e2186e",
      "range": {
        "startLine": 115,
        "startChar": 37,
        "endLine": 115,
        "endChar": 64
      },
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dfb5d35_de88c558",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 10
      },
      "lineNbr": 119,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-01-02T22:37:32Z",
      "side": 1,
      "message": "Preserve the existing case? The comparator appears to expect \"Code-Review\" not \"code-review\".",
      "range": {
        "startLine": 119,
        "startChar": 18,
        "endLine": 119,
        "endChar": 37
      },
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48587f1a_efc5a1d9",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 10
      },
      "lineNbr": 119,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-01-02T23:01:22Z",
      "side": 1,
      "message": "No, nameComparator().position() is case-insensitive.\n\nElsewhere we are case-insensitive when keying by label to be lenient on user-supplied input (POST .../review and search operators, mostly). I can see the argument that we would want to be stricter in the notedb than with more general user input, though, so I\u0027m on the fence.\n\nNote also that ChangeNotesTest.approvalsCommitFormat() would fail if the comparator weren\u0027t working as intended.",
      "parentUuid": "2dfb5d35_de88c558",
      "range": {
        "startLine": 119,
        "startChar": 18,
        "endLine": 119,
        "endChar": 37
      },
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48315fd0_e70dc2ca",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 10
      },
      "lineNbr": 119,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-01-02T23:40:31Z",
      "side": 1,
      "message": "Well, it\u0027s only made case-insensitive in this change. I\u0027m willing to undo that particular behavior change.",
      "parentUuid": "48587f1a_efc5a1d9",
      "range": {
        "startLine": 119,
        "startChar": 18,
        "endLine": 119,
        "endChar": 37
      },
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48315fd0_07e8169c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 10
      },
      "lineNbr": 166,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-01-02T22:37:32Z",
      "side": 1,
      "message": "I don\u0027t think we should assume its own the current patch set. Comments can be posted on a non-current patch set for example.",
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48315fd0_c708bebd",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 10
      },
      "lineNbr": 166,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-01-02T23:40:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48315fd0_07e8169c",
      "revId": "745b0a227d3cf0f98ce625abc06facf7c387a7f7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}