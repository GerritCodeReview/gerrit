{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b8d2a58f_fb11a450",
        "filename": "java/com/google/gerrit/elasticsearch/ElasticChangeIndex.java",
        "patchSetId": 16
      },
      "lineNbr": 445,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-12-01T19:14:28Z",
      "side": 1,
      "message": "nit: better name",
      "range": {
        "startLine": 445,
        "startChar": 16,
        "endLine": 445,
        "endChar": 17
      },
      "revId": "74888a5be5957674837e407dbe09fac15434e343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08f7496a_5fc1db32",
        "filename": "java/com/google/gerrit/elasticsearch/ElasticQueryBuilder.java",
        "patchSetId": 16
      },
      "lineNbr": 132,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-12-01T19:14:28Z",
      "side": 1,
      "message": "This is needed because of the reformatting to AfterPredicate, right? Still looks strange, though, can you add a comment why you\u0027re comparing something to Long.MAX_VALUE?",
      "range": {
        "startLine": 132,
        "startChar": 10,
        "endLine": 132,
        "endChar": 57
      },
      "revId": "74888a5be5957674837e407dbe09fac15434e343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fad6cd22_46f20e48",
        "filename": "java/com/google/gerrit/lucene/LuceneChangeIndex.java",
        "patchSetId": 16
      },
      "lineNbr": 730,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-12-01T19:14:28Z",
      "side": 1,
      "message": "nit: nice to add a comment like this (for ints, booleans, null that are not documented by a variable):\n/* variableName\u003d */ null",
      "range": {
        "startLine": 730,
        "startChar": 68,
        "endLine": 730,
        "endChar": 72
      },
      "revId": "74888a5be5957674837e407dbe09fac15434e343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "887d35ca_66d4814c",
        "filename": "java/com/google/gerrit/lucene/LuceneChangeIndex.java",
        "patchSetId": 16
      },
      "lineNbr": 730,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-12-01T19:14:28Z",
      "side": 1,
      "message": "nit: better name",
      "range": {
        "startLine": 730,
        "startChar": 19,
        "endLine": 730,
        "endChar": 20
      },
      "revId": "74888a5be5957674837e407dbe09fac15434e343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62cd248c_c623ba1f",
        "filename": "java/com/google/gerrit/server/query/change/AfterPredicate.java",
        "patchSetId": 16
      },
      "lineNbr": 51,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-12-01T19:14:28Z",
      "side": 1,
      "message": "should this be:\nvalueTimestamp.getTime() \u003e\u003d cut.getTime();\n\nIf that\u0027s right, can you please make sure we have basic tests case to cover those? I guess we don\u0027t have great test coverage for \"before:\" and \"after:\" predicates, but since you\u0027re reformatting them I think it\u0027s required.",
      "range": {
        "startLine": 51,
        "startChar": 10,
        "endLine": 51,
        "endChar": 93
      },
      "revId": "74888a5be5957674837e407dbe09fac15434e343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f664744c_17ba18eb",
        "filename": "java/com/google/gerrit/server/query/change/AgePredicate.java",
        "patchSetId": 16
      },
      "lineNbr": 52,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-12-01T19:14:28Z",
      "side": 1,
      "message": "nit: can you split this into a separate change together with a test?",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 52,
        "endChar": 43
      },
      "revId": "74888a5be5957674837e407dbe09fac15434e343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}