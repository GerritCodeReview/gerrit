{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5266656c_e4df6eff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-16T07:52:15Z",
      "side": 1,
      "message": "Can you please explain this in more details. E.g. why didn\u0027t we have issues with this so far?\n\nTBH I\u0027m not much liking this change, as it requires all callers to do extra checks before invoking the method. Isn\u0027t there a way to just make those methods work when an empty set of predicates is provided?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 67
      },
      "revId": "74e839c8f3b7ecafb07f8ef88193788c2cf79c45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d1ab9c3_29339ee8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-11-16T10:49:13Z",
      "side": 1,
      "message": "We didn\u0027t have this issue so far since this is the only point in the code that is bug occurred (CommitsCollection).\n\nThis issue seems to have not occurred even there since for this problem to happen:\n1. We first do some index query in lines 136-145. For valid existing changes, this should return here.\n2. Only then we do the buggy index query. \n3. Also, this index query is actually buggy if the commit has no parents (commit.getParents() returns nothing). The index query is meant for merge commits which is not the case for us.\n\nDoes it make sense?\n\nI think there is a way to do what you suggested: but that would require us to add code internally or adjust something in ChangeIndexRewriter (and probably in all other Rewriter classes). Tbh this is a pretty minor fix and I don\u0027t think it\u0027s worth the effort. WDYT?",
      "parentUuid": "5266656c_e4df6eff",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 67
      },
      "revId": "74e839c8f3b7ecafb07f8ef88193788c2cf79c45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad81672a_9cf91ca2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-16T10:55:31Z",
      "side": 1,
      "message": "I\u0027m still having trouble to understand what is the issue and how/why does it break the index. Is it specific to Google only?\n\n\u003e Tbh this is a pretty minor fix and I don\u0027t think it\u0027s worth the effort. WDYT?\n\nI\u0027m not sure. It adds runtime checks that can cause failures if callers accidentally pass in an empty predicate set. It\u0027s easy to miss this in tests and then you would only notice this in prd.",
      "parentUuid": "3d1ab9c3_29339ee8",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 67
      },
      "revId": "74e839c8f3b7ecafb07f8ef88193788c2cf79c45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2bd2cf7_e1d82b56",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-11-16T12:58:43Z",
      "side": 1,
      "message": "It\u0027s specific to Google (SearchIndex#toQuery internally).\nPredicate class returns Predicate\u003cT\u003e objects hence it doesn\u0027t qualify as any of the options in SearchIndex#toQuery. \n\nWe could add this Predicate\u003cT\u003e.None class in SearchIndex#toQuery, but I\u0027m actually not even sure how to touch that code, but we can figure out a way to rewrite the query from Predicate\u003cT\u003e.None to something that always produces no results in this toQuery method (needs tests, etc).\n\nAlternatively we can rewrite the Predicate class to not be so abstract, but rather we\u0027ll have ChangeIndex.Or(), etc.\n\nI can submit the predecessor change for now, but maybe we can do one of those better solutions?",
      "parentUuid": "ad81672a_9cf91ca2",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 67
      },
      "revId": "74e839c8f3b7ecafb07f8ef88193788c2cf79c45",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}