{
  "comments": [
    {
      "key": {
        "uuid": "1a1ba32a_1562d4bf",
        "filename": "lib/codemirror/cm.bzl",
        "patchSetId": 4
      },
      "lineNbr": 231,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-12-19T16:07:00Z",
      "side": 1,
      "message": "What makes this hack special compared to guava declaration?\n\n  java_library(\n      name \u003d \"guava\",\n      data \u003d [\"//lib:LICENSE-Apache2.0\"],\n      visibility \u003d [\"//visibility:public\"],\n      exports \u003d [\"@guava//jar\"],\n  )\n\nIf you want to avoid that \"hack\", now, that we use our own version of maven_jar anyway, we could easily expose license attribute there: [1].\n\n* [1] https://bazel.build/versions/master/docs/be/java.html#java_import",
      "range": {
        "startLine": 231,
        "startChar": 2,
        "endLine": 231,
        "endChar": 60
      },
      "revId": "74fa572746d1428fcf03cb377388232f3c2e3146",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ba32a_756fc8a7",
        "filename": "lib/codemirror/cm.bzl",
        "patchSetId": 4
      },
      "lineNbr": 231,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-12-19T16:09:32Z",
      "side": 1,
      "message": "we could, but at this point, I want to get rid of buck first.",
      "parentUuid": "1a1ba32a_1562d4bf",
      "range": {
        "startLine": 231,
        "startChar": 2,
        "endLine": 231,
        "endChar": 60
      },
      "revId": "74fa572746d1428fcf03cb377388232f3c2e3146",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ba32a_9811f9cb",
        "filename": "lib/codemirror/cm.bzl",
        "patchSetId": 4
      },
      "lineNbr": 231,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-12-21T08:27:54Z",
      "side": 1,
      "message": "The naive approach doesn\u0027t work: Passing license string to maven_jar:\n\n  maven_jar(\n    name \u003d \"guava\",\n    artifact \u003d \"com.google.guava:guava:\" + GUAVA_VERSION,\n    sha1 \u003d GUAVA_BIN_SHA1,\n    license \u003d \"Apache2.0\",\n  )\n\nand generating the BUILD file in maven_jar.bzl with external/guava/jar/BUILD:\n\n  # DO NOT EDIT: automatically generated BUILD file for maven_jar rule guava\n  package(default_visibility \u003d [\u0027//visibility:public\u0027])\n  java_import(\n      name \u003d \u0027jar\u0027,\n      srcjar \u003d \"guava-20.0-src.jar\",\n      jars \u003d [\u0027guava-20.0.jar\u0027],\n      deps \u003d [\u0027//lib:LICENSE-Apache2.0\u0027],\n  )\n\nfailing with:\n\n  $ bazel build lib:guava\n  ERROR: \n  /home/davido/.cache/bazel/_bazel_davido/27a001f4182820ef315d8d2d4f1edafe/external/guava/jar/BUILD:4:1: \\\n  no such package \u0027@guava//lib\u0027: BUILD file not found on package path and referenced by \u0027@guava//jar:jar\u0027.\n  ERROR: Analysis of target \u0027//lib:guava\u0027 failed; build aborted.\n\nThe problem, is that the license file is relocated to the external workspace and cannot be find (passed\u003d in gerrit/lib itself.\n\nUnless I\u0027m missing something, the only way to make it work is to install the license in each and every external library. For example, we could extract all licenses into bazlets repoitory, hosted on gerrit-review, and fetch and cache them all in ~/.gerritcodereview/licenses, and retrieve and install into external workspace (by creating hard link), so that the topology of guava would be:\n\n  $ ls -all  \n  /home/davido/.cache/bazel/_bazel_davido/27a001f4182820ef315d8d2d4f1edafe/external/guava/jar/\n  total 3832\n  drwxr-xr-x 2 davido users    4096 Dec 21 10:06 .\n  drwxr-xr-x 3 davido users    4096 Dec 21 09:31 ..\n  -rw-r--r-- 1 davido users     428 Dec 21 09:31 BUILD\n  -rw-r--r-- 3 davido users 2442625 Dec 13 22:31 guava-20.0.jar\n  -rw-r--r-- 3 davido users 1453695 Dec 13 22:31 guava-20.0-src.jar\n  -rw-r--r-- 1 davido users   11358 Dec 21 10:06 LICENSE-Apache2.0\n\n\nIn which case the generated rule in external repository should work:\n\n  # DO NOT EDIT: automatically generated BUILD file for maven_jar rule guava\n  package(default_visibility \u003d [\u0027//visibility:public\u0027])\n  exports_files(glob([\n      \"LICENSE-*\",\n  ]))\n  java_import(\n      name \u003d \u0027jar\u0027,\n      srcjar \u003d \"guava-20.0-src.jar\",\n      jars \u003d [\u0027guava-20.0.jar\u0027],\n      data \u003d [\u0027LICENSE-Apache2.0\u0027],\n  )\n\nNow, when I remove the own license from lib:guava:\n\n  java_library(\n      name \u003d \"guava\",\n      visibility \u003d [\"//visibility:public\"],\n      exports \u003d [\"@guava//jar\"],\n  )\n\nWe still do have the required dep on the license from the maven_jar:\n\n  $ bazel query \u0027deps(lib:guava)\u0027 | grep -i license\n  @guava//jar:LICENSE-Apache2.0\n\n\nor even:\n\n  $ bazel query \u0027deps(@guava//jar)\u0027 | grep -i license\n  @guava//jar:LICENSE-Apache2.0",
      "parentUuid": "1a1ba32a_756fc8a7",
      "range": {
        "startLine": 231,
        "startChar": 2,
        "endLine": 231,
        "endChar": 60
      },
      "revId": "74fa572746d1428fcf03cb377388232f3c2e3146",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ba32a_f8162dbf",
        "filename": "lib/codemirror/cm.bzl",
        "patchSetId": 4
      },
      "lineNbr": 231,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-12-21T08:41:59Z",
      "side": 1,
      "message": "This is WIP patch I used in the example above to move license definition to maven_jar: [1]. (To install the LICENSE-Apache2.0 in external guava workplace directory, I just used quick und dirty copy statement from my home directory.) \n\nWith this patch, guava lib target worked with:\n  \n  $ bazel build lib:guava\n  INFO: Found 1 target...\n  Target //lib:guava up-to-date:\n    bazel-bin/lib/libguava.jar\n  INFO: Elapsed time: 0.591s, Critical Path: 0.53s\n\nOne advantage of this approch, to externalize the hosting of \n licenses: it would simplify fetching them for plugins. However, what if plugins define third party dependencies, not used in Gerrit core (say dozen of Atlassian\u0027s libraries in its-jira plugin, that say have their own licenses) should the plugin put them all into bazlets repository as well? \n\n* http://paste.openstack.org/show/592997",
      "parentUuid": "1a1ba32a_9811f9cb",
      "range": {
        "startLine": 231,
        "startChar": 2,
        "endLine": 231,
        "endChar": 60
      },
      "revId": "74fa572746d1428fcf03cb377388232f3c2e3146",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa132f0f_1737763e",
        "filename": "lib/codemirror/cm.bzl",
        "patchSetId": 4
      },
      "lineNbr": 231,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-12-21T19:24:18Z",
      "side": 1,
      "message": "\u003e Why don\u0027t you have the license in the external package refer to\n \u003e\n \u003e   \"@gerrit//lib:license-FOO\"\n\nThis doesn\u0027t work. Given that BUILD file generated for guava external:\n\n  # DO NOT EDIT: automatically generated BUILD file for   \nmaven_jar rule guava\n  package(default_visibility \u003d [\u0027//visibility:public\u0027])\n  java_import(\n      name \u003d \u0027jar\u0027,\n      srcjar \u003d \"guava-20.0-src.jar\",\n      jars \u003d [\u0027guava-20.0.jar\u0027],\n      data \u003d [\u0027@gerrit//lib:LICENSE-Apache2.0\u0027],\n  )\n\nrunning bazel build failing with:\n\n  $ bazel build lib:guava\n  ERROR: \n  /home/davido/.cache/bazel/_bazel_davido/27a001f4182820ef315d8d2d4f1edafe/external/guava/jar/BUILD:4:1: \\\n  no such package \u0027@gerrit//lib\u0027: error loading package \u0027external\u0027: \\\n  The repository named \u0027gerrit\u0027 could not be resolved and referenced by \u0027@guava//jar:jar\u0027.\n  ERROR: Analysis of target \u0027//lib:guava\u0027 failed; build aborted.\n\nI used this patch: [1].\n\n* [1] http://paste.openstack.org/show/593062",
      "parentUuid": "1a1ba32a_f8162dbf",
      "range": {
        "startLine": 231,
        "startChar": 2,
        "endLine": 231,
        "endChar": 60
      },
      "revId": "74fa572746d1428fcf03cb377388232f3c2e3146",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa132f0f_14ce54c0",
        "filename": "lib/codemirror/cm.bzl",
        "patchSetId": 4
      },
      "lineNbr": 232,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-12-19T16:07:00Z",
      "side": 1,
      "message": "Move it to BUILD instead.",
      "range": {
        "startLine": 232,
        "startChar": 2,
        "endLine": 232,
        "endChar": 21
      },
      "revId": "74fa572746d1428fcf03cb377388232f3c2e3146",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa132f0f_b4a320e8",
        "filename": "lib/codemirror/cm.bzl",
        "patchSetId": 4
      },
      "lineNbr": 232,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-12-19T16:09:32Z",
      "side": 1,
      "message": "I want it here, so it the connection with its use is obvious.",
      "parentUuid": "fa132f0f_14ce54c0",
      "range": {
        "startLine": 232,
        "startChar": 2,
        "endLine": 232,
        "endChar": 21
      },
      "revId": "74fa572746d1428fcf03cb377388232f3c2e3146",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ba32a_5583ac25",
        "filename": "lib/codemirror/cm.bzl",
        "patchSetId": 4
      },
      "lineNbr": 232,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-12-20T05:51:58Z",
      "side": 1,
      "message": "I disagree.",
      "parentUuid": "fa132f0f_b4a320e8",
      "range": {
        "startLine": 232,
        "startChar": 2,
        "endLine": 232,
        "endChar": 21
      },
      "revId": "74fa572746d1428fcf03cb377388232f3c2e3146",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ba32a_f8890d0c",
        "filename": "lib/codemirror/cm.bzl",
        "patchSetId": 4
      },
      "lineNbr": 232,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-12-20T14:44:08Z",
      "side": 1,
      "message": "Done. \n\nCan we merge this now?\n\nthanks,",
      "parentUuid": "1a1ba32a_5583ac25",
      "revId": "74fa572746d1428fcf03cb377388232f3c2e3146",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa132f0f_74db487e",
        "filename": "lib/codemirror/cm.bzl",
        "patchSetId": 4
      },
      "lineNbr": 234,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-12-19T16:07:00Z",
      "side": 1,
      "message": "no comma.",
      "range": {
        "startLine": 234,
        "startChar": 47,
        "endLine": 234,
        "endChar": 49
      },
      "revId": "74fa572746d1428fcf03cb377388232f3c2e3146",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ba32a_556c4cb1",
        "filename": "lib/codemirror/cm.bzl",
        "patchSetId": 4
      },
      "lineNbr": 234,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-12-19T16:09:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa132f0f_74db487e",
      "range": {
        "startLine": 234,
        "startChar": 47,
        "endLine": 234,
        "endChar": 49
      },
      "revId": "74fa572746d1428fcf03cb377388232f3c2e3146",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}