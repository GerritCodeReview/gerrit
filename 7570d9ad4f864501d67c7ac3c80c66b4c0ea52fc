{
  "comments": [
    {
      "key": {
        "uuid": "0a26849c_e62cde88",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-05-18T16:21:42Z",
      "side": 1,
      "message": "I\u0027m not sure this is the best result for the application.\n\nConsider comparing ps4..ps6.\n\nIf ps4 modified \"Foo.java\" but ps6 no longer modifies it, we don\u0027t want to see Foo in the ps4..ps6 compare.\n\nSo really you want Base..ps6 to determine the files modified by ps6. Then only those files that differ from ps4 should be shown.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 35
      },
      "revId": "7570d9ad4f864501d67c7ac3c80c66b4c0ea52fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff23b49a_d617845c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-05-19T11:47:19Z",
      "side": 1,
      "message": "Well, I guess one can argue about this. If I compare ps4..ps6 it is not really wrong to show that the modifications that were done to Foo in ps4 are not contained in ps6 anymore. But I can also see why excluding Foo makes it simpler, both for the user and for the implementation. Personally I don\u0027t care much about this case, I\u0027m fine with either behaviour. With the ps7 I have now implemented what you propose. And I\u0027ve also covered this case in the tests.\n\nDone.",
      "parentUuid": "0a26849c_e62cde88",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 35
      },
      "revId": "7570d9ad4f864501d67c7ac3c80c66b4c0ea52fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a26849c_0632dae5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-05-18T16:21:42Z",
      "side": 1,
      "message": "Change the serialVersionUID in PatchListKey to force old server cache records to evict. But that won\u0027t impact browser caches, which need another 7 days after installation of this commit to evict.",
      "range": {
        "startLine": 73,
        "startChar": 49,
        "endLine": 73,
        "endChar": 61
      },
      "revId": "7570d9ad4f864501d67c7ac3c80c66b4c0ea52fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca1f0c44_c4afde6a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-05-19T11:47:19Z",
      "side": 1,
      "message": "The serialVersionUID was already changed in patch set 5 [1].\n\nI believe we can\u0027t do much about the browser caches, but that\u0027s probably not a big issue. Users can simply wait 7 days or flush their browser cache.\n\n[1] https://gerrit-review.googlesource.com/#/c/57086/4..5/gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListKey.java",
      "parentUuid": "0a26849c_0632dae5",
      "range": {
        "startLine": 73,
        "startChar": 49,
        "endLine": 73,
        "endChar": 61
      },
      "revId": "7570d9ad4f864501d67c7ac3c80c66b4c0ea52fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a3188d1_0732d6e5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-05-18T16:21:42Z",
      "side": 1,
      "message": "nit: method can be static",
      "revId": "7570d9ad4f864501d67c7ac3c80c66b4c0ea52fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca1f0c44_e4b4dac3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-05-19T11:47:19Z",
      "side": 1,
      "message": "Not applicable anymore.",
      "parentUuid": "2a3188d1_0732d6e5",
      "revId": "7570d9ad4f864501d67c7ac3c80c66b4c0ea52fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a3188d1_272fda7a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 186,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-05-15T17:15:26Z",
      "side": 1,
      "message": "aka Arrays.equal(a.getParents(), b.getParents())",
      "revId": "7570d9ad4f864501d67c7ac3c80c66b4c0ea52fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea221089_6552a6f0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 186,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-05-16T14:15:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a3188d1_272fda7a",
      "revId": "7570d9ad4f864501d67c7ac3c80c66b4c0ea52fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a3188d1_473cceb5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-05-15T17:15:26Z",
      "side": 1,
      "message": "This code seems similar in spirit, if not implementation, to ChangeData.filePaths. Any way we could combine them?",
      "revId": "7570d9ad4f864501d67c7ac3c80c66b4c0ea52fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea221089_e5fa1695",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-05-16T14:15:09Z",
      "side": 1,
      "message": "ChangeData.filePaths doesn\u0027t exist in stable-2.9.\n\nAlso ChangeData.filePaths is already using PatchListEntry.getPatches() and those patches are exactly the entries computed in readPatchList above.\n\nThe difference is that ChangeData.filePaths needs the paths of one patch set compared against its base, but here we need the union of the paths of two patch sets that are compared with each other. There is also a subtle difference with renamed files. In ChangeData.filePaths we want to include the old path so that the change is included into the search result if a search by the old path is done, but here the old path in case of a rename is not important.\n\nI don\u0027t think that we can gain much from combining both methods further.",
      "parentUuid": "2a3188d1_473cceb5",
      "revId": "7570d9ad4f864501d67c7ac3c80c66b4c0ea52fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a26849c_06b73ade",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-05-17T00:59:25Z",
      "side": 1,
      "message": "Thanks for the explanation.",
      "parentUuid": "ea221089_e5fa1695",
      "revId": "7570d9ad4f864501d67c7ac3c80c66b4c0ea52fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a26849c_262fd67a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 197,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-05-15T17:15:26Z",
      "side": 1,
      "message": "This is called from load-\u003ereadPatchList-\u003egetPaths, so we\u0027re doing a recursive load. Could this end up recursively loading all the way back to the root? (Performance aside I\u0027d be worried about stack overflows as well.)",
      "revId": "7570d9ad4f864501d67c7ac3c80c66b4c0ea52fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea221089_85eb22ca",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 197,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-05-16T14:15:09Z",
      "side": 1,
      "message": "No, readPatchList only calls getPaths if key.getOldId() !\u003d null, but getPaths calls load only with key.getOldId() \u003d\u003d null. So there is only one level of recursion.\n\nI can avoid the recursion, but then a little code is doublicated. Still this might be better as it makes the code more readable.",
      "parentUuid": "0a26849c_262fd67a",
      "revId": "7570d9ad4f864501d67c7ac3c80c66b4c0ea52fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a26849c_26b436d7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 4
      },
      "lineNbr": 197,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-05-17T00:59:25Z",
      "side": 1,
      "message": "Yes, that was subtle. I think the amount of duplicated code is reasonable.",
      "parentUuid": "ea221089_85eb22ca",
      "revId": "7570d9ad4f864501d67c7ac3c80c66b4c0ea52fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}