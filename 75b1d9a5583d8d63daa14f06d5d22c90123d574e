{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "693d6848_50f80cc7",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-02-17T21:02:42Z",
      "side": 1,
      "message": "Should this be put into the methods below that load from NoteDb or the Index?",
      "range": {
        "startLine": 107,
        "startChar": 68,
        "endLine": 108,
        "endChar": 90
      },
      "revId": "75b1d9a5583d8d63daa14f06d5d22c90123d574e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0a95e5f_84f3c96d",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-02-18T07:40:10Z",
      "side": 1,
      "message": "I think this is not accurate. ChangeData cannot load anything from the index, but only from NoteDb.\n\nIt\u0027s rather like this:\nIf you do a change query the data from the index is just to instantiate and populate ChangeData (via setter methods). ChangeData itself doesn\u0027t know that this data that was retrieved from the index and it is not capable to retrieve data from the index by itself.\n\nBy default ChangeData lazily loads data from NoteDb when data is requested that is not present in the ChangeData instance. It is possible to disallow this by setting lazyLoad to false. In this case attempting to access data that is not present in the ChangeData instance fails.",
      "range": {
        "startLine": 108,
        "startChar": 39,
        "endLine": 108,
        "endChar": 90
      },
      "revId": "75b1d9a5583d8d63daa14f06d5d22c90123d574e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20d156ef_201ebe9d",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-02-18T09:09:24Z",
      "side": 1,
      "message": "maybe, but I\u0027ll leave that for anyone who wants to do follow-up changes.",
      "parentUuid": "693d6848_50f80cc7",
      "range": {
        "startLine": 107,
        "startChar": 68,
        "endLine": 108,
        "endChar": 90
      },
      "revId": "75b1d9a5583d8d63daa14f06d5d22c90123d574e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bef2250_3fb88402",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-02-18T09:09:24Z",
      "side": 1,
      "message": "Hmm. OK - in that case, it\u0027s not clear what the distinction between Change and ChangeData is.\n\nI\u0027ll update the description.",
      "parentUuid": "e0a95e5f_84f3c96d",
      "range": {
        "startLine": 108,
        "startChar": 39,
        "endLine": 108,
        "endChar": 90
      },
      "revId": "75b1d9a5583d8d63daa14f06d5d22c90123d574e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67a2a2ac_0cfba0e5",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-02-18T09:18:30Z",
      "side": 1,
      "message": "updated.\n\nThe setters seem like an antipattern, though? Shouldn\u0027t the changeIndex create the entire thing in one go, so it presents an immutable interface to the outside?\n\nAlso, why do we need a separate Change object?",
      "parentUuid": "8bef2250_3fb88402",
      "range": {
        "startLine": 108,
        "startChar": 39,
        "endLine": 108,
        "endChar": 90
      },
      "revId": "75b1d9a5583d8d63daa14f06d5d22c90123d574e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a23799d0_2495a613",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-02-18T09:55:23Z",
      "side": 1,
      "message": "Yes, in my opinion ChangeData is poorly designed (at least for how it is used nowadays). For the creation a builder pattern would be much better. Also the lazy loading is not obvious for callers and makes trouble again and again, so having an immutable object instead would be better.\n\nI think the Change object is an historic artefact representing all data that was stored in the Changes db table, while ChangeData combined this data with data that was loaded from other db tables (e.g. patch set approvals etc.). With NoteDb this is ChangeNotes, but we cannot create ChangeNotes from index data. So ChangeData represents all data of a change independently of where it was loaded from (index or NoteDb). I think this code area would greatly benefit from a redesign.",
      "parentUuid": "67a2a2ac_0cfba0e5",
      "range": {
        "startLine": 108,
        "startChar": 39,
        "endLine": 108,
        "endChar": 90
      },
      "revId": "75b1d9a5583d8d63daa14f06d5d22c90123d574e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ede17fb4_7f0958c1",
        "filename": "java/com/google/gerrit/server/query/change/ChangeData.java",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-02-19T00:36:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "20d156ef_201ebe9d",
      "range": {
        "startLine": 107,
        "startChar": 68,
        "endLine": 108,
        "endChar": 90
      },
      "revId": "75b1d9a5583d8d63daa14f06d5d22c90123d574e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}