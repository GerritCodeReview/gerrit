{
  "comments": [
    {
      "key": {
        "uuid": "219507db_e3d0d728",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-11-15T22:18:50Z",
      "side": 1,
      "message": "Clarify that only low level / basic mail library is isolated in its own rule, while sending ans receving mail machinery rit/server? +1 for mail/lib package name.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 56
      },
      "revId": "7604fe90dce3e93519735e248a5b3966ec393191",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b74d1d72_c23c4ddf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-11-16T05:48:37Z",
      "side": 1,
      "message": "\u003e +1 for mail/lib package name.\n\nOn second thought, this could be de-coupled from gerrit/server package already in this change, in top level lib directory. As I suggested in this comment: [1], lib is low-level data blocks of gerrit, with your previously isolated diff code blocks, and this change we would get:\n\n  j/c/g/g/lib/diff\n  j/c/g/g/lib/mail\n  [...]\n\nIOW instead of j/c/g/g/server/mail/lib this should be j/c/g/g/lib/mail.\n\n* [1] https://gerrit-review.googlesource.com/#/c/gerrit/+/140535/4/java/com/google/gerrit/server/diff/BUILD@10",
      "parentUuid": "219507db_e3d0d728",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 56
      },
      "revId": "7604fe90dce3e93519735e248a5b3966ec393191",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3083c062_bf564a94",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2017-11-16T09:06:02Z",
      "side": 1,
      "message": "we discussed this before, no? It turns out my idea of \"keep reorganizations under server/\" doesn\u0027t really solve the problem of importing it into google (we still have to update internal references in our private .java files), so we can try to find a more definitive location.\n\nHow about using util/mail? We already have {cli,http,ssl} there, and I\u0027d hate to have both util and lib.",
      "parentUuid": "b74d1d72_c23c4ddf",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 56
      },
      "revId": "7604fe90dce3e93519735e248a5b3966ec393191",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "280a7785_ced5bb10",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-11-16T10:14:21Z",
      "side": 1,
      "message": "How about to do the opposite and move util stuff to lib (not  this change)?\n\nTo give you here more context, my idea is to kill gerrit/server package entirely. This package is gerrit\u0027s heritage as GWT based project and this is not true any more. Note that during re-arranging of directory structure, I left alone GWT client stuff, so that we don\u0027t have j/c/g/g/client under java directory any more. Consequently, having gerrit/server is just wrong and should be fixed. That\u0027s because every single package under j/c/g/g is server now.\n\nIn this context, what we will do is:\n\n* 1. [Midterm] Dissolve gerrit/server package and just move high-level directories to j/c/g/g/, e.g.: j/c/g/g/permission\n* 2. [Now] Move low level directories, like mail and friends to j/c/g/g/lib to avoid pollution of j/c/g/g/ namespace, like j/c/g/g/mail and friends",
      "parentUuid": "3083c062_bf564a94",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 56
      },
      "revId": "7604fe90dce3e93519735e248a5b3966ec393191",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c766dc87_396f8e5c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-11-16T14:15:59Z",
      "side": 1,
      "message": "Or, thinking about it further, we could have both high-level library in top-level namespace j/c/g/g/mail and low-level library j/c/g/g/lib/mail, with the dependency graph direction: j/c/g/g/mail \u003d\u003e j/c/g/g/lib/mail, obviously, where\n\n* future j/c/g/g/mail is the the same as current j/c/g/g/server/mail\n* future j/c/g/g/lib/mail is you j/c/g/g/server/mail/lib standalone library from this change",
      "parentUuid": "280a7785_ced5bb10",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 56
      },
      "revId": "7604fe90dce3e93519735e248a5b3966ec393191",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59cd8472_75c22d7e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-05-23T13:39:46Z",
      "side": 1,
      "message": "FWIW, we\u0027ve done several refactorings to move things out of the server package since last November, and this is not the approach we\u0027ve taken. Instead, we have mostly done:\n\n* j/c/g/g/foo is a common library for dealing with \"foo\", used by different parts of Gerrit, but which does not contain functionality specific to running a code review server. Examples of \"foo\" include \"git\" for Git-related functionality, \"index\" for a Lucene index of Git repos, \"prettify\", \"truth\" for general custom Truth subjects, etc.\n* j/c/g/g/server contains stuff specific to running a code review server.\n* In particular, j/c/g/g/server/foo contains code-review-specific stuff which uses \"foo\", such as \"index\".\n\nI think it\u0027s reasonable to argue, as you\u0027ve done in this comment thread, that we should move g/foo to g/lib/foo and g/server/* to g/*. It\u0027s just not what we\u0027ve actually done thus far. And I\u0027m not sure I would want to switch gears in the middle of the process.\n\n(I landed on this change because Han-Wen pointed me here during review of https://gerrit-review.googlesource.com/c/gerrit/+/175412)",
      "parentUuid": "c766dc87_396f8e5c",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 56
      },
      "revId": "7604fe90dce3e93519735e248a5b3966ec393191",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e88479b7_c86aa760",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-05-23T15:16:56Z",
      "side": 1,
      "message": "\u003e j/c/g/g/server contains stuff specific to running a code review server.\n\nI still think that the stuff outside of the server directory also means running a code review server, e.g. sshd, httpd, ReviewDb. As I wrote in my previous comment, the reason we have this separation is GWT heritage: client/shared/server. That heritage is ending very shortly. Another ambitious goal is to decompose giant server rule. I feel that separating the rules inside server package (that is basically the same as separating and moving parts outside of the server package) is less advantageous as the opposite. That why I started to extract config code, that tones of the code is depending on, and was trying to extract cache out of the server package (this series was staled, do you think it would make sense to rebase?).\n\nBut, of course, de-composing server package further inside server package is still way better, as keeping the status quo. Given we cannot agree on my proposal, I removing my negative vote and stay neutral here.",
      "parentUuid": "59cd8472_75c22d7e",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 56
      },
      "revId": "7604fe90dce3e93519735e248a5b3966ec393191",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d19d7eb_12d3d3a1",
        "filename": "javatests/com/google/gerrit/acceptance/api/accounts/BUILD",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-11-15T22:18:50Z",
      "side": 1,
      "message": "You are not consistent with how you format one line dependency. Above you added it as one liner. In: [1] you used three liner. Can we be consistent?\n\n* [1] https://gerrit-review.googlesource.com/#/c/gerrit/+/141174/3/javatests/com/google/gerrit/acceptance/server/notedb/BUILD@10",
      "revId": "7604fe90dce3e93519735e248a5b3966ec393191",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4935289_f6817e17",
        "filename": "javatests/com/google/gerrit/acceptance/api/accounts/BUILD",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-11-15T23:22:24Z",
      "side": 1,
      "message": "Shouldn\u0027t this be formatted consistently by buildifier?",
      "parentUuid": "1d19d7eb_12d3d3a1",
      "revId": "7604fe90dce3e93519735e248a5b3966ec393191",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bbdc1a0_449a8ebc",
        "filename": "javatests/com/google/gerrit/acceptance/api/accounts/BUILD",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-11-16T05:50:30Z",
      "side": 1,
      "message": "This is buildifier bug to accept both forms.",
      "parentUuid": "b4935289_f6817e17",
      "revId": "7604fe90dce3e93519735e248a5b3966ec393191",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3588f276_3f7e3dfa",
        "filename": "javatests/com/google/gerrit/acceptance/server/project/BUILD",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-11-15T22:18:50Z",
      "side": 1,
      "message": "Haven\u0027t we agreed on adding all possible acceptance tests dependency to \u0027//java/com/google/gerrit/acceptance:lib\u0027 instead of polluting acceptance tests rules? You wrote this comment: [1] as answer to my suggestion: [2].\n\n* [1] https://gerrit-review.googlesource.com/#/c/gerrit/+/140535/11/javatests/com/google/gerrit/acceptance/tests.bzl@12\n* [2] https://gerrit-review.googlesource.com/#/c/gerrit/+/140535/10/javatests/com/google/gerrit/acceptance/tests.bzl@13",
      "range": {
        "startLine": 7,
        "startChar": 4,
        "endLine": 7,
        "endChar": 56
      },
      "revId": "7604fe90dce3e93519735e248a5b3966ec393191",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}