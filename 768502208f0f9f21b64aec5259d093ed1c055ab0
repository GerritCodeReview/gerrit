{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "67f96afd_47f63426",
        "filename": "java/com/google/gerrit/server/index/account/AccountField.java",
        "patchSetId": 39
      },
      "lineNbr": 81,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-07T09:49:20Z",
      "side": 1,
      "message": "nit: FullNameAndAllEmailParts (without \u0027s\u0027 in emails) so that\u0027s it\u0027s consistent with the next field FullNameAndPreferredEmailParts",
      "range": {
        "startLine": 81,
        "startChar": 56,
        "endLine": 81,
        "endChar": 81
      },
      "revId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b01d11ea_dcaa4110",
        "filename": "java/com/google/gerrit/server/index/account/AccountField.java",
        "patchSetId": 39
      },
      "lineNbr": 81,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-07-07T09:59:54Z",
      "side": 1,
      "message": "This is because PreferredEmail is always one, but there may be many emails, so AllEmails.",
      "parentUuid": "67f96afd_47f63426",
      "range": {
        "startLine": 81,
        "startChar": 56,
        "endLine": 81,
        "endChar": 81
      },
      "revId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fcf50de4_10effd4b",
        "filename": "java/com/google/gerrit/server/index/account/AccountField.java",
        "patchSetId": 39
      },
      "lineNbr": 81,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-07T10:21:13Z",
      "side": 1,
      "message": "I see. OK LGTM.",
      "parentUuid": "b01d11ea_dcaa4110",
      "range": {
        "startLine": 81,
        "startChar": 56,
        "endLine": 81,
        "endChar": 81
      },
      "revId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1abcda2a_21421fb9",
        "filename": "java/com/google/gerrit/server/index/account/AccountField.java",
        "patchSetId": 39
      },
      "lineNbr": 148,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-07T09:49:20Z",
      "side": 1,
      "message": "why did we add another field for preferred email exact?\n\nAt PS#34, we had one field for \"preferred email\" with two search specs for {prefix, exact}.\n\nShould we eliminate one of PREFERRED_EMAIL_LOWER_CASE_FIELD AND PREFERRED_EMAIL_EXACT_FIELD.",
      "revId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95ce6dc6_d175ff44",
        "filename": "java/com/google/gerrit/server/index/account/AccountField.java",
        "patchSetId": 39
      },
      "lineNbr": 148,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-07-07T09:59:54Z",
      "side": 1,
      "message": "I also thought so, but than I realized that PREFERRED_EMAIL_EXACT is a case-sensitive field with a case-sensitive search. If we wanted to make it case-insensitive and only store lower-case emails, we would have to reindex the already present data (stored in mixed case).\n\nWe would also need to double-check it is impossible to have 2 emails that are only different in case.",
      "parentUuid": "1abcda2a_21421fb9",
      "revId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ee49780_b9aaae73",
        "filename": "java/com/google/gerrit/server/index/account/AccountField.java",
        "patchSetId": 39
      },
      "lineNbr": 148,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-07T10:21:13Z",
      "side": 1,
      "message": "mmm, why don\u0027t we store it as is (without converting to lower case), and then using two search specs for matching case in/sensitive?\n\nbriefly I found that spanner supports Q_EXACT (insensitive) \u0026 IS (sensitive) which could be used for this.",
      "parentUuid": "95ce6dc6_d175ff44",
      "revId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3249948e_684ae63e",
        "filename": "java/com/google/gerrit/server/index/account/AccountField.java",
        "patchSetId": 39
      },
      "lineNbr": 148,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-07-07T10:48:47Z",
      "side": 1,
      "message": "Yes, this is possible for our case, but what about other Index backends? We will have to teach them do the same.\n\nI prefer to transfer everything literally now, to minimize the effort.\nIn case we have time for clean-up, we can re-work it later.",
      "parentUuid": "9ee49780_b9aaae73",
      "revId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "984f4165_5996748a",
        "filename": "java/com/google/gerrit/server/index/account/AccountField.java",
        "patchSetId": 39
      },
      "lineNbr": 148,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-07T10:55:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3249948e_684ae63e",
      "revId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Change-Is-Forward-Compatible",
        "description": {
          "value": "Changes to NoteDb or entities packages require careful consideration. \t\t      Make sure your change is forward compatible and add the footer \t\t      \u0027Forward-Compatible: checked\u0027 to your commit message"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\" OR file:\"^java/com/google/gerrit/entities/.*\\\\.java$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Forward-Compatible\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\" OR file:\"^java/com/google/gerrit/entities/.*\\\\.java$\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\"","file:\"^java/com/google/gerrit/entities/.*\\\\.java$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Forward-Compatible\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Style",
        "description": {
          "value": "Code has correct style and format"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Style\u003dMAX AND -label:Code-Style\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Style=MAX AND -label:Code-Style=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Style=MAX"],"failingAtoms":["label:Code-Style=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Library-Compliance",
        "description": {
          "value": "Changes to specific library/metadata files require additional approval"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Library-Compliance\u003dMAX,user\u003dnon_uploader AND -label:Library-Compliance\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^lib/.*\"","file:\"^WORKSPACE$\"","file:\"^.gitmodule$\"","file:\"^tools/deps.bzl$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Library-Compliance=MAX,user=non_uploader AND -label:Library-Compliance=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Release-Notes",
        "description": {
          "value": "Changes must include a \u0027Release-Notes\u0027 footer with a single sentence to mention in the release notes. Changes not worth mentioning in the release notes should put \u0027Release-Notes: skip\u0027"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Release-Notes\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Release-Notes\""},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["hasfooter:\"Release-Notes\""],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "768502208f0f9f21b64aec5259d093ed1c055ab0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}