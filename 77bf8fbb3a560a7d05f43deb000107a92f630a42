{
  "comments": [
    {
      "key": {
        "uuid": "8f37e1c2_69d1a50d",
        "filename": "gerrit-cache-h2/src/main/java/com/google/gerrit/server/cache/h2/H2CacheFactory.java",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-02-27T18:36:18Z",
      "side": 1,
      "message": "In ps1 I said it was OK to ignore this stop call on unloading plugins. But I think I was wrong.\n\nDuring stop() we write any dirty entries back to the database if they haven\u0027t been written yet. That helps to avoid confusion when the next process reads from the database. Unfortunately the two caches are disconnected between the two plugin instances so during a reload the plugin may see inconsistent data from its persistent cache. The old cache data will be in the database and shown to the new plugin instance, while the new cache data is stuck in the old plugin instance\u0027s in memory buffer and may not make it out to the database until \"later\", if it all. Confusing for a plugin author to debug.\n\nWe also leak the entire in-memory cache here in caches. The in memory cache is held by the H2CacheImpl, which is pinned in the caches list. It needs to be removed from the caches list during plugin unload to allow the VM to garbage collection the in-memory cache data and free that memory for reuse.",
      "revId": "77bf8fbb3a560a7d05f43deb000107a92f630a42",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7cb42db0_482bbf99",
        "filename": "gerrit-cache-h2/src/main/java/com/google/gerrit/server/cache/h2/H2CacheFactory.java",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-03-05T12:08:46Z",
      "side": 1,
      "message": "I agree.\n\nWhile trying to do what you proposed I couldn\u0027t find an obvious way of stopping all persistent caches (and removing them from the caches list) created by a plugin when that plugin is unloaded. The plugin itself knows its caches but we don\u0027t (yet) have a kind of on-unload event that would be executed in that plugin just before it will be unloaded. \n\nIn the PluginGuiceEnvironment we have onStartPlugin and onReloadPlugin so we could also have onUnloadPlugin there. Assuming we do introduce this method it is still not very obvious to me how to find all caches (from this.caches list) which belong to a given plugin.\n\nMaybe I am missing something obvious?\nIf not, then please let me know which of the above discussed solution would you prefer.",
      "parentUuid": "8f37e1c2_69d1a50d",
      "revId": "77bf8fbb3a560a7d05f43deb000107a92f630a42",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bccb0565_e228e698",
        "filename": "gerrit-cache-h2/src/main/java/com/google/gerrit/server/cache/h2/H2CacheFactory.java",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-03-10T16:36:49Z",
      "side": 1,
      "message": "OK, figured it out :-)",
      "parentUuid": "7cb42db0_482bbf99",
      "revId": "77bf8fbb3a560a7d05f43deb000107a92f630a42",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_470f6eb8",
        "filename": "gerrit-cache-h2/src/main/java/com/google/gerrit/server/cache/h2/H2CacheFactory.java",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-02-27T15:57:34Z",
      "side": 1,
      "message": "I guess this iterator doesn\u0027t need to be synchronized as at this point the PluginLoader is already stopped (as it is bound after the H2CacheFactory and stopping goes in the reverse order) and, thus, all plugins are stopped.",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 144,
        "endChar": 5
      },
      "revId": "77bf8fbb3a560a7d05f43deb000107a92f630a42",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_66f38e83",
        "filename": "gerrit-cache-h2/src/main/java/com/google/gerrit/server/cache/h2/H2CacheFactory.java",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-02-27T16:01:27Z",
      "side": 1,
      "message": "Hmm.. on the other side it is probably safer to synchronize also here and not think about this place in the future?",
      "parentUuid": "4f3169d0_470f6eb8",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 144,
        "endChar": 5
      },
      "revId": "77bf8fbb3a560a7d05f43deb000107a92f630a42",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f37e1c2_49d4e1fe",
        "filename": "gerrit-cache-h2/src/main/java/com/google/gerrit/server/cache/h2/H2CacheFactory.java",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-02-27T18:36:18Z",
      "side": 1,
      "message": "I think you are right, but I would prefer to be clear about it here and just synchronize around the caches list:\n\n  synchronized (caches) {\n    for (H2CacheImpl\u003c?,?\u003e cache: caches) {\n      cache.stop();\n    }\n  }\n\n  synchronized (caches) {\n    caches.add(cache);\n  }",
      "parentUuid": "2f26f59c_66f38e83",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 144,
        "endChar": 5
      },
      "revId": "77bf8fbb3a560a7d05f43deb000107a92f630a42",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}