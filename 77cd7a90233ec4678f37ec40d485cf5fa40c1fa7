{
  "comments": [
    {
      "key": {
        "uuid": "19b1b143_cb38cad3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-07-27T13:05:42Z",
      "side": 1,
      "message": "nit: Preload dashboard queries\n\nThe commit message could also use one paragraph on why we\u0027re doing this and what we expect from it.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 26
      },
      "revId": "77cd7a90233ec4678f37ec40d485cf5fa40c1fa7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c827579_523a7375",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2020-08-04T09:45:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19b1b143_cb38cad3",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 26
      },
      "revId": "77cd7a90233ec4678f37ec40d485cf5fa40c1fa7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a1033e9_2134697f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2020-07-23T13:30:55Z",
      "side": 1,
      "message": "I will add unit test later today. Could it be refactor like this?",
      "revId": "77cd7a90233ec4678f37ec40d485cf5fa40c1fa7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9bddc04_10c29cc9",
        "filename": "java/com/google/gerrit/httpd/raw/IndexHtmlUtil.java",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-07-27T13:05:42Z",
      "side": 1,
      "message": "nit: Once this is an enum (see my comment below), this can become a swtich-case.",
      "range": {
        "startLine": 91,
        "startChar": 3,
        "endLine": 91,
        "endChar": 55
      },
      "revId": "77cd7a90233ec4678f37ec40d485cf5fa40c1fa7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc874614_de238e74",
        "filename": "java/com/google/gerrit/httpd/raw/IndexHtmlUtil.java",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2020-08-04T09:45:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9bddc04_10c29cc9",
      "range": {
        "startLine": 91,
        "startChar": 3,
        "endLine": 91,
        "endChar": 55
      },
      "revId": "77cd7a90233ec4678f37ec40d485cf5fa40c1fa7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10195670_3f6ab2b2",
        "filename": "java/com/google/gerrit/httpd/raw/IndexPreloadingUtil.java",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-07-27T13:05:42Z",
      "side": 1,
      "message": "This should be an enum instead of matching strings:\n\nenum RequestedPage {\n  CHANGE,\n  DIFF,\n  DASHBOARD\n}\n\nIf each of these has a matcher, you can include that matcher in the enum as well:\n\n\nenum RequestedPage {\n  CHANGE(Pattern.compile(...)),\n  DIFF(Pattern.compile(...)),\n  DASHBOARD(Pattern.compile(...))\n\n  private final Pattern pattern;\n  RequestedPage(Pattern p) {this.pattern \u003d p;}\n}",
      "range": {
        "startLine": 38,
        "startChar": 1,
        "endLine": 40,
        "endChar": 62
      },
      "revId": "77cd7a90233ec4678f37ec40d485cf5fa40c1fa7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a62bf36c_be631c98",
        "filename": "java/com/google/gerrit/httpd/raw/IndexPreloadingUtil.java",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2020-08-04T09:45:27Z",
      "side": 1,
      "message": "I made it enum.\n\nHowever there isn\u0027t simple pattern for each page. Change page can be recognized as diff. So I would leave enum with just values.",
      "parentUuid": "10195670_3f6ab2b2",
      "range": {
        "startLine": 38,
        "startChar": 1,
        "endLine": 40,
        "endChar": 62
      },
      "revId": "77cd7a90233ec4678f37ec40d485cf5fa40c1fa7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f720f20f_46fc95ad",
        "filename": "java/com/google/gerrit/httpd/raw/IndexPreloadingUtil.java",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-07-27T13:05:42Z",
      "side": 1,
      "message": "The chance for these to get out of sync without us noticing is growing a lot by this change. I would suggest we create some sort of resource file that we include in both the frontend and backend build and that we use to load these queries from. Here for preloading and in the frontend for sending requests.\n\nWe could use Protobuf to do this. For example\n\nresources.proto:\nmessage DashboardQueries {\n  string your_turn \u003d 1;\n  string assigned \u003d 2;\n  // ...\n}\n\nThen we can can create a serialized text-representation of that: resources.txt\n\nThat contains then values we want to share. After including that file into the FE/BE build, we can just parse that file using our proto and use it here and when sending queries.\n\nThere are potentially better ways to do this using other frameworks, but we already have Protobuf available, so it looks tempting to just use it.",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 82
      },
      "revId": "77cd7a90233ec4678f37ec40d485cf5fa40c1fa7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f98ee0b8_969bd55e",
        "filename": "java/com/google/gerrit/httpd/raw/IndexPreloadingUtil.java",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2020-08-04T09:45:27Z",
      "side": 1,
      "message": "I agree we should make sure that queries are not out of sync. However I think this is out of scope of this change and it will make this change very complex. The queries were not change for year (with exception of adding attention_set and adding limits) so I am not worried that they will become often out of sync anytime soon. \n\nIf they go - we will get warning in browser console. We will as well see increase in performance metrics. \n\nCould we create it as follow-up task for it? This sounds as something that needs small design doc and discussion.",
      "parentUuid": "f720f20f_46fc95ad",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 82
      },
      "revId": "77cd7a90233ec4678f37ec40d485cf5fa40c1fa7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5eb9df8e_555e1517",
        "filename": "java/com/google/gerrit/httpd/raw/IndexPreloadingUtil.java",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-08-04T15:57:44Z",
      "side": 1,
      "message": "\u003e I agree we should make sure that queries are not out of sync. However I think this is out of scope of this change and it will make this change very complex.\n\nIt doesn\u0027t have (and should not) to be in this change. Could be a change that this change depends on.\n\n\u003e If they go - we will get warning in browser console\nThat requires a knowledgeable human to continuously look at these logs. I would rather not rely on humans to catch regressions :-) Imagine what happens when you are not around to look at these logs.\n\n\u003e Could we create it as follow-up task for it? This sounds as something that needs small design doc and discussion.\n\nCan we have that discussion now? If it turns out to be more work that we can currently handle (or that you want to do in the backend) I\u0027d be OK with scheduling this for fixing it later, but I would like for us to at least try :-)\n\nThe problem is that these things pile up and it\u0027s hard to get them done after-the-fact.",
      "parentUuid": "f98ee0b8_969bd55e",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 82
      },
      "revId": "77cd7a90233ec4678f37ec40d485cf5fa40c1fa7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98d5832d_8643c1f7",
        "filename": "java/com/google/gerrit/httpd/raw/IndexPreloadingUtil.java",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2020-08-04T20:55:54Z",
      "side": 1,
      "message": "First I would like to clarify impact:\nIf preloading will go out of sync, Gerrit will work as well as before this change. We will lose only improvement in latency and we will send 1 more query request to server that will not be used for each cold dashboard page load.\n\nI would like to have synchronization. I am not sure how much effort I should put to it.\n\n0 Level - Writing comment/warning in both code places that queries should be sync - same as before - Done\n\n1 Level - Putting query request as string to javascript property in index (soy) - we do it for change and diff change detail hexes \n\n2 Level - Create enum on frontend and protobuf in backend for query string like polygerrit-ui/app/utils/change-util.ts. We would change string to number representation. \n\n3 Level - Introduce protobuf to frontend, share one file in build as you suggested in your original comment.\n\nI don\u0027t have any prior knowledge about protobuf so it\u0027s hard for me to estimate how much it can time it can take me to implement. \n\nI will start tomorrow with Level 1 - and I will try Level 2 this week when I am waiting for CI results for typescript migration 😊 to at least have estimation how much work it is for me.",
      "parentUuid": "5eb9df8e_555e1517",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 82
      },
      "revId": "77cd7a90233ec4678f37ec40d485cf5fa40c1fa7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dbbbdca_37fcafbb",
        "filename": "java/com/google/gerrit/httpd/raw/IndexPreloadingUtil.java",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-08-05T07:36:30Z",
      "side": 1,
      "message": "Thanks! That plan SGTM.\n\nWe have protected the hex options against regressions in preloading, so it wouldn\u0027t feel right to me to give up that protection now for dashboard queries. You are right about impact, but the latency regressions might go unnoticed for a while and pile up to a point where we\u0027d have to deeply investigate and fix many things. If we can prevent that upfront, that seems worthwhile to me.\n\nCurious to see what you come up with!",
      "parentUuid": "98d5832d_8643c1f7",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 82
      },
      "revId": "77cd7a90233ec4678f37ec40d485cf5fa40c1fa7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a2e007b_1337624e",
        "filename": "java/com/google/gerrit/httpd/raw/IndexPreloadingUtil.java",
        "patchSetId": 5
      },
      "lineNbr": 108,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-07-27T13:05:42Z",
      "side": 1,
      "message": "Right now, it\u0027s hard to know what this method does. Sending a redirect? (That\u0027s what \u0027route\u0027 methods usually do).\n\nIt will get better when you use an enum and the method can be a \n\n/** Figures out which page the user is loading. */\nOptional\u003cRequestedPage\u003e parseRequestedPage(String url)\n...",
      "revId": "77cd7a90233ec4678f37ec40d485cf5fa40c1fa7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "519ef9b6_7b3d0817",
        "filename": "java/com/google/gerrit/httpd/raw/IndexPreloadingUtil.java",
        "patchSetId": 5
      },
      "lineNbr": 108,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2020-08-04T09:45:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a2e007b_1337624e",
      "revId": "77cd7a90233ec4678f37ec40d485cf5fa40c1fa7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}