{
  "comments": [
    {
      "key": {
        "uuid": "440875ab_088567f5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/ServerPluginProvider.java",
        "patchSetId": 41
      },
      "lineNbr": 52,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-30T15:26:35Z",
      "side": 1,
      "message": "Should this include the srcFile and/or snapshot? Why or why not?",
      "revId": "78cb2f41b819b0c730c53df9525a3a929b42fc61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04475ded_be5799ff",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/ServerPluginProvider.java",
        "patchSetId": 41
      },
      "lineNbr": 52,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-06-30T15:51:20Z",
      "side": 1,
      "message": "mmm .... I like to name things in a way that are \"readable\".\n\nget(file, snapshot, description) means\n\"get this file from this snapshot and that\u0027s the description of what it contains\"\n\nIf I say get(description) I do not explicitly extra the \"file\" that is the objective of the sentence.",
      "parentUuid": "440875ab_088567f5",
      "revId": "78cb2f41b819b0c730c53df9525a3a929b42fc61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "440875ab_28882b0d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/ServerPluginProvider.java",
        "patchSetId": 41
      },
      "lineNbr": 95,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-30T15:26:35Z",
      "side": 1,
      "message": "Why \"description\" for the class name and \"descriptor\" for the variable name? I would just stick with \"description\" for both.",
      "revId": "78cb2f41b819b0c730c53df9525a3a929b42fc61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2442a1dc_1fc0035e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/ServerPluginProvider.java",
        "patchSetId": 41
      },
      "lineNbr": 95,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-06-30T15:51:20Z",
      "side": 1,
      "message": "True, will align with description then.",
      "parentUuid": "440875ab_28882b0d",
      "revId": "78cb2f41b819b0c730c53df9525a3a929b42fc61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0402fd8c_66b88eb2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/UniversalServerPluginProvider.java",
        "patchSetId": 41
      },
      "lineNbr": 73,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-30T15:26:35Z",
      "side": 1,
      "message": "This results in double log messages for the 0th element in the list, since the filter predicate is applied on every access. Just return a List from providersForHandlingPlugin and don\u0027t use Iterables.size/get.",
      "revId": "78cb2f41b819b0c730c53df9525a3a929b42fc61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2442a1dc_3fbdc7ee",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/UniversalServerPluginProvider.java",
        "patchSetId": 41
      },
      "lineNbr": 73,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-06-30T15:51:20Z",
      "side": 1,
      "message": "mmm ... strange as did not happen to me locally in my tests.\nWill try again and debug to see why I don\u0027t see the problem.",
      "parentUuid": "0402fd8c_66b88eb2",
      "revId": "78cb2f41b819b0c730c53df9525a3a929b42fc61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2442a1dc_1f99e397",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/UniversalServerPluginProvider.java",
        "patchSetId": 41
      },
      "lineNbr": 73,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-06-30T16:29:12Z",
      "side": 1,
      "message": "Double-checked: this definitely does not double log messages for the 0th element in the list.\n\nDoes it really happen to you? Did you recreate the problem by copying twice the cookbook-plugin with the ServerPluginProvider showcase?",
      "parentUuid": "2442a1dc_3fbdc7ee",
      "revId": "78cb2f41b819b0c730c53df9525a3a929b42fc61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0402fd8c_c6d182df",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/UniversalServerPluginProvider.java",
        "patchSetId": 41
      },
      "lineNbr": 73,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-30T16:46:28Z",
      "side": 1,
      "message": "I will see if I can get this behavior but I still object to unnecessary use of Iterables methods on readability grounds.",
      "parentUuid": "2442a1dc_1f99e397",
      "revId": "78cb2f41b819b0c730c53df9525a3a929b42fc61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2442a1dc_bf2a376c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/UniversalServerPluginProvider.java",
        "patchSetId": 41
      },
      "lineNbr": 73,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2014-06-30T16:49:22Z",
      "side": 1,
      "message": "I think hat Dave is refering to this log statement:\n\n  log.debug(\"File {} handled by {} ? \u003d\u003e {}\", srcFile, input, handles)\n\nIt will be printed twice since you are calling Iterable.size() and Iterable.get() on \u0027dynamically constructed collection\u0027. Iterable will not cache filtering results, but will always apply filter function. This meas it will always produce side effect, in this case log statement.",
      "parentUuid": "2442a1dc_1f99e397",
      "revId": "78cb2f41b819b0c730c53df9525a3a929b42fc61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04475ded_9ea41ddc",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/UniversalServerPluginProvider.java",
        "patchSetId": 41
      },
      "lineNbr": 73,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-06-30T17:25:42Z",
      "side": 1,
      "message": "Ah gotcha: it was a debug anyway :-)\nFor the sake of avoiding it and improving readability, will upload a patch with the a simple List.",
      "parentUuid": "2442a1dc_bf2a376c",
      "revId": "78cb2f41b819b0c730c53df9525a3a929b42fc61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}