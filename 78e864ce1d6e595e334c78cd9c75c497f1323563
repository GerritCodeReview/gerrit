{
  "comments": [
    {
      "key": {
        "uuid": "39ebc864_411f321c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeSchemas.java",
        "patchSetId": 6
      },
      "lineNbr": 277,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-29T17:15:16Z",
      "side": 1,
      "message": "You can\u0027t change an existing schema, you need to add this as V21.",
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ebc864_a10f1ee4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeSchemas.java",
        "patchSetId": 6
      },
      "lineNbr": 277,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-29T17:34:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39ebc864_411f321c",
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ebc864_21242e6e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 6
      },
      "lineNbr": 481,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-29T17:15:16Z",
      "side": 1,
      "message": "Documentation for this operator in user-search.txt",
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19f28455_c0669ecc",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 6
      },
      "lineNbr": 481,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-29T17:34:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39ebc864_21242e6e",
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ebc864_01092ae2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ExactTopicPredicate.java",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-29T17:15:16Z",
      "side": 1,
      "message": "FWIW the other alternative is to throw QueryParseException.\n\nDon\u0027t worry too much about cleaning this up though. I have an idea in mind for later.",
      "range": {
        "startLine": 38,
        "startChar": 35,
        "endLine": 38,
        "endChar": 45
      },
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19f28455_005da6f8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ExactTopicPredicate.java",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-29T17:15:16Z",
      "side": 1,
      "message": "Capitalize and end with a period.",
      "range": {
        "startLine": 38,
        "startChar": 7,
        "endLine": 38,
        "endChar": 10
      },
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ebc864_813c1a86",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ExactTopicPredicate.java",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-29T17:34:59Z",
      "side": 1,
      "message": "I don\u0027t think throwing exceptions here is a good idea, as that might affect unrelated topic searches?",
      "parentUuid": "39ebc864_01092ae2",
      "range": {
        "startLine": 38,
        "startChar": 35,
        "endLine": 38,
        "endChar": 45
      },
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ebc864_614116ec",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ExactTopicPredicate.java",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-29T17:34:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19f28455_005da6f8",
      "range": {
        "startLine": 38,
        "startChar": 7,
        "endLine": 38,
        "endChar": 10
      },
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19f28455_a0639aba",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ExactTopicPredicate.java",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-29T17:46:49Z",
      "side": 1,
      "message": "I\u0027m not sure what you mean by \"unrelated topic searches\".\n\nIf the schema doesn\u0027t have any topic field, then searching in the index for documents having field named LEGACY_TOPIC3.getName() is going to return nothing. That\u0027s what you\u0027ve implemented here.\n\nThe alternative is to throw QueryParseException with a descriptive error message, which bubbles up to the end user as an HTTP 400 response and is displayed in the UI.\n\nSo it depends whether you want to fail loudly or silently return no results. I don\u0027t think we\u0027re consistent elsewhere, which is why I think it\u0027s ok to leave it as-is until I finish a later cleanup.",
      "parentUuid": "39ebc864_813c1a86",
      "range": {
        "startLine": 38,
        "startChar": 35,
        "endLine": 38,
        "endChar": 45
      },
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19f28455_e059a20c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/TopicPredicate.java",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-29T17:15:16Z",
      "side": 1,
      "message": "This implementation is wrong in some cases.\n\n* For LEGACY_TOPIC2 do the exact match.\n* For FUZZY_TOPIC, do the thing we do for e.g. the message field where we do a full-text search for \"id:X topic:foo\".\n* For LEGACY_TOPIC3, either do a prefix match, or do the same thing as for FUZZY_TOPIC.",
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ebc864_413612a4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/TopicPredicate.java",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-29T17:34:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19f28455_e059a20c",
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19f28455_4073ae92",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 6
      },
      "lineNbr": 459,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-29T17:06:35Z",
      "side": 1,
      "message": "This works just fine now.",
      "range": {
        "startLine": 459,
        "startChar": 3,
        "endLine": 459,
        "endChar": 48
      },
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ebc864_81153afe",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 6
      },
      "lineNbr": 460,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-29T17:06:35Z",
      "side": 1,
      "message": "The fuzzy search however does not.",
      "range": {
        "startLine": 460,
        "startChar": 4,
        "endLine": 460,
        "endChar": 60
      },
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ebc864_e10526c6",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 6
      },
      "lineNbr": 460,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-29T17:15:16Z",
      "side": 1,
      "message": "I don\u0027t think this is expected to work, at least in Lucene. Full-text search generally does not mean prefix search.\n\nI would expect \"topic:fixup\" to work, however.",
      "parentUuid": "39ebc864_81153afe",
      "range": {
        "startLine": 460,
        "startChar": 4,
        "endLine": 460,
        "endChar": 60
      },
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ebc864_213b0e8c",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 6
      },
      "lineNbr": 460,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-29T17:34:59Z",
      "side": 1,
      "message": "So the topic is tokenized?\n\nThis does pass however, just the last empty search throws a NPE by now.",
      "parentUuid": "39ebc864_e10526c6",
      "range": {
        "startLine": 460,
        "startChar": 4,
        "endLine": 460,
        "endChar": 60
      },
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19f28455_204f8a3a",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 6
      },
      "lineNbr": 460,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-29T17:46:49Z",
      "side": 1,
      "message": "\u003e So the topic is tokenized?\n\nYes, that is what full text search means.\n\n\u003e This does pass however, just the last empty search throws a NPE by now.\n\nThat seems like it should be fixed...",
      "parentUuid": "39ebc864_213b0e8c",
      "range": {
        "startLine": 460,
        "startChar": 4,
        "endLine": 460,
        "endChar": 60
      },
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19f28455_a03a7aa0",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 6
      },
      "lineNbr": 460,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-29T18:14:24Z",
      "side": 1,
      "message": "The problem there I have no idea where to start looking how to fix it as the stack trace doesn\u0027t help me there.\nI assumed the NPE comes from the TopicPredicate not working right, but it is still there.\n\njava.lang.NullPointerException\n\tat org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:729)\n\tat org.apache.lucene.search.IndexSearcher.createNormalizedWeight(IndexSearcher.java:776)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:428)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:637)\n\tat org.apache.lucene.search.IndexSearcher.searchAfter(IndexSearcher.java:622)\n\tat org.apache.lucene.search.IndexSearcher.searchAfter(IndexSearcher.java:564)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:470)\n\tat org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:520)\n\tat com.google.gerrit.lucene.LuceneChangeIndex$QuerySource.read(LuceneChangeIndex.java:425)\n\tat com.google.gerrit.server.index.IndexedChangeQuery.read(IndexedChangeQuery.java:95)\n\tat com.google.gerrit.server.query.change.AndSource.readImpl(AndSource.java:115)\n\tat com.google.gerrit.server.query.change.AndSource.read(AndSource.java:99)\n\tat com.google.gerrit.server.query.change.QueryProcessor.queryChanges(QueryProcessor.java:160)\n\tat com.google.gerrit.server.query.change.QueryProcessor.queryChanges(QueryProcessor.java:102)\n\tat com.google.gerrit.server.query.change.QueryChanges.query0(QueryChanges.java:143)\n\tat com.google.gerrit.server.query.change.QueryChanges.query(QueryChanges.java:132)\n\tat com.google.gerrit.server.query.change.QueryChanges.apply(QueryChanges.java:99)\n\tat com.google.gerrit.server.api.changes.ChangesImpl.get(ChangesImpl.java:134)\n\tat com.google.gerrit.server.api.changes.ChangesImpl.access$0(ChangesImpl.java:118)\n\tat com.google.gerrit.server.api.changes.ChangesImpl$1.get(ChangesImpl.java:108)\n\tat com.google.gerrit.server.query.change.AbstractQueryChangesTest.assertQuery(AbstractQueryChangesTest.java:1220)\n\tat com.google.gerrit.server.query.change.AbstractQueryChangesTest.assertQuery(AbstractQueryChangesTest.java:1215)\n\tat com.google.gerrit.server.query.change.AbstractQueryChangesTest.byTopic(AbstractQueryChangesTest.java:463)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n\tat org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:110)\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:18)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)",
      "parentUuid": "19f28455_204f8a3a",
      "range": {
        "startLine": 460,
        "startChar": 4,
        "endLine": 460,
        "endChar": 60
      },
      "revId": "78e864ce1d6e595e334c78cd9c75c497f1323563",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}