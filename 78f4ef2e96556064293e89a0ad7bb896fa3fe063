{
  "comments": [
    {
      "key": {
        "uuid": "decd09a8_143fb4cb",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ChangeScreen2.java",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-11-14T12:41:46Z",
      "side": 1,
      "message": "I was confused that K is Next and J is Prev and would expect the bindings the other way around. But we sort the patch sets always in reverse order, that why this is the other way around, right?\n\n http://vimhelp.appspot.com/motion.txt.html#motion.txt",
      "revId": "78f4ef2e96556064293e89a0ad7bb896fa3fe063",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e75e13d_4e8fd35f",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ChangeScreen2.java",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-11-18T14:06:48Z",
      "side": 1,
      "message": "Yes, we now always sort the patch sets in reverse order so that the newest patch set is on top. This is why I think K (Up) should navigate to the next (newer) patch set.",
      "parentUuid": "decd09a8_143fb4cb",
      "revId": "78f4ef2e96556064293e89a0ad7bb896fa3fe063",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de7ee924_2c3ff3cb",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ChangeScreen2.java",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-11-18T14:21:12Z",
      "side": 1,
      "message": "Thanks for the clarification! I am with you to add keyboard shortcut for navigation, but i am concerned if this is going to conflict with future extension of \"Select reference version\" feature.\n\nChad suggested this approach on dev ML list, to add radio button to the revision combo box and allow to select there the base reference version. Wouldn\u0027t keyboard navigation conflict with this extension? Anyway we have to solve this problem then, and not now ;-)",
      "parentUuid": "1e75e13d_4e8fd35f",
      "revId": "78f4ef2e96556064293e89a0ad7bb896fa3fe063",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de7ee924_acd76330",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ChangeScreen2.java",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-11-19T09:44:36Z",
      "side": 1,
      "message": "I agree that we still need some UI control to switch more easily between the patch sets, but I don\u0027t expect this to conflict with the navigation by keys.",
      "parentUuid": "de7ee924_2c3ff3cb",
      "revId": "78f4ef2e96556064293e89a0ad7bb896fa3fe063",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ead51ff_f24da889",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ChangeScreen2.java",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-11-19T22:40:57Z",
      "side": 1,
      "message": "Already used by RelatedChanges table.",
      "range": {
        "startLine": 242,
        "startChar": 41,
        "endLine": 242,
        "endChar": 44
      },
      "revId": "78f4ef2e96556064293e89a0ad7bb896fa3fe063",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ea1610c_aede177f",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ChangeScreen2.java",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1012758
      },
      "writtenOn": "2013-11-20T15:16:45Z",
      "side": 1,
      "message": "Will \u0027n\u0027 and \u0027p\u0027 be better choices?",
      "parentUuid": "1e75e13d_4e8fd35f",
      "revId": "78f4ef2e96556064293e89a0ad7bb896fa3fe063",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ead51ff_5228f497",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ChangeScreen2.java",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-11-19T22:40:57Z",
      "side": 1,
      "message": "I don\u0027t understand why this check is necessary. revision is always non-null by the time the screen displays. As the UI is loading data it always calls resolveRevisionToDisplay(), which sets the revision to be non-null.\n\nOh wow, OK, now I understand what you thought. onInitUI is called before the RPCs are sent to load data. So at this time revision indicates if we have a specific patch set to open, or are just opening the current one. But by the time they key press handler actually executes things have changed because of resolveRevisionToDisplay().",
      "revId": "78f4ef2e96556064293e89a0ad7bb896fa3fe063",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ebc6531_4f116d68",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ChangeScreen2.java",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-11-20T14:05:46Z",
      "side": 1,
      "message": "Yes, I only looked at the loadChangeInfo(...) method \n\n  ChangeList.addOptions(call, EnumSet.of(\n      ListChangesOption.CURRENT_ACTIONS,\n      fg \u0026\u0026 revision !\u003d null\n        ? ListChangesOption.ALL_REVISIONS\n        : ListChangesOption.CURRENT_REVISION));\n\nand concluded from it that \u0027revision \u003d\u003d null\u0027 means we are displaying the current patch set. You are right that \u0027resolveRevisionToDisplay()\u0027 is setting revision also for the current patch set. Does this mean that the UpdateCheckTimer which is using the loadChangeInfo(...) method is always loading all revisions, even if the current revision is displayed?",
      "parentUuid": "9ead51ff_5228f497",
      "revId": "78f4ef2e96556064293e89a0ad7bb896fa3fe063",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ead51ff_92589c4d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ChangeScreen2.java",
        "patchSetId": 1
      },
      "lineNbr": 246,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-11-19T22:40:57Z",
      "side": 1,
      "message": "This collection can be incomplete. It depends on what happened in loadChangeInfo",
      "revId": "78f4ef2e96556064293e89a0ad7bb896fa3fe063",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7eb25d5d_3121f0b6",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ChangeScreen2.java",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-11-19T22:40:57Z",
      "side": 1,
      "message": "} else if { instead of continue",
      "range": {
        "startLine": 252,
        "startChar": 14,
        "endLine": 254,
        "endChar": 14
      },
      "revId": "78f4ef2e96556064293e89a0ad7bb896fa3fe063",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ead51ff_d2522429",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ChangeScreen2.java",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-11-19T22:40:57Z",
      "side": 1,
      "message": "Already used by RelatedChanges table.",
      "range": {
        "startLine": 263,
        "startChar": 41,
        "endLine": 263,
        "endChar": 44
      },
      "revId": "78f4ef2e96556064293e89a0ad7bb896fa3fe063",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ead51ff_b2532030",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ChangeScreen2.java",
        "patchSetId": 1
      },
      "lineNbr": 266,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-11-19T22:40:57Z",
      "side": 1,
      "message": "See above, this is always non-null.",
      "revId": "78f4ef2e96556064293e89a0ad7bb896fa3fe063",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7eb25d5d_111e6c74",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ChangeScreen2.java",
        "patchSetId": 1
      },
      "lineNbr": 294,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-11-19T22:40:57Z",
      "side": 1,
      "message": "This code is identical with the other version. I would instead say:\n\n  RevisionInfo findSibling(ChangeInfo info, int offset) {\n    JsArray\u003cRevisionInfo\u003e revisions \u003d changeInfo.revisions.values();\n    RevisionInfo.sortRevisionInfoByNumber(revisions);\n    for (int i \u003d 0; i \u003c revisions.length(); i++) {\n      if (revision.equals(revisions.get(i).name()) {\n        if (0 \u003c\u003d i + offset \u0026\u0026 i + offset \u003c revisions.length()) {\n          return revisions.get(i + offset);\n        }\n        return null;\n      }\n    }\n    return null;\n  }\n\nand then prev is findSibling(info, -1) and next is findSibling(info, 1). Hell we can even say goToSibling(ChangeInfo, int offset) and instead of doing the return invoke Gerrit.display().",
      "range": {
        "startLine": 290,
        "startChar": 8,
        "endLine": 294,
        "endChar": 42
      },
      "revId": "78f4ef2e96556064293e89a0ad7bb896fa3fe063",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}