{
  "comments": [
    {
      "key": {
        "uuid": "fa490b4e_12e12c30",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-20T05:39:37Z",
      "side": 1,
      "message": "I guess you meant transaction boundaries for Git and database operations here; since 2.8.6.1 pure database transactions are supported for both SQL \u0026 No-SQL dialects.",
      "range": {
        "startLine": 9,
        "startChar": 13,
        "endLine": 9,
        "endChar": 33
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bff14552_801e5685",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-20T19:10:10Z",
      "side": 1,
      "message": "What\u0027s your point? Even before we had transactions in gwtorm they were still supported by the underlying database. The problem is and always has been that we don\u0027t use transactions in every place where we should. In other words, a lack of transactions.",
      "parentUuid": "fa490b4e_12e12c30",
      "range": {
        "startLine": 9,
        "startChar": 13,
        "endLine": 9,
        "endChar": 33
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df6359f0_e9df3565",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-21T07:51:42Z",
      "side": 1,
      "message": "| What\u0027s your point?\n\nDisagreement with your wording in the commit message.\n\n| Even before we had transactions in gwtorm they were still supported by the underlying database.\n\nThat\u0027s not true. Yes before this change [1] PostgreSQL, Oracle and MySQL (InnoDB engine) had support for transactions. But before [1] gwtorm haven\u0027t supported transaction semantic by leaving beginTransaction(), commit() and rollback() methods a no-op for JDBC dialects. So that rollback() in this basic idiom:\n\n  beginTransaction();\n  try {\n    insertPatchSetAncestors();\n    insertPatchSets();\n    updateChange();\n    commit();\n  } catch (OrmException e) {\n    rollback();\n  }\n\nhad never worked for JDBC dialects.  Combined with simultaneos database record mutations in background updates (mergeability checker and merge queue) and interactive updates (add reviewer REST endpoint) and gwtorm\u0027s optimistic database locking strategy this continuously produced dozens of corrupted changes every month in our production environment (PosgreSQL \u0026 cherry-pick submit strategy).\n\nAs the matter of fact, before [1], Gerrit issue tracker was full of intermittent database corruption problems, see for example [2], [3], [4], [5]. Since applying of [1] i have neither seen even one database corruption case in our production environment, nor one new filed corruption issue in Gerrit issue tracker.\n\nIOW: I am not aware of any code path on most recent master, that lack of transactions, that may lead to change corruption.\n\n* [1] https://gerrit-review.googlesource.com/57851\n* [2] https://code.google.com/p/gerrit/issues/detail?id\u003d2034\n* [3] https://code.google.com/p/gerrit/issues/detail?id\u003d2246\n* [4] https://code.google.com/p/gerrit/issues/detail?id\u003d2383\n* [5] https://code.google.com/p/gerrit/issues/detail?id\u003d2702",
      "parentUuid": "bff14552_801e5685",
      "range": {
        "startLine": 9,
        "startChar": 13,
        "endLine": 9,
        "endChar": 33
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df6359f0_c9dc7173",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-21T07:51:42Z",
      "side": 1,
      "message": "Given that using the word \"unreliable\" with DBMS, is the most offensive thing you can say about it, and given that you have used plural form, could you provide any evidences? Gerrit has open and closed source bindings for these DB systems:\n\n* H2\n* Oracle\n* MaxDB\n* PostgreSQL\n* MySQL (InnoDB engine)\n* MS SQL (closed source binding provided by gerritforge)\n* Google Megastore (No-SQL dialect, closed source)\n\nI am interessted to see any pending intermittent database corruption issues, broken transaction management, etc. on their issue trackers? Drivers? Versions? And of course we must warn Gerrit community to avoid using DBMS that known/proven to be intermittently broken.",
      "range": {
        "startLine": 9,
        "startChar": 39,
        "endLine": 9,
        "endChar": 59
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f80adc4_f6dce072",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-24T22:30:29Z",
      "side": 1,
      "message": "Reworded to make clear that these have been problems in the past, without making claims about whether they are problems today.",
      "parentUuid": "df6359f0_e9df3565",
      "range": {
        "startLine": 9,
        "startChar": 13,
        "endLine": 9,
        "endChar": 33
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a6fbfad_33de286b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-20T05:39:37Z",
      "side": 1,
      "message": "REST API documentation is missing.",
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bff14552_602352d5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-20T19:10:10Z",
      "side": 1,
      "message": "I think you might have missed the \"RFC\" in the subject.",
      "parentUuid": "1a6fbfad_33de286b",
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f3091e8_0bdb9d7c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-21T07:51:42Z",
      "side": 1,
      "message": "No i havn\u0027t, see my answer below.",
      "parentUuid": "bff14552_602352d5",
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f80adc4_96e9ec17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-24T22:30:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f3091e8_0bdb9d7c",
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a6fbfad_53eba40f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-20T05:39:37Z",
      "side": 1,
      "message": "Unit tests are missing. Adding check() and check(boolean repair) methods in change API would simplify the tests and allow alternative plugin API implementations to expose these methods as well; as it would simplify writing Checker site-program tool.",
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bff14552_40284ead",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-20T19:10:10Z",
      "side": 1,
      "message": "Comments like this on what is missing from an RFC change are not very productive.",
      "parentUuid": "1a6fbfad_53eba40f",
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f242da4_36d6b856",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-11-21T00:22:19Z",
      "side": 1,
      "message": "To be fair, there have been changes that (even if not explicitly mentioned in the commit message as WiP or RFC) ended up being merged without documentation, so I don\u0027t think it\u0027s unreasonable to mention it.",
      "parentUuid": "bff14552_40284ead",
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f3091e8_ebdf3165",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-21T07:51:42Z",
      "side": 1,
      "message": "... e.g.: [1].\n\n [1] https://gerrit-review.googlesource.com/49081",
      "parentUuid": "7f242da4_36d6b856",
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df6359f0_a9e93d17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-21T07:51:42Z",
      "side": 1,
      "message": "My assumption of \"RFC\" \u0026 \"WIP\" prefixes in change subject was: change owner supposed to explicitly mention in TODO section in the commit message what she thinks is still missing and supposed to be done in next patch sets, e.g. [1]. When this assumption was wrong, please ignore this mssing  parts comment above.\n\n [1] https://gerrit-review.googlesource.com/61604",
      "parentUuid": "bff14552_40284ead",
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f7da99e_f505b838",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-24T22:30:29Z",
      "side": 1,
      "message": "It\u0027s up to the reviewer to not LGTM changes until they\u0027re ready to be checked in.",
      "parentUuid": "df6359f0_a9e93d17",
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba85d38b_c0f8bee0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Check.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-11-20T01:18:06Z",
      "side": 1,
      "message": "If this will eventually also fix up any corrupt changes, should this be RestModifyView?",
      "range": {
        "startLine": 30,
        "startChar": 30,
        "endLine": 30,
        "endChar": 42
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba85d38b_e0edc21f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Check.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-11-20T01:18:06Z",
      "side": 1,
      "message": "Limit it to admins?\n\n  @RequiresCapability(GlobalCapability.ADMINISTRATE_SERVER)",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 60
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a6fbfad_d3d6d453",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Check.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-20T04:59:33Z",
      "side": 1,
      "message": "My thought was to allow both GET and POST. GET is just informational; POST will fix up anything that can be fixed.\n\nThe post body may include options for how to deal with certain types of corruption. For example, if there are multiple patch sets with the same commit SHA-1, should we keep the oldest or the newest?",
      "parentUuid": "ba85d38b_c0f8bee0",
      "range": {
        "startLine": 30,
        "startChar": 30,
        "endLine": 30,
        "endChar": 42
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa490b4e_f2dbc87a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Check.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-20T04:59:33Z",
      "side": 1,
      "message": "Is there any reason we wouldn\u0027t want to allow this for any user that can see the change? If they can see the change, they can hypothetically see all the entities spread across the database.\n\nAs noted in my TODO below I think we can expose _more_ to administrators, such as stack traces.",
      "parentUuid": "ba85d38b_e0edc21f",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 60
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da4e0756_d1d6c453",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Check.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-11-20T05:13:31Z",
      "side": 1,
      "message": "My reasoning was that restricting it to admins would be consistent with the \u0027index\u0027 endpoint.",
      "parentUuid": "fa490b4e_f2dbc87a",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 60
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a23f78d_c528bab1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Check.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-20T19:10:10Z",
      "side": 1,
      "message": "Good point. However, TBH, I think that was a mistake, we would get fewer complaints if users could reindex their own changes.",
      "parentUuid": "da4e0756_d1d6c453",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 60
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f242da4_76cc30c8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Check.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-11-21T00:16:54Z",
      "side": 1,
      "message": "So would you approve a change that removes the admin restriction for /index?  Or if there really is reason to restrict its usage, maybe add a new capability for it?",
      "parentUuid": "5a23f78d_c528bab1",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 60
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa490b4e_32de306b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ConsistencyChecker.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-20T05:39:37Z",
      "side": 1,
      "message": "This return value in unexpected. This method doesn\u0027t render ChangeInfo. So no reason to instantiate CheckResult. Just return messages.",
      "range": {
        "startLine": 85,
        "startChar": 9,
        "endLine": 85,
        "endChar": 20
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bff14552_a0ff1abf",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ConsistencyChecker.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-20T19:10:10Z",
      "side": 1,
      "message": "I think in the future there may be more complex structure than just a list of strings, for example, enum values for each message indicating severity, whether they were fixed, etc. But we can fix that later. Done.",
      "parentUuid": "fa490b4e_32de306b",
      "range": {
        "startLine": 85,
        "startChar": 9,
        "endLine": 85,
        "endChar": 20
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}