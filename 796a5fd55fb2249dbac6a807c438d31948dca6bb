{
  "comments": [
    {
      "key": {
        "uuid": "fa490b4e_12e12c30",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-20T05:39:37Z",
      "side": 1,
      "message": "I guess you meant transaction boundaries for Git and database operations here; since 2.8.6.1 pure database transactions are supported for both SQL \u0026 No-SQL dialects.",
      "range": {
        "startLine": 9,
        "startChar": 13,
        "endLine": 9,
        "endChar": 33
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bff14552_801e5685",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-20T19:10:10Z",
      "side": 1,
      "message": "What\u0027s your point? Even before we had transactions in gwtorm they were still supported by the underlying database. The problem is and always has been that we don\u0027t use transactions in every place where we should. In other words, a lack of transactions.",
      "parentUuid": "fa490b4e_12e12c30",
      "range": {
        "startLine": 9,
        "startChar": 13,
        "endLine": 9,
        "endChar": 33
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a6fbfad_33de286b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-20T05:39:37Z",
      "side": 1,
      "message": "REST API documentation is missing.",
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bff14552_602352d5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-20T19:10:10Z",
      "side": 1,
      "message": "I think you might have missed the \"RFC\" in the subject.",
      "parentUuid": "1a6fbfad_33de286b",
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a6fbfad_53eba40f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-20T05:39:37Z",
      "side": 1,
      "message": "Unit tests are missing. Adding check() and check(boolean repair) methods in change API would simplify the tests and allow alternative plugin API implementations to expose these methods as well; as it would simplify writing Checker site-program tool.",
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bff14552_40284ead",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-20T19:10:10Z",
      "side": 1,
      "message": "Comments like this on what is missing from an RFC change are not very productive.",
      "parentUuid": "1a6fbfad_53eba40f",
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba85d38b_c0f8bee0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Check.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-11-20T01:18:06Z",
      "side": 1,
      "message": "If this will eventually also fix up any corrupt changes, should this be RestModifyView?",
      "range": {
        "startLine": 30,
        "startChar": 30,
        "endLine": 30,
        "endChar": 42
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba85d38b_e0edc21f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Check.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-11-20T01:18:06Z",
      "side": 1,
      "message": "Limit it to admins?\n\n  @RequiresCapability(GlobalCapability.ADMINISTRATE_SERVER)",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 60
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a6fbfad_d3d6d453",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Check.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-20T04:59:33Z",
      "side": 1,
      "message": "My thought was to allow both GET and POST. GET is just informational; POST will fix up anything that can be fixed.\n\nThe post body may include options for how to deal with certain types of corruption. For example, if there are multiple patch sets with the same commit SHA-1, should we keep the oldest or the newest?",
      "parentUuid": "ba85d38b_c0f8bee0",
      "range": {
        "startLine": 30,
        "startChar": 30,
        "endLine": 30,
        "endChar": 42
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa490b4e_f2dbc87a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Check.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-20T04:59:33Z",
      "side": 1,
      "message": "Is there any reason we wouldn\u0027t want to allow this for any user that can see the change? If they can see the change, they can hypothetically see all the entities spread across the database.\n\nAs noted in my TODO below I think we can expose _more_ to administrators, such as stack traces.",
      "parentUuid": "ba85d38b_e0edc21f",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 60
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da4e0756_d1d6c453",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Check.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-11-20T05:13:31Z",
      "side": 1,
      "message": "My reasoning was that restricting it to admins would be consistent with the \u0027index\u0027 endpoint.",
      "parentUuid": "fa490b4e_f2dbc87a",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 60
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a23f78d_c528bab1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Check.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-20T19:10:10Z",
      "side": 1,
      "message": "Good point. However, TBH, I think that was a mistake, we would get fewer complaints if users could reindex their own changes.",
      "parentUuid": "da4e0756_d1d6c453",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 60
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa490b4e_32de306b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ConsistencyChecker.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-20T05:39:37Z",
      "side": 1,
      "message": "This return value in unexpected. This method doesn\u0027t render ChangeInfo. So no reason to instantiate CheckResult. Just return messages.",
      "range": {
        "startLine": 85,
        "startChar": 9,
        "endLine": 85,
        "endChar": 20
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bff14552_a0ff1abf",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ConsistencyChecker.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-11-20T19:10:10Z",
      "side": 1,
      "message": "I think in the future there may be more complex structure than just a list of strings, for example, enum values for each message indicating severity, whether they were fixed, etc. But we can fix that later. Done.",
      "parentUuid": "fa490b4e_32de306b",
      "range": {
        "startLine": 85,
        "startChar": 9,
        "endLine": 85,
        "endChar": 20
      },
      "revId": "796a5fd55fb2249dbac6a807c438d31948dca6bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}