{
  "comments": [
    {
      "key": {
        "uuid": "AAABEX//8h4\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1005804
      },
      "writtenOn": "2011-07-18T14:39:19Z",
      "side": 1,
      "message": "Is \"hidden\" really good name for this property? Wouldn\u0027t \"removed\" or \"decommissioned\" be better here?\n\nAlso, does it imply \"read-only\"?",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8gI\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1004010
      },
      "writtenOn": "2011-07-18T19:55:27Z",
      "side": 1,
      "message": "the \"hidden\" name was suggested by Shawn at the issue 349 thread.",
      "parentUuid": "AAABEX//8h4\u003d",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8aE\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1005804
      },
      "writtenOn": "2011-07-18T21:25:46Z",
      "side": 1,
      "message": "I know, but I still think that it isn\u0027t very good choice.",
      "parentUuid": "AAABEX//8gI\u003d",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8fs\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-08-02T15:44:44Z",
      "side": 1,
      "message": "Well, I think hidden is more accurate.  Perhaps it is hidden because the admin intends it to be decommissioned, but that would be an assumption.  Perhaps it is hidden for some temporary reason only.  And, since hidden tells the admin what it is actually doing as opposed to why, I think that it is more useful and more fine grained.",
      "parentUuid": "AAABEX//8h4\u003d",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8iA\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1005804
      },
      "writtenOn": "2011-07-18T14:39:19Z",
      "side": 1,
      "message": "Missing \"Bug:\" reference to the mentioned issue.",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8gE\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1004010
      },
      "writtenOn": "2011-07-18T19:55:27Z",
      "side": 1,
      "message": "Ok.",
      "parentUuid": "AAABEX//8iA\u003d",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8fo\u003d",
        "filename": "gerrit-common/src/main/java/com/google/gerrit/common/data/ProjectDetail.java",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-08-02T15:44:44Z",
      "side": 1,
      "message": "Nit: I think cmmt stands for \"Can Modify Merge Type\", I suggest something different. :)",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8iQ\u003d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/admin/ProjectInfoScreen.java",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2011-07-18T14:55:01Z",
      "side": 1,
      "message": "Could it happen that index \u003d\u003d -1 at this place?\nThe setSelectedIndex method expects values starting from zero and doesn\u0027t tell what happens for values lesser than zero.\nI would propose eliminating the index variable and replace the:\n\n index \u003d i;\n\nwithin the for loop, with:\n\n state.setSelectedIndex(i);",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8hM\u003d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/admin/ProjectInfoScreen.java",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1005804
      },
      "writtenOn": "2011-07-18T15:01:59Z",
      "side": 1,
      "message": "Sasa, your solution is actually wrong... It should be:\n\n    if (i !\u003d state.getItemCount()) {\n        state.setSelectedIndex(i);\n    }\n\notherwise you would unconditionally use last index in case of no match.",
      "parentUuid": "AAABEX//8iQ\u003d",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8go\u003d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/admin/ProjectInfoScreen.java",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2011-07-18T15:25:57Z",
      "side": 1,
      "message": "Piotr, I wrote \"within the for loop\". So, just to avoid confusion, my complete proposal would be:\n\nif (state !\u003d null) {\n  for (int i \u003d 0; i \u003c state.getItemCount(); i++) {\n    if (newState.name().equals(state.getValue(i))) {\n      state.setSelectedIndex(i);\n      break;\n    }\n  }\n}",
      "parentUuid": "AAABEX//8hM\u003d",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8gg\u003d",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/admin/ProjectInfoScreen.java",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1005804
      },
      "writtenOn": "2011-07-18T15:27:39Z",
      "side": 1,
      "message": "Oops, true. That makes even more sense.",
      "parentUuid": "AAABEX//8go\u003d",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8h0\u003d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/changedetail/ChangeDetailFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1005804
      },
      "writtenOn": "2011-07-18T14:39:19Z",
      "side": 1,
      "message": "Shouldn\u0027t this be \u0026\u0026?\n\nAnd if not, then does this mean that \"Project Owners\" can review projects in \"read-only\" state?",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8hk\u003d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/changedetail/ChangeDetailFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2011-07-18T14:55:01Z",
      "side": 1,
      "message": "Can an owner edit the change when it is read-only?",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8fU\u003d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/changedetail/ChangeDetailFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1004010
      },
      "writtenOn": "2011-07-18T19:55:27Z",
      "side": 1,
      "message": "Yes.. It was what I considered..!\nOtherwise, we can force the owner to change the project state before editing it.\nWhat do you prefer?",
      "parentUuid": "AAABEX//8hk\u003d",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8aM\u003d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/changedetail/ChangeDetailFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2011-07-18T20:50:16Z",
      "side": 1,
      "message": "I prefer that a read-only project is read-only for everybody including the owners. This also helps avoid making changes by mistake.",
      "parentUuid": "AAABEX//8fU\u003d",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8aA\u003d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/changedetail/ChangeDetailFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1005804
      },
      "writtenOn": "2011-07-18T21:25:46Z",
      "side": 1,
      "message": "I agree with Sasa.",
      "parentUuid": "AAABEX//8aM\u003d",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8fg\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ProjectConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-08-02T15:44:44Z",
      "side": 1,
      "message": "This is not very clear.  I think that you need something more descriptive for a config file.",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8hs\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ProjectControl.java",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1005804
      },
      "writtenOn": "2011-07-18T14:39:19Z",
      "side": 1,
      "message": "You really _need_ to add brackets here.",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8hU\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ProjectControl.java",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2011-07-18T14:55:01Z",
      "side": 1,
      "message": "I also think the brackets are missing here because you wanted to extend the existing isVisible implementation with:\n\n \u0026\u0026 !isHidden()",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8fE\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ProjectControl.java",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1004010
      },
      "writtenOn": "2011-07-18T19:55:27Z",
      "side": 1,
      "message": "ok",
      "parentUuid": "AAABEX//8hU\u003d",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8fY\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RefControl.java",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-08-02T15:44:44Z",
      "side": 1,
      "message": "Do you intend to change the semantics here for non hidden projects?  In other words, is it possible that some projects were previously not visible to the owner?",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8fI\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RefControl.java",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-08-02T15:44:44Z",
      "side": 1,
      "message": "I feel like most of the tests in here should be asking isReadOnly() instead of isActive() because that is the question actually being asked in most places.\n\nThe fact that isActive() implies !isReadOnly() is only a matter of policy, but the places where isActive() is being queried is where changing (writing to) the project is possible.  This would put that policy inside of the state questions isReadOnly()/isActive() instead of inside of every other question making it easier to see that policy explicitly and to change it if desired in the future.  \n\nPerhaps isHidden and isReadOnly are the only real questions and perhaps they need not even be tied together (but, a policy that did seems fine too)?",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEn///cE\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RefControl.java",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1004010
      },
      "writtenOn": "2011-08-02T20:25:52Z",
      "side": 1,
      "message": "I\u0027m not sure I got your point, but those 3 states (read_only, active, hidden) are exclusives, the project can have only one at time. isActive() do not imply !isReadOnly(), because !isReadOnly() may be hidden or active.\n\nPerhaps you are suggesting active as the concatenation of both read_only and hidden false ? In that case, Should we eliminate active state in the UI ?",
      "parentUuid": "AAABEX//8fI\u003d",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEn//9Qw\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RefControl.java",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-08-08T23:11:19Z",
      "side": 1,
      "message": "Perhaps I am more dense than most, :( but here is how I think when I am reviewing this code.  I look at the modifications you have made to the canUpload(), canUploadMerges(), canSubmit(), canUpdate(), canForceUpdate(), canCreate(), canDelete() methods and I notice that they all now ask isActive().  So, now, I have to think (watch out):  \"what is this code trying to get at with its isActive() question?\" And that makes each one of these \"very tricky and easy to get wrong\" access questions just one step more complicated than I would hope for.  Since access questions are notoriously easy to get wrong, I could not help but think that in reality it seems like the code is really asking \"is anyone allowed to write to this project?\"\n\nSo, instead of obfuscating that question in isActive() which implies understanding the 3 new project states that you have now defined, and how they affect reading and writing, it would be clearer if these methods could just ask the question they care about and call a method named something like canWrite().\n\nNow, canWrite() could contain the policy mapping to the 3 new states which you are now implementing:\n\n Active     canWrite \u003d true      (canRead \u003d true)\n ReadOnly   canWrite \u003d false     (canRead \u003d true)\n Hidden     canWrite \u003d false     (canRead \u003d false)\n\nYes, asking canWrite() will produce the same answer as asking isActive()\ncurrently does, but I feel like asking canWrite() is likely more easier for future reviewers to understand when they are perusing this file than trying to remember what isActive(), isReadOnly() and isHidden() imply (does isHidden imply readOnly...?)\n\nI know it sounds like almost the same thing, but somehow that seemed like it would be clearer to me (and potentially more flexible and less error prone in the future) than the way it currently is.\n\n\u003e Perhaps you are suggesting active as the concatenation of both read_only and hidden false ? In that case, Should we eliminate active state in the UI ?\n\nI am not sure, the thought occurred to me.  But I am not sure it would be very good policy to offer the 4th combo: canWrite \u003d false, canRead \u003d true, but the suggested use of canWrite() above would make that more easily possible if ever desired.  My issue was mostly a pedantic one of layering...",
      "parentUuid": "AAABEn///cE\u003d",
      "revId": "7a7c37ae4b5a98f0b65a50cd4b094c70c93e3345",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}