{
  "comments": [
    {
      "key": {
        "uuid": "6ac77cbf_506e10ad",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RefControl.java",
        "patchSetId": 1
      },
      "lineNbr": 235,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2017-04-04T17:03:47Z",
      "side": 1,
      "message": "By changing the name of this, you are changing the intent.  Previously callers of this need not care what conditions to look for when finding out if they can write to a project, now you have removed that abstraction.  This makes the code harder to understand and makes it harder to evolve in the future if there are other reasons to prevent writting to a ref.",
      "range": {
        "startLine": 235,
        "startChar": 17,
        "endLine": 235,
        "endChar": 25
      },
      "revId": "7c434eb2b33663340bec70ff05ecfe3ff6623d7e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c97e5645_2218c153",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RefControl.java",
        "patchSetId": 1
      },
      "lineNbr": 235,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2017-04-05T15:44:17Z",
      "side": 1,
      "message": "what other intents do you foresee for this code?",
      "parentUuid": "6ac77cbf_506e10ad",
      "range": {
        "startLine": 235,
        "startChar": 17,
        "endLine": 235,
        "endChar": 25
      },
      "revId": "7c434eb2b33663340bec70ff05ecfe3ff6623d7e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fe04570_d77c8524",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RefControl.java",
        "patchSetId": 1
      },
      "lineNbr": 235,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2017-04-05T16:19:25Z",
      "side": 1,
      "message": "Currently read and write ability of projects is implemented by the tri state nature of projects \"active, read-only, hidden\".  The intent of having a canRead() and a canWrite() it to hide those states, so that there can be other ways to define this.  Perhaps we want to let plugins control whether projects can be read or written to, these methods would provide a place to do that.",
      "parentUuid": "c97e5645_2218c153",
      "range": {
        "startLine": 235,
        "startChar": 17,
        "endLine": 235,
        "endChar": 25
      },
      "revId": "7c434eb2b33663340bec70ff05ecfe3ff6623d7e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0ced133_dd2e03f2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RefControl.java",
        "patchSetId": 1
      },
      "lineNbr": 235,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2017-04-06T09:34:30Z",
      "side": 1,
      "message": "well, what about \n\n  canWriteProject\n  canReadProject\n\n(canWrite is a strange name. From its reading, I would assume that canWrite()\u003d\u003dtrue implies canPushWithForce(), since the former is a more general permission.)",
      "parentUuid": "1fe04570_d77c8524",
      "range": {
        "startLine": 235,
        "startChar": 17,
        "endLine": 235,
        "endChar": 25
      },
      "revId": "7c434eb2b33663340bec70ff05ecfe3ff6623d7e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}