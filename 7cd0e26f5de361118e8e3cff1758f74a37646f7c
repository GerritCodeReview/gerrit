{
  "comments": [
    {
      "key": {
        "uuid": "64d01910_814e3a7c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/PluginEntry.java",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-06-20T14:00:08Z",
      "side": 1,
      "message": "Why not to use Guava\u0027s natural ordering?\n\n  private static Ordering\u003cPluginEntry\u003e SORT_BY_NAME \u003d Ordering.natural()\n      .onResultOf(new Function\u003cPluginEntry, String\u003e() {\n            @Override\n            public String apply(PluginEntry e) {\n              return e.getName();\n            }\n          });\n  public static List\u003cPluginEntry\u003e sortPluginEntries(\n      Iterable\u003cPluginEntry\u003e entries) {\n    return SORT_PLUGIN_ENTRY.sortedCopy(entries);\n  }",
      "range": {
        "startLine": 32,
        "startChar": 2,
        "endLine": 38,
        "endChar": 8
      },
      "revId": "7cd0e26f5de361118e8e3cff1758f74a37646f7c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04767d12_c6d5a2ee",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/PluginEntry.java",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-06-24T22:26:17Z",
      "side": 1,
      "message": "Yes I could but I don\u0027t think it would make the code more readable.\nThe comparator inner static class seems quite straightforward to me :-)",
      "parentUuid": "64d01910_814e3a7c",
      "range": {
        "startLine": 32,
        "startChar": 2,
        "endLine": 38,
        "endChar": 8
      },
      "revId": "7cd0e26f5de361118e8e3cff1758f74a37646f7c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24a621d4_1fefc322",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/PluginEntry.java",
        "patchSetId": 13
      },
      "lineNbr": 60,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-06-24T16:23:18Z",
      "side": 1,
      "message": "I\u0027m probably missing something from a later change but this constructor doesn\u0027t appear to be called anywhere (nor the other constructor with Optional.absent()).",
      "revId": "7cd0e26f5de361118e8e3cff1758f74a37646f7c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04767d12_e6d29e03",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/PluginEntry.java",
        "patchSetId": 13
      },
      "lineNbr": 60,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-06-24T22:26:17Z",
      "side": 1,
      "message": "True, but I wanted to make the use of PluginEntry API more \"friendly\" for other plugins provider to implement.\n\nI terribly miss in Java the use of default values, I just wanted the people to omit the size if they don\u0027t know it and same for attributes.\n\nThey are then actually used in the Groovy and Scala providers I think.",
      "parentUuid": "24a621d4_1fefc322",
      "revId": "7cd0e26f5de361118e8e3cff1758f74a37646f7c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}