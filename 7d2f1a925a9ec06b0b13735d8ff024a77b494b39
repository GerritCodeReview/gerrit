{
  "comments": [
    {
      "key": {
        "uuid": "aef4a304_40407ac4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/CommitsCollection.java",
        "patchSetId": 5
      },
      "lineNbr": 123,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-07-31T12:02:46Z",
      "side": 1,
      "message": "I think you can get the same effect, possibly cheaper, with queryProvider.get().enforceVisibility(true). Is there a difference I\u0027m missing?",
      "revId": "7d2f1a925a9ec06b0b13735d8ff024a77b494b39",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3c5655c_bb0c8c20",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/CommitsCollection.java",
        "patchSetId": 5
      },
      "lineNbr": 138,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-07-31T12:02:46Z",
      "side": 1,
      "message": "Not strictly related to this change, but:\n\n* I always have to double-check what \"includedInOne\" would mean, I think it would be easier to understand as \"includedInAny\" or something.\n* Surely includedInOne should short-circuit if the input collection is empty, and you wouldn\u0027t have to push this check into the callers. (It doesn\u0027t, I checked, so this is still necessary for now unless you want to start modifying that class.)",
      "revId": "7d2f1a925a9ec06b0b13735d8ff024a77b494b39",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}