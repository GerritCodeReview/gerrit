{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b383bcf3_76486d75",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2021-08-26T07:30:23Z",
      "side": 1,
      "message": "Very nice cleanup!",
      "revId": "7de61276203dbe79f7377c2f226bff9a7302b2c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f3df17a_d7ff3788",
        "filename": "polygerrit-ui/app/elements/shared/gr-formatted-text/gr-formatted-text_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 339,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2021-08-25T17:56:52Z",
      "side": 1,
      "message": "This quote block pattern is pretty repeated.\n\nWhat about a assertQuoteBlock that does the assertTextBlock for you?\nAnd if quote blocks can contain things then maybe something like:\nassertQuoteBlock(quoteBlock,\n b \u003d\u003e assertTextBlock(b, \u0027paragraph\u0027, \u0027I\u0027m happy with quotes!!\u0027);\n \n You could make the last part a repeated argument and then \nfunction assertQuoteBlock(block, ...matchers) { \n assert.lengthOf(quoteBlock.blocks, matchers.length)\n quoteBlock.blocks.forEach((b, i) \u003d\u003e matchers[i](b)); \n}",
      "revId": "7de61276203dbe79f7377c2f226bff9a7302b2c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03b6604b_bd5664b1",
        "filename": "polygerrit-ui/app/elements/shared/gr-formatted-text/gr-formatted-text_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 339,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2021-08-26T10:25:37Z",
      "side": 1,
      "message": "I added a quote block assert that is similar to the rest, but leaving the sub-block assertions outside for now. I am planning to introduce more features next, so I will take another look for a good test pattern then.",
      "parentUuid": "5f3df17a_d7ff3788",
      "revId": "7de61276203dbe79f7377c2f226bff9a7302b2c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77b17a1d_3aef3d56",
        "filename": "polygerrit-ui/app/elements/shared/gr-formatted-text/gr-formatted-text_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 339,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2021-08-26T15:37:21Z",
      "side": 1,
      "message": "Sounds good!",
      "parentUuid": "03b6604b_bd5664b1",
      "revId": "7de61276203dbe79f7377c2f226bff9a7302b2c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8654cb8e_4bc04acc",
        "filename": "polygerrit-ui/app/elements/shared/gr-formatted-text/gr-formatted-text_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 384,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2021-08-25T17:56:52Z",
      "side": 1,
      "message": "assertQuoteBlock(result[0],\n     b \u003d\u003e assertQuoteBlock(b, nb \u003d\u003e asssertTextBlock(nb, ...)),\n     b \u003d\u003e assertTextBlock(b, ...));",
      "revId": "7de61276203dbe79f7377c2f226bff9a7302b2c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dedfd7d5_dde02005",
        "filename": "polygerrit-ui/app/elements/shared/gr-formatted-text/gr-formatted-text_test.ts",
        "patchSetId": 5
      },
      "lineNbr": 384,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2021-08-26T10:25:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8654cb8e_4bc04acc",
      "revId": "7de61276203dbe79f7377c2f226bff9a7302b2c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}