{
  "comments": [
    {
      "key": {
        "uuid": "b04d0a88_252c4ec6",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/ChangeOwnerIT.java",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-04-14T01:01:17Z",
      "side": 1,
      "message": "optional: add `expected \u003d AuthException.class` in the `@Test` annotation of the tests where we are currently using this method and replace this with just a call to `approve()`.",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 84,
        "endChar": 3
      },
      "revId": "7e9ee7f0bb1df6ae3e5673a0ee60b0bd9a1f1acf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3062faee_4949a192",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/ChangeOwnerIT.java",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-04-14T13:00:16Z",
      "side": 1,
      "message": "I think the \"expected\" thing in @Test is an antipattern, since you can\u0027t check which statement throws. It\u0027s particularly risky with tests like this, where there are lots of calls that all throw a common exception type (RestApiException).\n\nMaybe lambda expressions will make this better.",
      "parentUuid": "b04d0a88_252c4ec6",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 84,
        "endChar": 3
      },
      "revId": "7e9ee7f0bb1df6ae3e5673a0ee60b0bd9a1f1acf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}