{
  "comments": [
    {
      "key": {
        "uuid": "5b9537ac_c1ce2a13",
        "filename": "java/com/google/gerrit/server/schema/NoteDbSchemaVersionCheck.java",
        "patchSetId": 14
      },
      "lineNbr": 67,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-05-29T09:56:17Z",
      "side": 1,
      "message": "I would prefer to see the answer to David Pursehouse comment already today an not in future. Gerrit seleases. Say 4.0 added incompatible changes. compared to 3.0. and user activated this setting. What is the plan?\n\nI would assume, that the general plan is to maintain a map of \"from-version\" -\u003e \"to-version\" so that the incompatible case is detected and rejected. So, in the above case I would expect to see the error in the form: \n\n  Schema version 199 (Gerrit release 3.9.x) introduced incompatible schema changes,\n  so that gerrit.rollingUpgrade setting is ignored.\n\nOne option may be to add new attribute to the schema class and mark a schema migration compatible or not. Tha way the developer who is writing the new schema class would have to think about that property of schema version N+1 in advance. What would be much harder, release engineer, to decide ater the fact: OK, we have 13 Schema migration between two releases: Are they rollingUpgrade capable or not?!",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 91
      },
      "revId": "7ee2064414be4ae881ac3a3e4aa0b92f0a0d4267",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d4076c9_c5d135f2",
        "filename": "java/com/google/gerrit/server/schema/NoteDbSchemaVersionCheck.java",
        "patchSetId": 14
      },
      "lineNbr": 67,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-05-29T10:02:13Z",
      "side": 1,
      "message": "\u003e I would prefer to see the answer to David Pursehouse comment already today an not in future. \n\nDone.\n\n\u003e Gerrit seleases. Say 4.0 added incompatible changes. compared to 3.0. and user activated this setting. What is the plan?\n\nSpecified that is only between version N and N+1. 4.0 would be many more versions more than 3.0.\n\n\u003e I would assume, that the general plan is to maintain a map of \"from-version\" -\u003e \"to-version\" so that the incompatible case is detected and rejected. So, in the above case I would expect to see the error in the form: \n\u003e \n\u003e   Schema version 199 (Gerrit release 3.9.x) introduced incompatible schema changes,\n\u003e   so that gerrit.rollingUpgrade setting is ignored.\n\nVersion N would only be compatible for rolling upgrades to version N+1. This is tested because Google (and GerritForge) have been doing rolling upgrades for years. This change is only to allow the rest of the community to do it as well.\n\n\u003e One option may be to add new attribute to the schema class and mark a schema migration compatible or not.\n\nThat flag would always be true for Version N+1 and always be false for anything else. We don\u0027t allow online reindex when skipping versions, so that is already a no-go.",
      "parentUuid": "5b9537ac_c1ce2a13",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 91
      },
      "revId": "7ee2064414be4ae881ac3a3e4aa0b92f0a0d4267",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}