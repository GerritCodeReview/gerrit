{
  "comments": [
    {
      "key": {
        "uuid": "b1c47a18_ab81bb3e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 4,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "I think all three commits that are currently stacked should be squashed into a single one, but we could do this once we get close to submission.",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 4,
        "endChar": 6
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f81493bd_df00a49c",
        "filename": "java/com/google/gerrit/server/git/PermissionAwareDfsRepository.java",
        "patchSetId": 12
      },
      "lineNbr": 64,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "Would it make sense if this would extend PermissionAwareRepository to save boiler-plate?",
      "range": {
        "startLine": 64,
        "startChar": 50,
        "endLine": 64,
        "endChar": 63
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be527950_6c688dd6",
        "filename": "java/com/google/gerrit/server/git/PermissionAwareDfsRepository.java",
        "patchSetId": 12
      },
      "lineNbr": 64,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "Can you place a TODO somewhere in this class to remove the boiler plate if/when JGit supports an interface for DfsRepository",
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6940e533_f96b75ff",
        "filename": "java/com/google/gerrit/server/git/PermissionAwareDfsRepository.java",
        "patchSetId": 12
      },
      "lineNbr": 102,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "style nit: two slashes are sufficient",
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebfbac4e_1b7e9d40",
        "filename": "java/com/google/gerrit/server/git/PermissionAwareRepository.java",
        "patchSetId": 12
      },
      "lineNbr": 87,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "style nit: two slashes are sufficient",
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a45961d0_b7437f57",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 50,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "I think it makes sense to split this class up in a PermissionAwareRepositoryTest and a PermissionAwareDfsRepositoryTest",
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a03d15cc_50f1baa5",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 51,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "nit: private",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 12
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77493c84_3dbbed5e",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 52,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "@Mock private PermissionBackend.ForProject forProject",
      "range": {
        "startLine": 52,
        "startChar": 2,
        "endLine": 52,
        "endChar": 19
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddf89524_c47d94a8",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 54,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "nit: private static",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 54,
        "endChar": 9
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4420d585_63fe2684",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 54,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "nit: dedicated?",
      "range": {
        "startLine": 54,
        "startChar": 39,
        "endLine": 54,
        "endChar": 47
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3322ec9b_eeb75736",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 68,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "nit: \u0027DoesNot\u0027",
      "range": {
        "startLine": 68,
        "startChar": 39,
        "endLine": 68,
        "endChar": 45
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bce6d10_e5161490",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "this can be private",
      "range": {
        "startLine": 85,
        "startChar": 12,
        "endLine": 85,
        "endChar": 13
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12a41f7b_8ac31d03",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 85,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "nit: method ordering (public, package-private, protected, private)",
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52cd58bf_138c5f78",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "nit: method ordering",
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecf68662_20487d42",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 104,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "private",
      "range": {
        "startLine": 104,
        "startChar": 2,
        "endLine": 104,
        "endChar": 11
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d0e4766_b678b5db",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 126,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "nit: delegatesAllPublicMethods",
      "range": {
        "startLine": 126,
        "startChar": 4,
        "endLine": 126,
        "endChar": 11
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07c7329c_2963a135",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 126,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "It\u0027s better to use @RunWith(Parameterized.class) (or any other runner that allows to do this) on the class and get each method name as a parameter to the method, this makes it easier to debug if things go wrong",
      "range": {
        "startLine": 126,
        "startChar": 41,
        "endLine": 126,
        "endChar": 65
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bff69e29_9e2db1e3",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 131,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "It\u0027s better to use @RunWith(Parameterized.class) (or any other runner that allows to do this) on the class and get each method name as a parameter to the method, this makes it easier to debug if things go wrong",
      "range": {
        "startLine": 131,
        "startChar": 41,
        "endLine": 131,
        "endChar": 68
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4e7d56a_970a9649",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 134,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "private",
      "range": {
        "startLine": 134,
        "startChar": 2,
        "endLine": 134,
        "endChar": 11
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f307a83_cfe67c98",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 142,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "This is hard to trace if it fails, because failures won\u0027t show up in the list of test methods of any CI or IDE. If you follow my suggestion for parameterizing, you should be able to remove the stream entirely and use assume() at the beginning of the method to filter out the cases that you don\u0027t want to assert on.",
      "range": {
        "startLine": 142,
        "startChar": 12,
        "endLine": 142,
        "endChar": 70
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33a98bab_d9a01e10",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 146,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "isEmpty",
      "range": {
        "startLine": 146,
        "startChar": 36,
        "endLine": 146,
        "endChar": 45
      },
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "662624b5_98406fd0",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 181,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "Once this is parameterized, you can just let all of these propagate",
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a074d4b3_f0651609",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 187,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "nit: inline",
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a6d1dbd_5280d246",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 191,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "Why do you care about the specific object to return? We could just return a \"new Object()\".",
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45228ee1_ab432ba7",
        "filename": "javatests/com/google/gerrit/git/PermissionAwareRepositoryTest.java",
        "patchSetId": 12
      },
      "lineNbr": 199,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-05-03T13:26:25Z",
      "side": 1,
      "message": "This seems to be unused?",
      "revId": "7f0832036f3ebe90fc568af3c81ddd56bde0952d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}