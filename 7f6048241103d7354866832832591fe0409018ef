{
  "pushCert": "certificate version 0.1\npusher Dave Borowitz \u003cdborowitz@google.com\u003e 1470345163 -0400\nnonce ABKBx0f5Jo0y4m9xZxqorX8sa2hkrRcmC1EHQpm7L4Md+saWa9BoJXmIbBeXQu3Quclkw30ry9gU\n\n0000000000000000000000000000000000000000 7f6048241103d7354866832832591fe0409018ef refs/for/master%r\u003dsop@google.com,r\u003dtparker@google.com,r\u003djrn@google.com,r\u003dekempin@google.com\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXo6/LAAoJEF/XxZqaEoiM12AQANXSq5xHg9ex9k07GBXmWcIP\npzcsPE/RcplAKDzs1dmviU72qFCDf4ZhPBg/i7nYkWwIyIgNdDzn0UyncEfrva9R\njLz+98Fp8roliKJjYSGKotmGM11Y+jXrAS4p069lGXFzHLO+PgeIA+F6eQ0WPwbj\no+WuWC3Son6UutuJsfoKxe7E61mCQEdi/enVIdDcTDVmBB9NPP5nseHhrlxenYqj\nEY+otJI3HVSLaO46LH8aZHjcyCVW0SovZkrLAM/HgNJMUMQYdHFrKEXUu9/WEK+X\nDhWDuaqVATybWK8QY0FElwdoLgAier5qlroi/h2Q6ZviatrsAKKJEGNujzVYQwAw\neZ/dIz7GdbX2O8Sns5ApsyMl/t1748EFm5l4qlb7eWKcEM6bdpjM9YaxYQ1W5wCI\nJ6852f9x0Qk2ELPpTIc/6sewi5T/f9EeYys6aH5/omksediReZUWyOdhxXVKuAt7\nhPFVcK4RO6sP0lyQABEcpXy1MTNDqVs9/OOT1Njm8ChNlDlFGc3PpdHHronTH1+p\npzl3Bz3IG7lbW+bjsMZOaf/T/iNyYXBxzgw6c/4RpbwQbUXPgrcd4RjcA1vYUM4q\nGQGEX0ZplStY/VPru5vXSaqWf50tGYHEnPDPUpZatDVpmMnkOC0lYlaPI0+v8zgw\no+OHDMf+3Ks1N3JLiNNS\n\u003dTN9a\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "b9b2930f_9c8ac510",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-08-09T17:38:34Z",
      "side": 1,
      "message": "This is a little bit silly. If the primary storage is NoteDb and we\u0027re not writing anything further to ReviewDb, then there\u0027s no point in actually recording the rest of the state in the noteDbState field since it will be out of date soon anyway.\n\nSo in principle we can just store \"N\" or something in the field. But then wedging this into the NoteDbChangeState Java type might get ugly. I\u0027ll think about how to handle this in the code.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 38
      },
      "revId": "7f6048241103d7354866832832591fe0409018ef",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9945351_6c277b1f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2016-08-10T01:01:44Z",
      "side": 1,
      "message": "So we assume that if we read ReviewDb and get no Change row, but we read NoteDb and do get the change, that NoteDb is primary for this change and its OK that ReviewDb has no record?",
      "range": {
        "startLine": 31,
        "startChar": 3,
        "endLine": 32,
        "endChar": 34
      },
      "revId": "7f6048241103d7354866832832591fe0409018ef",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d974a70d_459fea48",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-08-09T17:38:34Z",
      "side": 1,
      "message": "The thing making this a little bit difficult to implement is that RebuildNoteDb (via ChangeRebuilderImpl#rebuildProject) is not actually touching ReviewDb at all. I\u0027m trying to think if we need additional refactoring here.",
      "range": {
        "startLine": 42,
        "startChar": 3,
        "endLine": 43,
        "endChar": 13
      },
      "revId": "7f6048241103d7354866832832591fe0409018ef",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99914f64_4bfb8568",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/BatchUpdate.java",
        "patchSetId": 1
      },
      "lineNbr": 899,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2016-08-10T01:01:44Z",
      "side": 1,
      "message": "My understanding of this block is we do not insert new changes to ReviewDb; they are automatically in NoteDb by default. Which then confuses ChangeNotes.loadChangeFromDb() trying to determine the PrimaryStorage for the change.",
      "range": {
        "startLine": 892,
        "startChar": 0,
        "endLine": 899,
        "endChar": 38
      },
      "revId": "7f6048241103d7354866832832591fe0409018ef",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99914f64_8b148d9c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/BatchUpdate.java",
        "patchSetId": 1
      },
      "lineNbr": 899,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-08-10T01:21:45Z",
      "side": 1,
      "message": "Yeah, I forgot to mention that this is broken in the current implementation. We need to insert the change with PrimaryStorage \u003d NOTE_DB (or whatever the default is) so that it can be read the next time around. We don\u0027t need to think too hard about the other fields obviously, but we do have a Change here so we\u0027ll just end up inserting it as-is.\n\nUnclear why this didn\u0027t cause any of the tests to fail.",
      "parentUuid": "99914f64_4bfb8568",
      "range": {
        "startLine": 892,
        "startChar": 0,
        "endLine": 899,
        "endChar": 38
      },
      "revId": "7f6048241103d7354866832832591fe0409018ef",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9945351_8c2bc7e7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2016-08-10T01:01:44Z",
      "side": 1,
      "message": "If new changes aren\u0027t inserted because they are primary in NoteDb this will fail when trying to read them back.",
      "range": {
        "startLine": 156,
        "startChar": 0,
        "endLine": 158,
        "endChar": 55
      },
      "revId": "7f6048241103d7354866832832591fe0409018ef",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99914f64_abe789db",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/testutil/NoteDbMode.java",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2016-08-10T01:01:44Z",
      "side": 1,
      "message": "enabled?",
      "range": {
        "startLine": 39,
        "startChar": 47,
        "endLine": 39,
        "endChar": 55
      },
      "revId": "7f6048241103d7354866832832591fe0409018ef",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9945351_4cf1df97",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/testutil/NoteDbMode.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2016-08-10T01:01:44Z",
      "side": 1,
      "message": "NoteDb",
      "range": {
        "startLine": 41,
        "startChar": 5,
        "endLine": 41,
        "endChar": 13
      },
      "revId": "7f6048241103d7354866832832591fe0409018ef",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99914f64_cbe4d5d9",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/testutil/NoteDbMode.java",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2016-08-10T01:01:44Z",
      "side": 1,
      "message": "Maybe also mention in the comment that ReviewDb is disabled and not written to?",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 28
      },
      "revId": "7f6048241103d7354866832832591fe0409018ef",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}