{
  "comments": [
    {
      "key": {
        "uuid": "2a3188d1_67ae3285",
        "filename": "Documentation/config-hooks.txt",
        "patchSetId": 5
      },
      "lineNbr": 44,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-05-16T21:14:52Z",
      "side": 1,
      "message": "Document the possible values for \u003cchange kind\u003e. A link to the appropriate section of json.html would probably be ok too.",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a3188d1_475f6ec6",
        "filename": "Documentation/config-hooks.txt",
        "patchSetId": 5
      },
      "lineNbr": 44,
      "author": {
        "id": 1012612
      },
      "writtenOn": "2014-05-17T20:35:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a3188d1_67ae3285",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a3188d1_a78caa25",
        "filename": "Documentation/json.txt",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-05-16T21:14:52Z",
      "side": 1,
      "message": "I\u0027m not saying you must reword this, but strictly speaking the commit message doesn\u0027t even have to be updated.\n\nGerrit has a commit validator that runs during receive-pack that will reject a change if the commit message, tree, and parents are the same, only the author/committer are different. But it\u0027s perfectly valid to pass ChangeKindCache two SHAs of commits that vary only in author/committer and not commit message, and it\u0027ll return NO_CODE_CHANGE.",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a3188d1_675c72d1",
        "filename": "Documentation/json.txt",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1012612
      },
      "writtenOn": "2014-05-17T20:35:58Z",
      "side": 1,
      "message": "Changed to \"No code changed; same tree and same parents.\"",
      "parentUuid": "2a3188d1_a78caa25",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a26849c_e6c85e59",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 287,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-05-16T21:14:52Z",
      "side": 1,
      "message": "Can be private.",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fe7c494_4231720e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 287,
      "author": {
        "id": 1012612
      },
      "writtenOn": "2014-05-17T20:35:58Z",
      "side": 1,
      "message": "All right, missed that one.  Here I thought it\u0027d not be visible to the NoCache implementation.",
      "parentUuid": "0a26849c_e6c85e59",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a26849c_26cb5653",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 296,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-05-16T21:14:52Z",
      "side": 1,
      "message": "Can you add a TODO in here (assigning to me is fine) to add a NEW_CHANGE kind?",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca1f0c44_e4c85a59",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 296,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-05-16T21:17:22Z",
      "side": 1,
      "message": "+1 for adding a NEW_CHANGE kind",
      "parentUuid": "0a26849c_26cb5653",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a3188d1_a7aaea5b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 296,
      "author": {
        "id": 1012612
      },
      "writtenOn": "2014-05-17T20:35:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca1f0c44_e4c85a59",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea221089_05ce5262",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 299,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-05-16T21:02:01Z",
      "side": 1,
      "message": "repo must be closed in a finally block",
      "range": {
        "startLine": 299,
        "startChar": 19,
        "endLine": 299,
        "endChar": 23
      },
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a3188d1_87a5e690",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 299,
      "author": {
        "id": 1012612
      },
      "writtenOn": "2014-05-17T20:35:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea221089_05ce5262",
      "range": {
        "startLine": 299,
        "startChar": 19,
        "endLine": 299,
        "endChar": 23
      },
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a26849c_a6a746ad",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 303,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-05-16T21:20:30Z",
      "side": 1,
      "message": "I think you want priorPs \u003d null. Actually, better yet, make this an ObjectId and default to zeroId.\n\nThis means when you write the check in Loader, you\u0027ll be returning REWORK (eventually NEW_CHANGE) when comparing (zeroId, id). That makes more sense than returning REWORK for (id, id), which really doesn\u0027t feel like a rework.",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a3188d1_e7b4e2c3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 303,
      "author": {
        "id": 1012612
      },
      "writtenOn": "2014-05-17T20:35:58Z",
      "side": 1,
      "message": "I looked at using zeroId() here just now, and with the way this is currently written, it makes the code more illegible.  Since ObjectIds obviously aren\u0027t chronological, we need some way to discover what the previous patch is, in addition to using the ObjectIds to determine change kind.  It\u0027d basically result in us having two iterators that we\u0027d have to keep in step.\n\nIf I\u0027m missing another obvious way to accomplish this, please tell me (or feel free to submit it).  Advice is certainly appreciated.",
      "parentUuid": "0a26849c_a6a746ad",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df4ef081_4553ca25",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 303,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-05-22T18:54:52Z",
      "side": 1,
      "message": "Ok, I buy your argument that my specific suggestion for this block doesn\u0027t make the code cleaner, but I still think that load(X, X) should not return REWORK.",
      "parentUuid": "2a3188d1_e7b4e2c3",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f5de831_47c86e8b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 303,
      "author": {
        "id": 1012612
      },
      "writtenOn": "2014-05-22T20:05:06Z",
      "side": 1,
      "message": "Agreed.  Should this be implemented as part of the TODO for NEW_CHANGE?  It\u0027d certainly make some of the logic simpler (I wouldn\u0027t need to check to make sure there\u0027s more than one change ID). :)",
      "parentUuid": "df4ef081_4553ca25",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df4ef081_65580633",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 303,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-05-22T21:12:58Z",
      "side": 1,
      "message": "load(X, X) must return NO_CODE_CHANGE, it\u0027s unrelated to NEW_CHANGE. We can push this back if you want but it\u0027s like a three-line change to the top of load().\n\nTo the extent that your code here depends on load(X, X) returning anything other than NO_CODE_CHANGE, your code here is broken. Based on Edwin\u0027s comment below it seemed like you were depending on cache.getChangeKind returning REWORK when priorPs \u003d\u003d patch, which would be wrong given what I just said.",
      "parentUuid": "1f5de831_47c86e8b",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea221089_25cb4e53",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 316,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-05-16T21:02:01Z",
      "side": 1,
      "message": "I\u0027m wondering, can it happen that priorPs and patch are still equal at this place? Will it then return the correct change kind?\n\nE.g. let\u0027s assume, somebody uploads a draft change, then uploads a second patch set and deletes the first draft patch set. Then the change has only one patch set, which is patch set 2. This means the check in line 296 will not catch it. Would it in this situation return REWORK as expected?",
      "range": {
        "startLine": 313,
        "startChar": 8,
        "endLine": 316,
        "endChar": 64
      },
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a26849c_46d85226",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 316,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-05-16T21:14:52Z",
      "side": 1,
      "message": "IMO it should return NEW_CHANGE :)\n\nBut yes, as of right now, this needs to return REWORK. I think hard-coding a check to the top of Loader.load would be sufficient; that will also be the obvious place to change to NEW_CHANGE when that happens.",
      "parentUuid": "ea221089_25cb4e53",
      "range": {
        "startLine": 313,
        "startChar": 8,
        "endLine": 316,
        "endChar": 64
      },
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a3188d1_c7afde6a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 316,
      "author": {
        "id": 1012612
      },
      "writtenOn": "2014-05-17T20:35:58Z",
      "side": 1,
      "message": "It\u0027s possible.  So, to address this, added a check that we have more than one PatchSet in the PatchSetCollection, and refactored some of this so it works out okay.",
      "parentUuid": "0a26849c_46d85226",
      "range": {
        "startLine": 313,
        "startChar": 8,
        "endLine": 316,
        "endChar": 64
      },
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a26849c_06ce5a62",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 320,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-05-16T21:14:52Z",
      "side": 1,
      "message": "Don\u0027t drop the exception, log it as we do above.\n\n(Looking at this again I\u0027m not sure returning REWORK is preferable to raising this exception, but let\u0027s be consistent.)",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a26849c_2679964f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeKindCacheImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 320,
      "author": {
        "id": 1012612
      },
      "writtenOn": "2014-05-17T20:35:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a26849c_06ce5a62",
      "revId": "7fa9f6220d53bf329171f62e24a9f66dabce19ea",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}