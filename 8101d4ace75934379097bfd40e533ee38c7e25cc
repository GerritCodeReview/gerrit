{
  "comments": [
    {
      "key": {
        "uuid": "916fabd1_87c61752",
        "filename": "gerrit-acceptance-framework/src/test/java/com/google/gerrit/acceptance/AccountCreator.java",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-08-01T10:10:28Z",
      "side": 1,
      "message": "Use getExistingGroup",
      "range": {
        "startLine": 139,
        "startChar": 10,
        "endLine": 142,
        "endChar": 11
      },
      "revId": "8101d4ace75934379097bfd40e533ee38c7e25cc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21cdeaca_63009f15",
        "filename": "gerrit-acceptance-framework/src/test/java/com/google/gerrit/acceptance/AccountCreator.java",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-08-01T13:01:01Z",
      "side": 1,
      "message": "GroupsUpdate#getExistingGroups requires the UUID as input, not the name.\n\nI intend to use the group cache here at some point in time (which itself will use the index). Nevertheless, we will need the check here as both of them don\u0027t throw an exception for non-existent groups.\n\nBy the way, we could alternatively rewrite this class to use the \u0027Create Account\u0027 REST endpoint. Thus, we could get rid of the duplicate logic here. I even tried doing that but got stuck when I couldn\u0027t properly open a request context which provides an identified user.",
      "parentUuid": "916fabd1_87c61752",
      "range": {
        "startLine": 139,
        "startChar": 10,
        "endLine": 142,
        "endChar": 11
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "8101d4ace75934379097bfd40e533ee38c7e25cc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07bcc43b_9ba41a4d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-08-01T10:10:28Z",
      "side": 1,
      "message": "UnprocessableEntityException\n\nResourceNotFoundException is only used if a resource that is specified as part of the URL is not found. The groups are specified in the request body and if an resource from the request body is not found UnprocessableEntityException should be used.",
      "range": {
        "startLine": 194,
        "startChar": 18,
        "endLine": 194,
        "endChar": 43
      },
      "revId": "8101d4ace75934379097bfd40e533ee38c7e25cc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a25fb153_bffc53e3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-08-01T13:01:01Z",
      "side": 1,
      "message": "Done. Thanks for the clarification. I was wondering when one or the other is used.",
      "parentUuid": "07bcc43b_9ba41a4d",
      "range": {
        "startLine": 194,
        "startChar": 18,
        "endLine": 194,
        "endChar": 43
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "8101d4ace75934379097bfd40e533ee38c7e25cc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d68cb4e_7b69bf18",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/group/CreateGroup.java",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-08-01T13:01:01Z",
      "side": 1,
      "message": "Given that ResourceNotFoundException should only be used for resources specified in the URL, should we use it here? It seems a bit difficult to choose an appropriate exception type here as the group was just created and this exception should actually never be thrown. Should we maybe merge the two steps (creation of group + addition of members) and provide the method GroupsUpdate#addGroup(db, group, members)?",
      "range": {
        "startLine": 220,
        "startChar": 16,
        "endLine": 220,
        "endChar": 41
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "8101d4ace75934379097bfd40e533ee38c7e25cc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}