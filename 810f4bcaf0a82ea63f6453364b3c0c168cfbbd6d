{
  "comments": [
    {
      "key": {
        "uuid": "AAABEX///ZA\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/Branch.java",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-02T04:08:44Z",
      "side": 1,
      "message": "I suspect that stringkey already has a good enough equals.",
      "revId": "810f4bcaf0a82ea63f6453364b3c0c168cfbbd6d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX///Y0\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/Change.java",
        "patchSetId": 2
      },
      "lineNbr": 523,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-02T04:08:44Z",
      "side": 1,
      "message": "Comparing other to other?\n\nI don\u0027t think you want to assume that changes are equal just because the keys are equal.  An equals for a change should likely  compare all the fields.  Those who want to compare just the keys can do so by comparing the keys directly.",
      "revId": "810f4bcaf0a82ea63f6453364b3c0c168cfbbd6d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX///XU\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeTestMergeQueue.java",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-02T04:08:44Z",
      "side": 1,
      "message": "Should remove() be wrapped with synchronized?",
      "revId": "810f4bcaf0a82ea63f6453364b3c0c168cfbbd6d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX///eE\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeTestMergeQueue.java",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-02T04:08:44Z",
      "side": 1,
      "message": "Why is this needed now that you have a HashMap, won\u0027t that prevent duplicate schedulings?",
      "revId": "810f4bcaf0a82ea63f6453364b3c0c168cfbbd6d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//+8g\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 2
      },
      "lineNbr": 979,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-02T04:08:44Z",
      "side": 1,
      "message": "Why are the mergeable ones not retested?",
      "revId": "810f4bcaf0a82ea63f6453364b3c0c168cfbbd6d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX///eY\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ReloadChangeTestMergeQueue.java",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-07-02T04:08:44Z",
      "side": 1,
      "message": "Logger needs to go first (before interfaces).",
      "revId": "810f4bcaf0a82ea63f6453364b3c0c168cfbbd6d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}