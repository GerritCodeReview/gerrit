{
  "comments": [
    {
      "key": {
        "uuid": "9ea0f05b_7c72f9a3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-10-11T23:21:25Z",
      "side": 1,
      "message": "Why aren\u0027t these in the fetch map of the ChangeInfo as created by ChangeJson?",
      "range": {
        "startLine": 18,
        "startChar": 28,
        "endLine": 19,
        "endChar": 21
      },
      "revId": "816591133d86a1d74183839dd3dc90db0d901e23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe6accd7_57e02c44",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-10-12T11:07:14Z",
      "side": 1,
      "message": "I was considering to put them into the fetch map of ChangeInfo, but in the end I found it more logically to return them as part of the project configuration. Why? One goal is to enable a project specific configuration of the download commands. This configuration will likely be done in the project.config file and then it feels naturally to return them as part of the project configuration. Also I don\u0027t think it\u0027s necessary to send this information with each change. We already have caching of the project configuration on client side. Fetching the download command templates for a project once should be enough. I also wasn\u0027t sure if it\u0027s good to make the result of a change query dependent on the calling user (since we would include the username into the download command). But the most important point for me was that if we have project specific download commands it would mean that for each change the commands in the fetch info could be different and it would be hard to program against it. I somehow like that with ChangeInfo you get a stable well defined info in the fetch map and the project specific command configuration is returned with the project configuration. Does this make sense? Let me know if I should change this.",
      "parentUuid": "9ea0f05b_7c72f9a3",
      "range": {
        "startLine": 18,
        "startChar": 28,
        "endLine": 19,
        "endChar": 21
      },
      "revId": "816591133d86a1d74183839dd3dc90db0d901e23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be93f416_7dc43784",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-10-13T22:45:10Z",
      "side": 1,
      "message": "We started to put the URLs into the fetch map of ChangeInfo because users complained that the UI used an algorithm to generate the URL and the ref name. This made it overly difficult for scripts and automation systems to have the same behavior as the UI and get access to the same URL and ref strings. I tried to fix this in the REST API by having the UI be dumber, and the server generate the data in an easy to use format.\n\nChangeInfo is already user-specific. It can include a starred field to indicate if the calling user has starred the change. It has an action map that is user specific. Adding the username to the fetch URLs when the user is signed in is fine. ChangeInfo is cacheable, but only by the end user\u0027s browser/user-agent. It cannot be cached at proxies or reused between end-users.\n\nChangeInfo is also obviously project-specific. Embedding commands isn\u0027t much different from the project rules being run at the server side to format ChangeInfo. The ChangeInfo caching already includes information about refs/meta/config so project changes do invalidate cached results.\n\nIIRC, ProjectInfo as it stands is not editable over the REST API. Don\u0027t we have different APIs for reading and writing the configuration? ProjectInfo is some larger aggregation of web UI specific properties for projects like commentlink regexes and header/footer HTML and CSS.\n\n\nI think ChangeInfo\u0027s fetch map should include the username in the URLs. I think this change should include the extension download schemes in the fetch map. I think you should consider including the commands in the ChangeInfo, pre-expanded so the client doesn\u0027t have to think about ${username}, ${hostname} or ${ref} replacements.",
      "parentUuid": "fe6accd7_57e02c44",
      "range": {
        "startLine": 18,
        "startChar": 28,
        "endLine": 19,
        "endChar": 21
      },
      "revId": "816591133d86a1d74183839dd3dc90db0d901e23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e66c012_185505fd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-10-14T14:35:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be93f416_7dc43784",
      "range": {
        "startLine": 18,
        "startChar": 28,
        "endLine": 19,
        "endChar": 21
      },
      "revId": "816591133d86a1d74183839dd3dc90db0d901e23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe6accd7_576d8cc2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-10-14T18:30:23Z",
      "side": 1,
      "message": "\"I think ChangeInfo\u0027s fetch map should include the username in the URLs. I think this change should include the extension download schemes in the fetch map.\"\n\n[Optionally]\n\nWith introduction of change screen 2 we changed the approach to retrieve the whole data from changes/4711/detail request to retrieve what is actually needed by the core change screen 2 and postponed the fetching of optional data, which is needed only in pop downs.\n\nConsequently we should protect the whole (extended) fetch map with new variable FETCH_MAP. And only put it in the response if this information was required by the UI (i. e. in download pop down) or REST client, like we already do with other ListChangesOption options:\n\n  /** If accounts are included, include detailed account info. */\n  DETAILED_ACCOUNTS(7),\n\n  /** Include draft comments for the caller. */\n  DRAFT_COMMENTS(12);",
      "parentUuid": "be93f416_7dc43784",
      "revId": "816591133d86a1d74183839dd3dc90db0d901e23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ebaf89c_8afd2be6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-10-15T07:22:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe6accd7_576d8cc2",
      "revId": "816591133d86a1d74183839dd3dc90db0d901e23",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}