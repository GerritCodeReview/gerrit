{
  "comments": [
    {
      "key": {
        "uuid": "929733a2_6888b819",
        "filename": "java/com/google/gerrit/server/submit/SubmoduleOp.java",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-05-29T11:10:19Z",
      "side": 1,
      "message": "This field is duplicated in SubscriptionGraph. Could we just have it in one place?",
      "range": {
        "startLine": 124,
        "startChar": 44,
        "endLine": 124,
        "endChar": 59
      },
      "revId": "8237821188396abb2aa932b5cb80ae15afef8813",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d34308c5_b27a66cd",
        "filename": "java/com/google/gerrit/server/submit/SubscriptionGraph.java",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-05-29T11:10:19Z",
      "side": 1,
      "message": "This class currently consists of two distinct parts:\n1) Computation of subscriptions.\n2) Store of subscriptions.\nExcept for the \"result\" fields like branchesByProject, the methods and fields of 1) aren\u0027t used for 2). In general, I think it would be better to split 1) and 2) into two different classes. The class for 2) would just be a dumb data store. The class of 1) would be the factory/creation code for class 2).\n\nThe introduction of the SubscriptionGraph.Factory in I689998da7 goes into this direction. I just don\u0027t think that the use of an AssistedInject Guice factory is the right means. Guice\u0027s automatically generated factories are for simple object creations. calculateSubscriptionMaps() isn\u0027t simple, though.\nAs an easy way out of this, I\u0027d suggest we don\u0027t use Guice\u0027s AssistedInject functionality but manually implement SubscriptionGraph.Factory. Such a factory could still be set up with Guice to get instances like MergeOpRepoManager injected. We would implement the create(..) method, though, and calculate the subscriptions within it (and not within a constructor).\n\nThis change could prepare some of the code so that I8c01f550d simply needs to switch to an interface. If you prefer to do all adjustments within I8c01f550d or I689998da7, I would be fine too and would treat this change as an intermediary version. Just please be clear which approach you\u0027ll take.",
      "range": {
        "startLine": 37,
        "startChar": 6,
        "endLine": 37,
        "endChar": 23
      },
      "revId": "8237821188396abb2aa932b5cb80ae15afef8813",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3230de6_b2cb7fcd",
        "filename": "java/com/google/gerrit/server/submit/SubscriptionGraph.java",
        "patchSetId": 5
      },
      "lineNbr": 330,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-05-29T11:10:19Z",
      "side": 1,
      "message": "It\u0027s discouraged to expose implementation details to tests. In this specific case, it should be easy enough to rewrite the tests to just operate with the other public, non-test methods.",
      "range": {
        "startLine": 322,
        "startChar": 0,
        "endLine": 330,
        "endChar": 3
      },
      "revId": "8237821188396abb2aa932b5cb80ae15afef8813",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1d1db19_17a31a69",
        "filename": "javatests/com/google/gerrit/server/submit/SubscriptionGraphTest.java",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-05-29T11:10:19Z",
      "side": 1,
      "message": "Thanks for adding the tests. It\u0027s nice that we\u0027ll have better test coverage for this part.",
      "range": {
        "startLine": 45,
        "startChar": 13,
        "endLine": 45,
        "endChar": 34
      },
      "revId": "8237821188396abb2aa932b5cb80ae15afef8813",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f54f4e24_9c11e71a",
        "filename": "javatests/com/google/gerrit/server/submit/SubscriptionGraphTest.java",
        "patchSetId": 5
      },
      "lineNbr": 109,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-05-29T11:10:19Z",
      "side": 1,
      "message": "Is it important that the error message stays exactly like this?",
      "range": {
        "startLine": 108,
        "startChar": 4,
        "endLine": 109,
        "endChar": 92
      },
      "revId": "8237821188396abb2aa932b5cb80ae15afef8813",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61fd51b5_d4ba24a0",
        "filename": "javatests/com/google/gerrit/server/submit/SubscriptionGraphTest.java",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-05-29T11:10:19Z",
      "side": 1,
      "message": "Is it intended that a superproject branch subscribes to multiple submodules? I would have expected that this generates an error. If that\u0027s really a bug, I don\u0027t expect you to fix it. However, we shouldn\u0027t \"document\" this wrong behavior in a test (without any comments), which makes it seem as if the behavior is intended.",
      "range": {
        "startLine": 142,
        "startChar": 4,
        "endLine": 144,
        "endChar": 78
      },
      "revId": "8237821188396abb2aa932b5cb80ae15afef8813",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62854e17_a87568f9",
        "filename": "javatests/com/google/gerrit/server/submit/SubscriptionGraphTest.java",
        "patchSetId": 5
      },
      "lineNbr": 146,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-05-29T11:10:19Z",
      "side": 1,
      "message": "Are these lines for testing the behavior in case of an empty subscription? If so, could this be a separate test? If this code is necessary to properly set up the mocks, we should rather have a default mock behavior.",
      "range": {
        "startLine": 145,
        "startChar": 4,
        "endLine": 146,
        "endChar": 54
      },
      "revId": "8237821188396abb2aa932b5cb80ae15afef8813",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52574f02_38e65638",
        "filename": "javatests/com/google/gerrit/server/submit/SubscriptionGraphTest.java",
        "patchSetId": 5
      },
      "lineNbr": 164,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-05-29T11:10:19Z",
      "side": 1,
      "message": "For readability of tests, it\u0027s better to return the created repository and store it in a variable.",
      "range": {
        "startLine": 164,
        "startChar": 4,
        "endLine": 164,
        "endChar": 57
      },
      "revId": "8237821188396abb2aa932b5cb80ae15afef8813",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "814d06e7_0f587962",
        "filename": "javatests/com/google/gerrit/server/submit/SubscriptionGraphTest.java",
        "patchSetId": 5
      },
      "lineNbr": 167,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-05-29T11:10:19Z",
      "side": 1,
      "message": "This method is doing more than simply creating the branch. I was a bit surprised when I looked at the implementation. Can you find a better name or split the method? Or would the non-branch-creation code maybe better fit into the setSubscription() method?",
      "range": {
        "startLine": 167,
        "startChar": 15,
        "endLine": 167,
        "endChar": 27
      },
      "revId": "8237821188396abb2aa932b5cb80ae15afef8813",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60b940af_4229e02d",
        "filename": "javatests/com/google/gerrit/server/submit/SubscriptionGraphTest.java",
        "patchSetId": 5
      },
      "lineNbr": 173,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-05-29T11:10:19Z",
      "side": 1,
      "message": "This can directly be \"s\". As a consequence, we can remove the allowAllConfig map.",
      "range": {
        "startLine": 173,
        "startChar": 36,
        "endLine": 173,
        "endChar": 62
      },
      "revId": "8237821188396abb2aa932b5cb80ae15afef8813",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc2b84f3_f1f7e049",
        "filename": "javatests/com/google/gerrit/server/submit/SubscriptionGraphTest.java",
        "patchSetId": 5
      },
      "lineNbr": 176,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-05-29T11:10:19Z",
      "side": 1,
      "message": "It\u0027s confusing to talk about \"source\" and \"target\" here. I would find it helpful to stay with the terms \"superproject\" and \"submodule\".",
      "range": {
        "startLine": 176,
        "startChar": 31,
        "endLine": 176,
        "endChar": 90
      },
      "revId": "8237821188396abb2aa932b5cb80ae15afef8813",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "475dfc59_954f41c3",
        "filename": "javatests/com/google/gerrit/server/submit/SubscriptionGraphTest.java",
        "patchSetId": 5
      },
      "lineNbr": 185,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-05-29T11:10:19Z",
      "side": 1,
      "message": "This can directly be \"mockGitModules\". Then, we can remove mockModulesMap.",
      "range": {
        "startLine": 185,
        "startChar": 20,
        "endLine": 185,
        "endChar": 49
      },
      "revId": "8237821188396abb2aa932b5cb80ae15afef8813",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d282ecc_a1b632e9",
        "filename": "javatests/com/google/gerrit/server/submit/SubscriptionGraphTest.java",
        "patchSetId": 5
      },
      "lineNbr": 198,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-05-29T11:10:19Z",
      "side": 1,
      "message": "I would rather inline this method as it is currently hiding details (-\u003e the branch) from the tests.",
      "revId": "8237821188396abb2aa932b5cb80ae15afef8813",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}