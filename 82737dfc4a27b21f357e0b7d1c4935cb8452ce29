{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6089a1c3_531be601",
        "filename": "java/com/google/gerrit/server/update/BatchUpdate.java",
        "patchSetId": 4
      },
      "lineNbr": 671,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2023-04-28T09:56:23Z",
      "side": 1,
      "message": "Does Gerrit ever set WEB_BROWSER to the user accessPath? I can\u0027t find where it is set.",
      "range": {
        "startLine": 671,
        "startChar": 11,
        "endLine": 671,
        "endChar": 62
      },
      "revId": "82737dfc4a27b21f357e0b7d1c4935cb8452ce29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10514b7b_754fe525",
        "filename": "java/com/google/gerrit/server/update/BatchUpdate.java",
        "patchSetId": 4
      },
      "lineNbr": 671,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2023-04-28T14:39:30Z",
      "side": 1,
      "message": "Good point!\n\nLooks like we always set REST_API in RestApi servlet. I modified one of the internal filters to set it correctly.",
      "parentUuid": "6089a1c3_531be601",
      "range": {
        "startLine": 671,
        "startChar": 11,
        "endLine": 671,
        "endChar": 62
      },
      "revId": "82737dfc4a27b21f357e0b7d1c4935cb8452ce29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e29a96b0_53b7899f",
        "filename": "java/com/google/gerrit/server/update/BatchUpdate.java",
        "patchSetId": 4
      },
      "lineNbr": 671,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2023-04-28T14:39:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10514b7b_754fe525",
      "range": {
        "startLine": 671,
        "startChar": 11,
        "endLine": 671,
        "endChar": 62
      },
      "revId": "82737dfc4a27b21f357e0b7d1c4935cb8452ce29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2441403e_eb85401a",
        "filename": "java/com/google/gerrit/server/update/BatchUpdate.java",
        "patchSetId": 4
      },
      "lineNbr": 671,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2023-05-02T11:53:30Z",
      "side": 1,
      "message": "Is it possible to fix upstream version too?\n\nuser.getAccessPath().equals(AccessPath.WEB_BROWSER) is always false in upstream - this can be broken without noticing, because we don\u0027t have appropriate tests neither upstream, nor internally for this code.\n\nWith this change, upstream will never use async index. It is better to share the same behaviour between upstream and internal implementation as much as possible.",
      "parentUuid": "e29a96b0_53b7899f",
      "range": {
        "startLine": 671,
        "startChar": 11,
        "endLine": 671,
        "endChar": 62
      },
      "revId": "82737dfc4a27b21f357e0b7d1c4935cb8452ce29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "155c2f2e_ec7e1e7f",
        "filename": "java/com/google/gerrit/server/update/BatchUpdate.java",
        "patchSetId": 4
      },
      "lineNbr": 671,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2023-05-02T11:59:06Z",
      "side": 1,
      "message": "If the fix is not possible - please annotate it with @UseAtGoogle and with comments that in upstream it always return false.",
      "parentUuid": "2441403e_eb85401a",
      "range": {
        "startLine": 671,
        "startChar": 11,
        "endLine": 671,
        "endChar": 62
      },
      "revId": "82737dfc4a27b21f357e0b7d1c4935cb8452ce29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49134889_0f69e0d8",
        "filename": "java/com/google/gerrit/server/update/BatchUpdate.java",
        "patchSetId": 4
      },
      "lineNbr": 671,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2023-05-02T13:23:00Z",
      "side": 1,
      "message": "Thank you for bringing this up!\n\nI don\u0027t think there is a reliable way upstream to detect this (e.g. internally we rely on the values of some special cookies).\nI added an annotation as per your suggestion.",
      "parentUuid": "155c2f2e_ec7e1e7f",
      "range": {
        "startLine": 671,
        "startChar": 11,
        "endLine": 671,
        "endChar": 62
      },
      "revId": "82737dfc4a27b21f357e0b7d1c4935cb8452ce29",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}