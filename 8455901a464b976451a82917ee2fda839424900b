{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7bf86d4b_2d5733b4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 21,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2022-06-07T07:54:10Z",
      "side": 1,
      "message": "Isn\u0027t this small performance regression?",
      "range": {
        "startLine": 20,
        "startChar": 59,
        "endLine": 21,
        "endChar": 41
      },
      "revId": "8455901a464b976451a82917ee2fda839424900b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4bf80af_69210fff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 21,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-06-07T07:56:38Z",
      "side": 1,
      "message": "Yes, it is. But it fixes a much worse functionality regression for a scenario that\u0027s unlikely enough to warrant optimization but likely enough to warrant working correctly.",
      "parentUuid": "7bf86d4b_2d5733b4",
      "range": {
        "startLine": 20,
        "startChar": 59,
        "endLine": 21,
        "endChar": 41
      },
      "revId": "8455901a464b976451a82917ee2fda839424900b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eec35e32_de508f0a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 21,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2022-06-07T08:06:45Z",
      "side": 1,
      "message": "Yes, I agree that it\u0027s good tradeoff",
      "parentUuid": "f4bf80af_69210fff",
      "range": {
        "startLine": 20,
        "startChar": 59,
        "endLine": 21,
        "endChar": 41
      },
      "revId": "8455901a464b976451a82917ee2fda839424900b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "763b6ecf_ed307b89",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 26,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2022-06-07T07:54:10Z",
      "side": 1,
      "message": "That\u0027s cool feature. I didn\u0027t know this can be parsed",
      "range": {
        "startLine": 26,
        "startChar": 15,
        "endLine": 26,
        "endChar": 39
      },
      "revId": "8455901a464b976451a82917ee2fda839424900b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44bb6c8a_4c938ebb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2022-06-07T07:55:13Z",
      "side": 1,
      "message": "Thanks. Makes sense to make it more robust.",
      "revId": "8455901a464b976451a82917ee2fda839424900b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ebe5e3e_7dec6c54",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.ts",
        "patchSetId": 11
      },
      "lineNbr": 306,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-06-07T09:01:01Z",
      "side": 1,
      "message": "I would try to avoid using `!` here. Maybe you can either use `?` or keep an initial ` \u003d new GrDiffCursor();`.",
      "range": {
        "startLine": 306,
        "startChar": 12,
        "endLine": 306,
        "endChar": 13
      },
      "revId": "8455901a464b976451a82917ee2fda839424900b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45b1da88_bd033dd9",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.ts",
        "patchSetId": 11
      },
      "lineNbr": 306,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-06-07T09:32:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ebe5e3e_7dec6c54",
      "range": {
        "startLine": 306,
        "startChar": 12,
        "endLine": 306,
        "endChar": 13
      },
      "revId": "8455901a464b976451a82917ee2fda839424900b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba7944c4_d3bfe2cd",
        "filename": "polygerrit-ui/app/embed/diff/gr-diff/gr-diff.ts",
        "patchSetId": 11
      },
      "lineNbr": 303,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-06-07T09:01:01Z",
      "side": 1,
      "message": "Why re-render? If we re-render when re-connecting, then we are losing the performance gain of caching the gr-diff-view and could as well just re-create the entire component.",
      "revId": "8455901a464b976451a82917ee2fda839424900b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0bb1ab3c_91bea1b7",
        "filename": "polygerrit-ui/app/embed/diff/gr-diff/gr-diff.ts",
        "patchSetId": 11
      },
      "lineNbr": 303,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-06-07T09:32:20Z",
      "side": 1,
      "message": "I would rather attempt re-adding performance once we fixed the bug.\n\nDiscussed offline and added a comment for future reference.",
      "parentUuid": "ba7944c4_d3bfe2cd",
      "revId": "8455901a464b976451a82917ee2fda839424900b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}