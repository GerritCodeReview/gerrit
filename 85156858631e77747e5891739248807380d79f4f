{
  "comments": [
    {
      "key": {
        "uuid": "11c521ce_44f30eb2",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/event/CommentAddedEventIT.java",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2016-03-30T20:21:16Z",
      "side": 1,
      "message": "Can this change be summarized in the commit message, explaining why replacing the fixed 0-indexing with such a search? Could be a one-liner javadoc comment as well.",
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee7508ba_13b5ecf2",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/event/CommentAddedEventIT.java",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2016-04-01T22:47:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11c521ce_44f30eb2",
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11c521ce_24fc1284",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/event/CommentAddedEventIT.java",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2016-03-30T20:21:16Z",
      "side": 1,
      "message": "Could move this to getApprovalAttribute, so such \"figuring-out\" of the label name gets delegated to the latter method -which is the one needing it.",
      "range": {
        "startLine": 128,
        "startChar": 50,
        "endLine": 128,
        "endChar": 65
      },
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee7508ba_33ba68e2",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/event/CommentAddedEventIT.java",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2016-04-01T22:47:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11c521ce_24fc1284",
      "range": {
        "startLine": 128,
        "startChar": 50,
        "endLine": 128,
        "endChar": 65
      },
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11c521ce_64f60aa4",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/event/CommentAddedEventIT.java",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2016-03-30T20:21:16Z",
      "side": 1,
      "message": "vote, rather? (singular)",
      "range": {
        "startLine": 171,
        "startChar": 29,
        "endLine": 171,
        "endChar": 34
      },
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee7508ba_d3ce947e",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/event/CommentAddedEventIT.java",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2016-04-01T22:47:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11c521ce_64f60aa4",
      "range": {
        "startLine": 171,
        "startChar": 29,
        "endLine": 171,
        "endChar": 34
      },
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11c521ce_04f91694",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/event/CommentAddedEventIT.java",
        "patchSetId": 1
      },
      "lineNbr": 272,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2016-03-30T20:21:16Z",
      "side": 1,
      "message": "If, by code-under-test mistake, we do not get this approval entry but twice the above one (either one), then we wrongfully pass this test. Already so before this change, indeed. Very unlikely I guess.",
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee7508ba_b3c5185a",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/event/CommentAddedEventIT.java",
        "patchSetId": 1
      },
      "lineNbr": 272,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2016-04-01T22:47:48Z",
      "side": 1,
      "message": "Not sure what you mean.  This will get checked because the \"Code-Review\" label is defined by default in Gerrit therefore this will always exist in Gerrit and this code will get executed.",
      "parentUuid": "11c521ce_04f91694",
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee7508ba_13196cc1",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/event/CommentAddedEventIT.java",
        "patchSetId": 1
      },
      "lineNbr": 272,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2016-04-04T16:10:26Z",
      "side": 1,
      "message": "The above lines 271 and 272 will always get executed, ok, but what about lines 265-266 and 268-269? If, by unlikely yet possible mistake, \u0027approvals\u0027 has 3 items yes but 2 of them (not Code-Review) hold the very same value sets? Meaning, if both of them 2 approvals have -1 and null, or, 1 and 0 /as the two asserted values in above if and following else-if blocks.\n\nThis could happen if approvals has twice \u0027label\u0027 or \u0027pLabel\u0027. -Test would \"fail to fail\" if that\u0027s the case and if all values for such repeating labels do pass the corresponding assert lines.",
      "parentUuid": "ee7508ba_b3c5185a",
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e89e03a_cd9b092d",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/event/CommentAddedEventIT.java",
        "patchSetId": 1
      },
      "lineNbr": 272,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2016-04-06T14:19:20Z",
      "side": 1,
      "message": "Thoughts about my latest reply above? (Explaining what I originally meant further.)",
      "parentUuid": "ee7508ba_13196cc1",
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e89e03a_6d6695f6",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/event/CommentAddedEventIT.java",
        "patchSetId": 1
      },
      "lineNbr": 272,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2016-04-06T16:55:34Z",
      "side": 1,
      "message": "Sorry, i could you please clarify what you mean by \u0027twice label or plabel\u0027.    Does that mean duplicate labels?  These are very controlled tests with specific labels (label, plabel) and code-review as it\u0027s the default in gerrit.  I don\u0027t see how there could be any other conditions in this test so I don\u0027t see how the hypothetical situation you outline in your comment could occur.",
      "parentUuid": "2e89e03a_cd9b092d",
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e89e03a_0d4c3171",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/event/CommentAddedEventIT.java",
        "patchSetId": 1
      },
      "lineNbr": 272,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2016-04-06T19:50:28Z",
      "side": 1,
      "message": "I\u0027m ok with assuming that such duplicate label cases are too unlikely to justify investing in recoding the above. Now, the other comment we had left to discuss about is the fact that this hereby changed CommentAddedEventIT still passes for me *without* its companion fix (in PostReview). So I wonder if this changed code (PostReview\u0027) is properly covered by this changed test. The latter should fail if the behavior it is testing is missing; it does not (fail) for me.",
      "parentUuid": "2e89e03a_6d6695f6",
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab8782d0_01a26abf",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/event/CommentAddedEventIT.java",
        "patchSetId": 1
      },
      "lineNbr": 272,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2016-04-08T23:13:29Z",
      "side": 1,
      "message": "Ok.  I think i understand what you mean now.    We need to verify all approvals when a vote happens.  I\u0027ve updated the test to do that now.  Sorry it took so long and thanks for keeping me honest :)",
      "parentUuid": "2e89e03a_0d4c3171",
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11c521ce_a407626d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReview.java",
        "patchSetId": 1
      },
      "lineNbr": 533,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2016-03-30T20:21:16Z",
      "side": 1,
      "message": "Is it safe to assume 0, rather than using lt.getDefaultValue?",
      "range": {
        "startLine": 533,
        "startChar": 47,
        "endLine": 533,
        "endChar": 48
      },
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee7508ba_53e044e2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReview.java",
        "patchSetId": 1
      },
      "lineNbr": 533,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2016-04-01T22:47:48Z",
      "side": 1,
      "message": "Yes, because at this point if a label doesn\u0027t have a vote then we can assume it\u0027s 0.  If there was a default value defied for the label it will have a vote at this point and will get overwritten by the code just below, allApprovals.putAll(current).\n\n\nThanks for pointing this out because this in fact is an issue for the previous change[1] which didn\u0027t take into consideration the default value when pushing a new patchset.  It\u0027s ok here, but will probably need to look at that previous change again. \n\n[1] https://gerrit-review.googlesource.com/#/c/71051",
      "parentUuid": "11c521ce_a407626d",
      "range": {
        "startLine": 533,
        "startChar": 47,
        "endLine": 533,
        "endChar": 48
      },
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9103d1be_58dc7d2d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReview.java",
        "patchSetId": 1
      },
      "lineNbr": 550,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2016-03-30T20:21:16Z",
      "side": 1,
      "message": "Same comment/question as above; applies to below line 552.",
      "range": {
        "startLine": 550,
        "startChar": 26,
        "endLine": 550,
        "endChar": 27
      },
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee7508ba_73e540f1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReview.java",
        "patchSetId": 1
      },
      "lineNbr": 550,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2016-04-01T22:47:48Z",
      "side": 1,
      "message": "same answer as above.",
      "parentUuid": "9103d1be_58dc7d2d",
      "range": {
        "startLine": 550,
        "startChar": 26,
        "endLine": 550,
        "endChar": 27
      },
      "revId": "85156858631e77747e5891739248807380d79f4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}