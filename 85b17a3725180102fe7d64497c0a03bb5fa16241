{
  "comments": [
    {
      "key": {
        "uuid": "1a77bfc2_33ca687b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeEdits.java",
        "patchSetId": 3
      },
      "lineNbr": 496,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-11-11T19:52:24Z",
      "side": 1,
      "message": "BinaryResult",
      "range": {
        "startLine": 496,
        "startChar": 11,
        "endLine": 496,
        "endChar": 17
      },
      "revId": "85b17a3725180102fe7d64497c0a03bb5fa16241",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa1e35e_3c4f9184",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeEdits.java",
        "patchSetId": 3
      },
      "lineNbr": 501,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-11-11T19:52:24Z",
      "side": 1,
      "message": "Oooh. That is... confusing.\n\nWith no edit present, we return the current revision\u0027s message, matching /change/{id}/revisions/current/message. But if an edit exists, we return your private edit message.\n\nI don\u0027t like that magical approach. I would prefer to have the REST API return your private edit message, or 404 if you don\u0027t have an edit.\n\nI guess cramming some of the edit endpoints under /changes/{id}/blah is proving to be a confusing context.",
      "revId": "85b17a3725180102fe7d64497c0a03bb5fa16241",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9edf22_5b506321",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeEdits.java",
        "patchSetId": 3
      },
      "lineNbr": 501,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-11T20:35:24Z",
      "side": 1,
      "message": "So the current edit workflow is:\n\n* User lick on edit button in file table to switch it in edit mode.\n* From now on, all files an commit message can be edited. Note that there is no edit exist yet.\n* User activates editing commit message.\n* Edit screen is opened and GET /edit_message is called [1]\n* On line 501 the commit message from base commit is returned\n* User changes the commit message\n* Pushes save button, edit is created\n* User pushes edit commit message button again (edit exists now) and code path line 500 above is active\n\nBecause currently the Edit Screen don\u0027t have ChangeInfo and the base commit message, i choosed to retrieve it with this endpoint. Sure, we could change that by providing new endpoint change:message or call existing /changes/\u003cid\u003e/detail endpoint with message option to only retrieve the commit message.\n\n [1] https://gerrit-review.googlesource.com/#/c/61243/11/gerrit-gwtui/src/main/java/com/google/gerrit/client/editor/EditScreen.java@75",
      "parentUuid": "3aa1e35e_3c4f9184",
      "revId": "85b17a3725180102fe7d64497c0a03bb5fa16241",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3aa1e35e_9cb825ea",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeEdits.java",
        "patchSetId": 3
      },
      "lineNbr": 501,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-11-11T20:39:41Z",
      "side": 1,
      "message": "Browser calls GET /edit_message (or /edit:message), gets a 404 Not Found, then retries /revisions/current/message?\n\nMaybe that isn\u0027t any better. It sounds like a race condition that the user could pick a different message version. But if the edit doesn\u0027t exist yet, the current revision will be picked as the base when the first mutation is stored. So I don\u0027t actually think the race condition is relevant, the race exists at edit creation anyway.",
      "parentUuid": "1a9edf22_5b506321",
      "revId": "85b17a3725180102fe7d64497c0a03bb5fa16241",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9edf22_1b4adb73",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeEdits.java",
        "patchSetId": 3
      },
      "lineNbr": 501,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-11T20:48:35Z",
      "side": 1,
      "message": "We don\u0027t have GET /revisions/\u003cn\u003e/message atm. And i was trying to prevent us from firing another server round-trip here by combining:\n\n  GET /edit:message and\n  GET /revisions/\u003cn\u003e/message\n\nin one endpoint.\n\nMay be we could name it:\n\n  GET /edit-or-revision:message\n\n;-)",
      "parentUuid": "3aa1e35e_9cb825ea",
      "revId": "85b17a3725180102fe7d64497c0a03bb5fa16241",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a77bfc2_532cc48c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeEdits.java",
        "patchSetId": 3
      },
      "lineNbr": 501,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-11-11T20:54:23Z",
      "side": 1,
      "message": "Hah!\n\nWell, we do have /changes/{id}/revisions/current/commit which has the message available in the JSON reply object.\n\nThis is cacheable by the browser if \"current\" was actually the SHA-1. And its already been loaded by CS2. So the extra round-trip to load /commit after getting 404 is a local no-op against the browser cache, if you know the base SHA-1 you should begin the edit from.\n\nBut I guess we could keep this slightly confusing behavior.\n\nWhat happens if I do GET /changes/{id}/edit/foo.c and I don\u0027t yet have an edit open? Today that returns 404 Not Found because the ChangeEdits parse() method throws ResourceNotFoundException when no edit is present.",
      "parentUuid": "1a9edf22_1b4adb73",
      "revId": "85b17a3725180102fe7d64497c0a03bb5fa16241",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a9edf22_db6313ff",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeEdits.java",
        "patchSetId": 3
      },
      "lineNbr": 501,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-11T21:10:13Z",
      "side": 1,
      "message": "| But I guess we could keep this slightly confusing behavior.\n\nI will add a TODO to clean this up.\n\n| What happens if I do GET /changes/{id}/edit/foo.c and I don\u0027t yet have an edit open?\n\nWe don\u0027t call this ednpoint when edit doesn\u0027t exist. We are passing in the information when edit exists or not, so that the client differentiate between:\n\n* GET /changes/{id}/revisions/{n}/files/foo.c/content or\n* GET /changes/{id}/edit/foo.c\n\nThe code path you are referencing to is where PUT to is get called, and this is how insert into collection API is working, RestApiServlet calls create() on line 109 and Create.apply() is called in the end.",
      "parentUuid": "1a77bfc2_532cc48c",
      "revId": "85b17a3725180102fe7d64497c0a03bb5fa16241",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a77bfc2_d3ae94a9",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeEdits.java",
        "patchSetId": 3
      },
      "lineNbr": 502,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-11-11T19:52:24Z",
      "side": 1,
      "message": "return BinaryResult.create(m).base64();",
      "revId": "85b17a3725180102fe7d64497c0a03bb5fa16241",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a77bfc2_13c5ec69",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Module.java",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-11-11T19:52:24Z",
      "side": 1,
      "message": "I disagree with calling these edit_message. I think it should be /message.",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 111,
        "endChar": 70
      },
      "revId": "85b17a3725180102fe7d64497c0a03bb5fa16241",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a77bfc2_f3ab9096",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Module.java",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-11-11T20:03:44Z",
      "side": 1,
      "message": "Ugh, I forgot how RestApiServlet makes this a challenge.\n\nWhat about\n\n  {GET,PUT} /changes/{id}/edit:message\n\n? I think that would just work as a binding of \"edit:message\" in the module.\n\nOf course then I\u0027m inclined to think about renaming /publish_edit and /rebase_edit as /edit:publish and /edit:rebase.",
      "parentUuid": "1a77bfc2_13c5ec69",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 111,
        "endChar": 70
      },
      "revId": "85b17a3725180102fe7d64497c0a03bb5fa16241",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da71a7c8_b98c1f43",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Module.java",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-11-11T20:08:24Z",
      "side": 1,
      "message": "Yes, it was colliding with existing /message endpoint, that we deprecate in follow-up change, but still going to support for future releases.  That why we decided to use edit_foo. The same applies for publish and rebase. But if we can agree on consistent and unique naming convention, we can just rename the endpoints, as we explicitly mentioned that change edit REST endpoints API is considered to be experimental and subject to be changed without notice.",
      "parentUuid": "1a77bfc2_f3ab9096",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 111,
        "endChar": 70
      },
      "revId": "85b17a3725180102fe7d64497c0a03bb5fa16241",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a77bfc2_73a780c8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Module.java",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-11-11T20:13:18Z",
      "side": 1,
      "message": "OK.\n\nFor \"reasons\" I don\u0027t entirely want to share right now I am inclined to go with \"edit:foo\" as the view name when \"edit\" is a child collection and \"foo\" is a verb we want to apply to the child collection itself.\n\nSo for the edit stuff this means \"/edit:message\", \"/edit:publish\", \"/edit:rebase\", because \"/edit\" is a collection, and \"/edit/{file}\" is a collection member.",
      "parentUuid": "da71a7c8_b98c1f43",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 111,
        "endChar": 70
      },
      "revId": "85b17a3725180102fe7d64497c0a03bb5fa16241",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}