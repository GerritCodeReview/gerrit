{
  "comments": [
    {
      "key": {
        "uuid": "d96e0bb0_b3dcf889",
        "filename": "Documentation/config-labels.txt",
        "patchSetId": 7
      },
      "lineNbr": 314,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-04-16T00:10:53Z",
      "side": 1,
      "message": "This is actually a pretty cute example. Although it was clear we needed to handle the corner case in the code, I was actually struggling to come up with an example where the default value would be at the extreme end of the range.\n\nBut I think this makes sense: the default is the most snarky negative review possible, and the more permissions you have, the snarkier you\u0027re allowed to be :)",
      "revId": "864bac6d04441e1a8732ddef43e241abfeffa61d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d96e0bb0_9300dc22",
        "filename": "Documentation/config-labels.txt",
        "patchSetId": 7
      },
      "lineNbr": 314,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2014-04-16T04:11:15Z",
      "side": 1,
      "message": "Thought you might like :)",
      "parentUuid": "d96e0bb0_b3dcf889",
      "revId": "864bac6d04441e1a8732ddef43e241abfeffa61d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d96e0bb0_d3e17440",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 7
      },
      "lineNbr": 3096,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-04-16T00:10:53Z",
      "side": 1,
      "message": "Document here that it may be outside the range specified in permitted_labels.",
      "revId": "864bac6d04441e1a8732ddef43e241abfeffa61d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b949574f_9200bc22",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 7
      },
      "lineNbr": 3096,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2014-04-16T04:11:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d96e0bb0_d3e17440",
      "revId": "864bac6d04441e1a8732ddef43e241abfeffa61d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b949574f_92d7dc66",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ReplyBox.java",
        "patchSetId": 7
      },
      "lineNbr": 533,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-04-16T00:10:53Z",
      "side": 1,
      "message": "Nit: unnecessary blank line.",
      "revId": "864bac6d04441e1a8732ddef43e241abfeffa61d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b949574f_b205c031",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/ReplyBox.java",
        "patchSetId": 7
      },
      "lineNbr": 533,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2014-04-16T04:11:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b949574f_92d7dc66",
      "revId": "864bac6d04441e1a8732ddef43e241abfeffa61d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d96e0bb0_93d7fc66",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/git/ProjectConfigTest.java",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-04-16T00:10:53Z",
      "side": 1,
      "message": "I\u0027m a bit surprised by this; looking at ProjectConfig I would expect it to throw a validation error.",
      "revId": "864bac6d04441e1a8732ddef43e241abfeffa61d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b949574f_d2fa44e0",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/git/ProjectConfigTest.java",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2014-04-16T04:11:15Z",
      "side": 1,
      "message": "i was expecting that as well.",
      "parentUuid": "d96e0bb0_93d7fc66",
      "revId": "864bac6d04441e1a8732ddef43e241abfeffa61d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d96e0bb0_f38af054",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/git/ProjectConfigTest.java",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2014-04-16T16:49:26Z",
      "side": 1,
      "message": "Just to let you know, setting a defaultValue outside of the range will result in a failure to save the configuration.  From my test..\n\nCounting objects: 23, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 305 bytes | 0 bytes/s, done.\nTotal 3 (delta 1), reused 0 (delta 0)\nremote: Resolving deltas: 100% (1/1)\nremote: Processing changes: refs: 1, done\nremote: error: Invalid project configuration:\nremote: error:   project.config: Invalid defaultValue \"4\" for label \"Snarky-Review\"\nTo ssh://zaro0508@localhost:29418/All-Projects\n ! [remote rejected] HEAD -\u003e refs/meta/config (invalid project configuration)\nerror: failed to push some refs to \u0027ssh://zaro0508@localhost:29418/All-Projects\u0027",
      "parentUuid": "b949574f_d2fa44e0",
      "revId": "864bac6d04441e1a8732ddef43e241abfeffa61d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d96e0bb0_338d486b",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/git/ProjectConfigTest.java",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-04-16T16:51:23Z",
      "side": 1,
      "message": "Good. So figure out why it doesn\u0027t in the test.",
      "parentUuid": "d96e0bb0_f38af054",
      "revId": "864bac6d04441e1a8732ddef43e241abfeffa61d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05975703_deea2513",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/git/ProjectConfigTest.java",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2014-04-20T13:54:13Z",
      "side": 1,
      "message": "It does look like the system throws a ConfigInvalidException.  I believe the reason why it\u0027s not detected in this tests is because the exception is thrown by the CommitValidators and not by the class under test (ProjectConfig).  I\u0027m not sure whether your looking for more than just an explanation here but I think this is a valid test.  \n\nHere is the exception from the gerrit log:\n\n[2014-04-20 05:45:38,761] ERROR com.google.gerrit.server.git.validators.CommitValidators : User zaro0508 tried to push invalid project configuration d04ea8746c5790ef6e76cec87ff9cf26f8b9278b for All-Projects\norg.eclipse.jgit.errors.ConfigInvalidException: Invalid defaultValue \"-4\" for label \"Snarky-Review\"\n\tat com.google.gerrit.server.git.ProjectConfig.loadLabelSections(ProjectConfig.java:674)\n\tat com.google.gerrit.server.git.ProjectConfig.onLoad(ProjectConfig.java:419)\n\tat com.google.gerrit.server.git.VersionedMetaData.load(VersionedMetaData.java:118)\n\tat com.google.gerrit.server.git.validators.CommitValidators$ConfigValidator.onCommitReceived(CommitValidators.java:330)\n\tat com.google.gerrit.server.git.validators.CommitValidators.validateForReceiveCommits(CommitValidators.java:118)\n\tat com.google.gerrit.server.git.ReceiveCommits.validCommit(ReceiveCommits.java:2198)\n\tat com.google.gerrit.server.git.ReceiveCommits.validateNewCommits(ReceiveCommits.java:2158)\n\tat com.google.gerrit.server.git.ReceiveCommits.parseUpdate(ReceiveCommits.java:972)\n\tat com.google.gerrit.server.git.ReceiveCommits.parseCommands(ReceiveCommits.java:823)\n\tat com.google.gerrit.server.git.ReceiveCommits.processCommands(ReceiveCommits.java:539)\n\tat com.google.gerrit.server.git.AsyncReceiveCommits$Worker.run(AsyncReceiveCommits.java:90)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat com.google.gerrit.server.util.RequestScopePropagator$5.call(RequestScopePropagator.java:222)\n\tat com.google.gerrit.server.util.RequestScopePropagator$4.call(RequestScopePropagator.java:201)\n\tat com.google.gerrit.server.util.ThreadLocalRequestScopePropagator$1.call(ThreadLocalRequestScopePropagator.java:55)\n\tat com.google.gerrit.server.util.RequestScopePropagator$1.call(RequestScopePropagator.java:98)\n\tat com.google.gerrit.server.util.RequestScopePropagator$2.run(RequestScopePropagator.java:131)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)\n\tat com.google.gerrit.server.git.WorkQueue$Task.run(WorkQueue.java:368)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:724)",
      "parentUuid": "d96e0bb0_338d486b",
      "revId": "864bac6d04441e1a8732ddef43e241abfeffa61d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "256b7bde_37e6d850",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/git/ProjectConfigTest.java",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-04-20T20:51:05Z",
      "side": 1,
      "message": "ProjectConfig\u0027s error() method doesn\u0027t throw exceptions, but gathers all validation errors in validationErrors list, that is get evaluated in CommitValidators. So just add these lines to your test, to validate that wrong default value was correctly recognized:\n\n  ProjectConfig cfg \u003d read(rev);\n  assertEquals(1, cfg.getValidationErrors().size());\n  assertEquals(\"project.config: Invalid defaultValue \\\"-2\\\" \"\n      + \"for label \\\"CustomLabel\\\"\",\n      Iterables.getOnlyElement(cfg.getValidationErrors()).getMessage());",
      "parentUuid": "05975703_deea2513",
      "revId": "864bac6d04441e1a8732ddef43e241abfeffa61d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}