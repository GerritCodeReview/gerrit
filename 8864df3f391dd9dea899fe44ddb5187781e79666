{
  "comments": [
    {
      "key": {
        "uuid": "d802aa8c_06e8baef",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-07-16T22:10:28Z",
      "side": 1,
      "message": "Use Provider\u003cReviewDb\u003e to get the per-request autoconnection.",
      "revId": "8864df3f391dd9dea899fe44ddb5187781e79666",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d802aa8c_26ebb6f0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-16T22:00:05Z",
      "side": 1,
      "message": "You shouldn\u0027t have to make a new database connection here; there should already a database connection available in the HTTP request context.",
      "revId": "8864df3f391dd9dea899fe44ddb5187781e79666",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "581ddaf5_7aeef900",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-07-16T22:10:28Z",
      "side": 1,
      "message": "Then the try block goes away.",
      "parentUuid": "d802aa8c_26ebb6f0",
      "revId": "8864df3f391dd9dea899fe44ddb5187781e79666",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "581ddaf5_5af1b5dd",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-07-16T22:10:31Z",
      "side": 1,
      "message": "As said in IM, if this were to replaced by `dbProvider.get()`, you\u0027d get about 92 failing tests such as: (The others are similar)\n\njava.lang.NullPointerException\n\tat com.google.gwtorm.jdbc.JdbcAccess.prepareStatement(JdbcAccess.java:93)\n\tat com.google.gerrit.reviewdb.client.PatchSet_Access_patchSets_GwtOrm$$53.get(Unknown Source)\n\tat com.google.gerrit.server.change.Revisions.parse(Revisions.java:76)\n\tat com.google.gerrit.server.api.changes.ChangeApiImpl.revision(ChangeApiImpl.java:154)\n\tat com.google.gerrit.server.api.changes.ChangeApiImpl.current(ChangeApiImpl.java:142)\n\tat com.google.gerrit.acceptance.AbstractDaemonTest.revision(AbstractDaemonTest.java:455)\n\tat com.google.gerrit.acceptance.server.project.LabelTypeIT.merge(LabelTypeIT.java:331)\n\nbecause nowhere the database is actually opened.\nWe need to open the database somewhere.",
      "parentUuid": "d802aa8c_26ebb6f0",
      "revId": "8864df3f391dd9dea899fe44ddb5187781e79666",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d802aa8c_66faceb4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-16T23:03:07Z",
      "side": 1,
      "message": "Yes, that\u0027s a head-scratcher.\n\nBut many other Rest{Read,Modify}Views[1] manage to get by with injecting a Provider\u003cReviewDb\u003e. They open it using Guice magic. It might be that there\u0027s something special about Submit/MergeOp that makes this impossible, but we need to understand what that is.\n\n\u003e nowhere the database is actually opened.\n\nNaively, this cannot be the problem. dbProvider.get() works just fine on l. 186 of the LHS.\n\n[1] find g* -name \\*.java | xargs grep -l \u0027Rest.*View\u0027 | xargs grep \u0027^\\s*Provider\u003cReviewDb\u003e\u0027",
      "parentUuid": "581ddaf5_5af1b5dd",
      "revId": "8864df3f391dd9dea899fe44ddb5187781e79666",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "581ddaf5_7af7d9ca",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-16T23:14:02Z",
      "side": 1,
      "message": "*facepalm*\n\nThe stack trace is on the next line, in db.changes(). That means the actual merge succeeded. And then closed the repo.\n\nRemoving the db.close() calls works.\n\nHowever, I still see this stack trace in my warning logs:\n\n 1) Automatic ReviewDb only available in request scope\n   at com.google.gerrit.server.util.ThreadLocalRequestContext$1.provideReviewDb(ThreadLocalRequestContext.java:70) (via modules: com.google.gerrit.server.config.GerritGlobalModule -\u003e com.google.gerrit.server.util.ThreadLocalRequestContext$1)\n   while locating com.google.gerrit.reviewdb.server.ReviewDb\n   at com.google.gerrit.server.mail.MergedSender.\u003cinit\u003e(MergedSender.java:42)\n   while locating com.google.gerrit.server.mail.MergedSender annotated with @com.google.inject.internal.UniqueAnnotations$Internal(value\u003d9)\n \n 1 error\n \tat com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1025)\n \tat com.google.inject.assistedinject.FactoryProvider2.invoke(FactoryProvider2.java:770)\n \tat com.sun.proxy.$Proxy69.create(Unknown Source)\n \tat com.google.gerrit.server.git.MergeOp$5.run(MergeOp.java:1205)\n \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n \tat java.util.concurrent.FutureTask.run(FutureTask.java:237)\n \tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:151)\n \tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:266)\n \tat com.google.gerrit.server.git.WorkQueue$Task.run(WorkQueue.java:377)\n \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\n \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\n \tat java.lang.Thread.run(Thread.java:745)\n\n\n\n\nI\u0027m not 100% sure that\u0027s a regression; it might just be that email doesn\u0027t work in tests. But you should check on it.",
      "parentUuid": "d802aa8c_66faceb4",
      "revId": "8864df3f391dd9dea899fe44ddb5187781e79666",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d802aa8c_e6059e4d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-07-16T22:10:28Z",
      "side": 1,
      "message": "and this becomes db.get().",
      "range": {
        "startLine": 190,
        "startChar": 35,
        "endLine": 190,
        "endChar": 36
      },
      "revId": "8864df3f391dd9dea899fe44ddb5187781e79666",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}