{
  "comments": [
    {
      "key": {
        "uuid": "4d93e71c_19bd81a2",
        "filename": "polygerrit-ui/app/BUILD",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1030207
      },
      "writtenOn": "2017-08-15T18:55:48Z",
      "side": 1,
      "message": "I\u0027m not sure how/if this can be line wrapped.",
      "range": {
        "startLine": 143,
        "startChar": 2,
        "endLine": 143,
        "endChar": 104
      },
      "revId": "896080d8f30d387c39f7a1ce128d479292d93926",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e3db0b9_3648d203",
        "filename": "polygerrit-ui/app/BUILD",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-08-15T19:04:33Z",
      "side": 1,
      "message": "Is it according to Python rules? Would ..\n\nfor directory in [\"change\", \"change-list\", \"core\", \"diff\", \"plugins\", \" \n                  \"settings\", \"shared\", \"gr-app\"]\n\n.. work?\n\nIf possible, it may also be nice to just put the directory list in a separate constant.\n\n DIRECTORIES \u003d [\"change\", \"change-list\", ..]",
      "parentUuid": "4d93e71c_19bd81a2",
      "range": {
        "startLine": 143,
        "startChar": 2,
        "endLine": 143,
        "endChar": 104
      },
      "revId": "896080d8f30d387c39f7a1ce128d479292d93926",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81b749fe_8a1b36df",
        "filename": "polygerrit-ui/app/BUILD",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1030207
      },
      "writtenOn": "2017-08-15T19:08:09Z",
      "side": 1,
      "message": "Hah.. I did not know this was python..",
      "parentUuid": "5e3db0b9_3648d203",
      "range": {
        "startLine": 143,
        "startChar": 2,
        "endLine": 143,
        "endChar": 104
      },
      "revId": "896080d8f30d387c39f7a1ce128d479292d93926",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dcb3c44_216908fd",
        "filename": "polygerrit-ui/app/BUILD",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2017-08-15T19:39:36Z",
      "side": 1,
      "message": "It\u0027s not Python, but it\u0027s Python-inspired syntax.\n\nDoes buildifier help in formatting this? (See https://docs.bazel.build/versions/master/skylark/build-style.html.)",
      "parentUuid": "81b749fe_8a1b36df",
      "range": {
        "startLine": 143,
        "startChar": 2,
        "endLine": 143,
        "endChar": 104
      },
      "revId": "896080d8f30d387c39f7a1ce128d479292d93926",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3461e401_1d5d563a",
        "filename": "polygerrit-ui/app/BUILD",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1030207
      },
      "writtenOn": "2017-08-15T20:06:34Z",
      "side": 1,
      "message": "Thanks, that helped.",
      "parentUuid": "3dcb3c44_216908fd",
      "range": {
        "startLine": 143,
        "startChar": 2,
        "endLine": 143,
        "endChar": 104
      },
      "revId": "896080d8f30d387c39f7a1ce128d479292d93926",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}