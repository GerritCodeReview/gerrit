{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a22536cb_d521da59",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-03-03T04:50:33Z",
      "side": 1,
      "message": "+2 for including this idea, just some suggestions/nits on the content.",
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "035f4a80_7664d37f",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-03-03T04:50:33Z",
      "side": 1,
      "message": "s/Refactory/Refactoring/ ? I don\u0027t think I\u0027ve seen the term \"refactory\" before.",
      "range": {
        "startLine": 310,
        "startChar": 17,
        "endLine": 310,
        "endChar": 26
      },
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "712a4a6c_910979ce",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-03T11:34:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "035f4a80_7664d37f",
      "range": {
        "startLine": 310,
        "startChar": 17,
        "endLine": 310,
        "endChar": 26
      },
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb67d256_7f2eceae",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 314,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-03-03T04:50:33Z",
      "side": 1,
      "message": "Append?\n\n developer - \"always leave the code behind in a better state than you found it.\"",
      "range": {
        "startLine": 314,
        "startChar": 56,
        "endLine": 314,
        "endChar": 57
      },
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "285e8069_eca46fb7",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 314,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-03-03T04:50:33Z",
      "side": 1,
      "message": "nit: as the",
      "range": {
        "startLine": 314,
        "startChar": 11,
        "endLine": 314,
        "endChar": 14
      },
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2dabf0f_8f0546cd",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 314,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-03T11:34:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "285e8069_eca46fb7",
      "range": {
        "startLine": 314,
        "startChar": 11,
        "endLine": 314,
        "endChar": 14
      },
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0b2ae16_96678257",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 314,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-03T11:34:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb67d256_7f2eceae",
      "range": {
        "startLine": 314,
        "startChar": 56,
        "endLine": 314,
        "endChar": 57
      },
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e63436aa_e87ff159",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 319,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-03-03T04:50:33Z",
      "side": 1,
      "message": "Add another sentence: \"A little bit of cleanup can go a long way.\" ?",
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95797ae6_c7920cd5",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 319,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-10T22:10:45Z",
      "side": 1,
      "message": "I actually don\u0027t know the expression :-O",
      "parentUuid": "e63436aa_e87ff159",
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85a5dcbd_0f0cadd3",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 319,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-03-10T22:17:36Z",
      "side": 1,
      "message": "Paraphrased from this section in the Fowler link: \"If you always make things a little better, then repeated applications will make a big impact that\u0027s focused on the areas that are frequently visited - which are exactly the areas where clean code is most valuable.\" (which I thought was the general section you were modeling this after)",
      "parentUuid": "95797ae6_c7920cd5",
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe39078d_4917d291",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 319,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-12T13:52:03Z",
      "side": 1,
      "message": "Understood, let me add something about it.",
      "parentUuid": "85a5dcbd_0f0cadd3",
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60c0a1e5_f437fa6c",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 319,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-12T13:56:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe39078d_4917d291",
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05fa1ea2_4e4d0673",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 323,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-03-03T04:50:33Z",
      "side": 1,
      "message": "I really have to guess at what you mean here. Could you try to clarify it some? I think you\u0027re saying reviewers are expected to point out opportunities to refactor during code review, but should be mindful of the scope of what the implementer was trying to change. Did I get that right?\n\nI generally agree with that, but reading the Fowler article you linked above, it seems to discourage this:\n\n One of the features of opportunistic refactoring is that it can hit any part of\n the code base you\u0027re working in. You may be doing most of your work in one class,\n but spot problems in a class that\u0027s in a quite different area of the code. That\n lack of locality shouldn\u0027t stop you from making the change now. There\u0027s often a\n temptation to leave a change in another part of a code base to another day - but\n another day often doesn\u0027t come.\n\nWhat are your thoughts on that? It seems we do probably want to provide some guidance for reviewers and implementers for what to suggest/expect, but I\u0027m not sure what that guidance should be.",
      "range": {
        "startLine": 321,
        "startChar": 0,
        "endLine": 323,
        "endChar": 63
      },
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4bf30c2_6ed63c2d",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 323,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-03T11:40:58Z",
      "side": 1,
      "message": "\u003e I really have to guess at what you mean here. Could you try to clarify it some? I think you\u0027re saying reviewers are expected to point out opportunities to refactor during code review, but should be mindful of the scope of what the implementer was trying to change. Did I get that right?\n\u003e \n\u003e I generally agree with that, but reading the Fowler article you linked above, it seems to discourage this:\n\u003e \n\u003e  One of the features of opportunistic refactoring is that it can hit any part of\n\u003e  the code base you\u0027re working in. You may be doing most of your work in one class,\n\u003e  but spot problems in a class that\u0027s in a quite different area of the code. That\n\u003e  lack of locality shouldn\u0027t stop you from making the change now. There\u0027s often a\n\u003e  temptation to leave a change in another part of a code base to another day - but\n\u003e  another day often doesn\u0027t come.\n\u003e \n\u003e What are your thoughts on that? It seems we do probably want to provide some guidance for reviewers and implementers for what to suggest/expect, but I\u0027m not sure what that guidance should be.\n\nI agree with Martin Fowler, so possibly I have refine what I proposed. If you spot problems *related* to the work you are doing, then yes they should be addressed in your refactoring and that guidelines should be shared between the contributor and the reviewer as a \"common sense approach\".\n\nWhat I wanted to express that neither the contributor nor the reviewer should expect the entire code to be refactored because it isn\u0027t in a good shape, before making any change to it. Every little change should come with its own little refactoring: delaying the much needed refactoring to \"another day\" isn\u0027t a good idea and delaying all changes to \"a day when the code-base will be redesigned\" isn\u0027t good either.\n\nIn Gerrit we do have topics, and we should use them to tie together the different phases of an implementation:\n- refactoring\n- features\n- cleanups elsewhere\n\nI believe we already mention here how to use topics, so it should make sense today already.\n\nLet me try to rephrase that more clearly.",
      "parentUuid": "05fa1ea2_4e4d0673",
      "range": {
        "startLine": 321,
        "startChar": 0,
        "endLine": 323,
        "endChar": 63
      },
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "295128a8_61157376",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 323,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-03-03T16:17:50Z",
      "side": 1,
      "message": "\u003e \u003e I really have to guess at what you mean here. Could you try to clarify it some? I think you\u0027re saying reviewers are expected to point out opportunities to refactor during code review, but should be mindful of the scope of what the implementer was trying to change. Did I get that right?\n\u003e \u003e \n\u003e \u003e I generally agree with that, but reading the Fowler article you linked above, it seems to discourage this:\n\u003e \u003e \n\u003e \u003e  One of the features of opportunistic refactoring is that it can hit any part of\n\u003e \u003e  the code base you\u0027re working in. You may be doing most of your work in one class,\n\u003e \u003e  but spot problems in a class that\u0027s in a quite different area of the code. That\n\u003e \u003e  lack of locality shouldn\u0027t stop you from making the change now. There\u0027s often a\n\u003e \u003e  temptation to leave a change in another part of a code base to another day - but\n\u003e \u003e  another day often doesn\u0027t come.\n\u003e \u003e \n\u003e \u003e What are your thoughts on that? It seems we do probably want to provide some guidance for reviewers and implementers for what to suggest/expect, but I\u0027m not sure what that guidance should be.\n\u003e \n\u003e I agree with Martin Fowler, so possibly I have refine what I proposed. If you spot problems *related* to the work you are doing, then yes they should be addressed in your refactoring and that guidelines should be shared between the contributor and the reviewer as a \"common sense approach\".\n\n+1\n\n\u003e \n\u003e What I wanted to express that neither the contributor nor the reviewer should expect the entire code to be refactored because it isn\u0027t in a good shape, before making any change to it. Every little change should come with its own little refactoring: delaying the much needed refactoring to \"another day\" isn\u0027t a good idea and delaying all changes to \"a day when the code-base will be redesigned\" isn\u0027t good either.\n\n+1\n\n\u003e \n\u003e In Gerrit we do have topics, and we should use them to tie together the different phases of an implementation:\n\u003e - refactoring\n\u003e - features\n\u003e - cleanups elsewhere\n\u003e \n\u003e I believe we already mention here how to use topics, so it should make sense today already.\n\nMaybe just note that refactoring should still follow the guidelines above (could specifically mention \"Change Size\" section?)?\n\n\u003e \n\u003e Let me try to rephrase that more clearly.\n\nLooking forward to it!",
      "parentUuid": "c4bf30c2_6ed63c2d",
      "range": {
        "startLine": 321,
        "startChar": 0,
        "endLine": 323,
        "endChar": 63
      },
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "341a6348_fc1b8232",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 323,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-10T22:10:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "295128a8_61157376",
      "range": {
        "startLine": 321,
        "startChar": 0,
        "endLine": 323,
        "endChar": 63
      },
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99a6cd11_a69037bb",
        "filename": "Documentation/dev-crafting-changes.txt",
        "patchSetId": 1
      },
      "lineNbr": 323,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-03-15T16:00:26Z",
      "side": 1,
      "message": "I think including this reference to the Change Size section would alleviate some of Han-Wen\u0027s concerns. That also has the advice to only do one thing in a change.",
      "parentUuid": "341a6348_fc1b8232",
      "range": {
        "startLine": 321,
        "startChar": 0,
        "endLine": 323,
        "endChar": 63
      },
      "revId": "8b6c771bd7f09c5705f87fead352aa4b67b47977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}