{
  "comments": [
    {
      "key": {
        "uuid": "a33b5559_e0db4200",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-17T23:23:09Z",
      "side": 1,
      "message": "Would it be more accurate to say ...\n\n  Capture and report JS exceptions through GR-REPORTING\n\n... since this only applies to GA specifically when it\u0027s wired-in via a plugin?",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 52
      },
      "revId": "8b736770aa148bdd055b6747c77aee45a45c5820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03b0a108_5b97a367",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-01-18T17:56:25Z",
      "side": 1,
      "message": "Done",
      "revId": "8b736770aa148bdd055b6747c77aee45a45c5820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a33b5559_20b36ad8",
        "filename": "polygerrit-ui/app/elements/core/gr-reporting/gr-reporting.js",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-17T23:23:09Z",
      "side": 1,
      "message": "These are concise, but unusual and a bit hard to read. It uses both `||` and `\u0026\u0026` operators but not for a boolean expression. (Scanning over the code, one might reasonably expect that `line` will be a boolean.)\n\nWhat about the following instead?\n\n  if (!line \u0026\u0026 error) { line \u003d error.lineNumber; }\n\nSame for `column` and `msg`.",
      "range": {
        "startLine": 47,
        "startChar": 4,
        "endLine": 47,
        "endChar": 45
      },
      "revId": "8b736770aa148bdd055b6747c77aee45a45c5820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3c76980_99e65b26",
        "filename": "polygerrit-ui/app/elements/core/gr-reporting/gr-reporting.js",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-01-18T17:56:25Z",
      "side": 1,
      "message": "Good point, but looks like excluding error from current code makes it much readable and maybe could work.",
      "revId": "8b736770aa148bdd055b6747c77aee45a45c5820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63323d89_3699785a",
        "filename": "polygerrit-ui/app/elements/core/gr-reporting/gr-reporting.js",
        "patchSetId": 2
      },
      "lineNbr": 192,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-17T23:23:09Z",
      "side": 1,
      "message": "Why is this a global, rather than a private method on `window.GrReporting`?",
      "revId": "8b736770aa148bdd055b6747c77aee45a45c5820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a33b5559_00e186b0",
        "filename": "polygerrit-ui/app/elements/core/gr-reporting/gr-reporting.js",
        "patchSetId": 2
      },
      "lineNbr": 192,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-01-18T17:56:25Z",
      "side": 1,
      "message": "I\u0027ve moved comment here to provide better explanation.\nMain reason why it\u0027s not part of GrReporting is because catchErrors has to happen as soon as possible, so it will be transformed into a prototype method call.\nI\u0027m open for a better naming/namespacing though.",
      "revId": "8b736770aa148bdd055b6747c77aee45a45c5820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "031b415c_03a2ce8a",
        "filename": "polygerrit-ui/app/elements/core/gr-reporting/gr-reporting.js",
        "patchSetId": 2
      },
      "lineNbr": 192,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-18T18:14:04Z",
      "side": 1,
      "message": "\u003e is because catchErrors has to happen as soon as possible, so it will be transformed into a prototype method call.\n\nI still don\u0027t quite understand. Do you mean so that it can be invoked as soon as possible, as it is on l.67?\n\n\u003e I\u0027m open for a better naming/namespacing though.\n\nNaming and namespacing is really the only things I meant:\n* It\u0027s defined on `window` when it looks to me like it could be defined on `window.GrReporting` (like a \"static\" function, I don\u0027t mean to define it at `window.GrReporting.prototype`). That way we avoid defining an additional global.\n* It\u0027s used by this element and by tests, so could reasonably be private (named with an underscore).",
      "revId": "8b736770aa148bdd055b6747c77aee45a45c5820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3c76980_d95853f6",
        "filename": "polygerrit-ui/app/elements/core/gr-reporting/gr-reporting.js",
        "patchSetId": 2
      },
      "lineNbr": 192,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-01-18T18:27:28Z",
      "side": 1,
      "message": "Let me elaborate.\n\nonerror handler needs to be installed on window ASAP, and this means at least before the component is registered (ideally, even before that, but that\u0027s a bit more hairy and a bit less important).\n\npractically, this means that Polymer component is not initialized or instantiated\n\nit is possible for catchErrors to be a method on gr-reporting, but taking items above into account, the call should look like this:\n\n`GrReporting.prototype.catchErrors();\n\nAnd catchErrors will have window context, despite being defined on gr-reporting prototype.\n\nSo, static is the only option.\n\nReason I didn\u0027t add it to static in the first revision is that this interferes with GrReporting being Initialized by Polymer, but I guess that\u0027s low risk.\n\nSo, static works. We\u0027ll have to revisit it once we get proper classes, but it\u0027s ok for now.",
      "revId": "8b736770aa148bdd055b6747c77aee45a45c5820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8e9aa6a_82b41ac6",
        "filename": "polygerrit-ui/app/elements/core/gr-reporting/gr-reporting.js",
        "patchSetId": 2
      },
      "lineNbr": 192,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-18T18:41:36Z",
      "side": 1,
      "message": "\u003e Reason I didn\u0027t add it to static in the first revision is that this interferes with GrReporting being Initialized by Polymer, but I guess that\u0027s low risk.\n\nAs I understand it, the static initialization of the element is complete at this point -- so, as long as the name doesn\u0027t conflict with another static property, there isn\u0027t any other initialization to interfere with. I don\u0027t see how it would interfere with instantiation.\n\n\u003e So, static works. We\u0027ll have to revisit it once we get proper classes, but it\u0027s ok for now.\n\nI\u0027m not an expert on JS classes, but I suspect this could be equivalently defined as a regular ES6 static method.",
      "revId": "8b736770aa148bdd055b6747c77aee45a45c5820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63323d89_169c7c49",
        "filename": "polygerrit-ui/app/elements/core/gr-reporting/gr-reporting_test.html",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-17T23:23:09Z",
      "side": 1,
      "message": "Why use this function rather than just invoke `fakeWindow.onerror`?",
      "range": {
        "startLine": 178,
        "startChar": 10,
        "endLine": 178,
        "endChar": 22
      },
      "revId": "8b736770aa148bdd055b6747c77aee45a45c5820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a33b5559_a0d53acb",
        "filename": "polygerrit-ui/app/elements/core/gr-reporting/gr-reporting_test.html",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-01-18T17:56:25Z",
      "side": 1,
      "message": "A bit more readable?\nfakeWindow.onerror would have to be accompanied with a comment stating that this is in fact emulation of unhandled exception, not just a function call on a fake window.\nNot feeling strongly though.",
      "revId": "8b736770aa148bdd055b6747c77aee45a45c5820",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}