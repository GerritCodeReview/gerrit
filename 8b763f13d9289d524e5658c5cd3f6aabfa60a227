{
  "comments": [
    {
      "key": {
        "uuid": "bc6d0aef_3a456122",
        "filename": "polygerrit-ui/app/index.html",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1013702
      },
      "writtenOn": "2016-03-16T21:13:30Z",
      "side": 1,
      "message": "This is just for testing purposes here - will remove it in final version of course.",
      "revId": "8b763f13d9289d524e5658c5cd3f6aabfa60a227",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc9c7e2c_5b82a3f6",
        "filename": "polygerrit-ui/app/styles/gr-change-list-styles.html",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1023872
      },
      "writtenOn": "2016-03-16T21:51:49Z",
      "side": 1,
      "message": "So this pattern is an abstraction leak imho.\n\nWe should never have to worry if an element can be hidden or not (this will be a constant battle and one that is super easy to forget about or miss). If we want to enforce this kind of style omission let\u0027s include a \n\n*[hidden] {} rule that will reset a bunch of values",
      "revId": "8b763f13d9289d524e5658c5cd3f6aabfa60a227",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ca472ba_10e60406",
        "filename": "polygerrit-ui/app/styles/gr-change-list-styles.html",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1013702
      },
      "writtenOn": "2016-03-17T19:44:41Z",
      "side": 1,
      "message": "I fully agree here.\n\nWhere do you want to place the \u0027*[hidden] {}\u0027 rule? In every element which uses \u0027hidden\u0027?\n\nIt looks related to: https://github.com/Polymer/polymer/issues/1748",
      "parentUuid": "dc9c7e2c_5b82a3f6",
      "revId": "8b763f13d9289d524e5658c5cd3f6aabfa60a227",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c729620_85d00218",
        "filename": "polygerrit-ui/app/styles/gr-change-list-styles.html",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1023872
      },
      "writtenOn": "2016-03-17T20:38:38Z",
      "side": 1,
      "message": "So long as we are not using shadow DOM, We can put it in out app.css file or really any main css filter.\n\nSans that we will have to have a _reset.css or something that we will use in every element, again not the worst thing and probably an OK thing to do.",
      "parentUuid": "7ca472ba_10e60406",
      "revId": "8b763f13d9289d524e5658c5cd3f6aabfa60a227",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ca472ba_100fe485",
        "filename": "polygerrit-ui/app/styles/gr-change-list-styles.html",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1013702
      },
      "writtenOn": "2016-03-17T20:44:36Z",
      "side": 1,
      "message": "\u003e So long as we are not using shadow DOM, We can put it in out app.css file or really any main css filter.\n\nThis change is not required as long as we are not using shadow DOM. It works fine at the moment.\n\nCould it probably even be classified as issue in Polymer since it works with shady DOM, but not with shadow DOM? We do not have any special CSS rule (AFAIK) at the moment for \u0027hidden\u0027. If you think so, I would be glad to create an isolated test-case and report it to Polymer issue tracker.",
      "parentUuid": "1c729620_85d00218",
      "revId": "8b763f13d9289d524e5658c5cd3f6aabfa60a227",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cdafa64_ae0657fd",
        "filename": "polygerrit-ui/app/styles/gr-change-list-styles.html",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1013702
      },
      "writtenOn": "2016-03-19T13:04:06Z",
      "side": 1,
      "message": "Okay, I\u0027ve got it: \u0027iron-flex-layout/iron-flex-layout.html\u0027 causes this issue. It adds in a style element (not inside a template element):\n\n  [hidden] {\n    display: none !important;\n  }\n\nThat works with shady DOM, but not with shadow DOM.\n\nI have reported an issue [1].\n\nWhat do you think about creating a style-module \u0027gr-reset\u0027 which contains this [hidden] rule and the margin, padding and box-sizing stuff from main.css which is included by every element? Since this touches a lot of files, I would like to know you opinion before doing it.\n\n[1] https://github.com/PolymerElements/iron-flex-layout/issues/86",
      "parentUuid": "7ca472ba_100fe485",
      "revId": "8b763f13d9289d524e5658c5cd3f6aabfa60a227",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "913e7148_40f30eb2",
        "filename": "polygerrit-ui/app/styles/gr-change-list-styles.html",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1013702
      },
      "writtenOn": "2016-03-29T17:07:46Z",
      "side": 1,
      "message": "@Andy / @Sam: Would be nice if you could look into the referenced GitHub issue [1] above and probably post your opinion.\n\nAnother possible way to work around this issue would be to use \u0027dom-if\u0027 instead of \u0027hidden\u0027.\n\n[1] https://github.com/PolymerElements/iron-flex-layout/issues/86",
      "parentUuid": "3cdafa64_ae0657fd",
      "revId": "8b763f13d9289d524e5658c5cd3f6aabfa60a227",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c729620_c5e3daed",
        "filename": "polygerrit-ui/app/styles/main.css",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1023872
      },
      "writtenOn": "2016-03-17T21:27:15Z",
      "side": 1,
      "message": "+1 to adding a regular css at the top of each element regardless (this can be automated via an element generator for the project... {for every project I do, I end up having a generator for new elements to cut down on the tedium})",
      "parentUuid": "3c8e7a42_2eeba7cc",
      "revId": "8b763f13d9289d524e5658c5cd3f6aabfa60a227",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}