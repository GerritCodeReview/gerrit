{
  "pushCert": "certificate version 0.1\npusher Dave Borowitz \u003cdborowitz@google.com\u003e 1521495688 -0400\nnonce APUGfEJv/nndx4WUoAtAg9s39p5aC3IKRb80AwppL3uvi8mPM0wiMlOVqIzCPtQRbwxrLl+SAzae\n\n0000000000000000000000000000000000000000 8b7d8206a5978e1b3489c44cf72dd33b86154500 refs/for/master%r\u003daliceks\n-----BEGIN PGP SIGNATURE-----\n\niQJJBAABCgAzFiEEpPm/sOxWgSqG5grhX9fFmpoSiIwFAlqwLogVHGRib3Jvd2l0\nekBnb29nbGUuY29tAAoJEF/XxZqaEoiMk1YQAJWeyZ2zLnCfTChGRTfhPu+Z1hFO\nPadhDTaznWhVo/rPlX1UQu1TMNBL8r/Lwl+1WcQ+km+iTpMyZ7m05eR8AcCe23L6\nkEZOxhLkVKVdPp8Qt2O+C2aTZTOboh4MK0FI1Cb57t6WUKR7T7jvWHmRVKxMS9cL\nTUv3uzGMDPBRRqw8vjRW+GmDsgEYrJ7a+9Uajpk7hf0De4LYfJ61O912OZPPL37b\nXbjlsB90BZHDZsOD1mZDp53s87H9yxDx7nqouw9y6yqEgoTkjolCZanBuvS1Sg5J\ns1jHx0QhAfzQx3RfPppKhn6d6n5HdCgYVuU0xe6LUnpMY+8wLisWn4gDJjb3gwm/\nrFj4I7FVPUc/LBZ/nJ1XKLIhiCqHEJWuiHwtKWh2zOu0L3kU2H1YsqiIlaKmBvNe\nawY2WYDBO1sj7wHgmvnwKLYxBEDZnX3VrAQIJvaCpYmZecIKhGO9fKiWQhXopkCk\nEIcFo+zaO19GRPJAjY5U31SIYwKHZsAx9VN0nr/MhrSTwcuWIMBGoyJWox4ix/Fq\n23IOb6vdlOsgIuDYH9mc4LPU54FbiuWdOhT1QChKSQrdiixYGBXpYAIxkOA4s6ON\n2Z5/rd1bDF8Wlrt/bcJrJAaHMJCvnxGG/e9Hw/BD+TeVLKcYQuDF97autVhzCGp4\ntC/eLP/1ATZLzdI5\n\u003d4DmU\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "7d2ab063_fc3a3cab",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheEntry.java",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-03-20T08:19:18Z",
      "side": 1,
      "message": "What persistent cache? Projects cache was in memory cache before this change and it\u0027s remained in memory cache in this change.",
      "range": {
        "startLine": 63,
        "startChar": 39,
        "endLine": 63,
        "endChar": 49
      },
      "revId": "8b7d8206a5978e1b3489c44cf72dd33b86154500",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ec3bf7f_bbae9076",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-03-20T08:19:18Z",
      "side": 1,
      "message": "As you said in the commit message:\n\n\"\nI am keeping my fingers\ncrossed that this doesn\u0027t incur significant runtime cost due to\nfrequently recreating the very same com.google.inject.internal instances\nthat were causing cache blowup prior to this change.\n\"\n\nIt basically boils down to space vs. runtime consideration. Have you measured the runtime implications of asking Guice to always resolve all providers on each and every projectCache#get() invocation?",
      "range": {
        "startLine": 158,
        "startChar": 13,
        "endLine": 158,
        "endChar": 47
      },
      "revId": "8b7d8206a5978e1b3489c44cf72dd33b86154500",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b64961f5_5f1202ae",
        "filename": "java/com/google/gerrit/server/project/ProjectState.java",
        "patchSetId": 1
      },
      "lineNbr": 379,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-03-20T08:19:18Z",
      "side": 1,
      "message": "Now I know that you meant saying it\u0027s ugly. We ask cache entry to provide the data, but to retrieve the data we have to supply project state attributes like site site paths and info about parents projects. So that the split between the two classes seems to be arbitrary. I also wonder, to reduce the ugliness, how about to pass in the needed data only, instead of this? Wouldn\u0027t this be less ugly and promote loose coupling between the two classes?",
      "range": {
        "startLine": 379,
        "startChar": 4,
        "endLine": 379,
        "endChar": 37
      },
      "revId": "8b7d8206a5978e1b3489c44cf72dd33b86154500",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}