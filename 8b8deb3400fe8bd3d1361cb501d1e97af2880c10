{
  "comments": [
    {
      "key": {
        "uuid": "02a62cba_1c4005ae",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff.js",
        "patchSetId": 3
      },
      "lineNbr": 588,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-04-12T22:45:47Z",
      "side": 1,
      "message": "Based on the way these rules work, this filter could be rewritten into a single regex...\n\ndiffInfo.diff_header\n    .replace(/^(diff --git|index|\\+\\+\\+|---) .+$/mg, \u0027\u0027)\n    .trim();",
      "range": {
        "startLine": 588,
        "startChar": 13,
        "endLine": 588,
        "endChar": 40
      },
      "revId": "8b8deb3400fe8bd3d1361cb501d1e97af2880c10",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca384842_a5fe275e",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff.js",
        "patchSetId": 3
      },
      "lineNbr": 588,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-04-12T23:16:39Z",
      "side": 1,
      "message": "This is really clever, but I question whether we should do it. It\u0027s very non-self-documenting, and constantizing out the regex would lead to some strange name like \u0027DIFF_LINE_FILTER_REGEX\u0027 or something. What we\u0027re really logically doing here is filtering an array, and the performance concerns are minimal, so I\u0027d personally prefer to keep it as explicit as possible.\n\nNot only that, diff_header is an array of lines, not a string, so we\u0027d have to join(\u0027\\n\u0027).",
      "parentUuid": "02a62cba_1c4005ae",
      "range": {
        "startLine": 588,
        "startChar": 13,
        "endLine": 588,
        "endChar": 40
      },
      "revId": "8b8deb3400fe8bd3d1361cb501d1e97af2880c10",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39a2f9da_99efb00b",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff.js",
        "patchSetId": 3
      },
      "lineNbr": 588,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-04-12T23:49:28Z",
      "side": 1,
      "message": "\u003e Not only that, diff_header is an array of lines, not a string, so we\u0027d have to join(\u0027\\n\u0027).\n\nHah. I forgot it was an array of strings. So the filter could do something like...\n\n.filter(function(item) {\n  return DIFF_HEADER_PATTERN.test(item);\n})\n\n...but that\u0027s fine.\n\nI guess it just feels weird and brittle to do have text-filtering code to parse out diff headers when the relevant information is already parsed out and provided by the backend. Setting aside the formatting and the way it appears on non-rename diffs.",
      "parentUuid": "ca384842_a5fe275e",
      "range": {
        "startLine": 588,
        "startChar": 13,
        "endLine": 588,
        "endChar": 40
      },
      "revId": "8b8deb3400fe8bd3d1361cb501d1e97af2880c10",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "875d2494_1f5c2d28",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff.js",
        "patchSetId": 3
      },
      "lineNbr": 589,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-04-12T22:45:47Z",
      "side": 1,
      "message": "Use strict equality.",
      "range": {
        "startLine": 589,
        "startChar": 45,
        "endLine": 589,
        "endChar": 47
      },
      "revId": "8b8deb3400fe8bd3d1361cb501d1e97af2880c10",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35bfc096_d8cb6ef7",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff.js",
        "patchSetId": 3
      },
      "lineNbr": 589,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-04-12T23:16:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "875d2494_1f5c2d28",
      "range": {
        "startLine": 589,
        "startChar": 45,
        "endLine": 589,
        "endChar": 47
      },
      "revId": "8b8deb3400fe8bd3d1361cb501d1e97af2880c10",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}