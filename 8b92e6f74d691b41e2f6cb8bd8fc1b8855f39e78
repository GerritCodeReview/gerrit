{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "06b5b0cd_1f7ad7cb",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-item/gr-change-list-item.ts",
        "patchSetId": 2
      },
      "lineNbr": 694,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-09-26T12:06:44Z",
      "side": 1,
      "message": "Nit:\n\nThis can also be written as:\n```\nthis.triggerSelectionCallback?(this.globalIndex);\n```",
      "revId": "8b92e6f74d691b41e2f6cb8bd8fc1b8855f39e78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec28f438_51c68a00",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-item/gr-change-list-item.ts",
        "patchSetId": 2
      },
      "lineNbr": 694,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-09-26T12:09:06Z",
      "side": 1,
      "message": "`myFunc?.(myParam)` needs the period to optional chain. Otherwise it has ambiguity with ternary operator and will be a syntax error. Likewise for `myArray?.[3]`",
      "parentUuid": "06b5b0cd_1f7ad7cb",
      "revId": "8b92e6f74d691b41e2f6cb8bd8fc1b8855f39e78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39e395c4_5b82bbff",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-item/gr-change-list-item.ts",
        "patchSetId": 2
      },
      "lineNbr": 694,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2022-09-26T12:21:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec28f438_51c68a00",
      "revId": "8b92e6f74d691b41e2f6cb8bd8fc1b8855f39e78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9451b748_254da7fa",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list/gr-change-list.ts",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-09-26T12:06:44Z",
      "side": 1,
      "message": "Purely optional.\n\nCan be written as:\n\n```\nreturn sections.map(section \u003d\u003e section.results.length)\n  .reduce((a, b) \u003d\u003e a.concat(a[a.length - 1] + b), [0]);\n```",
      "revId": "8b92e6f74d691b41e2f6cb8bd8fc1b8855f39e78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "786945bd_d28aee6c",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list/gr-change-list.ts",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2022-09-26T12:21:06Z",
      "side": 1,
      "message": "I\u0027ve thought about it, but to me it felt like it hurts both readability and efficiency.",
      "parentUuid": "9451b748_254da7fa",
      "revId": "8b92e6f74d691b41e2f6cb8bd8fc1b8855f39e78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecaad4b3_c9383afa",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list/gr-change-list.ts",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-09-26T12:37:14Z",
      "side": 1,
      "message": "My $0.02 is that there is room for bugs since you are overwriting values in place to change the meaning of the array and doing logic to keep around the overwritten value for a bit, and there is no test coverage. So it seems there is complication added to avoid making a second array, that is a tradeoff of readability for perf that isn\u0027t really needed in this situation.",
      "parentUuid": "786945bd_d28aee6c",
      "revId": "8b92e6f74d691b41e2f6cb8bd8fc1b8855f39e78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}