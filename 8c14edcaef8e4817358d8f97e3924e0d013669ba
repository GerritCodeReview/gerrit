{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2d763dbc_750ab7b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-16T21:45:11Z",
      "side": 1,
      "message": "I like this solution, but now I wonder if this is going to break anyone depending on the current behavior. Was this a behavior that changed 3.1-\u003e3.2?",
      "revId": "8c14edcaef8e4817358d8f97e3924e0d013669ba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87a85b35_1d09309f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2021-09-17T14:20:11Z",
      "side": 1,
      "message": "TLDR; I don\u0027t believe so.\n\nProject.NameKey, alongside other key types (such as PatchSet.Id, Change.Key, Change.Id, Branch.NameKey, etc) were always serialized as strings.\n\nIn fact, this behaviour broke with the refactoring brought in by autovalue-keys [1].\nWhen that happened, Issue 10776 arose [2] and it was ultimately fixed in [3].\n\nI believe [3] just didn\u0027t take into consideration that Project.NameKey (contrary to *all* other key type classes) had subclasses, which is what we are rectifying now with this change.\n\nChange [4] was introduced to cover any regression regarding this, so have some decent level of confidence this is not breaking anyone.\n\n[1]https://gerrit-review.googlesource.com/q/topic:%22autovalue-keys%22+(status:open%20OR%20status:merged))\n[2]https://bugs.chromium.org/p/gerrit/issues/detail?id\u003d10776\n[3]https://gerrit-review.googlesource.com/c/gerrit/+/222306\n[4]https://gerrit-review.googlesource.com/c/gerrit/+/222732",
      "parentUuid": "2d763dbc_750ab7b2",
      "revId": "8c14edcaef8e4817358d8f97e3924e0d013669ba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}