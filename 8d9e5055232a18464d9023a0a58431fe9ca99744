{
  "comments": [
    {
      "key": {
        "uuid": "edb7a9b3_87d5263b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/common/MultiLock.java",
        "patchSetId": 31
      },
      "lineNbr": 22,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "Not an interface.",
      "range": {
        "startLine": 22,
        "startChar": 8,
        "endLine": 22,
        "endChar": 17
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_c8cb2f9f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/common/MultiLock.java",
        "patchSetId": 31
      },
      "lineNbr": 30,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "One line, and ending with a period.",
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb7a9b3_27c79a98",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/common/MultiLock.java",
        "patchSetId": 31
      },
      "lineNbr": 33,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "new HashSet\u003c\u003e();",
      "range": {
        "startLine": 33,
        "startChar": 19,
        "endLine": 33,
        "endChar": 36
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb7a9b3_c7cb1e9f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/common/MultiLock.java",
        "patchSetId": 31
      },
      "lineNbr": 38,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "\u003cp\u003e",
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb7a9b3_e7c8a2a4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/common/MultiLock.java",
        "patchSetId": 31
      },
      "lineNbr": 41,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "} will be returned",
      "range": {
        "startLine": 41,
        "startChar": 25,
        "endLine": 41,
        "endChar": 43
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_88d5373b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/common/MultiLock.java",
        "patchSetId": 31
      },
      "lineNbr": 44,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "true if the operation could succeed...; false otherwise.",
      "range": {
        "startLine": 44,
        "startChar": 13,
        "endLine": 44,
        "endChar": 15
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb7a9b3_a7d2aa4e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/common/MultiLock.java",
        "patchSetId": 31
      },
      "lineNbr": 47,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "The biggest issue I see with this interface is that there is no way to track down who owns a lock on a particular resource. This means you have to be very careful writing the worker code that acquires and releases multilocks, because you don\u0027t want an uncaught exception causing orphaned locks.",
      "range": {
        "startLine": 47,
        "startChar": 22,
        "endLine": 47,
        "endChar": 29
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_a8d27b4e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/common/MultiLock.java",
        "patchSetId": 31
      },
      "lineNbr": 48,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "If we cared about performance, you could write this operation in a way that doesn\u0027t require allocating a new set to hold the result. I think that\u0027s premature at this point though.",
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_e8c873a4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/common/MultiLock.java",
        "patchSetId": 31
      },
      "lineNbr": 58,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "This is not enforced by the method body at all. Should it be?",
      "range": {
        "startLine": 57,
        "startChar": 41,
        "endLine": 58,
        "endChar": 19
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb7a9b3_67e6f232",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 31
      },
      "lineNbr": 216,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "ChangeSet submittedChanges \u003d ChangeSet.create(submit(rsrc, caller, false));\n\nThat way you don\u0027t create a set (which is unnecessary, ChangeSet.create takes any Iterable), and you avoid some duplication in the if/else branches.",
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_88521738",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 31
      },
      "lineNbr": 32,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "manages",
      "range": {
        "startLine": 32,
        "startChar": 14,
        "endLine": 32,
        "endChar": 25
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb7a9b3_073ff6d9",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeMergeQueue.java",
        "patchSetId": 31
      },
      "lineNbr": 33,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "\u003cp\u003e",
      "range": {
        "startLine": 33,
        "startChar": 56,
        "endLine": 33,
        "endChar": 57
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb7a9b3_47e16e17",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ChangeSet.java",
        "patchSetId": 31
      },
      "lineNbr": 23,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "Document this class.",
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb7a9b3_27e0fa10",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeQueue.java",
        "patchSetId": 31
      },
      "lineNbr": 21,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "Here and elsewhere, you should document that this is not guaranteed to merge the changes, only to make one attempt at merging.",
      "range": {
        "startLine": 21,
        "startChar": 5,
        "endLine": 21,
        "endChar": 11
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb7a9b3_07db7669",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeQueue.java",
        "patchSetId": 31
      },
      "lineNbr": 22,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "\u003cp\u003e",
      "range": {
        "startLine": 22,
        "startChar": 24,
        "endLine": 22,
        "endChar": 25
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_68e6c332",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/PriorityLockedQueue.java",
        "patchSetId": 31
      },
      "lineNbr": 14,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "Extra blank line.",
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_c8f48fd5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/PriorityLockedQueue.java",
        "patchSetId": 31
      },
      "lineNbr": 33,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "Type parameter names must be one or two uppercase letters, otherwise it\u0027s confusing to try to distinguish between type parameters and actual type names.\n\n PriorityLockedQueue\u003cR, T extends ResourceTask\u003cR\u003e\u003e",
      "range": {
        "startLine": 33,
        "startChar": 42,
        "endLine": 33,
        "endChar": 50
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_a84fdb90",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/PriorityLockedQueue.java",
        "patchSetId": 31
      },
      "lineNbr": 39,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "What purpose does this semaphore serve? The only places I see it used are:\n\n* processTask acquires a semaphore immediately after constructing it.\n* processed releases the semaphore.\n\nSemaphores are used to block until a permit can be acquired, but I don\u0027t see any acquire call that will not just trivially return.",
      "range": {
        "startLine": 39,
        "startChar": 38,
        "endLine": 39,
        "endChar": 47
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb7a9b3_c758fe5b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/PriorityLockedQueue.java",
        "patchSetId": 31
      },
      "lineNbr": 83,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "Unnecessary finals.",
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_48ae5f9a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/PriorityLockedQueue.java",
        "patchSetId": 31
      },
      "lineNbr": 96,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "else if",
      "range": {
        "startLine": 95,
        "startChar": 6,
        "endLine": 96,
        "endChar": 8
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_68b323ff",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/PriorityLockedQueue.java",
        "patchSetId": 31
      },
      "lineNbr": 97,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "I\u0027m not completely sure, but I think setting mayInterruptIfRunning \u003d false means that this task might not actually get canceled before the next task is submitted. I think this can cause us to get into your \"should never happen\" block below.\n\nISTR the way ChangeMergeQueue used to work was if a task got scheduled too early, it would detect this and reschedule itself. What\u0027s wrong with doing that here? The cost of the extra wakeups seems small, and then we don\u0027t have to reason about why there may or may not be a task available on wakeup.",
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb7a9b3_27447a79",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/PriorityLockedQueue.java",
        "patchSetId": 31
      },
      "lineNbr": 132,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "This contract makes implementation awkward; what if an implementor fails to call process, or calls it more than once, or calls it too soon?\n\nInstead, consider:\n\n protected abstract void processImpl(Task task);\n\n final void process(Task task) {\n   processImpl(task);\n   locks.unlock(task.resources());\n   ...\n }",
      "range": {
        "startLine": 131,
        "startChar": 5,
        "endLine": 132,
        "endChar": 46
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_e8f153e2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/PriorityLockedQueue.java",
        "patchSetId": 31
      },
      "lineNbr": 146,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "TimedResourceTask",
      "range": {
        "startLine": 146,
        "startChar": 16,
        "endLine": 146,
        "endChar": 34
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_a8eb5bf0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/PriorityLockedQueue.java",
        "patchSetId": 31
      },
      "lineNbr": 165,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "Don\u0027t implement a comparator, just make TimedResourceTask implement Comparable",
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_88ee9701",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/PriorityLockedQueue.java",
        "patchSetId": 31
      },
      "lineNbr": 168,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "return Long.compare(x.scheduledTime(), y.scheduledTime());",
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb7a9b3_87ee8601",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ReceiveCommits.java",
        "patchSetId": 31
      },
      "lineNbr": 1731,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "Don\u0027t use Set\u003cChange\u003e, just List.",
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb7a9b3_e7f182e2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ReloadSubmitQueueOp.java",
        "patchSetId": 31
      },
      "lineNbr": 58,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "I believe I mentioned this before, I don\u0027t understand this last sentence.",
      "range": {
        "startLine": 57,
        "startChar": 68,
        "endLine": 58,
        "endChar": 49
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb7a9b3_c7f47ed5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ResourceTask.java",
        "patchSetId": 31
      },
      "lineNbr": 19,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "Type parameters must be one or two capital letters. This should be ResourceTask\u003cT\u003e",
      "range": {
        "startLine": 19,
        "startChar": 30,
        "endLine": 19,
        "endChar": 38
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_28e0cb10",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ResourceTask.java",
        "patchSetId": 31
      },
      "lineNbr": 22,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "You should define what \"needed\" means in this context. I think it means that in order for the task to be performed, locks on all of these resources need to be acquired. In that sense, this class really should only be used in conjunction with a MultiLock\u003cT\u003e. You should probably say so.",
      "range": {
        "startLine": 22,
        "startChar": 27,
        "endLine": 22,
        "endChar": 33
      },
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db5ddab_08db8769",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/ResourceTask.java",
        "patchSetId": 31
      },
      "lineNbr": 22,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-12T22:23:11Z",
      "side": 1,
      "message": "One line, end with a period.",
      "revId": "8d9e5055232a18464d9023a0a58431fe9ca99744",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}