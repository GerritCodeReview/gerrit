{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "75275460_ae6f8775",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1152372
      },
      "writtenOn": "2022-10-20T19:45:01Z",
      "side": 1,
      "message": "Renamed new FileContent attribute to gitFileMode and added a check for valid file modes and overloaded file construction so the tests don\u0027t always have to provide the fileMode parameter.",
      "revId": "8dc651788a2cbc473fee90fe9e835ad967daf447",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1df002d1_5b474166",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 5
      },
      "lineNbr": 2938,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-10-21T06:28:26Z",
      "side": 1,
      "message": "That\u0027s not entirely true, which now makes me wonder what your use case is :-)\n\nUNIX style file mode is what you describe here (755 and friends) - so marking what users have what permissions including if the file is executable.\n\nGit supports only a subset of these. For files, that is 755 (executable) and 644 (regular). Git uses higher bits to distinguish between files, trees (0040000), submodules (0160000).\n\nMore on that here: https://git-scm.com/docs/user-manual (\"Note that the files all have mode 644 or 755: Git actually only pays attention to the executable bit.\").\n\nWhat is your use case? Do you just want to make a file created over the API executable? Or do you want to create a git submodule link or something else over the API.\n\nIf just the former, I think we should start with just that, so accept an integer on the API, but add a check and throw an exception if it\u0027s not either 644 or 755. That spares us the effort of having to deal with more git internals (e.g. user claims new file is a gitlink or tree which means we need to validate).",
      "range": {
        "startLine": 2938,
        "startChar": 14,
        "endLine": 2938,
        "endChar": 42
      },
      "revId": "8dc651788a2cbc473fee90fe9e835ad967daf447",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe23f1bf_0c4f9dc4",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 5
      },
      "lineNbr": 2938,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-10-21T08:16:47Z",
      "side": 1,
      "message": "If it\u0027s only supposed to govern whether the file is executable or not one might also argue that this should be a boolean and not an int in the API.",
      "parentUuid": "1df002d1_5b474166",
      "range": {
        "startLine": 2938,
        "startChar": 14,
        "endLine": 2938,
        "endChar": 42
      },
      "revId": "8dc651788a2cbc473fee90fe9e835ad967daf447",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edf8ce0d_3a1fb594",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 5
      },
      "lineNbr": 2938,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-10-21T08:34:49Z",
      "side": 1,
      "message": "I was thinking about that but unix file modes are commonly known and if we\u0027d want to extend in the future, the int would allow to incorporate git-variants as well. WDYT?",
      "parentUuid": "fe23f1bf_0c4f9dc4",
      "range": {
        "startLine": 2938,
        "startChar": 14,
        "endLine": 2938,
        "endChar": 42
      },
      "revId": "8dc651788a2cbc473fee90fe9e835ad967daf447",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "470ec170_64970124",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 5
      },
      "lineNbr": 2938,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-10-21T08:57:13Z",
      "side": 1,
      "message": "I\u0027m totally fine with both int and boolean, so the the following argument is just to explain why I\u0027m _ever so slightly_ in favor of an \"executable\" boolean.\n\nI might be lacking in imagination but I don\u0027t see a use-case for a client to do git-surgery through the REST API (adding blobs and trees instead of a file in a path), if that assumption is correct keeping the API more general (int instead of boolean) has it\u0027s benefits __if__ git starts caring about file-authorization in the future and I don\u0027t see why git would do that.\nIf both those assumptions are correct the int would always be limited to two values, 755 or 644, and in that case the appearance of a wider array of options is just confusing.\nThe boolean would be the equivalent of shorthand `chmod +x file.txt` so it\u0027s not totally unthinkable to add FileMode to the API at a later date and have both options in that case.",
      "parentUuid": "edf8ce0d_3a1fb594",
      "range": {
        "startLine": 2938,
        "startChar": 14,
        "endLine": 2938,
        "endChar": 42
      },
      "revId": "8dc651788a2cbc473fee90fe9e835ad967daf447",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "610c36b2_9b9146c8",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 5
      },
      "lineNbr": 2938,
      "author": {
        "id": 1152372
      },
      "writtenOn": "2022-10-21T16:13:23Z",
      "side": 1,
      "message": "\u003eThat spares us the effort of having to deal with more git internals (e.g. user claims new file is a gitlink or tree which means we need to validate).\n\nThis sounds reasonable, the use case was to support executable files. I was under the impression that a larger set of permissions was supported by git, but since that\u0027s not the case, I will simplify the check so that supported values are 755 or 644.",
      "parentUuid": "470ec170_64970124",
      "range": {
        "startLine": 2938,
        "startChar": 14,
        "endLine": 2938,
        "endChar": 42
      },
      "revId": "8dc651788a2cbc473fee90fe9e835ad967daf447",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}