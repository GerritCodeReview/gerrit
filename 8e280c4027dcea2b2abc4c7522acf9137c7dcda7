{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c4d180d4_017d955d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-10-04T17:37:06Z",
      "side": 1,
      "message": "Looks good overall.\nSpecial appreciation for adding the tests and extracting the common logic.\n\nCouple more comments/nits before the final +1.",
      "revId": "8e280c4027dcea2b2abc4c7522acf9137c7dcda7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be4860e0_badb28e3",
        "filename": "java/com/google/gerrit/server/restapi/change/CreateChange.java",
        "patchSetId": 6
      },
      "lineNbr": 379,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-10-04T17:37:06Z",
      "side": 1,
      "message": "nit: also log in case there are merge conflicts in patch",
      "range": {
        "startLine": 375,
        "startChar": 1,
        "endLine": 379,
        "endChar": 9
      },
      "revId": "8e280c4027dcea2b2abc4c7522acf9137c7dcda7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0427a8a4_835b8a57",
        "filename": "javatests/com/google/gerrit/acceptance/rest/change/CreateChangeIT.java",
        "patchSetId": 6
      },
      "lineNbr": 930,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-10-04T17:37:06Z",
      "side": 1,
      "message": "nit: it would be nice to name tests in a format action_expectedResult. I.e.\ncreateChangeWithMergeAndPatch_fails or createChangeWithMergeAndPatch_notAllowed",
      "range": {
        "startLine": 930,
        "startChar": 14,
        "endLine": 930,
        "endChar": 55
      },
      "revId": "8e280c4027dcea2b2abc4c7522acf9137c7dcda7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1e352d6_53a100cc",
        "filename": "javatests/com/google/gerrit/acceptance/rest/change/CreateChangeIT.java",
        "patchSetId": 6
      },
      "lineNbr": 937,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-10-04T17:37:06Z",
      "side": 1,
      "message": "nit: should be private static final?\nTip: you can try \u0027Test import\u0027 option to run internal validation on the change, and use formatting suggestions from there.\n\nThis will help to save effort fixing lint warnings on import :)",
      "range": {
        "startLine": 937,
        "startChar": 2,
        "endLine": 937,
        "endChar": 14
      },
      "revId": "8e280c4027dcea2b2abc4c7522acf9137c7dcda7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d1480db_5374d100",
        "filename": "javatests/com/google/gerrit/acceptance/rest/change/CreateChangeIT.java",
        "patchSetId": 6
      },
      "lineNbr": 994,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-10-04T17:37:06Z",
      "side": 1,
      "message": "I do not really understand why this test requires two commits in different branches for the set up?\nI think we only want to test that we applied the patch to the correct base (e.g. not the tip).\n\nIn this case, I think this is not enough to just assert the diff: since we always add the file, it is still the same regardless of the baseTree.\nIf we e.g. delete the file, then the test will fail if the patch is applied on the wrong tree.",
      "range": {
        "startLine": 994,
        "startChar": 8,
        "endLine": 994,
        "endChar": 27
      },
      "revId": "8e280c4027dcea2b2abc4c7522acf9137c7dcda7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4308848b_f3b6dd2c",
        "filename": "javatests/com/google/gerrit/acceptance/rest/change/CreateChangeIT.java",
        "patchSetId": 6
      },
      "lineNbr": 1011,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-10-04T17:37:06Z",
      "side": 1,
      "message": "This should be BadRequest?",
      "range": {
        "startLine": 1011,
        "startChar": 15,
        "endLine": 1011,
        "endChar": 35
      },
      "revId": "8e280c4027dcea2b2abc4c7522acf9137c7dcda7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a227ec27_a6374bb6",
        "filename": "javatests/com/google/gerrit/acceptance/rest/change/CreateChangeIT.java",
        "patchSetId": 6
      },
      "lineNbr": 1015,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-10-04T17:37:06Z",
      "side": 1,
      "message": "nit: I don\u0027t believe this will be translated to internal error? this should be 400 - Bad request?",
      "range": {
        "startLine": 1015,
        "startChar": 33,
        "endLine": 1015,
        "endChar": 52
      },
      "revId": "8e280c4027dcea2b2abc4c7522acf9137c7dcda7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84d7dfa3_90062d90",
        "filename": "javatests/com/google/gerrit/acceptance/rest/change/CreateChangeIT.java",
        "patchSetId": 6
      },
      "lineNbr": 1285,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-10-04T17:37:06Z",
      "side": 1,
      "message": "thank you for adding the tests!\nI think the coverage is much better now.\n\nTests that would be nice to have:\n* input.author is respected for the new patch\n* Change can be still created if there are merge conflicts.",
      "range": {
        "startLine": 1285,
        "startChar": 22,
        "endLine": 1285,
        "endChar": 49
      },
      "revId": "8e280c4027dcea2b2abc4c7522acf9137c7dcda7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}