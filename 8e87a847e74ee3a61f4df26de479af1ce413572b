{
  "comments": [
    {
      "key": {
        "uuid": "3c8e7a42_ae7237e8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 11,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-03-17T23:11:04Z",
      "side": 1,
      "message": "There is a feature to add a label on new change creation/new patch set upload by using magic branch option: \"l\". This way, it is already possible to put a bot vote during change creation/new patch set upload:\n\n  git push review HEAD:refs/for/master%l\u003dVerify+1\n\nWould it make sense to consider to suport initial votes through magic branch as well? Mention in the commit message, that this use case is not supported yet?",
      "revId": "8e87a847e74ee3a61f4df26de479af1ce413572b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ca472ba_108284f5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2016-03-17T22:49:40Z",
      "side": 1,
      "message": "currently tag\u0027s are not set on the approvals, simply because this data type do not allow to add additional info.\n\nShould the value be changed from Optional\u003cShort\u003e to a custom object that will have Short (vote) and String (tag), or whole approval should be a \"full blown java object\" (eg. PatchLineComment)?",
      "range": {
        "startLine": 107,
        "startChar": 16,
        "endLine": 107,
        "endChar": 69
      },
      "revId": "8e87a847e74ee3a61f4df26de479af1ce413572b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ca472ba_508c0c26",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-03-17T23:11:04Z",
      "side": 1,
      "message": "May be:\n\n  class ApprovalData {\n    Optional\u003cShort\u003e vote; // or score\n    Optional\u003cString\u003e tag;\n  }",
      "parentUuid": "7ca472ba_108284f5",
      "range": {
        "startLine": 107,
        "startChar": 16,
        "endLine": 107,
        "endChar": 69
      },
      "revId": "8e87a847e74ee3a61f4df26de479af1ce413572b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ca472ba_10052435",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-03-18T06:07:34Z",
      "side": 1,
      "message": "No, don\u0027t go creating new types.\n\nI think within a ChangeUpdate you just need to set the single Tag footer on the commit. Then when parsing you apply that tag to all ChangeMessage and PatchSetApproval objects from that commit.\n\nPatchLineComments are different, you store and parse all fields from each comment in the note.",
      "parentUuid": "7ca472ba_508c0c26",
      "range": {
        "startLine": 107,
        "startChar": 16,
        "endLine": 107,
        "endChar": 69
      },
      "revId": "8e87a847e74ee3a61f4df26de479af1ce413572b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ca472ba_f01d0054",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-03-18T10:48:41Z",
      "side": 1,
      "message": "(Note that this means that it\u0027s not possible within a single update to set some approvals to one tag and other approvals to a different tag. I think this is a perfectly reasonable restriction. If there is some obscure use case that really needs this, they can just split it into two updates with the same timestamp.)",
      "parentUuid": "7ca472ba_10052435",
      "range": {
        "startLine": 107,
        "startChar": 16,
        "endLine": 107,
        "endChar": 69
      },
      "revId": "8e87a847e74ee3a61f4df26de479af1ce413572b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}