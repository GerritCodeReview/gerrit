{
  "comments": [
    {
      "key": {
        "uuid": "e78ebdb0_3e498966",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-16T08:39:34Z",
      "side": 1,
      "message": "Needing to overwrite this method seems not very comfortable to me. From a users point of view, I would prefer to be able to simply set config parameters, e.g. in the setUp() method I would like to be able to do:\n\n  getConfig().setInt(\"suggest\", null, \"from\", 5);\n\nAlso I would like to be able to have different server configurations per test method, which is not possible by overwriting this method. E.g. for one test method I would like to set \"suggest.from\" to 5 and in another test method to 3. I\u0027m aware that setting config parameters after the server has been started have no effect but maybe we could simply restart the server after the configuration has been changed? In a test method I would then do:\n\n  getConfig().setInt(\"suggest\", null, \"from\", 5);\n  getConfig().setString(...);\n  restart();\n\nWhat do you think about this idea?",
      "revId": "8ea31ad882f048d147d31af360290c229e779982",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e78ebdb0_7e431144",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-09-16T08:58:32Z",
      "side": 1,
      "message": "Yes, setting the configuration differently in different @Test methods is exactly what we need here!\n\nActually i saw the limitation of the approach above and documented it in this comment (8:40 AM):\n\n https://gerrit-review.googlesource.com/#/c/49392/12/gerrit-server/src/main/java/com/google/gerrit/server/change/SuggestReviewers.java\n\nI think that restarting the daemon is a very expensive option. Unless we support (partilal) configuration refresh it might be the only option we have.",
      "parentUuid": "e78ebdb0_3e498966",
      "revId": "8ea31ad882f048d147d31af360290c229e779982",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e78ebdb0_5ea575f2",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/AbstractDaemonTest.java",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-09-16T11:02:22Z",
      "side": 1,
      "message": "I would like a better name as the intention is to override the (existing) server properties. See my other comment in the GerritServer class.",
      "revId": "8ea31ad882f048d147d31af360290c229e779982",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c78b79a1_1d4cd375",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/GerritServer.java",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-09-16T11:02:22Z",
      "side": 1,
      "message": "It will not work if you want to override an existing property. For example:\n\n  baseConig.setString(\"user\", null, \"name\", \"Name from Base\");\n  cfg \u003d new Config(baseConfig);\n  cfg.setString(\"user\", null, \"name\", \"Name from this\");\n  cfg.getString(\"user\", null, \"name\")\n\nwill return \"Name from this\". The baseConfig is used when as a defaultValue when the cfg doesn\u0027t provide a value for a key.\n\nYou would either need to let baseConfig wrap cfg or let the test modify the cfg directly. Maybe, in the AbstractDaemonTest define a method like:\n\n  protected void overrideServerConfig(Config config) {\n  }\n\nand pass the cfg to it. This would require exposing of the cfg before the daemon is started which shouldn\u0027t be a problem.",
      "revId": "8ea31ad882f048d147d31af360290c229e779982",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}