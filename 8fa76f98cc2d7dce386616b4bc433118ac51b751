{
  "comments": [
    {
      "key": {
        "uuid": "3f20ecdd_e83b73e3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/FlushCache.java",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-05-28T07:02:44Z",
      "side": 1,
      "message": "2014?",
      "revId": "8fa76f98cc2d7dce386616b4bc433118ac51b751",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff19f4bf_4636f208",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/FlushCache.java",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-05-28T08:34:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f20ecdd_e83b73e3",
      "revId": "8fa76f98cc2d7dce386616b4bc433118ac51b751",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f2be0c2_4980c138",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/FlushCache.java",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-05-28T07:02:44Z",
      "side": 1,
      "message": "Can we now change the SSH code to call this implementation, so we can move this test to only this location in the code?",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 50,
        "endChar": 5
      },
      "revId": "8fa76f98cc2d7dce386616b4bc433118ac51b751",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff19f4bf_e6243ed0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/FlushCache.java",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-05-28T07:49:14Z",
      "side": 1,
      "message": "Not directly. The appropriate way to accomplish this is through using of plugin API. PluginAPI should expose new interface: Config or ServerConfig, a l√°:\n\n  @Inject\n  PluginAPI api;\n  [...]\n  api.config().caches().flushAll();",
      "parentUuid": "5f2be0c2_4980c138",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 50,
        "endChar": 5
      },
      "revId": "8fa76f98cc2d7dce386616b4bc433118ac51b751",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fda4833_7f362f09",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/FlushCache.java",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-05-28T08:03:58Z",
      "side": 1,
      "message": "Opps, flush-all happens in a follow-up change, so i should have said instead:\n\n  api.config().caches(\"foo\").flush();",
      "parentUuid": "ff19f4bf_e6243ed0",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 50,
        "endChar": 5
      },
      "revId": "8fa76f98cc2d7dce386616b4bc433118ac51b751",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff19f4bf_c62142be",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/FlushCache.java",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-05-28T08:34:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f2be0c2_4980c138",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 50,
        "endChar": 5
      },
      "revId": "8fa76f98cc2d7dce386616b4bc433118ac51b751",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff19f4bf_264e5682",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/FlushCache.java",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-05-28T08:34:48Z",
      "side": 1,
      "message": "Yes, we should define an API for this but this can be done in a separate change.",
      "parentUuid": "1fda4833_7f362f09",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 50,
        "endChar": 5
      },
      "revId": "8fa76f98cc2d7dce386616b4bc433118ac51b751",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f20ecdd_883e37d5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/FlushCache.java",
        "patchSetId": 7
      },
      "lineNbr": 52,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-05-28T07:02:44Z",
      "side": 1,
      "message": "I am a bit worried about this in our installation. We routinely hand out administrateServer, but I don\u0027t actually want our admins to flush our caches, nor do I want them delegating that capability to others to flush. :)",
      "revId": "8fa76f98cc2d7dce386616b4bc433118ac51b751",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff19f4bf_06535a26",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/FlushCache.java",
        "patchSetId": 7
      },
      "lineNbr": 52,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-05-28T08:34:48Z",
      "side": 1,
      "message": "Ok, what do you suggest then?\n\nWhy don\u0027t you create a group for these users and only grant them the capabilities that they should have rather than making them admin?",
      "parentUuid": "3f20ecdd_883e37d5",
      "revId": "8fa76f98cc2d7dce386616b4bc433118ac51b751",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff19f4bf_a641a64d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/FlushCache.java",
        "patchSetId": 7
      },
      "lineNbr": 52,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-05-28T10:24:43Z",
      "side": 1,
      "message": "Another option to address that would be to decouple FLUSH_CACHES from AdminServer ACL, like we did with ACCESS_DATABASE. So that it\u0027s not enough to be admin to flush caches.",
      "parentUuid": "ff19f4bf_06535a26",
      "revId": "8fa76f98cc2d7dce386616b4bc433118ac51b751",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fda4833_5f7b2b99",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/FlushCache.java",
        "patchSetId": 7
      },
      "lineNbr": 52,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-05-28T11:21:43Z",
      "side": 1,
      "message": "This will not help. If they are admin they can always grant this new capability to themselves.",
      "parentUuid": "ff19f4bf_a641a64d",
      "revId": "8fa76f98cc2d7dce386616b4bc433118ac51b751",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f0ee4b6_ead44757",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/FlushCache.java",
        "patchSetId": 7
      },
      "lineNbr": 52,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-05-29T05:48:35Z",
      "side": 1,
      "message": "invalidateAll is only used by the flush admin command. We could wrap our Cache\u003cK,V\u003e instances with a wrapper that makes invalidateAll() a no-op. :)\n\nWe hand out admin because many teams run their own ACLs. Given that canAdministrateServer() is a fallback case throughout the ACL system that lets them do whatever they want, this works for us.\n\nIn retrospect we maybe could have gotten there somewhat by granting Owner on refs/* to the \"admins\" in a new Top-Level project and granted capabilities for Create Group and Create Project and gotten about 99% of the way there if we could force Create Project to require all projects to inherit either directly or indirectly through Top-Level. Then the \"admins\" can\u0027t edit capabilities in All-Projects, but they can still manage all ACLs.",
      "parentUuid": "1fda4833_5f7b2b99",
      "revId": "8fa76f98cc2d7dce386616b4bc433118ac51b751",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}