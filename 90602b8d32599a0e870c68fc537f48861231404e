{
  "comments": [
    {
      "key": {
        "uuid": "4d58911a_8f041532",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 5
      },
      "lineNbr": 255,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-01-17T00:35:36Z",
      "side": 1,
      "message": "I think we should be stamping the submit record that was accepted by the submit rule, not all existing approvals.",
      "revId": "90602b8d32599a0e870c68fc537f48861231404e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd1c8154_23ed0a33",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 5
      },
      "lineNbr": 255,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-01-17T00:39:30Z",
      "side": 1,
      "message": "Doesn\u0027t that lose the normalized label information for other users who voted on the change but for whatever reason weren\u0027t emitted by the prolog?",
      "parentUuid": "4d58911a_8f041532",
      "revId": "90602b8d32599a0e870c68fc537f48861231404e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d58911a_2f16c962",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 5
      },
      "lineNbr": 255,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-01-17T00:40:42Z",
      "side": 1,
      "message": "Yes. Maybe we need two chunks of data recorded? One that covers the prolog results, and another that covers anything not mentioned by the prolog, but normalized.",
      "parentUuid": "cd1c8154_23ed0a33",
      "revId": "90602b8d32599a0e870c68fc537f48861231404e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd1c8154_63f70201",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 5
      },
      "lineNbr": 255,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-01-17T00:43:09Z",
      "side": 1,
      "message": "What is the advantage of having the prolog results? That it mentions only the labels specifically required according to the prolog rules?\n\nRather than storing redundant information it might be nice to figure out just what is the additional information that the submit rule evaluator provides over and above the label information...but I can see where that might be nontrivial to code.\n\nAlso, suggestions for two descriptive footer keys that distinguish these two cases welcome :)",
      "parentUuid": "4d58911a_2f16c962",
      "revId": "90602b8d32599a0e870c68fc537f48861231404e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d58911a_4f130d72",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 5
      },
      "lineNbr": 255,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-01-17T00:49:03Z",
      "side": 1,
      "message": "Right, we want a snapshot of the labels used at submit time in case the rules change over time and a different set is required in the future. It makes it more clear why this change could be submitted.\n\nOne case that is interesting is e.g. \"verifier !\u003d reviewer\". If the rules require these to be different users the Prolog results will show that even if both users set both labels.\n\nMaybe:\n\n  Approved: Code-Review\u003d+2 ...\n  Approved: Verified\u003d+1 ...\n  Label: Code-Review\u003d+1 ...\n\nand in a record where \"Status: submitted\" the Label entries are the normalized ones?",
      "parentUuid": "cd1c8154_63f70201",
      "revId": "90602b8d32599a0e870c68fc537f48861231404e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd1c8154_c3fef6d7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 5
      },
      "lineNbr": 255,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-01-17T00:58:45Z",
      "side": 1,
      "message": "Agreed at this point we should have them separate. This will actually make the ChangeJson.labelsFor{Open,Closed}Change implementations just call different methods on the ChangeNotes, which is nice, because those methods are disgusting right now.\n\nNow to bikeshed the names. So I had previously considered:\n\n Label: Code-Review\u003d+1 A User ...\n\nbut that would mean there are two ways of parsing the \"Label\" footer. Not technically impossible, but possibly confusing.\n\nAlso, it would be possible to have both:\n\n Label: Code-Review\u003d+1\n Label: Code-Review\u003d+1 A User...\n\nwhere \"A User\" is also the committer on this commit. (Technically, there is even still a race where the permissions can change before setting each of these footers.) This is well-defined in that the former implies a label was assigned by this user, and the latter implies this label was immediately normalized and stamped at submit time. (Imagine a hypothetical /review_and_submit endpoint.) But perhaps confusing.\n\nAlthough clunky, I kind of liked \"Submitted-With\" because it says \"this is the result of the submit rule evaluator.\" I might prefer that in place of \"Approved\"...but I could go either way I think.",
      "parentUuid": "4d58911a_4f130d72",
      "revId": "90602b8d32599a0e870c68fc537f48861231404e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2a76688_041db64e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Submit.java",
        "patchSetId": 5
      },
      "lineNbr": 255,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-01-24T19:04:39Z",
      "side": 1,
      "message": "So we agree we should use two footers, one of the submit rule results and another for the other normalized labels?\n\nI think we can agree on \"Submitted-with\" is the rule results.\n\nLabel is already used without the user name when a user records their own labels. And you want to avoid the ambiguity of parsing two formats for this value. So you want a different name for the normalized labels that the submit rule did not use.\n\nDo we even need to normalize the others at submit time? Normalizing was mostly about trying to save the submit rule results permenantly. If we have that in the Submitted-with field maybe we can just grab the other labels as-is from the history and present them without normalization. We know they were normalized at the time they were stored in the history, so at some point in time it was valid.",
      "parentUuid": "cd1c8154_c3fef6d7",
      "revId": "90602b8d32599a0e870c68fc537f48861231404e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f24cc6b4_dc448d35",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNoteUtil.java",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-01-24T19:05:35Z",
      "side": 1,
      "message": "Do we want Submitted-With or Submitted-with? In Git its Signed-off-by not Signed-Off-By.",
      "range": {
        "startLine": 29,
        "startChar": 21,
        "endLine": 29,
        "endChar": 35
      },
      "revId": "90602b8d32599a0e870c68fc537f48861231404e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}