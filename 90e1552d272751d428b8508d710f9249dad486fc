{
  "comments": [
    {
      "key": {
        "uuid": "7ca1f7a9_100b6498",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/mail/CommentSender.java",
        "patchSetId": 11
      },
      "lineNbr": 59,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2016-10-18T19:25:54Z",
      "side": 1,
      "message": "i find this hard-coding rather horrible. there are certainly other file types that \"go in pairs\", and the user should be able to configure that.\n\nit gets even trickier than that: in the qt project, we have this common pattern:\n- foo.h\n- foo_p.h\n- foo.cpp\n- foo_unix.cpp\n- foo_win.cpp\n\nto properly support that, the code would have to do suffix matching, with two possible approaches:\n- the user specified the suffixes from longest to shortest and specifies the sort order separately\n- the use specifies the suffixes in the preferred order and the code automatically figures out the order in which to try them.",
      "revId": "90e1552d272751d428b8508d710f9249dad486fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c057749_30a7a860",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/mail/CommentSender.java",
        "patchSetId": 11
      },
      "lineNbr": 59,
      "author": {
        "id": 1027267
      },
      "writtenOn": "2016-10-18T19:32:45Z",
      "side": 1,
      "message": "It\u0027s not horrible. The goal here is to get file listing in a notification email to match the minimal work that was done on the UI side to satisfy a common real-life use case, and there\u0027s no shame in that.\n\nThis way files are sorted could be taken further, and I really like your idea. Would you submit this as a feature request? I don\u0027t think this change needs to be blocked in the meantime.",
      "parentUuid": "7ca1f7a9_100b6498",
      "revId": "90e1552d272751d428b8508d710f9249dad486fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c0513c2_97f6e471",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/mail/CommentSender.java",
        "patchSetId": 11
      },
      "lineNbr": 59,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-20T18:03:31Z",
      "side": 1,
      "message": "@Oswald You are correct that this solution would not scale to the general set of conceivable extension pairs, but, to echo a bit of what Logan has said, this change is about parity with other parts of the UI that sort files. In those cases CPP headers are currently the only exception to lexicographic order.",
      "parentUuid": "7c057749_30a7a860",
      "revId": "90e1552d272751d428b8508d710f9249dad486fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c285f69_2680b6dc",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/mail/CommentSender.java",
        "patchSetId": 11
      },
      "lineNbr": 107,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-10-21T21:40:31Z",
      "side": 1,
      "message": "I think this implementation smells a bit. You can play around with the new Comparators static methods, particularly comparing some boolean values, combining them with .thenComparing. You can write tests for that as well.\n\nThat said, I see that this is a literal copy/paste of the existing comparator. We don\u0027t have to let the perfect be the enemy of the good here, as long as we plan to do the cleanup soonish.",
      "revId": "90e1552d272751d428b8508d710f9249dad486fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}