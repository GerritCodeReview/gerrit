{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4d1040de_ac51c6ff",
        "filename": "polygerrit-ui/app/embed/diff/gr-coverage-layer/gr-coverage-layer.ts",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2022-11-17T09:45:38Z",
      "side": 1,
      "message": "While I appreciate the simplicity of using filter(unique). I feel like the `linesToRanges` makes the code complexity not easier (and together less performant) than just merging ranges directly. Something like the following (not tested)\n\n```\n  rangeBorders \u003d covRanges\n    .flatMap(r \u003d\u003e [{index: r.code_range.start_line, type: \u0027start\u0027}, {index: r.code_range.end_line, type: \u0027end\u0027}])\n    .sort(({index: index1, type: type1}, {index: index2, type: type2}) \u003d\u003e {\n      if (index1 !\u003d\u003d index2) {\n        return index1 - index2;\n      }\n      if (type1 !\u003d\u003d type2) {\n        return type1 \u003d\u003d\u003d \u0027start\u0027 ? -1 : 1;\n      }\n      return 0;\n    });\n  let cnt \u003d 0;\n  let from \u003d undefined;\n  let ranges \u003d [];\n  for (const rangeBorder of rangeBorders) {\n    if (rangeBorder.type \u003d\u003d\u003d \u0027start\u0027) {\n      if (cnt \u003d\u003d\u003d 0) from \u003d rangeBoder.index;\n      ++cnt;\n    }\n    if (rangeBorder.type \u003d\u003d\u003d \u0027end\u0027) {\n      --cnt;\n      if (cnt \u003d\u003d\u003d 0) ranges.push({from, rangeBorder.index})\n    }\n  }\n  return ranges;\n```",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 48,
        "endChar": 1
      },
      "revId": "9190124f28e6e53360b107a9537a45ed3d77d85b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "451cefb6_9a6cb39c",
        "filename": "polygerrit-ui/app/embed/diff/gr-coverage-layer/gr-coverage-layer.ts",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2022-11-17T09:50:12Z",
      "side": 1,
      "message": "Code explanation:\n\n1) Make the array of events for start and end of range (with starts before ends, to merge ranges that touch by 1 element)\n2) Go through the ranges and keep \"bracket count\".\n\nActually for merging touching ranges, it\u0027s better to make the `to` side non-inclusive (+1 for processing, -1 at the output):\n```\n  rangeBorders \u003d covRanges\n    .flatMap(r \u003d\u003e [{index: r.code_range.start_line, type: \u0027start\u0027}, {index: r.code_range.end_line + 1, type: \u0027end\u0027}])\n    .sort(({index: index1, type: type1}, {index: index2, type: type2}) \u003d\u003e {\n      if (index1 !\u003d\u003d index2) {\n        return index1 - index2;\n      }\n      if (type1 !\u003d\u003d type2) {\n        return type1 \u003d\u003d\u003d \u0027start\u0027 ? -1 : 1;\n      }\n      return 0;\n    });\n  let cnt \u003d 0;\n  let from \u003d undefined;\n  let ranges \u003d [];\n  for (const rangeBorder of rangeBorders) {\n    if (rangeBorder.type \u003d\u003d\u003d \u0027start\u0027) {\n      if (cnt \u003d\u003d\u003d 0) from \u003d rangeBoder.index;\n      ++cnt;\n    }\n    if (rangeBorder.type \u003d\u003d\u003d \u0027end\u0027) {\n      --cnt;\n      if (cnt \u003d\u003d\u003d 0) ranges.push({from, rangeBorder.index - 1})\n    }\n  }\n  return ranges;\n```",
      "parentUuid": "4d1040de_ac51c6ff",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 48,
        "endChar": 1
      },
      "revId": "9190124f28e6e53360b107a9537a45ed3d77d85b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6a4df52_13c4f42b",
        "filename": "polygerrit-ui/app/embed/diff/gr-coverage-layer/gr-coverage-layer.ts",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-11-17T11:20:56Z",
      "side": 1,
      "message": "I really appreciate that you take the time and write another algorithm for this, and I understand your point about your solution being more performant. OTOH I am not sure whether your solution is actually simpler. I think they are both equally simple. I have already written tests for `linesToRanges` and `rangesToLines`, so I would slightly prefer to keep the code as is. Maybe @poucet@google.com as the second reviewer can voice an opinion?\n\nTBH I would be open to just removing the entire optimization. We can also just call `notify()` for the original ranges and accept that certain parts of the diff might be rendered twice. This is really very much an edge case. WDYT?",
      "parentUuid": "451cefb6_9a6cb39c",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 48,
        "endChar": 1
      },
      "revId": "9190124f28e6e53360b107a9537a45ed3d77d85b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "953a9d3a_83ac0deb",
        "filename": "polygerrit-ui/app/embed/diff/gr-coverage-layer/gr-coverage-layer.ts",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2022-11-17T11:33:24Z",
      "side": 1,
      "message": "That was kind of my point. That since the simplicity is the same (ie. not that simple) makes sense to go for more performant (and the one that doesn\u0027t hurt my soul, by expanding small data into large data and back). Tbh, \"tests already written\" is not a strong argument for me. SGTM to let Chris arbitrate.\n\nNB: If I move comparator into a separate method and maybe add getBorders method (that adds a pair of borders) my code looks cleaner to me. But I do realize that this mostly a matter of opinion.",
      "parentUuid": "a6a4df52_13c4f42b",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 48,
        "endChar": 1
      },
      "revId": "9190124f28e6e53360b107a9537a45ed3d77d85b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87fb51f1_8c5b3ec4",
        "filename": "polygerrit-ui/app/embed/diff/gr-coverage-layer/gr-coverage-layer.ts",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-11-17T13:36:58Z",
      "side": 1,
      "message": "I find both versions not obvious to understand what it is actually trying to do.\n\nIs my understanding correct that you\u0027re trying to merge segments?",
      "parentUuid": "953a9d3a_83ac0deb",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 48,
        "endChar": 1
      },
      "revId": "9190124f28e6e53360b107a9537a45ed3d77d85b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec89633a_ebfb0928",
        "filename": "polygerrit-ui/app/embed/diff/gr-coverage-layer/gr-coverage-layer.ts",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-11-17T16:31:23Z",
      "side": 1,
      "message": "Yes, we want to merge\n1.:\n```\nfrom:1, to:5, type:COVERED\nfrom:6, to:9, type:NOT_COVERED\n```\ninto \n```\nfrom:1, to:9\n```\nand 2.:\n```\nfrom:1, to:4 (old range)\nfrom:2, to:5 (new range)\n```\ninto \n```\nfrom:1, to:5\n```\n\nBut I am fine with just removing all the optimization. I think it is rare that coverage ranges are updated at all. So most likely the old ranges are empty. And then I think we can call notify for each of the new coverage ranges without any ado. WDYT?\n\nBtw, If you want to know what my functions are doing, then your best bet is to look at the tests.",
      "parentUuid": "87fb51f1_8c5b3ec4",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 48,
        "endChar": 1
      },
      "revId": "9190124f28e6e53360b107a9537a45ed3d77d85b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fa7a8c5_b837e11e",
        "filename": "polygerrit-ui/app/embed/diff/gr-coverage-layer/gr-coverage-layer.ts",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-11-17T17:42:10Z",
      "side": 1,
      "message": "What about something like https://stackoverflow.com/questions/32585990/algorithm-merge-overlapping-segments ?",
      "parentUuid": "ec89633a_ebfb0928",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 48,
        "endChar": 1
      },
      "revId": "9190124f28e6e53360b107a9537a45ed3d77d85b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2cb4f79_9f3cf4c8",
        "filename": "polygerrit-ui/app/embed/diff/gr-coverage-layer/gr-coverage-layer.ts",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-11-17T18:23:51Z",
      "side": 1,
      "message": "Sure. I think there are definitely a lot of ways how this code could be written differently (maybe more understandable, maybe more performant), but maybe we are micro-optimizing here? I think 1 hour of SWE time discussing and improving these lines could potentially be spent better on other parts of the code base. If my code is seen as lacking quality I would rather remove it, because we don\u0027t need this optimization. I was just in perfectionist mood and thought, \"oh well, let\u0027s spend 15 minutes on this\".\n\nAnother alternative would be that you upload a patchset with a tested and commented solution. I can understand that this kind of algorithmic programming does not come up much, and we all enjoy finding perfect solutions to such questions. Could be an interview question really. :-)",
      "parentUuid": "4fa7a8c5_b837e11e",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 48,
        "endChar": 1
      },
      "revId": "9190124f28e6e53360b107a9537a45ed3d77d85b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3acb54f_1baae807",
        "filename": "polygerrit-ui/app/embed/diff/gr-coverage-layer/gr-coverage-layer.ts",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-11-17T18:25:18Z",
      "side": 1,
      "message": "My concern is that the two current solutions are not very readable. I had to guess as to what the intended functionality is.\n\nI\u0027m more than willing to take this over",
      "parentUuid": "a2cb4f79_9f3cf4c8",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 48,
        "endChar": 1
      },
      "revId": "9190124f28e6e53360b107a9537a45ed3d77d85b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "003e4627_4d5fc364",
        "filename": "polygerrit-ui/app/embed/diff/gr-coverage-layer/gr-coverage-layer.ts",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-11-17T18:28:33Z",
      "side": 1,
      "message": "Cool, thanks!",
      "parentUuid": "a3acb54f_1baae807",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 48,
        "endChar": 1
      },
      "revId": "9190124f28e6e53360b107a9537a45ed3d77d85b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbe4c976_c908a21d",
        "filename": "polygerrit-ui/app/embed/diff/gr-coverage-layer/gr-coverage-layer.ts",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2022-11-18T09:33:50Z",
      "side": 1,
      "message": "\u003e What about something like https://stackoverflow.com/questions/32585990/algorithm-merge-overlapping-segments ?\n\nThis is basically what my approach does (only mine is cleaner imo, though I guess matter of opinion again)",
      "parentUuid": "003e4627_4d5fc364",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 48,
        "endChar": 1
      },
      "revId": "9190124f28e6e53360b107a9537a45ed3d77d85b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}