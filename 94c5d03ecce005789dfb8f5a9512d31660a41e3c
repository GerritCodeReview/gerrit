{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dbdccfc1_a840bb43",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 549,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-09-24T12:37:13Z",
      "side": 1,
      "message": "I don\u0027t follow, why not?",
      "range": {
        "startLine": 547,
        "startChar": 0,
        "endLine": 549,
        "endChar": 0
      },
      "revId": "94c5d03ecce005789dfb8f5a9512d31660a41e3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "feea80db_8f5998cd",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 549,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-09-27T06:47:02Z",
      "side": 1,
      "message": "Just because nobody implemented this a batch event for this yet :) \nThe current event only accepts a single reviewer [1] and changing this is out of scope for this change.\n\n[1] https://gerrit.googlesource.com/gerrit/+/refs/heads/master/java/com/google/gerrit/server/extensions/events/ReviewerDeleted.java#53",
      "parentUuid": "dbdccfc1_a840bb43",
      "range": {
        "startLine": 547,
        "startChar": 0,
        "endLine": 549,
        "endChar": 0
      },
      "revId": "94c5d03ecce005789dfb8f5a9512d31660a41e3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f05ff8de_69b716a4",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 549,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-09-27T10:57:20Z",
      "side": 1,
      "message": "Can we better add a ReviewerDeleted#fire that accepts a list of removed users and just delegates the call to the existing one-by-one method? We will then be hiding this detail from here.",
      "parentUuid": "feea80db_8f5998cd",
      "range": {
        "startLine": 547,
        "startChar": 0,
        "endLine": 549,
        "endChar": 0
      },
      "revId": "94c5d03ecce005789dfb8f5a9512d31660a41e3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66d4d53f_a1e8ea35",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 549,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-09-27T14:09:08Z",
      "side": 1,
      "message": "Good idea, but unfortunately this is not easily possible. The problem is that the event does not only need to know the removed user, but also a bunch of other parameters, e.g. the old and new approvals, which we have not available here.",
      "parentUuid": "f05ff8de_69b716a4",
      "range": {
        "startLine": 547,
        "startChar": 0,
        "endLine": 549,
        "endChar": 0
      },
      "revId": "94c5d03ecce005789dfb8f5a9512d31660a41e3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "465754b7_62894c78",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 549,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-09-27T14:14:09Z",
      "side": 1,
      "message": "Forgot to mention that we can also not just move this code that we have here now into ReviewerDeleted, as this class is in the extensions package that should probably not depend on server classes such as ReviewerModifier.",
      "parentUuid": "66d4d53f_a1e8ea35",
      "range": {
        "startLine": 547,
        "startChar": 0,
        "endLine": 549,
        "endChar": 0
      },
      "revId": "94c5d03ecce005789dfb8f5a9512d31660a41e3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30956386_1fd94641",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReview.java",
        "patchSetId": 3
      },
      "lineNbr": 549,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-09-27T14:33:02Z",
      "side": 1,
      "message": "I think without starting a larger refactoring now, it\u0027s better to keep this as it is.",
      "parentUuid": "465754b7_62894c78",
      "range": {
        "startLine": 547,
        "startChar": 0,
        "endLine": 549,
        "endChar": 0
      },
      "revId": "94c5d03ecce005789dfb8f5a9512d31660a41e3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {},
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dgerrit~PrologRule"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "expression": {
          "expressionString": "label:Code-Review\u003dgerrit~PrologRule"
        },
        "status": "PASS",
        "errorMessage": {},
        "passingAtoms": [
          "label:Code-Review\u003dgerrit~PrologRule"
        ],
        "failingAtoms": []
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": {
        "w1": -1798975426,
        "w2": -857733768,
        "w3": -1644458150,
        "w4": -1793928426,
        "w5": 1621368380
      },
      "legacy": true
    },
    {
      "submitRequirement": {
        "name": "Code-Style",
        "description": {},
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Style\u003dgerrit~PrologRule"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "expression": {
          "expressionString": "label:Code-Style\u003dgerrit~PrologRule"
        },
        "status": "PASS",
        "errorMessage": {},
        "passingAtoms": [
          "label:Code-Style\u003dgerrit~PrologRule"
        ],
        "failingAtoms": []
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": {
        "w1": -1798975426,
        "w2": -857733768,
        "w3": -1644458150,
        "w4": -1793928426,
        "w5": 1621368380
      },
      "legacy": true
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {},
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dgerrit~PrologRule"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "expression": {
          "expressionString": "label:Verified\u003dgerrit~PrologRule"
        },
        "status": "PASS",
        "errorMessage": {},
        "passingAtoms": [
          "label:Verified\u003dgerrit~PrologRule"
        ],
        "failingAtoms": []
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": {
        "w1": -1798975426,
        "w2": -857733768,
        "w3": -1644458150,
        "w4": -1793928426,
        "w5": 1621368380
      },
      "legacy": true
    },
    {
      "submitRequirement": {
        "name": "checks~ChecksSubmitRule",
        "description": {},
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "rule:checks~ChecksSubmitRule"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "expression": {
          "expressionString": "rule:checks~ChecksSubmitRule"
        },
        "status": "PASS",
        "errorMessage": {},
        "passingAtoms": [
          "checks~ChecksSubmitRule"
        ],
        "failingAtoms": []
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": {
        "w1": -1798975426,
        "w2": -857733768,
        "w3": -1644458150,
        "w4": -1793928426,
        "w5": 1621368380
      },
      "legacy": true
    }
  ]
}