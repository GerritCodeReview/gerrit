{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1a29c144_b87b57b9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-02-14T08:42:49Z",
      "side": 1,
      "message": "IIUC the implication of this is that any change in the project.config will cause all changes of that project to be detected as stale. For any change of project.config in a parent project this will cause all changes of that project and all child projects to be detected as stale. So if a change happens in the project.config of the All-Projects project all changes will be detected as stale?\n\nIIRC the staleness checker needs to be triggered explicitly, so maybe this is fine and reindexing all changes at that moment is feasible, but are we confident that this will work reasonable with large Gerrit instances that have many changes?",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 20,
        "endChar": 44
      },
      "revId": "94daf2e05448c24c11098da1fa378c4c74d8db54",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "054901ff_ecae4d49",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-02-14T11:35:25Z",
      "side": 1,
      "message": "+1 to your concern overall.\n\nThere was always a chance for label/prolog-based SRs to become stale and we didn\u0027t hear much complaints about that (e.g. adding a new label would not be reflected in dashboards immediately).\n\nFor the migration, there is a one-time event, where we want to reindex all changes. I think scripting that and reindexing the last N (10k?) by issuing REST API calls for reindexing these changes would be good enough.\n\nI do wonder if we could do better and if this approach could be optimized a bit to become feasible. Some options that we discussed in the standup today:\n\n1) Trigger this logic only for open changes (reduces input set)\n2) Only include the current project, not the tree. This will limit the blast radius, yet give project owners an easy way to trigger reindexing.",
      "parentUuid": "1a29c144_b87b57b9",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 20,
        "endChar": 44
      },
      "revId": "94daf2e05448c24c11098da1fa378c4c74d8db54",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}