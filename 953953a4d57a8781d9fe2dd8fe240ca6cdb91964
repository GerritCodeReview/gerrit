{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "707380c2_0e13921f",
        "filename": "java/com/google/gerrit/extensions/api/config/AccessCheckInfo.java",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-02-02T15:40:00Z",
      "side": 0,
      "message": "This doesn\u0027t seem to be following the process outlined in [1]. As noted in [2], removing something from extensions is likely to impact a wider range of plugins that otherwise expect to be compatible across many Gerrit versions.\n\n[1] https://gerrit-review.googlesource.com/Documentation/dev-processes.html#deprecating-features\n[2] https://gerrit-review.googlesource.com/Documentation/dev-plugins.html#API",
      "revId": "953953a4d57a8781d9fe2dd8fe240ca6cdb91964",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2678d9f6_1b94f0d0",
        "filename": "java/com/google/gerrit/extensions/api/config/AccessCheckInfo.java",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-02T21:32:55Z",
      "side": 0,
      "message": "Thanks for bringing the deprecation process to my attention. I was not planning to submit this change soon. I\u0027m playing around with few entities right now, but we were looking into migrating all entities.\n\nI see that plugins need to be updated if we removed entities from the extensions api. One solution I\u0027m thinking of is to create a separate proto api, e.g. com.google.gerrit.extensions.protoapi (implementation in com.google.gerrit.server.protoapi), migrate gerrit core to use the proto api while leaving the existing api intact for plugins/extensions. We can mark the existing api as deprecated. I\u0027d need to do more digging and check if this is possible.\n\nAddendum: \n1) One problem I\u0027m seeing is that both apis will have parallel implementations which is not good. Ideally we want to have a single implementation with different choice of inputs / outputs.\n2) Or, better, the old api can just wrap the new proto api.\n\nWDYT?",
      "parentUuid": "707380c2_0e13921f",
      "revId": "953953a4d57a8781d9fe2dd8fe240ca6cdb91964",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb8871e7_632b995b",
        "filename": "java/com/google/gerrit/extensions/api/config/AccessCheckInfo.java",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-02-02T21:43:28Z",
      "side": 0,
      "message": "I guess before we get too far into the planning for how, we should ask why. The commit message doesn\u0027t describe any motivation behind this change (and if you\u0027re doing it for all extensions it\u0027s a pretty massive change). What\u0027s the goal and what does the Gerrit project and/or its users gain from it? Is there a design doc already for this?",
      "parentUuid": "2678d9f6_1b94f0d0",
      "revId": "953953a4d57a8781d9fe2dd8fe240ca6cdb91964",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddaffc38_6f8d7c6b",
        "filename": "java/com/google/gerrit/extensions/api/config/AccessCheckInfo.java",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-04T11:17:21Z",
      "side": 0,
      "message": "The main reason for this migration is to let polygerrit access the proto entities directly instead of redefining them, so we\u0027ll have a unified view of them in the frontend and backend. Also hiesel@ can comment on this.\n\nOne option I was also considering is using nano proto [1] to reduce the code changes (e.g. it provides public fields for the generated entities). There is currently no design doc, but I agree we need one given that the scope is larger than what I expected. I\u0027ll keep the change as WIP until then.\n\n[1] https://github.com/nanopb/nanopb",
      "parentUuid": "fb8871e7_632b995b",
      "revId": "953953a4d57a8781d9fe2dd8fe240ca6cdb91964",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74a853d8_37ab7341",
        "filename": "java/com/google/gerrit/extensions/api/config/AccessCheckInfo.java",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-02-04T11:42:54Z",
      "side": 0,
      "message": "some more reasons:\n\n* every language needs to define and update their entity descriptions to talk to gerrit \n\n* we have to document entities separately, with a potential for mismatches between code and doc.",
      "parentUuid": "ddaffc38_6f8d7c6b",
      "revId": "953953a4d57a8781d9fe2dd8fe240ca6cdb91964",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}