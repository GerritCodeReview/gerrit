{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d1d26010_02573127",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-11-30T19:19:30Z",
      "side": 1,
      "message": "I don\u0027t completely follow this. How do you know it\u0027s not associated with an existing change?",
      "range": {
        "startLine": 11,
        "startChar": 12,
        "endLine": 12,
        "endChar": 28
      },
      "revId": "954aa3103b3c154a69b67068aaa51bd40d4d586f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec32d32f_9fc34e07",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2020-12-01T07:04:42Z",
      "side": 1,
      "message": "If we are cherry-picking with CommitAPI, the source change is not provided. So even if we could associate the destination change with some cherry-pick change, it is not clear what this change would be. If we don\u0027t reset it, we will end up with the old value from the previous patch set.\n\nIn cases when the Cerry-pick creates a new change, we don\u0027t set cherry-pick of.\nI think the best option would always reset cherry-pick of with CommitAPI.\n\nSee the follow up CL.",
      "parentUuid": "d1d26010_02573127",
      "range": {
        "startLine": 11,
        "startChar": 12,
        "endLine": 12,
        "endChar": 28
      },
      "revId": "954aa3103b3c154a69b67068aaa51bd40d4d586f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}