{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6c6409e8_744aa8e3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-10-12T18:00:06Z",
      "side": 1,
      "message": "Nice improvement, thanks @Adithya. We all know how long it takes for JGit to list projects on disk, especially on NFS :-(",
      "revId": "955519012f3c80a8c8e4d194b9f2b6ee13057b32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1678e50f_fc674670",
        "filename": "java/com/google/gerrit/server/schema/SchemaVersion.java",
        "patchSetId": 1
      },
      "lineNbr": 236,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-10-12T18:00:06Z",
      "side": 1,
      "message": "sortedProjects()?",
      "range": {
        "startLine": 236,
        "startChar": 46,
        "endLine": 236,
        "endChar": 63
      },
      "revId": "955519012f3c80a8c8e4d194b9f2b6ee13057b32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a620fbc_e79f2e07",
        "filename": "java/com/google/gerrit/server/schema/SchemaVersion.java",
        "patchSetId": 1
      },
      "lineNbr": 236,
      "author": {
        "id": 1105741
      },
      "writtenOn": "2021-10-13T19:56:34Z",
      "side": 1,
      "message": "Can be inferred by return type. But we want to emphasize to caller that the list of projects being return is cached.",
      "parentUuid": "1678e50f_fc674670",
      "range": {
        "startLine": 236,
        "startChar": 46,
        "endLine": 236,
        "endChar": 63
      },
      "revId": "955519012f3c80a8c8e4d194b9f2b6ee13057b32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9b48de4_92d804c4",
        "filename": "java/com/google/gerrit/server/schema/SchemaVersion.java",
        "patchSetId": 1
      },
      "lineNbr": 236,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-10-13T20:29:01Z",
      "side": 1,
      "message": "My suggestion was more for readability and not for type-safety.",
      "parentUuid": "8a620fbc_e79f2e07",
      "range": {
        "startLine": 236,
        "startChar": 46,
        "endLine": 236,
        "endChar": 63
      },
      "revId": "955519012f3c80a8c8e4d194b9f2b6ee13057b32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e56bada_c88bb539",
        "filename": "java/com/google/gerrit/server/schema/SchemaVersion.java",
        "patchSetId": 1
      },
      "lineNbr": 236,
      "author": {
        "id": 1105741
      },
      "writtenOn": "2021-10-18T22:40:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9b48de4_92d804c4",
      "range": {
        "startLine": 236,
        "startChar": 46,
        "endLine": 236,
        "endChar": 63
      },
      "revId": "955519012f3c80a8c8e4d194b9f2b6ee13057b32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54517463_6c5a5fa0",
        "filename": "java/com/google/gerrit/server/schema/SchemaVersion.java",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-10-12T18:00:06Z",
      "side": 1,
      "message": "Why not simply:\n  return Suppliers.memoize(repoManager::list)",
      "range": {
        "startLine": 237,
        "startChar": 4,
        "endLine": 240,
        "endChar": 20
      },
      "revId": "955519012f3c80a8c8e4d194b9f2b6ee13057b32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2727e900_a783b8c1",
        "filename": "java/com/google/gerrit/server/schema/SchemaVersion.java",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1105741
      },
      "writtenOn": "2021-10-13T19:56:34Z",
      "side": 1,
      "message": "It would still call repoManager::list every time.\n\nMultiple get() calls on a Supplier returned by memorize() are cached but this will return a new Supplier every time. Am I Missing anything ?\n\nI did replace the method as you said and it was manually calling repoManager.list()  during every schema.",
      "parentUuid": "54517463_6c5a5fa0",
      "range": {
        "startLine": 237,
        "startChar": 4,
        "endLine": 240,
        "endChar": 20
      },
      "revId": "955519012f3c80a8c8e4d194b9f2b6ee13057b32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ad67fa9_40f1c548",
        "filename": "java/com/google/gerrit/server/schema/SchemaVersion.java",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-10-13T20:29:01Z",
      "side": 1,
      "message": "You are right: Suppliers.memoize(repoManager::list) needs to done only once in the constructor.",
      "parentUuid": "2727e900_a783b8c1",
      "range": {
        "startLine": 237,
        "startChar": 4,
        "endLine": 240,
        "endChar": 20
      },
      "revId": "955519012f3c80a8c8e4d194b9f2b6ee13057b32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e8a6e84_70f4fbe7",
        "filename": "java/com/google/gerrit/server/schema/SchemaVersion.java",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1105741
      },
      "writtenOn": "2021-10-13T21:27:11Z",
      "side": 1,
      "message": "That requires every Schema to perform this load on constructor. Also, requires repoManager to be Injected by each schema. Having this static object is more preferable ?",
      "parentUuid": "5ad67fa9_40f1c548",
      "range": {
        "startLine": 237,
        "startChar": 4,
        "endLine": 240,
        "endChar": 20
      },
      "revId": "955519012f3c80a8c8e4d194b9f2b6ee13057b32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7f0c2a4_86aad15c",
        "filename": "java/com/google/gerrit/server/schema/SchemaVersion.java",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-10-19T19:01:07Z",
      "side": 1,
      "message": "\u003e That requires every Schema to perform this load on constructor.\n\nmemoize() doesn\u0027t actually do the load, does it? I think it only happens once someone calls get() on the returned Supplier.\n\nI think if you wanted to use Suppliers.memoize, you would define projects on line 52 as a Supplier\u003cSortedSet\u003cProject.NameKey\u003e\u003e (then make that public?) and then do it in the constructor as Luca suggests (which has the downside of requiring repoManager to be injected, but maybe that\u0027s not a big deal) or keep this method and do almost the same thing you\u0027re doing now, but wrapped in the Supplier.\n\nAll that said, I think keeping the code the way you have it now is preferable, but it was fun to learn about Suppliers ðŸ˜Š\n\nLuca?",
      "parentUuid": "3e8a6e84_70f4fbe7",
      "range": {
        "startLine": 237,
        "startChar": 4,
        "endLine": 240,
        "endChar": 20
      },
      "revId": "955519012f3c80a8c8e4d194b9f2b6ee13057b32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f25bab01_0cfc4861",
        "filename": "java/com/google/gerrit/server/schema/SchemaVersion.java",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-10-19T22:28:50Z",
      "side": 1,
      "message": "In order to minimise the moving parts, I agree we can keep it as-is. However, can you add a TODO in the code so that we\u0027ll remember to use a more standard injection/suppliers pattern?\n\nUsing statics goes against the overall Guice design isn\u0027t it? Instead of statics you should use singletons ;-) But I\u0027d agree it is best to be refactored on master rather than in stable-2.16.",
      "parentUuid": "d7f0c2a4_86aad15c",
      "range": {
        "startLine": 237,
        "startChar": 4,
        "endLine": 240,
        "endChar": 20
      },
      "revId": "955519012f3c80a8c8e4d194b9f2b6ee13057b32",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}