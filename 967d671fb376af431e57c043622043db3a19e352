{
  "comments": [
    {
      "key": {
        "uuid": "9cbad4ec_58055d34",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ActionJson.java",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-02-06T18:40:08Z",
      "side": 1,
      "message": "Nit: missing )",
      "range": {
        "startLine": 76,
        "startChar": 19,
        "endLine": 76,
        "endChar": 20
      },
      "revId": "967d671fb376af431e57c043622043db3a19e352",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7cbfe0de_57052c34",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ActionJson.java",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-02-06T18:51:32Z",
      "side": 1,
      "message": "Done, which leads me to a question: Is this syntax sensible, because there are tools relying on it? If so where do I find/use these tools?",
      "parentUuid": "9cbad4ec_58055d34",
      "range": {
        "startLine": 76,
        "startChar": 19,
        "endLine": 76,
        "endChar": 20
      },
      "revId": "967d671fb376af431e57c043622043db3a19e352",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91b71f4c_3000c82f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ActionJson.java",
        "patchSetId": 11
      },
      "lineNbr": 76,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-05T20:37:21Z",
      "side": 1,
      "message": "We copied this style from Google, and we do have internal tools that parse it.",
      "parentUuid": "7cbfe0de_57052c34",
      "range": {
        "startLine": 76,
        "startChar": 19,
        "endLine": 76,
        "endChar": 20
      },
      "revId": "967d671fb376af431e57c043622043db3a19e352",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cbad4ec_180fe554",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeJson.java",
        "patchSetId": 11
      },
      "lineNbr": 167,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-02-06T18:40:08Z",
      "side": 1,
      "message": "Doesn\u0027t have to be a provider because ChangeJson is a singleton. (Yeah, I screwed this up with checkerProvider too I think).",
      "revId": "967d671fb376af431e57c043622043db3a19e352",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cbad4ec_78314118",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeJson.java",
        "patchSetId": 11
      },
      "lineNbr": 167,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-02-06T18:51:32Z",
      "side": 1,
      "message": "done.\n\ncheckerProvider is not marked as Singleton, so it should have a Provider here.",
      "parentUuid": "9cbad4ec_180fe554",
      "revId": "967d671fb376af431e57c043622043db3a19e352",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91b71f4c_f0e5a02e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeJson.java",
        "patchSetId": 11
      },
      "lineNbr": 167,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-02-10T20:03:38Z",
      "side": 1,
      "message": "Sorry, I mean \"because ChangeJson is *not* a singleton\".\n\nCreating a new ChangeJson instance with Guice will also create a new ConsistencyChecker (or ActionJson) instance even if we don\u0027t use a provider.\n\nThe only reason we would need a provider in a non-singleton object like this is if we need to construct multiple new instances. But we don\u0027t.",
      "parentUuid": "9cbad4ec_78314118",
      "revId": "967d671fb376af431e57c043622043db3a19e352",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cbad4ec_3812a980",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeJson.java",
        "patchSetId": 11
      },
      "lineNbr": 416,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-02-06T18:40:08Z",
      "side": 1,
      "message": "Nit: redundant parens.",
      "range": {
        "startLine": 416,
        "startChar": 8,
        "endLine": 416,
        "endChar": 9
      },
      "revId": "967d671fb376af431e57c043622043db3a19e352",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cbad4ec_582e7db6",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeJson.java",
        "patchSetId": 11
      },
      "lineNbr": 416,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-02-06T18:51:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9cbad4ec_3812a980",
      "range": {
        "startLine": 416,
        "startChar": 8,
        "endLine": 416,
        "endChar": 9
      },
      "revId": "967d671fb376af431e57c043622043db3a19e352",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}