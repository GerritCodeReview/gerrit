{
  "comments": [
    {
      "key": {
        "uuid": "95daa231_9f19336e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-10-31T07:17:48Z",
      "side": 1,
      "message": "Remove this?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 5
      },
      "revId": "96855d166d1caabcc1d60bf7966f550b98f79f75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b50a4612_381909e6",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/PushOneCommit.java",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-10-29T13:13:45Z",
      "side": 1,
      "message": "Should be before imports of com.google.gerrit.",
      "revId": "96855d166d1caabcc1d60bf7966f550b98f79f75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5bafe9a_0ade1b1f",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/HashtagsIT.java",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-10-29T08:06:18Z",
      "side": 1,
      "message": "Why not \"isEqualTo\"?",
      "range": {
        "startLine": 50,
        "startChar": 23,
        "endLine": 50,
        "endChar": 39
      },
      "revId": "96855d166d1caabcc1d60bf7966f550b98f79f75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b50a4612_18052580",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/HashtagsIT.java",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-10-29T08:29:52Z",
      "side": 1,
      "message": "The intention is to test that the items are in order.  I initially did it like in the example shown on the page linked in the commit message:\n\n  assertThat(someCollection).has().allOf(\"a\", \"b\").inOrder(); \n\nbut it seems that in the latest version \"has().allOf()\" is deprecated and the recommended alternative is containsSequence().\n\nI haven\u0027t checked if isEqualTo behaves the same for this test.",
      "parentUuid": "f5bafe9a_0ade1b1f",
      "range": {
        "startLine": 50,
        "startChar": 23,
        "endLine": 50,
        "endChar": 39
      },
      "revId": "96855d166d1caabcc1d60bf7966f550b98f79f75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5bafe9a_2ae3dfe9",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/HashtagsIT.java",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-10-29T08:31:07Z",
      "side": 1,
      "message": "Thanks for explaining :)",
      "parentUuid": "b50a4612_18052580",
      "range": {
        "startLine": 50,
        "startChar": 23,
        "endLine": 50,
        "endChar": 39
      },
      "revId": "96855d166d1caabcc1d60bf7966f550b98f79f75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d515fa2f_599603da",
        "filename": "lib/BUCK",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-10-29T08:35:52Z",
      "side": 1,
      "message": "This has no deps defined, but it still seems to work even though from the maven central page [1] it looks like it does have dependency on guava, junit and some others.\n\n[1] http://search.maven.org/#artifactdetails%7Ccom.google.truth%7Ctruth%7C0.24%7Cjar",
      "revId": "96855d166d1caabcc1d60bf7966f550b98f79f75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b566c610_b8b2d908",
        "filename": "lib/BUCK",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-10-29T22:03:30Z",
      "side": 1,
      "message": "Yes, please fix this. It happens to work because the buck build flattens all transitive deps.",
      "parentUuid": "d515fa2f_599603da",
      "revId": "96855d166d1caabcc1d60bf7966f550b98f79f75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55dcaa2f_9d66a30e",
        "filename": "lib/BUCK",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-10-31T07:17:48Z",
      "side": 1,
      "message": "I would say it\u0027s not necessary. All rules that might potentially depend on lib:truth have already included guava and junit deps over other dependencies. All acceptance tests depend on //gerrit-acceptance-tests:lib::\n\n  buck targets --json //gerrit-acceptance-tests:lib\nUsing buckd.\n[\n{\n  \"annotationProcessorDeps\" : [ ],\n  \"annotationProcessorOnly\" : null,\n  \"annotationProcessorParams\" : [ ],\n  \"annotationProcessors\" : [ ],\n  \"buck.base_path\" : \"gerrit-acceptance-tests\",\n  \"buck.output_file\" : \"buck-out/gen/gerrit-acceptance-tests/lib__lib__output/lib.jar\",\n  \"deps\" : [ ],\n  \"exportedDeps\" : [\n    \"//gerrit-common:annotations\", \n    \"//gerrit-common:server\",\n    \"//gerrit-extension-api:api\",\n    \"//gerrit-launcher:launcher\",\n    \"//gerrit-lucene:lucene\",   \n    \"//gerrit-httpd:httpd\",\n    \"//gerrit-pgm:init\",\n    \"//gerrit-pgm:pgm\",\n    \"//gerrit-pgm:util\",\n    \"//gerrit-reviewdb:server\",\n    \"//gerrit-server:server\",\n    \"//gerrit-server/src/main/prolog:common\",\n    \"//gerrit-server:testutil\",\n    \"//gerrit-sshd:sshd\",\n    \"//lib:args4j\",\n    \"//lib:gson\",\n    \"//lib:guava\",\n    \"//lib:gwtjsonrpc\",\n    \"//lib:gwtorm\",\n    \"//lib:h2\"\n    \"//lib:jsch\", \n    \"//lib:junit\",\n    \"//lib:servlet-api-3_1\", \n    \"//lib:truth\", \n    \"//lib/hamcrest:hamcrest-core\", \n    \"//lib/hamcrest:hamcrest-library\",\n    \"//lib/httpcomponents:httpclient\",   \n    \"//lib/httpcomponents:httpcore\", \n    \"//lib/log:impl_log4j\", \n    \"//lib/log:log4j\", \n    \"//lib/guice:guice\", \n    \"//lib/guice:guice-assistedinject\", \n    \"//lib/jgit:jgit\", \n    \"//lib/jgit:junit\", \n    \"//lib/mina:sshd\" \n  ],\n  \"name\" : \"lib\",\n\n\nAnd gerrit-server:server_tests has them too:\n\n  $ buck targets --json //gerrit-server:server_tests\nUsing buckd.\n[\n{\n  \"annotationProcessorDeps\" : [ ],\n  \"annotationProcessorOnly\" : null,\n  \"annotationProcessorParams\" : [ ],\n  \"annotationProcessors\" : [ ],\n  \"buck.base_path\" : \"gerrit-server\",\n  \"buck.output_file\" : \"buck-out/gen/gerrit-server/lib__server_tests__output/server_tests.jar\",\n  \"contacts\" : [ ],\n  \"deps\" : [\n    \":server\",\n    \":testutil\",\n    \"//gerrit-antlr:query_exception\",\n    \"//gerrit-common:annotations\",\n    \"//gerrit-common:server\",\n    \"//gerrit-extension-api:api\",\n    \"//gerrit-reviewdb:server\",\n    \"//gerrit-server/src/main/prolog:common\",  \n    \"//lib:args4j\",\n    \"//lib:guava\",\n    \"//lib:gwtorm\",\n    \"//lib:junit\",\n    \"//lib/guice:guice\",\n    \"//lib/guice:guice-assistedinject\",\n    \"//lib/jgit:jgit\",\n    \"//lib/jgit:junit\",\n    \"//lib/joda:joda-time\",\n    \"//lib/prolog:prolog-cafe\"\n  ],",
      "parentUuid": "b566c610_b8b2d908",
      "revId": "96855d166d1caabcc1d60bf7966f550b98f79f75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75c8ce75_364a1882",
        "filename": "lib/BUCK",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-10-31T13:13:32Z",
      "side": 1,
      "message": "Don\u0027t depend on transitive dependencies; they can move out from under you.\n\nFor example, say we split out a common package from server that has no Guava dependencies, but the tests depend on Truth. Then the tests break because it\u0027s no longer pulling in a Guava dependency from the lib deps.\n\nThis literally happened earlier this week:\n\nhttps://gerrit-review.googlesource.com/61141\n\n(Except that the tests don\u0027t depend on Truth.)",
      "parentUuid": "55dcaa2f_9d66a30e",
      "revId": "96855d166d1caabcc1d60bf7966f550b98f79f75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55dcaa2f_bd16ff3a",
        "filename": "lib/BUCK",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-10-31T13:28:52Z",
      "side": 1,
      "message": "I don\u0027t see your concerns not to depend on transitive dependencies. We could start without adding it and wait for the first time we need it. And your example only confirms my point of view. Add lib:truth to the new package and you will find out that it just works:\n\njava_test(\n  name \u003d \u0027http_tests\u0027,\n  srcs \u003d glob([\u0027src/test/java/**/*.java\u0027]),\n  deps \u003d [\n    \u0027:http\u0027,\n    \u0027//lib:junit\u0027,\n    \u0027//lib:servlet-api-3_1\u0027,\n    \u0027//lib:truth\u0027,\n    \u0027//lib/easymock:easymock\u0027,\n  ],\n  [..]\n\nThat\u0027s because the moved tests already depends on :httpd library. And of course httpd library depends on guava:\n\n  java_library(\n    name \u003d \u0027httpd\u0027,\n    srcs \u003d SRCS,\n    resources \u003d RESOURCES,\n    deps \u003d [\n      \u0027//gerrit-antlr:query_exception\u0027,\n      \u0027//gerrit-common:annotations\u0027,\n      \u0027//gerrit-common:server\u0027,\n      \u0027//gerrit-extension-api:api\u0027,\n      \u0027//gerrit-gwtexpui:server\u0027,\n      \u0027//gerrit-patch-jgit:server\u0027,\n      \u0027//gerrit-prettify:server\u0027,\n      \u0027//gerrit-reviewdb:server\u0027,\n      \u0027//gerrit-server:server\u0027,\n      \u0027//gerrit-util-cli:cli\u0027,\n      \u0027//gerrit-util-http:http\u0027,\n      \u0027//lib:args4j\u0027,\n      \u0027//lib:gson\u0027,\n      \u0027//lib:guava\u0027,\n      [...]",
      "parentUuid": "75c8ce75_364a1882",
      "revId": "96855d166d1caabcc1d60bf7966f550b98f79f75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95b382f9_973844f5",
        "filename": "lib/BUCK",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-10-31T13:36:20Z",
      "side": 1,
      "message": "\u003e That\u0027s because the moved tests already depends on :httpd library.\n\nThat\u0027s a mistake, it shouldn\u0027t depend on httpd.\n\nDepending on getting lucky with transitive dependencies just happening to be there makes it harder to refactor, because you when extracting a library you can\u0027t just look at that library\u0027s direct dependencies to know what you need. Similarly, it also makes it harder to eliminate (automatically or manually) unused dependencies. It just doesn\u0027t scale. Google literally dedicated a team of people to change Blaze (along with millions of lines worth of Java libraries\u0027 BUILD files) to enforce at the build level that packages list their direct dependencies for these reasons.",
      "parentUuid": "55dcaa2f_bd16ff3a",
      "revId": "96855d166d1caabcc1d60bf7966f550b98f79f75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}