{
  "comments": [
    {
      "key": {
        "uuid": "4448139b_319e93b1",
        "filename": "java/com/google/gerrit/sshd/SshDaemon.java",
        "patchSetId": 3
      },
      "lineNbr": 659,
      "author": {
        "id": 1010516
      },
      "writtenOn": "2019-09-20T13:18:09Z",
      "side": 1,
      "message": "If it\u0027s the default, why isn\u0027t it set by default? :)",
      "range": {
        "startLine": 659,
        "startChar": 38,
        "endLine": 659,
        "endChar": 75
      },
      "revId": "970d2cdc339924ad8b18a520db9cf3b02b3ff7bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "666d43a0_107b9b31",
        "filename": "java/com/google/gerrit/sshd/SshDaemon.java",
        "patchSetId": 3
      },
      "lineNbr": 659,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-09-20T13:22:13Z",
      "side": 1,
      "message": "It is set per default in BaseBuilder.java:\n\n  protected S fillWithDefaultValues() {\n        if (randomFactory \u003d\u003d null) {\n            randomFactory \u003d new SingletonRandomFactory(SecurityUtils.getRandomFactory());\n        }\n\n        if (cipherFactories \u003d\u003d null) {\n            cipherFactories \u003d setUpDefaultCiphers(false);\n        }\n\n        if (macFactories \u003d\u003d null) {\n            macFactories \u003d setUpDefaultMacs(false);\n        }\n\n        if (fileSystemFactory \u003d\u003d null) {\n            fileSystemFactory \u003d DEFAULT_FILE_SYSTEM_FACTORY;\n        }\n\n        if (forwardingFilter \u003d\u003d null) {\n            forwardingFilter \u003d DEFAULT_FORWARDING_FILTER;\n        }\n\n        if (forwarderFactory \u003d\u003d null) {\n            forwarderFactory \u003d DEFAULT_FORWARDER_FACTORY;\n        }\n\n        if (unknownChannelReferenceHandler \u003d\u003d null) {\n            unknownChannelReferenceHandler \u003d DEFAULT_UNKNOWN_CHANNEL_REFERENCE_HANDLER;\n        }\n\n        return me();\n    }\n\nFor some reasons we don\u0027t use this base class, unfortunately.",
      "parentUuid": "4448139b_319e93b1",
      "range": {
        "startLine": 659,
        "startChar": 38,
        "endLine": 659,
        "endChar": 75
      },
      "revId": "970d2cdc339924ad8b18a520db9cf3b02b3ff7bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7528defe_72ae7a60",
        "filename": "java/com/google/gerrit/sshd/SshDaemon.java",
        "patchSetId": 3
      },
      "lineNbr": 673,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-09-20T13:19:20Z",
      "side": 1,
      "message": "Using the DefaultUnknownChannelReferenceHandler is a very good idea.\n\nHowever, I\u0027ve looked at the implementation and it doesn\u0027t log any warnings.\nThe question is: why do we receive a message for a channel that doesn\u0027t exist? Has the channel been closed prematurely? Why? Could this be a keepalive/timeout issue?\n\nHaving some logs would allow to understand what\u0027s going on, whilst the default implementation is too silent IMHO.\n\nWDYT?",
      "range": {
        "startLine": 661,
        "startChar": 0,
        "endLine": 673,
        "endChar": 6
      },
      "revId": "970d2cdc339924ad8b18a520db9cf3b02b3ff7bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "804f8d24_b6281edf",
        "filename": "java/com/google/gerrit/sshd/SshDaemon.java",
        "patchSetId": 3
      },
      "lineNbr": 673,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-09-20T13:22:13Z",
      "side": 1,
      "message": "\u003e However, I\u0027ve looked at the implementation and it doesn\u0027t log any warnings.\n\nAre you sure? I\u0027m reading it differently:\n\n    @Override\n    public Channel handleUnknownChannelCommand(\n            ConnectionService service, byte cmd, int channelId, Buffer buffer)\n                    throws IOException {\n        Session session \u003d service.getSession();\n        // Use DEBUG level to avoid log overflow due to invalid messages flood\n        boolean debugEnabled \u003d log.isDebugEnabled();\n        if (debugEnabled) {\n            log.debug(\"handleUnknownChannelCommand({}) received {} command for unknown channel: {}\",\n                    session, SshConstants.getCommandMessageName(cmd), channelId);\n        }\n\nI don\u0027t wan to flood the logs, and i think that debug level is good enough.",
      "parentUuid": "7528defe_72ae7a60",
      "range": {
        "startLine": 661,
        "startChar": 0,
        "endLine": 673,
        "endChar": 6
      },
      "revId": "970d2cdc339924ad8b18a520db9cf3b02b3ff7bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3119bc2b_fd2ba232",
        "filename": "java/com/google/gerrit/sshd/SshDaemon.java",
        "patchSetId": 3
      },
      "lineNbr": 673,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-09-20T13:43:56Z",
      "side": 1,
      "message": "Fair enough, after all that was supposed to be the default behaviour: ignore messages to unknown channels. We should keep it as-is for now.\n\nThe TODO is thus redundant: once we verified that this solves the problem, it should be removed.",
      "parentUuid": "804f8d24_b6281edf",
      "range": {
        "startLine": 661,
        "startChar": 0,
        "endLine": 673,
        "endChar": 6
      },
      "revId": "970d2cdc339924ad8b18a520db9cf3b02b3ff7bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ecb0d77_7b6e687c",
        "filename": "java/com/google/gerrit/sshd/SshDaemon.java",
        "patchSetId": 3
      },
      "lineNbr": 673,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-09-20T13:56:17Z",
      "side": 1,
      "message": "Done. Comment is removed now.",
      "parentUuid": "3119bc2b_fd2ba232",
      "range": {
        "startLine": 661,
        "startChar": 0,
        "endLine": 673,
        "endChar": 6
      },
      "revId": "970d2cdc339924ad8b18a520db9cf3b02b3ff7bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}