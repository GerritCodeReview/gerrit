{
  "comments": [
    {
      "key": {
        "uuid": "aeb4ab93_a8ac63c3",
        "filename": "Documentation/dev-plugin-pg-styling.txt",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-04-18T21:53:14Z",
      "side": 1,
      "message": "So, if a plugin wants two style only two different elements in two different named \"insertion points\" it needs to define two different style modules in separate files.\n\n(In addition to that, the plugin author has to learn the weird DOM-MODULE element, as well as :root and --css-mixin-name CSS constructs for something so simple.)\n\nThis feels like a lot of overhead. It seems to me that the power of allowing the user to write raw CSS is that they can write their own arbitray selectors, for example\n\ndiv.someClass:active,\nspan.someOtherClass:hover,\ngr-button {\n  --css-mixin-name: {\n    property: value;\n  }\n}\n\nIs this the motivation for allowing CSS to be written using DOM-MODULEs? If so, then maybe the docs should include examples of that. How stable could a plugin author expect their CSS selectors to be?\n\nOtherwise -- without the power of arbitrary selectors -- as a plugin author, if I read this I might wonder why I can\u0027t just provide a single JSON object that describes the style changes I want my plugin to do and let the plugin system figure out how to apply them.\n\nplugin.registerStyles({\n  \u0027some-endpoint\u0027: {\n    \u0027some-component\u0027: {\n      \u0027padding-left\u0027: \u002710px\u0027,\n    },\n  },\n  \u0027some-other-component\u0027: {\n    // ...\n  }\n});",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 30,
        "endChar": 3
      },
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4060ca83_af5bfec0",
        "filename": "Documentation/dev-plugin-pg-styling.txt",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-04-19T17:00:06Z",
      "side": 1,
      "message": "To be clear, I don\u0027t mean this comment to be a blocker, but I\u0027m trying to encode my qualms about exposing this style of API to plugin authors.",
      "parentUuid": "aeb4ab93_a8ac63c3",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 30,
        "endChar": 3
      },
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29fbe029_e85367a8",
        "filename": "Documentation/dev-plugin-pg-styling.txt",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-04-20T19:27:18Z",
      "side": 1,
      "message": "\u003e So, if a plugin wants two style only two different elements in two different named \"insertion points\" it needs to define two different style modules in separate files.\n\nTwo modules - yes, two files - not required.\nImported .html may contain any number of modules - that\u0027s what vulcanize does.\n\nSo another approach I was thinking about was not to use :root and @apply and use plain CSS.\nIn theory, this should do the same, with this change:\n\n\u003cdom-module id\u003d\"my-plugin-style\"\u003e\n  \u003ctemplate\u003e\n    \u003cstyle\u003e\n      section.assignee,\n      section.topic,\n      section.strategy,\n      section.labelStatus {\n        display: none;\n      }\n    \u003c/style\u003e\n  \u003c/template\u003e\n\u003c/dom-module\u003e\n\nUnfortunately, Polymer doesn\u0027t property apply such styles to the Shady DOM:\nhttp://stackoverflow.com/questions/35149624/dynamically-inject-shared-styles-in-polymer-element-polymer-1-2-3\nI investigated this route for a little while, since it seemed cleaner, but ended up with too much Polymer hacking to make it work.\n\nIt probably would be possible to start with :root and @apply approach, and eventually deprecate them in favor of abovementioned CSS.\n\nWhat do you think?",
      "parentUuid": "4060ca83_af5bfec0",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 30,
        "endChar": 3
      },
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49e95915_741772f6",
        "filename": "Documentation/dev-plugin-pg-styling.txt",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-04-26T00:27:47Z",
      "side": 1,
      "message": "I think we\u0027ve discussed this offline, let me know if any action is still needed.",
      "parentUuid": "29fbe029_e85367a8",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 30,
        "endChar": 3
      },
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdae214f_40413cf6",
        "filename": "polygerrit-ui/app/elements/change/gr-change-metadata/gr-change-metadata-it_test.html",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-04-18T21:53:14Z",
      "side": 1,
      "message": "This file has an odd name. Is the suffix meant as an integration test to be separate from the regular test? Have we added any of those in PG?",
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3399546_bd65d63e",
        "filename": "polygerrit-ui/app/elements/change/gr-change-metadata/gr-change-metadata-it_test.html",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-04-26T00:27:47Z",
      "side": 1,
      "message": "Yes, it\u0027s the integration test.\nYes, it\u0027s supposed to be different and test integration rather than methods etc.\nNo, this is the first one.",
      "parentUuid": "fdae214f_40413cf6",
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86b244c2_d43b1f5f",
        "filename": "polygerrit-ui/app/elements/change/gr-change-metadata/gr-change-metadata-it_test.html",
        "patchSetId": 7
      },
      "lineNbr": 111,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-04-18T19:49:58Z",
      "side": 1,
      "message": "Weird styling here.",
      "range": {
        "startLine": 109,
        "startChar": 10,
        "endLine": 111,
        "endChar": 13
      },
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c7c0baf_79db99b3",
        "filename": "polygerrit-ui/app/elements/change/gr-change-metadata/gr-change-metadata.html",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-04-18T21:53:14Z",
      "side": 1,
      "message": "This diff is very hard to read. Can you describe what\u0027s being changed here?\n\nIt looks to me like there is more being done here than wrapping the content in an external-style element.",
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90d0aaf5_0506fdd6",
        "filename": "polygerrit-ui/app/elements/change/gr-change-metadata/gr-change-metadata.html",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-04-26T00:27:47Z",
      "side": 1,
      "message": "Doh.. we really need to implement ignoring whitespaces (Issue 892)\n\nWrapped everything in gr-external-style, which caused massive re-indentation, and changed few class names.",
      "parentUuid": "8c7c0baf_79db99b3",
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca2de90b_f154c197",
        "filename": "polygerrit-ui/app/elements/plugins/gr-external-style/gr-external-style.html",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-04-18T21:53:14Z",
      "side": 1,
      "message": "Where does this element come from?",
      "range": {
        "startLine": 22,
        "startChar": 5,
        "endLine": 22,
        "endChar": 20
      },
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cd97954_d5127b7e",
        "filename": "polygerrit-ui/app/elements/plugins/gr-external-style/gr-external-style.html",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-04-26T00:27:47Z",
      "side": 1,
      "message": "Leftover from previous version, removed.",
      "parentUuid": "ca2de90b_f154c197",
      "range": {
        "startLine": 22,
        "startChar": 5,
        "endLine": 22,
        "endChar": 20
      },
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29d52097_6f7bd679",
        "filename": "polygerrit-ui/app/elements/plugins/gr-external-style/gr-external-style.js",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-04-18T21:53:14Z",
      "side": 1,
      "message": "Just an idea: what if this were a behavior? That way, it wouldn\u0027t need to increase the nesting depth in the markup.",
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c944db8_4f35bfac",
        "filename": "polygerrit-ui/app/elements/plugins/gr-external-style/gr-external-style.js",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-04-26T00:27:47Z",
      "side": 1,
      "message": "I think this is a very high-level question.\nThere are some general downsides for mixins, but the major one is that they are soft-deprecated in 2.0 in favor of class mixins: https://www.polymer-project.org/2.0/docs/upgrade#mixins",
      "parentUuid": "29d52097_6f7bd679",
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39cacd4e_edfeec3b",
        "filename": "polygerrit-ui/app/elements/plugins/gr-external-style/gr-external-style.js",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-04-18T21:53:14Z",
      "side": 1,
      "message": "This check shouldn\u0027t be needed if it\u0027s guarding a map.",
      "range": {
        "startLine": 33,
        "startChar": 28,
        "endLine": 33,
        "endChar": 51
      },
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b103b64_8c484592",
        "filename": "polygerrit-ui/app/elements/plugins/gr-external-style/gr-external-style.js",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-04-26T00:27:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39cacd4e_edfeec3b",
      "range": {
        "startLine": 33,
        "startChar": 28,
        "endLine": 33,
        "endChar": 51
      },
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b62d4c3_b4e8cbed",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 7
      },
      "lineNbr": 58,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-04-18T21:53:14Z",
      "side": 1,
      "message": "I believe the meaning of these two parameters is:\n* insertionPointName - the named scope for the styles.\n* moduleName - the URL to the style module.\n\nIs that right? Would it make sense if they were named the following instead?:\n* moduleName\n* moduleUrl",
      "range": {
        "startLine": 58,
        "startChar": 15,
        "endLine": 58,
        "endChar": 45
      },
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "349c5995_c8968f44",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-public-js-api.js",
        "patchSetId": 7
      },
      "lineNbr": 58,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-04-26T00:27:47Z",
      "side": 1,
      "message": "Yes, but moduleName is a moduleName, not a URL now.\n\nPoint taken insertionPointName, renamed to stylingEndpointName.",
      "parentUuid": "3b62d4c3_b4e8cbed",
      "range": {
        "startLine": 58,
        "startChar": 15,
        "endLine": 58,
        "endChar": 45
      },
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96cccd2c_dfc5c272",
        "filename": "polygerrit-ui/doc/gr-plugin-styling.md",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-04-18T21:53:14Z",
      "side": 1,
      "message": "Is this file a dupe of the documentation added elsewhere in this change? Why are there two files?",
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8d4b86c_a76efd2b",
        "filename": "polygerrit-ui/doc/gr-plugin-styling.md",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2017-04-26T00:27:47Z",
      "side": 1,
      "message": "Yep, that\u0027s older version.\nRemoved.",
      "parentUuid": "96cccd2c_dfc5c272",
      "revId": "971cf0326191880a81dcd24ca145b8bccb31ad9b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}