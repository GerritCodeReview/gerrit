{
  "comments": [
    {
      "key": {
        "uuid": "097f9a8b_7d6d190a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 52
      },
      "lineNbr": 26,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2019-10-16T23:18:42Z",
      "side": 1,
      "message": "I would be concerned about duplicated code between those Jenkinsfiles now. Have you considered using shared libraries to help with that?",
      "range": {
        "startLine": 24,
        "startChar": 50,
        "endLine": 26,
        "endChar": 7
      },
      "revId": "9730f0bcd12fc5640fa68240b2fa5d21c3154c75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e19a9dd_f9e759d0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 52
      },
      "lineNbr": 26,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-10-17T05:48:50Z",
      "side": 1,
      "message": "It\u0027s a good point. Can you start contributing it in the gerrit-ci-scripts repo? Once the functionality is moved there, we can remove the code from the Jenkinsfile.",
      "parentUuid": "097f9a8b_7d6d190a",
      "range": {
        "startLine": 24,
        "startChar": 50,
        "endLine": 26,
        "endChar": 7
      },
      "revId": "9730f0bcd12fc5640fa68240b2fa5d21c3154c75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4950573e_e84b1852",
        "filename": "/COMMIT_MSG",
        "patchSetId": 52
      },
      "lineNbr": 26,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2019-10-17T07:11:05Z",
      "side": 1,
      "message": "How is this duplicated code?\nHere an example of what I meant:\nIn stable-2.14, we don\u0027t have the notedb, so we don\u0027t test against it. From stable-2.15 onwards however we have so the Jenkinsfile will have an additional build mode added. That would not be duplicated, but just a change with a newer version. We just have to take care of it, when merging this change upwards. The overall structure of the Jenkinsfile will stay the same. I don\u0027t see the issue.\n\nHowever, trying to simplify the Jenkinsfile and use as many standard libraries/Jenkins plugins as possible is certainly a valid goal.",
      "parentUuid": "6e19a9dd_f9e759d0",
      "range": {
        "startLine": 24,
        "startChar": 50,
        "endLine": 26,
        "endChar": 7
      },
      "revId": "9730f0bcd12fc5640fa68240b2fa5d21c3154c75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1b36aac_2ded5558",
        "filename": "/COMMIT_MSG",
        "patchSetId": 52
      },
      "lineNbr": 26,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2019-10-17T18:22:15Z",
      "side": 1,
      "message": "@Thomas, I mean most of the code outside the node() block is probably common between all Gerrit branches. So if you have a bug in any of them, you have to fix it in all of them. Since that code is independent of the branch, it would be ideal to not have separate copies per-branch.\n\n@Luca, maybe you can give me a hand-on intro to it during the hackathon. I\u0027d be happy to help with it.",
      "parentUuid": "4950573e_e84b1852",
      "range": {
        "startLine": 24,
        "startChar": 50,
        "endLine": 26,
        "endChar": 7
      },
      "revId": "9730f0bcd12fc5640fa68240b2fa5d21c3154c75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b9d599f_5b3be8f7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 52
      },
      "lineNbr": 26,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-10-17T18:27:58Z",
      "side": 1,
      "message": "\u003e @Thomas, I mean most of the code outside the node() block is probably common between all Gerrit branches. So if you have a bug in any of them, you have to fix it in all of them. Since that code is independent of the branch, it would be ideal to not have separate copies per-branch.\n\n+1\n\n\u003e @Luca, maybe you can give me a hand-on intro to it during the hackathon. I\u0027d be happy to help with it.\n\nSure, will add as official hackathon topic also :-)",
      "parentUuid": "d1b36aac_2ded5558",
      "range": {
        "startLine": 24,
        "startChar": 50,
        "endLine": 26,
        "endChar": 7
      },
      "revId": "9730f0bcd12fc5640fa68240b2fa5d21c3154c75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a6d2c9_a326c120",
        "filename": "/COMMIT_MSG",
        "patchSetId": 52
      },
      "lineNbr": 26,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2019-10-18T07:25:31Z",
      "side": 1,
      "message": "True, the code will be mostly the same between branches. I think it will be even easier to remove it from the branches than creating a separate groovy library. Let me elaborate:\n\n- One part of the code just retrieves metadata of the change from Gerrit. With the GerritCodeReview-plugin on version 0.3.4 this metadata will already be supplied via env variables from the plugin, making this code obsolete. This however will require an update to a newer Jenkins version, which we will hopefully be finally able to do as soon as all gerrit branches are build with the pipeline and we removed the current verifier workflow jobs.\n\n- Another big chunk is the posting of the checks results. As I already discussed with Luca, this should be part of the GerritCodeReview plugin as well. This might be part of the Hackathon.\n\n- The third block would be selection of build modes to select the jobs that will be started. This part is also the part, which will be influenced most by the branches. I think in the end it might make sense to not use this pipeline to start other jobs, but to perform the verification steps in the pipeline itself. (It might make sense though to split up code style validation and verification into two pipelines to make the Jenkinsfile/Pipeline not overly complex). Doing this would however also introduce duplicated code between branches as long as the build/test procedure stays the same. However, I don\u0027t know how much sense it makes to decouple that from Gerrit itself, since this is rather specific to the project and the respective version/branch.\n\n- With the previous point we would also not have to parse the logs of other jobs anymore as we do to get misformatted files (which is broken already in the old workflow-job), but could directly retrieve them from the respective operations.\n\nThis leaves the following methods in the Jenkinsfile:\n\n- queryChangedFiles(): Could also be something that could be part of the GerritCodeReview-plugin.\n\n- findFlakyBuilds(): Detects whether some but not all build modes did not build/test successfully and retries the failed ones. The question is, whether we want to even keep that. Flakyness should be detected directly.\n\n- create*MsgBody(): These two methods will remain, but IMHO wouldn\u0027t be enough to create a library.\n\nWhat do you think?\n\nI would be happy to help with the GerritCodeReview plugin (of which I don\u0027t know the code yet) and the update of Jenkins.",
      "parentUuid": "8b9d599f_5b3be8f7",
      "range": {
        "startLine": 24,
        "startChar": 50,
        "endLine": 26,
        "endChar": 7
      },
      "revId": "9730f0bcd12fc5640fa68240b2fa5d21c3154c75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c06db4e7_138fed1a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 52
      },
      "lineNbr": 26,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-10-18T11:10:57Z",
      "side": 1,
      "message": "\u003e I mean most of the code outside the node() block is probably common between all Gerrit branches\n\nI do not understand this argument. Isn\u0027t this true for a lot\nof java files in the Gerrit source code? Handling different versions\nof the same file in different branches is what Git is made for.",
      "parentUuid": "65a6d2c9_a326c120",
      "range": {
        "startLine": 24,
        "startChar": 50,
        "endLine": 26,
        "endChar": 7
      },
      "revId": "9730f0bcd12fc5640fa68240b2fa5d21c3154c75",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}