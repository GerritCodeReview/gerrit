{
  "comments": [
    {
      "key": {
        "uuid": "ca1b7926_1ffaeff6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-06-26T21:27:14Z",
      "side": 1,
      "message": "s/category/label\n\ncategories are now called labels :-)",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a98a1f6_9c0f0541",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 1012872
      },
      "writtenOn": "2013-06-26T22:12:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca1b7926_1ffaeff6",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UDdX7-Po",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-04-25T21:39:54Z",
      "side": 1,
      "message": "This is a very ugly syntax. I would prefer something like:\n\n  label:Code-Review\u003d1 BY user:jsmith\n\nThat means adding a token BY to Query.g to support getting this into the parse tree, and then altering the way the parse tree is handled in QueryBuilder so that the BY operator can connect the label and user/group child nodes together into a meaningful predicate.\n\nCurrently the parser can \"sort of\" grok this:\n\n  label:(Code-Review\u003d1 user:jsmith)\n\nby rewriting this as though you had written:\n\n  label:Code-Review\u003d1 label:user:jsmith\n\nUsing () here to bind these isn\u0027t as easy to use as having a specialized operator \"BY\" that accepts a user/group predicate as a child.",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UDZUFhCE",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2013-04-25T22:08:58Z",
      "side": 1,
      "message": "I don\u0027t think using BY is a generic enough extensible mechanism.  Imagine trying to tie in the time of the approval also, how would you do it? \n\n   label:Code-Review\u003d1 BY user:jsmith BY time:\"1hour ago\"\n\nHere the second BY doesn\u0027t make linguistic sense, and what would it be joining?\n\nThe \",keyword\u003dvalue\" mechanism is easily extensible to many scenarios (we have already used it on other custom operators of ours).  It is also possible to make it order insensitive.  The BY seems strange and un-intuitive, it pretends to join 2 predicates but it really isn\u0027t; it is just a mechanism to add additional parameters to the first Predicate.",
      "parentUuid": "UDdX7-Po",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UDRURdGA",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-04-25T22:28:24Z",
      "side": 1,
      "message": "Maybe we modify the way () works then:\n\n  label:(Code-Review\u003d1 user:jsmith age:1h)\n\nCurrently this is not permitted by the query language, so nobody is using this syntax at present.",
      "parentUuid": "UDZUFhCE",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UDfUl2LY",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2013-04-25T22:38:33Z",
      "side": 1,
      "message": "Is your intention to require that every term like \"age\" be a predicate which exists outside of the context of the leftmost predicate (label in this case)?  How would the age predicate be implemented, would it now have to understand how to do ages for changes and for approvals (and any new thing which can be joined with age)?\n\nWhat about auto completion suggestions?  If I type label:Code-Review\u003d1 and then want to add another argument, what do I do (do I have to go back and add in the paren)?  With a comma this should be easy to make work.",
      "parentUuid": "UDRURdGA",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UDjQMcEg",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-04-25T22:42:24Z",
      "side": 1,
      "message": "The existing AgePredicate wouldn\u0027t know about this usage in a label. Instead we would make the additional fields available to the LabelPredicate as arguments similar to what this change wants to do, and then its up to LabelPredicate to grok these. It could run a new type of PredicateBuilder to convert the parse tree for itself.\n\nAs far as autocomplete, yes, you would have to go back and insert a ( after the label: operator to indicate the grouping, and we would need specialized auto-complete for label: to recognize what parameters are valid within that scope.\n\nIf we are doing a specialized autocomplete for label then we might be able to hint suggestions so that a completion attempt for:\n\n  label:Code-\n\nwould offer things like:\n\n  label:Code-Review\u003d2\n  label:(Code-Review\u003d2 user:\n  label:(Code-Review\u003d2 age:\n\nto give the user a hint on what replacement they can take.",
      "parentUuid": "UDfUl2LY",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca1b7926_96ed4c46",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-06-24T22:16:16Z",
      "side": 1,
      "message": "After talking about this today at the hackathon I think Craig\u0027s proposal is reasonable, and I retract my other approaches.\n\nWe now use a similar sort of style on reference parameters during push, so it is perhaps reasonable to do the same thing here.",
      "parentUuid": "UDjQMcEg",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a7b0960_a20f3e40",
        "filename": "Documentation/user-search.txt",
        "patchSetId": 5
      },
      "lineNbr": 330,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-06-26T21:27:14Z",
      "side": 1,
      "message": "s/category/label",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa8ba5a1_fd0e4741",
        "filename": "Documentation/user-search.txt",
        "patchSetId": 5
      },
      "lineNbr": 330,
      "author": {
        "id": 1012872
      },
      "writtenOn": "2013-06-26T22:12:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a7b0960_a20f3e40",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a7b0960_e209463c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 5
      },
      "lineNbr": 319,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-06-26T21:27:14Z",
      "side": 1,
      "message": "nit: in Gerrit we normally declare arrays like this\n  String[] splitReviewer \u003d ...\n\nFor consistency I would change it here.",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa8ba5a1_5d073b2a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 5
      },
      "lineNbr": 319,
      "author": {
        "id": 1012872
      },
      "writtenOn": "2013-06-26T22:12:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a7b0960_e209463c",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca1b7926_ff09f33b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 5
      },
      "lineNbr": 333,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-06-26T21:27:14Z",
      "side": 1,
      "message": "This shouldn\u0027t be logged as error. We only log things as error that should concern the Gerrit administrator. This is just wrong user input and the query for the user fails with an error message. There is no need to bother an admin with this.",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa8ba5a1_7d04f724",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 5
      },
      "lineNbr": 333,
      "author": {
        "id": 1012872
      },
      "writtenOn": "2013-06-26T22:12:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca1b7926_ff09f33b",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a7b0960_020f0a3f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 5
      },
      "lineNbr": 342,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-06-26T21:27:14Z",
      "side": 1,
      "message": "Do not log this as error.",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a98a1f6_3cfa71f7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 5
      },
      "lineNbr": 342,
      "author": {
        "id": 1012872
      },
      "writtenOn": "2013-06-26T22:12:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a7b0960_020f0a3f",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a7b0960_22240ebb",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 5
      },
      "lineNbr": 351,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-06-26T21:27:14Z",
      "side": 1,
      "message": "Catch the QueryParseException here and rethrow it with a more precise error message.\n\n  label:CodeReview\u003d1,jsmit\n\nwould currently fail with \"Group jsmit not found\",\nbut it should rather say something like \"Neither User nor Group jsmit found\"",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a98a1f6_7c04f924",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 5
      },
      "lineNbr": 351,
      "author": {
        "id": 1012872
      },
      "writtenOn": "2013-06-26T22:12:06Z",
      "side": 1,
      "message": "If I don\u0027t catch it for accounts then I don\u0027t know to try it as a group, so I can\u0027t move the catch.",
      "parentUuid": "4a7b0960_22240ebb",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2adb35ae_691ee56e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 5
      },
      "lineNbr": 351,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-06-26T22:33:43Z",
      "side": 1,
      "message": "I didn\u0027t meant to move the catch, but just to surround the \n  group \u003d parseGroup(value).getUUID();\nby another try catch.",
      "parentUuid": "8a98a1f6_7c04f924",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a98a1f6_bc3f61c1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 5
      },
      "lineNbr": 351,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-06-26T23:29:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2adb35ae_691ee56e",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca1b7926_7f07a32a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/PredicateArgs.java",
        "patchSetId": 5
      },
      "lineNbr": 44,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-06-26T21:27:14Z",
      "side": 1,
      "message": "s/ChangeQueryBuild/ChangeQueryBuilder",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a98a1f6_dcf26d20",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/PredicateArgs.java",
        "patchSetId": 5
      },
      "lineNbr": 44,
      "author": {
        "id": 1012872
      },
      "writtenOn": "2013-06-26T22:12:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca1b7926_7f07a32a",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca1b7926_bf0f7b40",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/PredicateArgs.java",
        "patchSetId": 5
      },
      "lineNbr": 54,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-06-26T21:27:14Z",
      "side": 1,
      "message": "[optional] not sure if we need all these debug logs, AFAIK we have nowhere in Gerrit such detailed logging, same in ChangeQueryBuilder",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a98a1f6_fcf7290d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/PredicateArgs.java",
        "patchSetId": 5
      },
      "lineNbr": 54,
      "author": {
        "id": 1012872
      },
      "writtenOn": "2013-06-26T22:12:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca1b7926_bf0f7b40",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a7b0960_c2144253",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/PredicateArgs.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-06-26T21:27:14Z",
      "side": 1,
      "message": "Use Guava to initialize the List:\n  positional \u003d Lists.newArrayList();",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa8ba5a1_1dfdb3ee",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/PredicateArgs.java",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1012872
      },
      "writtenOn": "2013-06-26T22:12:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a7b0960_c2144253",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca1b7926_5f046724",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/PredicateArgs.java",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-06-26T21:27:14Z",
      "side": 1,
      "message": "Use Guava to initialize the Map:\n  keyValue \u003d Maps.newHashMap();",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a98a1f6_1cfdb5ee",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/PredicateArgs.java",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1012872
      },
      "writtenOn": "2013-06-26T22:12:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca1b7926_5f046724",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca1b7926_9f143f52",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/PredicateArgs.java",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-06-26T21:27:14Z",
      "side": 1,
      "message": "s/String splitArgs[]/String[] splitArgs\n\nsame for arrays below",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa8ba5a1_3dfa6ff7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/PredicateArgs.java",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 1012872
      },
      "writtenOn": "2013-06-26T22:12:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca1b7926_9f143f52",
      "revId": "97a5eb4b2653fc7cc02cef0e0254e47bd3ce91e7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}