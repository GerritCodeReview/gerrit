{
  "comments": [
    {
      "key": {
        "uuid": "aa731438_e6217d73",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-03-21T02:24:28Z",
      "side": 1,
      "message": "Nitpicks:\n\nMaybe this can just describe how it\u0027s refactored. Like \"Is refactored to do X\" or \"is refactored to not be so Y\".\n\nUse present tense to describe functionality introduced by this change,",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 13
      },
      "revId": "97d78af6d00903efc756f60d7ad8ade0d28d234a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c2e4c3a_282aecdc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-03-21T18:33:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa731438_e6217d73",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 13
      },
      "revId": "97d78af6d00903efc756f60d7ad8ade0d28d234a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d45ceaf_fbc1f2e9",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.html",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-03-21T02:24:28Z",
      "side": 1,
      "message": "If we add this, is the on-change listener on the next line needed? Why is the on-change listener insufficient?",
      "range": {
        "startLine": 241,
        "startChar": 59,
        "endLine": 241,
        "endChar": 67
      },
      "revId": "97d78af6d00903efc756f60d7ad8ade0d28d234a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61fa5d73_adcafc0e",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.html",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 1030207
      },
      "writtenOn": "2017-03-21T17:20:07Z",
      "side": 1,
      "message": "I\u0027m not sure exactly, but this is what the Polymer docs say to do for two way binding to a native element: \nhttps://www.polymer-project.org/1.0/docs/devguide/data-binding#two-way-native",
      "parentUuid": "3d45ceaf_fbc1f2e9",
      "range": {
        "startLine": 241,
        "startChar": 59,
        "endLine": 241,
        "endChar": 67
      },
      "revId": "97d78af6d00903efc756f60d7ad8ade0d28d234a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d13d15c_f85752ee",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.html",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-03-21T17:38:11Z",
      "side": 1,
      "message": "The `::\u003cevent name\u003e` just tells it which event to listen to for binding-upwards. But why are you using two-way data-binding *and* an on-change listener?",
      "parentUuid": "61fa5d73_adcafc0e",
      "range": {
        "startLine": 241,
        "startChar": 59,
        "endLine": 241,
        "endChar": 67
      },
      "revId": "97d78af6d00903efc756f60d7ad8ade0d28d234a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77ce3100_949e372b",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.html",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-03-21T18:33:20Z",
      "side": 1,
      "message": "It is not needed. Change works with just...\n\n  checked\u003d\"[[file.isReviewed]]\"\n\n...\nThe key takeaway here is that one way binding to a property that is updated works, whereas binding to a computed function did not.\n\nThe Polymer docs are definitely a bit confusing on this point.",
      "parentUuid": "1d13d15c_f85752ee",
      "range": {
        "startLine": 241,
        "startChar": 59,
        "endLine": 241,
        "endChar": 67
      },
      "revId": "97d78af6d00903efc756f60d7ad8ade0d28d234a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f94f9e34_9f445052",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 2
      },
      "lineNbr": 386,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-03-21T02:24:28Z",
      "side": 1,
      "message": "Optionally, this might be tidier as a filter:\n\nvar newlyReviewed \u003d paths.filter(function(path) {\n  return this._reviewed.indexOf(path) \u003d\u003d\u003d -1;\n}.bind(this));",
      "range": {
        "startLine": 381,
        "startChar": 6,
        "endLine": 386,
        "endChar": 20
      },
      "revId": "97d78af6d00903efc756f60d7ad8ade0d28d234a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80b6fe6b_d1720137",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 2
      },
      "lineNbr": 386,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-03-21T18:33:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f94f9e34_9f445052",
      "range": {
        "startLine": 381,
        "startChar": 6,
        "endLine": 386,
        "endChar": 20
      },
      "revId": "97d78af6d00903efc756f60d7ad8ade0d28d234a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e21d902_5ddaf902",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-03-21T02:24:28Z",
      "side": 1,
      "message": "Is there another way to handle this besides an `alert`? Have you observed this failing? If so, maybe it should go in the gr-error-manager.",
      "range": {
        "startLine": 393,
        "startChar": 10,
        "endLine": 393,
        "endChar": 15
      },
      "revId": "97d78af6d00903efc756f60d7ad8ade0d28d234a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d3f9048_a53e9416",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-03-21T18:33:20Z",
      "side": 1,
      "message": "This is just the behavior that existed before, as you can see on #373 of the left hand side of the diff with BASE.\n\nI\u0027ve observed this happening, yeah. It\u0027s usually in the standard case of an API request failing, e.g. being disconnected from the internet. \n\nAFAIK, all errors are logged with the error-manager already through the send function in the rest-api itself. Not sure what the right course of action is here, would love your thoughts!",
      "parentUuid": "6e21d902_5ddaf902",
      "range": {
        "startLine": 393,
        "startChar": 10,
        "endLine": 393,
        "endChar": 15
      },
      "revId": "97d78af6d00903efc756f60d7ad8ade0d28d234a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2faed0e6_c43a6e94",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-03-21T22:42:51Z",
      "side": 1,
      "message": "Since there is already code that creates an alert, maybe we should just create a cleanup issue to convert it to a toast-message or similar.\n\nWhat about creating a `_handleSetReviewedError` method so we only have one alert in the page?",
      "parentUuid": "1d3f9048_a53e9416",
      "range": {
        "startLine": 393,
        "startChar": 10,
        "endLine": 393,
        "endChar": 15
      },
      "revId": "97d78af6d00903efc756f60d7ad8ade0d28d234a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89e58e3e_ff8b1dbf",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 2
      },
      "lineNbr": 396,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-03-21T02:24:28Z",
      "side": 1,
      "message": "This is going to send one API request per file, isn\u0027t it? It\u0027s a shame there isn\u0027t a bulk-mark-as-reviewed API call.\n\nIf I expand all on a change with 12k files, will it send 12k simultaneous mark-as-reviewed calls?\n\nI suspect we should either...\n* Create a new bulk mark-as-reviewed endpoint, or...\n* Mark each on in order (waiting for each call to complete before firing the next one). This would be similar to the `_renderInOrder` method you can see at the end of this file (except they\u0027d be network promises rather than diff-render promises). It may even be possible to piggy-back off of that function to make the reviewed call as each diff is rendered.\n\nWhat do you think?",
      "range": {
        "startLine": 391,
        "startChar": 6,
        "endLine": 396,
        "endChar": 22
      },
      "revId": "97d78af6d00903efc756f60d7ad8ade0d28d234a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc01d9d7_2eb27888",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 2
      },
      "lineNbr": 396,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-03-21T18:33:20Z",
      "side": 1,
      "message": "I don\u0027t believe we allow expanding-all on a change with 12k files, do we? (Actually, you may have removed that cap when you made the diffs render in order.)\n\nRegardless, yes that will happen. I think the first point you make is the best option, I\u0027ll file a feature request with the backend team. I\u0027d rather not do the second point, because then we make 12k iterative updates to the _reviewed array instead of just doing it with one big splice.",
      "parentUuid": "89e58e3e_ff8b1dbf",
      "range": {
        "startLine": 391,
        "startChar": 6,
        "endLine": 396,
        "endChar": 22
      },
      "revId": "97d78af6d00903efc756f60d7ad8ade0d28d234a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}