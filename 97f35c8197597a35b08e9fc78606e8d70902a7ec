{
  "comments": [
    {
      "key": {
        "uuid": "M8PJmaOI",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/Reviewable.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2012-12-12T20:32:42Z",
      "side": 1,
      "message": "Could you explain why a topic branch needs to be something new in Gerrit?  Is there a reason that a change could not represent a topic branch?  In other words, could you not represent a series of changes by one final change (a merge commit perhaps, or some other new change type)?",
      "revId": "97f35c8197597a35b08e9fc78606e8d70902a7ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "M8DJZ0Cg",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/Reviewable.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2012-12-12T21:48:51Z",
      "side": 1,
      "message": "To help clarify my concern about creating a new type.  Currently a Change is the primary object that people review in Gerrit, and many pieces count on a Change being the thing that gets reviewed.  For example, searches are based on changes, if we introduce some new Reviewable object, will we have to create a whole new query engine to support searching for these.  Will we need new user dashboards eventually which can display topics?\n\nWhen Shawn moved the ACLs to the Gerrit repos, he made it possible to suddenly have a change to review ACLs changes.  By using a Change object, suddenly ACLs changes were open to all sorts of cool features already built into Gerrit and we didn\u0027t have to chagne any of Gerrit\u0027s main pieces to get there.  \n\nWe have talked about making more actions available as Changes for review: project and branch creations, group memberships...  If we decided to make these things something other than Changes, we would have to build a lot more infrastructure in Gerrit.  Your topic branch changes are an example of some of that infrastructure:  picture doing that for more things than topic branches, it would get a bit crazy likely.  \n\nSo if possible I would suggest investigating approaches that treat a topic branch as a change.  It may be that you will need to define a special kind of change, but with a bit of creativity this may not be a big deal.",
      "parentUuid": "M8PJmaOI",
      "revId": "97f35c8197597a35b08e9fc78606e8d70902a7ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "M7DYymPA",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/Reviewable.java",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1010041
      },
      "writtenOn": "2012-12-12T22:35:51Z",
      "side": 1,
      "message": "I understand your concern and in many ways share them. One of the problems with the topic review code is there is quite a lot of duplicate code as in many ways a topic is very similar to a changes. For example we have topic dashboard as you mention. Getting away from this would be great. If the concept of a change could be broadened this might be an elegant solution. \n\nI am just thinking out loud here, so bare with me :-) May be we could create a change type that represents a topic branch that has some sort of composite patchset that is made up of the changes associated with the topic branch...",
      "parentUuid": "M8PJmaOI",
      "revId": "97f35c8197597a35b08e9fc78606e8d70902a7ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}