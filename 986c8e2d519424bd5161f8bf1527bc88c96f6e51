{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cfdda173_083a2082",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-23T15:41:41Z",
      "side": 1,
      "message": "nit: misinterprets",
      "range": {
        "startLine": 13,
        "startChar": 45,
        "endLine": 13,
        "endChar": 57
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00ba67a1_5cdd3dc3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-23T17:03:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cfdda173_083a2082",
      "range": {
        "startLine": 13,
        "startChar": 45,
        "endLine": 13,
        "endChar": 57
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a68c39a9_9a840ec0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 14,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-23T15:41:41Z",
      "side": 1,
      "message": "\"scans and sends/advertises\"?",
      "range": {
        "startLine": 14,
        "startChar": 26,
        "endLine": 14,
        "endChar": 30
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "658be7ee_d3eb4a7d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 14,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-23T17:03:06Z",
      "side": 1,
      "message": "No, just scans.",
      "parentUuid": "a68c39a9_9a840ec0",
      "range": {
        "startLine": 14,
        "startChar": 26,
        "endLine": 14,
        "endChar": 30
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49f04942_cce861fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-23T09:57:59Z",
      "side": 1,
      "message": "@Nasser @Matthias are you happy with this as well?",
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da820575_c97ee8b8",
        "filename": "java/com/google/gerrit/server/git/PermissionAwareReadOnlyRefDatabase.java",
        "patchSetId": 8
      },
      "lineNbr": 134,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-23T15:41:41Z",
      "side": 1,
      "message": "So why do we have this logic here and not in getRefs() above (line 100)? Is this trying to be too clever? These methods are confusing since this one is named getRefsByPrefix(), it calls a method in this class called getRefs(), which then calls JGit\u0027s getRefsByPrefix(). That doesn\u0027t make sense to me and I have a hard time understanding what\u0027s correct.",
      "range": {
        "startLine": 133,
        "startChar": 6,
        "endLine": 134,
        "endChar": 42
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04243d63_beead5cf",
        "filename": "java/com/google/gerrit/server/git/PermissionAwareReadOnlyRefDatabase.java",
        "patchSetId": 8
      },
      "lineNbr": 134,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-23T17:03:06Z",
      "side": 1,
      "message": "getRefs() is deprecated and shouldn\u0027t be used anymore: from its JavaDoc \"@deprecated use {@link #getRefsByPrefix} instead\".\n\nI believe it would be best to delegate getRefs() to call getRefsByPrefix() and just avoid this confusing duplicated logic. I agree with you, it is very confusing.\n\nI\u0027ll address that as a follow-up change, because the duplication existed regardless of this bug.",
      "parentUuid": "da820575_c97ee8b8",
      "range": {
        "startLine": 133,
        "startChar": 6,
        "endLine": 134,
        "endChar": 42
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfd72870_b36576c6",
        "filename": "java/com/google/gerrit/server/git/PermissionAwareReadOnlyRefDatabase.java",
        "patchSetId": 8
      },
      "lineNbr": 134,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-23T17:49:17Z",
      "side": 1,
      "message": "I re-read the code more carefully and getRefsByPrefix() depends on the deprecated getRefs() at L100. The getRefs() at L100 isn\u0027t buggy because if you pass HEAD will correctly extract the refs that start with HEAD as expected.\n\nThe bug is just in getRefsByPrefix() that when called with HEAD was triggering a getRefs(ALL).",
      "parentUuid": "04243d63_beead5cf",
      "range": {
        "startLine": 133,
        "startChar": 6,
        "endLine": 134,
        "endChar": 42
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ec83731_e7757817",
        "filename": "java/com/google/gerrit/server/git/PermissionAwareReadOnlyRefDatabase.java",
        "patchSetId": 8
      },
      "lineNbr": 134,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-23T17:52:05Z",
      "side": 1,
      "message": "I\u0027ve clarified in the commit message the reason why the fix is on getRefsByPrefix and not in getRefs.",
      "parentUuid": "cfd72870_b36576c6",
      "range": {
        "startLine": 133,
        "startChar": 6,
        "endLine": 134,
        "endChar": 42
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ebb3bf9_c160d108",
        "filename": "java/com/google/gerrit/server/git/PermissionAwareReadOnlyRefDatabase.java",
        "patchSetId": 8
      },
      "lineNbr": 134,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-23T18:20:35Z",
      "side": 1,
      "message": "I dug into this more, and I\u0027m more convinced this is the wrong change. This class seems to be unnecessarily duplicating code from JGit. JGit\u0027s org.eclipse.jgit/src/org/eclipse/jgit/lib/RefDatabase.java:getRefsByPrefix(String prefix) has almost identical code to this. When this class was first written, JGit didn\u0027t have that code. Why are we still duplicating it? Obviously we need to keep doing the filtering that\u0027s done on line 108, but I don\u0027t see any value in this class\u0027 getRefsByPrefix() over getRefs().\n\nThen that leads me to say, if after you remove this getRefsByPrefix() and use getRefs(), you find that RefDatabase\u0027s getRefsByPrefix() doesn\u0027t handle HEAD correctly, fix it in JGit.",
      "parentUuid": "4ec83731_e7757817",
      "range": {
        "startLine": 133,
        "startChar": 6,
        "endLine": 134,
        "endChar": 42
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ac9f0ca_a4e9550b",
        "filename": "java/com/google/gerrit/server/git/PermissionAwareReadOnlyRefDatabase.java",
        "patchSetId": 8
      },
      "lineNbr": 134,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-23T18:29:26Z",
      "side": 1,
      "message": "Needs fixing in both. I\u0027ve posted the JGit fix: https://git.eclipse.org/r/c/jgit/jgit/+/185640",
      "parentUuid": "3ebb3bf9_c160d108",
      "range": {
        "startLine": 133,
        "startChar": 6,
        "endLine": 134,
        "endChar": 42
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c533c529_eed4708f",
        "filename": "java/com/google/gerrit/server/git/PermissionAwareReadOnlyRefDatabase.java",
        "patchSetId": 8
      },
      "lineNbr": 134,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-23T18:58:31Z",
      "side": 1,
      "message": "Good to see the JGit change. That should be a dependency of this change. I\u0027m not seeing a compelling reason to not delete this getRefsByPrefix() method (maybe we can\u0027t completely delete it because that would break anyone overriding it, but replacing all the code inside it with calling Jgit\u0027s getRefsByPrefix() or this class\u0027 getRefs()).",
      "parentUuid": "1ac9f0ca_a4e9550b",
      "range": {
        "startLine": 133,
        "startChar": 6,
        "endLine": 134,
        "endChar": 42
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "315cdd8d_be047797",
        "filename": "java/com/google/gerrit/server/git/PermissionAwareReadOnlyRefDatabase.java",
        "patchSetId": 8
      },
      "lineNbr": 134,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-23T19:15:01Z",
      "side": 1,
      "message": "\u003e Good to see the JGit change. That should be a dependency of this change. \n\nCan you elaborate on why it should be a dependency?\n\nWould this change work if merged before the JGit one? Yes.\nJGit already returns the correct result today, even without the JGit fix.\n\nWould the JGit change work if merged before this one? Yes.\nJGit change makes sense as performance optimisation with or without the Gerrit change.\n\nTherefore, this change and the JGit change can be merged in any order. \nCan you highlight the breakage caused by merging this change before the JGit one?\n\n\u003e I\u0027m not seeing a compelling reason to not delete this getRefsByPrefix() method (maybe we can\u0027t completely delete it because that would break anyone overriding it, but replacing all the code inside it with calling Jgit\u0027s getRefsByPrefix() or this class\u0027 getRefs()).\n\nI can give you that compelling reason: the getRefsByPrefix() is going to stay as a method and, sooner or later, will have to be reintroduced if we remove it now.\n\ngetRefs() is deprecated in the JGit domain and sooner or later would have to be removed.",
      "parentUuid": "c533c529_eed4708f",
      "range": {
        "startLine": 133,
        "startChar": 6,
        "endLine": 134,
        "endChar": 42
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "beb66939_94853ae0",
        "filename": "javatests/com/google/gerrit/integration/git/GitProtocolV2IT.java",
        "patchSetId": 8
      },
      "lineNbr": 286,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-23T15:41:41Z",
      "side": 1,
      "message": "nit for future cleanup: Seems this pattern is repeated a lot in this file, might be nice to have a helper.\n\nAnd maybe even a dedicated setProtocolV2() since that\u0027s a common use for it.",
      "range": {
        "startLine": 282,
        "startChar": 10,
        "endLine": 286,
        "endChar": 23
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d71d302e_b10d9e02",
        "filename": "javatests/com/google/gerrit/integration/git/GitProtocolV2IT.java",
        "patchSetId": 8
      },
      "lineNbr": 286,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-23T17:52:05Z",
      "side": 1,
      "message": "Sure, good idea. Let me address that in a follow-up change.",
      "parentUuid": "beb66939_94853ae0",
      "range": {
        "startLine": 282,
        "startChar": 10,
        "endLine": 286,
        "endChar": 23
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33a5e73a_94bee58b",
        "filename": "javatests/com/google/gerrit/integration/git/GitProtocolV2IT.java",
        "patchSetId": 8
      },
      "lineNbr": 303,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-23T15:41:41Z",
      "side": 1,
      "message": "Is this relevant to the test?",
      "range": {
        "startLine": 303,
        "startChar": 18,
        "endLine": 303,
        "endChar": 35
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af31e280_cab23e40",
        "filename": "javatests/com/google/gerrit/integration/git/GitProtocolV2IT.java",
        "patchSetId": 8
      },
      "lineNbr": 303,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-23T17:03:06Z",
      "side": 1,
      "message": "Yes, otherwise we would get advertised all the tags as well, which isn\u0027t what we want to test.",
      "parentUuid": "33a5e73a_94bee58b",
      "range": {
        "startLine": 303,
        "startChar": 18,
        "endLine": 303,
        "endChar": 35
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1da951fc_9767ff33",
        "filename": "javatests/com/google/gerrit/integration/git/GitProtocolV2IT.java",
        "patchSetId": 8
      },
      "lineNbr": 303,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-23T18:58:31Z",
      "side": 1,
      "message": "But this is a new project we just created. Why would it have tags?",
      "parentUuid": "af31e280_cab23e40",
      "range": {
        "startLine": 303,
        "startChar": 18,
        "endLine": 303,
        "endChar": 35
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "740764d7_3453c43b",
        "filename": "javatests/com/google/gerrit/integration/git/GitProtocolV2IT.java",
        "patchSetId": 8
      },
      "lineNbr": 303,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-23T19:15:01Z",
      "side": 1,
      "message": "Point taken :o). Let me remove it.",
      "parentUuid": "1da951fc_9767ff33",
      "range": {
        "startLine": 303,
        "startChar": 18,
        "endLine": 303,
        "endChar": 35
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d48d33be_05bf69b7",
        "filename": "javatests/com/google/gerrit/integration/git/GitProtocolV2IT.java",
        "patchSetId": 8
      },
      "lineNbr": 308,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-23T15:41:41Z",
      "side": 1,
      "message": "Is this important to the test? Seems like it would be covered by the other tests in here, unless you\u0027re concerned fetching HEAD would somehow make the server use a different protocol version?",
      "range": {
        "startLine": 308,
        "startChar": 6,
        "endLine": 308,
        "endChar": 57
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c4ad317_75d4ba8d",
        "filename": "javatests/com/google/gerrit/integration/git/GitProtocolV2IT.java",
        "patchSetId": 8
      },
      "lineNbr": 308,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-23T17:03:06Z",
      "side": 1,
      "message": "If Git protocol version isn\u0027t 2, then the assertions at L309 and L310 aren\u0027t relevant anymore. It is therefore important to assert that this conditions are under Git protocol v2.",
      "parentUuid": "d48d33be_05bf69b7",
      "range": {
        "startLine": 308,
        "startChar": 6,
        "endLine": 308,
        "endChar": 57
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73bb8678_be8663bc",
        "filename": "javatests/com/google/gerrit/integration/git/GitProtocolV2IT.java",
        "patchSetId": 8
      },
      "lineNbr": 308,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-23T18:58:31Z",
      "side": 1,
      "message": "But why aren\u0027t we trusting that your setProtocolV2() method (which you could move before this change in the series) did that since you\u0027re testing exactly that elsewhere?",
      "parentUuid": "6c4ad317_75d4ba8d",
      "range": {
        "startLine": 308,
        "startChar": 6,
        "endLine": 308,
        "endChar": 57
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d793ec89_ee435430",
        "filename": "javatests/com/google/gerrit/integration/git/GitProtocolV2IT.java",
        "patchSetId": 8
      },
      "lineNbr": 308,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-23T19:15:01Z",
      "side": 1,
      "message": "setProtocolV2() says that we request Gerrit to enable protocol V2 but doesn\u0027t actually say that Gerrit honours it :-)\n\nThis assertion is there to say: Gerrit should do what we are asking him to do. That\u0027s at the end the purpose of tests: asserting what we are expecting Gerrit to do.",
      "parentUuid": "73bb8678_be8663bc",
      "range": {
        "startLine": 308,
        "startChar": 6,
        "endLine": 308,
        "endChar": 57
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12967910_0f052950",
        "filename": "javatests/com/google/gerrit/integration/git/GitProtocolV2IT.java",
        "patchSetId": 8
      },
      "lineNbr": 309,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-23T15:41:41Z",
      "side": 1,
      "message": "nit: You could get the exact commit-id of HEAD using the projectApi above. It would make this clearer.",
      "range": {
        "startLine": 309,
        "startChar": 52,
        "endLine": 309,
        "endChar": 61
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "063db8eb_d84d7757",
        "filename": "javatests/com/google/gerrit/integration/git/GitProtocolV2IT.java",
        "patchSetId": 8
      },
      "lineNbr": 309,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-23T17:03:06Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "12967910_0f052950",
      "range": {
        "startLine": 309,
        "startChar": 52,
        "endLine": 309,
        "endChar": 61
      },
      "revId": "986c8e2d519424bd5161f8bf1527bc88c96f6e51",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}