{
  "comments": [
    {
      "key": {
        "uuid": "5beb6508_a3b89738",
        "filename": "java/com/google/gerrit/server/permissions/DefaultRefFilter.java",
        "patchSetId": 4
      },
      "lineNbr": 382,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-12-03T11:28:47Z",
      "side": 1,
      "message": "Why not just:\n\n collect(toList())\n\n?",
      "range": {
        "startLine": 382,
        "startChar": 19,
        "endLine": 382,
        "endChar": 71
      },
      "revId": "9a075ed67392c296bd785f80a4c3b2d01bfc7745",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "275dceab_128d7850",
        "filename": "java/com/google/gerrit/server/permissions/DefaultRefFilter.java",
        "patchSetId": 4
      },
      "lineNbr": 382,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-12-03T12:14:54Z",
      "side": 1,
      "message": "toList is implemented as:\n\n    public static \u003cT\u003e\n    Collector\u003cT, ?, List\u003cT\u003e\u003e toList() {\n        return new CollectorImpl\u003c\u003e((Supplier\u003cList\u003cT\u003e\u003e) ArrayList::new, List::add,\n                                   (left, right) -\u003e { left.addAll(right); return left; },\n                                   CH_ID);\n    }\n\nSo it\u0027s an array list where the supplier doesn\u0027t care about the size. ArrayList start with a default size (10 IIRC) and then expand when more elements are added. Expansion is expensive and worst cases makes the linear operation quadratic. By using the code in this change, we avoid that by providing a list with the right size.\n\nUsually we don\u0027t care about these things and trade speed (in the order of nanoseconds) for code simplicity. Here, however, the cardinality is \u0027millions\u0027, so it does make a difference.\n\nI\u0027ve added an inline comment to explain.",
      "parentUuid": "5beb6508_a3b89738",
      "range": {
        "startLine": 382,
        "startChar": 19,
        "endLine": 382,
        "endChar": 71
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "9a075ed67392c296bd785f80a4c3b2d01bfc7745",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "136121c0_60f886a1",
        "filename": "java/com/google/gerrit/server/permissions/DefaultRefFilter.java",
        "patchSetId": 4
      },
      "lineNbr": 392,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-12-03T11:28:47Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 392,
        "startChar": 11,
        "endLine": 392,
        "endChar": 69
      },
      "revId": "9a075ed67392c296bd785f80a4c3b2d01bfc7745",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c94c5a83_03b903f7",
        "filename": "java/com/google/gerrit/server/permissions/DefaultRefFilter.java",
        "patchSetId": 4
      },
      "lineNbr": 392,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-12-03T12:14:54Z",
      "side": 1,
      "message": "Same.",
      "parentUuid": "136121c0_60f886a1",
      "range": {
        "startLine": 392,
        "startChar": 11,
        "endLine": 392,
        "endChar": 69
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "9a075ed67392c296bd785f80a4c3b2d01bfc7745",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}