{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8c3fca2b_5fe0426d",
        "filename": "java/com/google/gerrit/index/QueryOptions.java",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2022-09-02T02:33:12Z",
      "side": 1,
      "message": "This should probably be called startingPageSize, or initialPageSize.",
      "range": {
        "startLine": 70,
        "startChar": 22,
        "endLine": 70,
        "endChar": 30
      },
      "revId": "9c9833e53ee9d86abdafca5ed7dd1db5e327c2a6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4e38fa7_a519cb54",
        "filename": "java/com/google/gerrit/index/QueryOptions.java",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2022-09-02T17:09:37Z",
      "side": 1,
      "message": "Renaming `pageSize` to `startingPageSize` is not accurate as we use `QueryOptions` for subsequent pages as well by updating the page size using `withPageSize`. Renaming `QueryProcessor.getPageSize` to `QueryProcessor.getInitialPageSize` probably is the right thing to do.",
      "parentUuid": "8c3fca2b_5fe0426d",
      "range": {
        "startLine": 70,
        "startChar": 22,
        "endLine": 70,
        "endChar": 30
      },
      "revId": "9c9833e53ee9d86abdafca5ed7dd1db5e327c2a6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6183b2a_74e70fb2",
        "filename": "java/com/google/gerrit/index/query/AndSource.java",
        "patchSetId": 5
      },
      "lineNbr": 123,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2022-09-01T21:18:37Z",
      "side": 1,
      "message": "It\u0027s not obvious what pageSize \u003e\u003d limit represents, I think you are using pageSize to represent the number or results returned from the query above, would it make more sense, and be safer to use nextStart instead then?",
      "range": {
        "startLine": 123,
        "startChar": 17,
        "endLine": 123,
        "endChar": 26
      },
      "revId": "9c9833e53ee9d86abdafca5ed7dd1db5e327c2a6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f605dd6d_bb4efcdf",
        "filename": "java/com/google/gerrit/index/query/AndSource.java",
        "patchSetId": 5
      },
      "lineNbr": 123,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2022-09-01T22:24:09Z",
      "side": 1,
      "message": "I am using `pageSize \u003e\u003d limit` to determine if the query was a regular one, i.e not with no-limit. For example, a query like `status:open` has `pageSize` \u003d 501 and `limit` \u003d 500. Do you think a variable for it will make the code more readable?\n\nThe `(pageSize \u003e\u003d limit \u0026\u0026 !skipped)` condition is targeted towards determining the query-completeness for queries such as `gerrit query \u0027status:open\u0027 --start 10000 --no-limit`",
      "parentUuid": "f6183b2a_74e70fb2",
      "range": {
        "startLine": 123,
        "startChar": 17,
        "endLine": 123,
        "endChar": 26
      },
      "revId": "9c9833e53ee9d86abdafca5ed7dd1db5e327c2a6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b25e096e_615a0dbc",
        "filename": "java/com/google/gerrit/index/query/AndSource.java",
        "patchSetId": 5
      },
      "lineNbr": 123,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2022-09-01T23:48:10Z",
      "side": 1,
      "message": "If we defined pageResultSize before the loop on line 102, and kept track of it in the loop as you do in this loop, could we then eliminate the need to know about the idea of --no-limit like this:\n\n while (pageResultSize \u003c pageSize || r.size() \u003e\u003d limit + start) {",
      "parentUuid": "f605dd6d_bb4efcdf",
      "range": {
        "startLine": 123,
        "startChar": 17,
        "endLine": 123,
        "endChar": 26
      },
      "revId": "9c9833e53ee9d86abdafca5ed7dd1db5e327c2a6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de012c06_f4c3971d",
        "filename": "java/com/google/gerrit/index/query/AndSource.java",
        "patchSetId": 5
      },
      "lineNbr": 123,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2022-09-02T16:59:01Z",
      "side": 1,
      "message": "Doing something like that ends up making two queries to index for `gerrit query \u0027status:open\u0027 --start 1000`. For such a query, `limit`\u003d1500 and `start`\u003d1000.",
      "parentUuid": "b25e096e_615a0dbc",
      "range": {
        "startLine": 123,
        "startChar": 17,
        "endLine": 123,
        "endChar": 26
      },
      "revId": "9c9833e53ee9d86abdafca5ed7dd1db5e327c2a6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b095229_42029857",
        "filename": "java/com/google/gerrit/index/query/AndSource.java",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2022-09-01T23:32:55Z",
      "side": 1,
      "message": "Will this addition overflow with --no-limit and start \u003e 0?",
      "range": {
        "startLine": 140,
        "startChar": 76,
        "endLine": 140,
        "endChar": 90
      },
      "revId": "9c9833e53ee9d86abdafca5ed7dd1db5e327c2a6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5923e0e2_5ed0fcd7",
        "filename": "java/com/google/gerrit/index/query/AndSource.java",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2022-09-01T23:49:28Z",
      "side": 1,
      "message": "With no-limit we no longer set limit to Integer.MAX_VALUE. We intelligently determine the limit based on the index size. It is unlikely that this will overflow as index sizes (usually) are not as big as Integer.MAX_VALUE.\n\nAnyways, adding `limit` and `start` is not something that was introduced in this change, so I think it might be better to tackle it a separate change if we want to.",
      "parentUuid": "3b095229_42029857",
      "range": {
        "startLine": 140,
        "startChar": 76,
        "endLine": 140,
        "endChar": 90
      },
      "revId": "9c9833e53ee9d86abdafca5ed7dd1db5e327c2a6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "476cf908_3115e414",
        "filename": "java/com/google/gerrit/index/query/AndSource.java",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2022-09-01T23:51:46Z",
      "side": 1,
      "message": "\u003e Anyways, adding `limit` and `start` is not something that was introduced in this change, so I think it might be better to tackle it a separate change if we want to.\n\nWe may want a to just fix this then in a change before this one.",
      "parentUuid": "5923e0e2_5ed0fcd7",
      "range": {
        "startLine": 140,
        "startChar": 76,
        "endLine": 140,
        "endChar": 90
      },
      "revId": "9c9833e53ee9d86abdafca5ed7dd1db5e327c2a6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1fac4a6_43763857",
        "filename": "java/com/google/gerrit/index/query/QueryProcessor.java",
        "patchSetId": 5
      },
      "lineNbr": 373,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2022-09-01T21:18:37Z",
      "side": 1,
      "message": "This feels wrong to put in here. It should be directly tied to where it would be a problem, in fact it probably should have used a Max() to make it more obvious what was happening. Hmm, maybe the setter in the options could do this enforcing?",
      "revId": "9c9833e53ee9d86abdafca5ed7dd1db5e327c2a6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}