{
  "comments": [
    {
      "key": {
        "uuid": "83ec916f_1740af42",
        "filename": "tools/bzl/plugins.bzl",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-11-26T09:15:54Z",
      "side": 1,
      "message": "This broke Eclipse project generation in core. Note that almost all backend devs rely on Eclipse IDE (some use IJ, though), so that this cannot be submitted, until that problem is sorted out:\n\n  $ tools/eclipse/project.py \nERROR: /home/davido/projects/gerrit2/tools/eclipse/BUILD:44:1: no such target \u0027//plugins/codemirror-editor:codemirror-editor__plugin\u0027: target \u0027codemirror-editor__plugin\u0027 not declared in package \u0027plugins/codemirror-editor\u0027 defined by /home/davido/projects/gerrit2/plugins/codemirror-editor/BUILD and referenced by \u0027//tools/eclipse:main_classpath_collect\u0027\nERROR: Analysis of target \u0027//tools/eclipse:main_classpath_collect\u0027 failed; build aborted: Loading failed\nINFO: Elapsed time: 1.075s\nFAILED: Build did NOT complete successfully (73 packages loaded)\n\nThis is because CUSTOM_PLUGINS contribute to the classpath collector machinery:\n\n  classpath_collector(\n    name \u003d \"main_classpath_collect\",\n    testonly \u003d 1,\n    deps \u003d LIBS + PGMLIBS + DEPS + TEST_DEPS +\n           [\"//plugins/%s:%s__plugin\" % (n, n) for n in CORE_PLUGINS + CUSTOM_PLUGINS] +\n           [\"//plugins/%s:%s__plugin_test_deps\" % (n, n) for n in CUSTOM_PLUGINS_TEST_DEPS],\n)\n\nIOW: it is expected, that core/custom plugins are actually JAR-artifacts and as such should contribute to the classpath construction machinery for the Eclipse IDE.\n\nThis brngs me to a different idea, to introduce CORE_JS_PLUGINS variable and add codemirror plugin to this var and exclude it from classpath machinery. That way, this issue with classpath construction could be resolved.\n\nOf course, there is still another unresolved issue, that polymer vulcanize \u003d\u003e crisper pipeline produces two separate artifacts: JS and HTML file, that both belong to the plugin final artifact. I think, right now, Gerrit plugin loader cannot deal with that?\n\nThis raises the question, why don\u0027t we package codemirrow-editor plugin as normal JAR artifact, similar to buildbucket plugin: [1].\n\n* [1] https://chromium.googlesource.com/infra/gerrit-plugins/buildbucket",
      "revId": "9cc3ced35626f4808be651bbbffea582eeb8f189",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de08ec16_d5d95410",
        "filename": "tools/bzl/plugins.bzl",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-11-27T21:48:45Z",
      "side": 1,
      "message": "\u003e This broke Eclipse project generation in core.\n\nUnderstood. This is definitely something that needs to be addressed.\n\nIt seems to me that the best fix for this is definitely decoupling. I don\u0027t fully understand why we\u0027d want to enforce a contract that forces pure web code to be packaged as a JAR, especially since the entire Java-based frontend of Gerrit is on its way out sooner rather than later.\n\nI don\u0027t mean to pretend that I understand the intricacies of plugin development and loading -- this is my first crack at it, and I have you and others added as reviewers for very good reason ðŸ˜Š That being said, what seems to make most sense to me is to move plugin development in general to a more standalone system.",
      "parentUuid": "83ec916f_1740af42",
      "revId": "9cc3ced35626f4808be651bbbffea582eeb8f189",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ae92ac0_bdc4ae5b",
        "filename": "tools/bzl/plugins.bzl",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-11-28T17:53:39Z",
      "side": 1,
      "message": "Made the change use CORE_JS_PLUGINS in the latest patchset -- Eclipse should be unbroken now.",
      "parentUuid": "de08ec16_d5d95410",
      "revId": "9cc3ced35626f4808be651bbbffea582eeb8f189",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "346a66b6_42ac109c",
        "filename": "tools/bzl/plugins.bzl",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-11-28T22:18:50Z",
      "side": 1,
      "message": "If I rebase this change on master and, change the codemirror-editor plugin to skip split, with:\n\n  vulcanize(\n    name \u003d \"codemirror-editor\",\n    srcs \u003d [\"editor.html\"],\n    app \u003d \"editor.html\",\n    split \u003d False,\n    visibility \u003d [\"//visibility:public\"],\n    deps \u003d [\"//lib/js:codemirror-minified\"],\n  )\n\nthen the `bazel build release` works as expected:\n\n  $ unzip -t bazel-bin/release.war | grep -i plugins\n    testing: WEB-INF/plugins/         OK\n    testing: WEB-INF/plugins/replication.jar   OK\n    testing: WEB-INF/plugins/singleusergroup.jar   OK\n    testing: WEB-INF/plugins/download-commands.jar   OK\n    testing: WEB-INF/plugins/codemirror-editor.html   OK\n    testing: WEB-INF/plugins/reviewnotes.jar   OK\n    testing: WEB-INF/plugins/hooks.jar   OK\n    testing: WEB-INF/plugins/commit-message-length-validator.jar   OK\n    testing: Documentation/dev-plugins.html   OK\n    testing: Documentation/rest-api-plugins.html   OK\n    testing: Documentation/config-plugins.html   OK\n    testing: Documentation/dev-build-plugins.html   OK\n\nAnd even ls-command correctly shows the html-plugin:\n\n  $ java -jar bazel-bin/release.war ls | grep codemirror\nplugins/codemirror-editor.html\n\nHowever, the init command, don\u0027t offer html-plugin for installation:\n\n  *** Plugins\n  *** \n  Installing plugins.\n  Install plugin commit-message-length-validator version v2.14.2-1-g3f96a82 [y/N]? y\n  Installed commit-message-length-validator v2.14.2-1-g3f96a82\n  Install plugin download-commands version v2.15-rc1-3-gddbd127 [y/N]? y\n  Installed download-commands v2.15-rc1-3-gddbd127\nInstall plugin hooks version v2.15-rc1 [y/N]? y\n  Installed hooks v2.15-rc1\nInstall plugin replication version v2.15-rc2-5-g196d057 [y/N]? y\n  Installed replication v2.15-rc2-5-g196d057\n  Install plugin reviewnotes version v2.14.3-6-g5e6d0fb [y/N]? y\n  Installed reviewnotes v2.14.3-6-g5e6d0fb\n  Install plugin singleusergroup version v2.14.3-7-g73cfc73 [y/N]? y\n  Installed singleusergroup v2.14.3-7-g73cfc73\n  Initializing plugins.\n\nI guess, this is because only JAR plugins are respected?",
      "parentUuid": "8ae92ac0_bdc4ae5b",
      "revId": "9cc3ced35626f4808be651bbbffea582eeb8f189",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a92c098_2ce0e4cb",
        "filename": "tools/bzl/plugins.bzl",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-11-28T22:49:01Z",
      "side": 1,
      "message": "\u003e I guess, this is because only JAR plugins are respected?\n\nYeah, that\u0027s because currently, only JAR plugins are supported during installation machinery: [1]. Moreover, installed version is extracted from the MANIFEST file, and upgrade/install operation is retrieved: [2].\n\n* [1] https://github.com/GerritCodeReview/gerrit/blob/master/java/com/google/gerrit/pgm/WarDistribution.java#L50-L59\n* [2] https://github.com/GerritCodeReview/gerrit/blob/master/java/com/google/gerrit/pgm/init/InitPlugins.java#L129-L164",
      "parentUuid": "346a66b6_42ac109c",
      "revId": "9cc3ced35626f4808be651bbbffea582eeb8f189",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab9ef74f_b2e425fb",
        "filename": "tools/bzl/plugins.bzl",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-11-28T22:54:04Z",
      "side": 1,
      "message": "\u003e I guess, this is because only JAR plugins are respected?\n\nThis is a question I also have. I\u0027m not entirely sure what needs to be done here -- it looks like InitPlugins.java is what we need. Although I\u0027m fairly certain that for this specific case all we really need is to copy the HTML file to the plugins base dir, we should probably have more advanced mechanisms in place for plugin installation with dependencies/local assets.",
      "parentUuid": "346a66b6_42ac109c",
      "revId": "9cc3ced35626f4808be651bbbffea582eeb8f189",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc3ef53d_0d12978b",
        "filename": "tools/bzl/plugins.bzl",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-11-28T23:06:11Z",
      "side": 1,
      "message": "Looking into the code, it seems to be intrusive change (but this of course could all be done). So may be we should explore second option i mentioned in another comment, to produce JAR plugin, similar builducket plugin: [1].\n\nI\u0027m looking into this second option right now.\n\n* [1] https://chromium.googlesource.com/infra/gerrit-plugins/buildbucket/+/master/BUILD",
      "parentUuid": "ab9ef74f_b2e425fb",
      "revId": "9cc3ced35626f4808be651bbbffea582eeb8f189",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42abecf1_e069c6f3",
        "filename": "tools/bzl/plugins.bzl",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-11-28T23:26:47Z",
      "side": 1,
      "message": "I\u0027m fairly certain all that needs to be done is copying the .html file into the right directory.\n\nI\u0027d really like to avoid packaging anything into a jar, if possible. It seems much more futureproof to keep things simple.\n\nHow would I go about running the WAR init script in a debugger?",
      "parentUuid": "bc3ef53d_0d12978b",
      "revId": "9cc3ced35626f4808be651bbbffea582eeb8f189",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}