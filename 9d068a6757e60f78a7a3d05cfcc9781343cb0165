{
  "comments": [
    {
      "key": {
        "uuid": "706ffb76_49b4a1ba",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-09-22T13:17:35Z",
      "side": 1,
      "message": "Isn\u0027t exactly this (submit out of order) the main reason to use the Cherry-Pick merge strategy? If the commits are not supposed to be submitted out-of-order then why use the Cherry-Pick submit strategy? Wouldn\u0027t then the Merge-if-Necessary or the Rebase-if-Necessary be more suitable?",
      "revId": "9d068a6757e60f78a7a3d05cfcc9781343cb0165",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b07b3336_abc74925",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 1010516
      },
      "writtenOn": "2014-09-22T20:11:25Z",
      "side": 1,
      "message": "Rebase-If-Necessary is relatively new (2.6), I wasn\u0027t aware of it.\n\nStill, I\u0027m not sure it fits our needs.\n\nWe usually do push unrelated changes without dependencies, but it happens occasionally that a change needs to be submitted out of order.\n\nOther advantages of the Cherry-Pick strategy are that it updates the committer details (name/email and date) according to the user that submits the change, and adds the Reviewed-by footers.\n\nSubmitting a commit out of order *is* an option, but it should rarely be used in practice, and IMO it doesn\u0027t worth notifying the user of a \"problem\", which distracts from real conflicts.\n\nA few devs contacted me asking why does it show \"Merge Conflict\" for a change that was just pushed. It happened in practice, not in theory.",
      "parentUuid": "706ffb76_49b4a1ba",
      "revId": "9d068a6757e60f78a7a3d05cfcc9781343cb0165",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "706ffb76_69e3a5ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-09-23T08:53:49Z",
      "side": 1,
      "message": "\u003e We usually do push unrelated changes without dependencies, but it happens occasionally that a change needs to be submitted out of order.\n\nI understand, but don\u0027t agree that this justifies showing a potentially false information for the Cherry-Pick submit strategy... at least I wouldn\u0027t like\nto have that as a hardcoded default in Gerrit core.\n\n\u003e Other advantages of the Cherry-Pick strategy are that it updates the committer details (name/email and date) according to the user that submits the change, and adds the Reviewed-by footers.\n\nThe reviewnotes plugin will also add such information (probably even more) on submit. However, it will not update the commit message but create a git note on that commit. The notes are created in the refs/notes/review branch and can be seen by:\n\n  $ git fetch origin refs/notes/review:refs/notes/review\n  $ git log --notes\u003dreview\n\nEclipse EGit also shows the review notes in the commit view.",
      "parentUuid": "b07b3336_abc74925",
      "revId": "9d068a6757e60f78a7a3d05cfcc9781343cb0165",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b07b3336_eba47191",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-09-22T13:17:35Z",
      "side": 1,
      "message": "The information on the change screen tells if this commit with the displayed merge strategy is mergeable. In that sense it tells the truth even for the Cherry-Pick strategy.\n\nI understand what you want to achieve but I am not sure that this justifies providing a potentially incorrect information (according to the definition of cherry-pick).\n\nMaybe a better option is to provide what you need as a plugin and show the additional info as \"mergeable if cherry-picked in commit order\"?",
      "revId": "9d068a6757e60f78a7a3d05cfcc9781343cb0165",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "706ffb76_c9f17178",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1010516
      },
      "writtenOn": "2014-09-22T20:11:25Z",
      "side": 1,
      "message": "I think this will confuse the users even more.\n\nUsers usually don\u0027t read the text, and if some bold red text appears it scares them.\n\nThe \"Cannot Merge\" is supposed to be a useful hint for changes that need to be rebased before they can be submitting. It is not mandatory, and IMO it is fine that it doesn\u0027t appear and submit fails.",
      "parentUuid": "b07b3336_eba47191",
      "revId": "9d068a6757e60f78a7a3d05cfcc9781343cb0165",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "706ffb76_69b165c9",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/strategy/CherryPick.java",
        "patchSetId": 8
      },
      "lineNbr": 236,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-09-22T13:17:35Z",
      "side": 1,
      "message": "I think it is wrong to change this here as the purpose of this class is to verify the mergeability for the Cherry-Pick submit strategy which is a different thing than the mergeability check for the Merge-if-Necessary strategy.",
      "revId": "9d068a6757e60f78a7a3d05cfcc9781343cb0165",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}