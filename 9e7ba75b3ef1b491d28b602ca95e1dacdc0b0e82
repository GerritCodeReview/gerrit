{
  "pushCert": "certificate version 0.1\npusher A0D0EF51 1524494451 +0200\nnonce AFN+CTIYOSemRB0zFF6eT3RVkOS8s3+iXbppG7DIf0AHV8c/hg+KVhE6X5PKU+TgWGs2sEDHH6J1\n\n0000000000000000000000000000000000000000 9e7ba75b3ef1b491d28b602ca95e1dacdc0b0e82 refs/for/master\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEjcOJ9ZBmQPrFqZA3UbX9l6DQ71EFAlrd8HMACgkQUbX9l6DQ\n71EMtwf9G7vyG5RKMhRiTuaZJQQXTlVDdb3vsYjLo082xXOkpin2ewD6ZCoNiuk3\nmhE/qaoU2isOxNPK63Py6L3TMrOxGld0lgPDF1LfMlqsOsj56FQoV+PkXD0x0RQu\nxOiOeCzhSryp1PBqQ4IodwQ4XwNpY/FAbcN2rnoOYTwSzyxvQ993LNTPaFCPHt2F\ngE+E+THDJKWS8M/iA7uj/YW4T1a0kkHUtiitEYv2uSZRv3cRHANgH4snbL1uKtnk\nLjIZ6U1EC0oLF1UK+vqz52y1I1ZewLmwgkBaUbnmU18aUYT3aNDVoEumSlwbnm0e\nmN+ibv4oCJ6ghHiiZf1aSuHKDM8Utw\u003d\u003d\n\u003dFdz2\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "80fc70a3_15aefce1",
        "filename": "java/com/google/gerrit/common/data/AccessSection.java",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2018-04-23T14:51:45Z",
      "side": 1,
      "message": "isn\u0027t this quadratic?",
      "range": {
        "startLine": 79,
        "startChar": 9,
        "endLine": 79,
        "endChar": 19
      },
      "revId": "9e7ba75b3ef1b491d28b602ca95e1dacdc0b0e82",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcbbd721_b3d5feb0",
        "filename": "java/com/google/gerrit/common/data/AccessSection.java",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-04-23T14:53:37Z",
      "side": 1,
      "message": "yeah, we likely rather want to turn \"permissions\" into a Set, see discussion at [1]\n\nhttps://gerrit-review.googlesource.com/c/gerrit/+/173593/1//COMMIT_MSG",
      "parentUuid": "80fc70a3_15aefce1",
      "range": {
        "startLine": 79,
        "startChar": 9,
        "endLine": 79,
        "endChar": 19
      },
      "revId": "9e7ba75b3ef1b491d28b602ca95e1dacdc0b0e82",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07c485d4_daff1af6",
        "filename": "java/com/google/gerrit/common/data/AccessSection.java",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1021592
      },
      "writtenOn": "2018-04-23T20:10:06Z",
      "side": 1,
      "message": "I tried making this a set but ran into issues with the GWT editor during compiling.\n\nThough I think the correct approach would be to check for existing permission and if it exists add the rules so we do not lose any permissions. Something like:\n \n  getPermission(p.name, true).addAll(p.getRules());",
      "parentUuid": "bcbbd721_b3d5feb0",
      "range": {
        "startLine": 79,
        "startChar": 9,
        "endLine": 79,
        "endChar": 19
      },
      "revId": "9e7ba75b3ef1b491d28b602ca95e1dacdc0b0e82",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9916bfd6_fbdf933c",
        "filename": "java/com/google/gerrit/common/data/AccessSection.java",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-04-24T13:09:59Z",
      "side": 1,
      "message": "Should we then go with this fix for now?",
      "parentUuid": "07c485d4_daff1af6",
      "range": {
        "startLine": 79,
        "startChar": 9,
        "endLine": 79,
        "endChar": 19
      },
      "revId": "9e7ba75b3ef1b491d28b602ca95e1dacdc0b0e82",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa8d51a5_7764cdfa",
        "filename": "java/com/google/gerrit/common/data/AccessSection.java",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-04-24T13:43:36Z",
      "side": 1,
      "message": "Actually this check doesn\u0027t provide full safety. Permission#equals is based on name and exclusiveGroup flag, hence you can have 2 permissions with the same name which are not equal. With the contains check you would be allowed to add both, but then the unique name check in setPermission would still be unhappy. This means also using a Set here will not prevent permissions with duplicate names.\n\n\u003e Though I think the correct approach would be to check for existing permission and if it\n\u003e exists add the rules so we do not lose any permissions. Something like:\n\u003e \n\u003e  getPermission(p.name, true).addAll(p.getRules());\n\nThat might work better, but what should we do if the existing permission is exclusive and the new one not?",
      "parentUuid": "9916bfd6_fbdf933c",
      "range": {
        "startLine": 79,
        "startChar": 9,
        "endLine": 79,
        "endChar": 19
      },
      "revId": "9e7ba75b3ef1b491d28b602ca95e1dacdc0b0e82",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}