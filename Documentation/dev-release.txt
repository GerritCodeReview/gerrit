== Making a Gerrit Release ==

Note: This document is meant primarily for Gerrit maintainers
who have been given approval and submit status to the Gerrit
projects.  Additionally, maintainers should be given owner
status to the Gerrit web site.


To make a Gerrit release involves a great deal of complex
tasks and it is easy to miss a step so this documents should
hopefuly serve as both a how to for those new to the process
and as a checklist for those already familiar with these
tasks.



# First Prepare the subprojects:

## Publish the latest snapshot for all subprojects.
## Freeze all subprojects and publish them!

# Update the poms for the Gerrit version, push for review, get merged

  tools/version.sh --snapshot=2.3

# First create a Gerrit RC0:
# If needed create a Gerrit RC1:
Note: You may let in a few features to this release

# If needed create a Gerrit RC2:
Note: There should be no new features in this release, only bug fixes

## Update the top level pom in Gerrit to ensure that none of
the subprojects point to snapshot releases.

  git tag -a -m "gerrit 2.2.2-rc0" v2.2.2-rc0
  git tag -a -m "gerrit 2.2.2.1" v2.2.2.1
  ./tools/release.sh

# Sanity check WAR

# Upload WAR to code.google.com/p/gerrit (manual web browser)
## Update labels:
### new war: [release-candidate], featured...
### old war: deprecated


# Push the new tag:
----
  git push google refs/tags/v2.2.2.1:refs/tags/v2.2.2.1
----


== Publish the docs to Web Site ==
----
make -C Documentation PRIOR=2.2.2 update
make -C ReleaseNotes update
----
(no PRIOR=... if updating the same release again during rcs)

# Point the main page to the new docs
# Point the main page to the new ReleaseNotes

Note: the docs makefile does an svn cp of the prior revision of
the docs to branch the docs so you have less to upload on the new docs

User and password from here:
  https://code.google.com/hosting/settings
(required overriding svn username on command line)


== Updating Issues ==

> -How do the issues get updated?  Do you run a script to do
> this?  When do you do it, after the final 2.2.2 is released?

By hand.

Our current process is an issue should be updated to say Status =
Submitted, FixedIn-2.2.2 once the change is submitted, but before the
release.

After the release is actually made, you can search in Google Code for
"Status=Submitted FixedIn=2.2.2" and then batch update these changes
to say Status=Released. Make sure the pulldown says "All Issues"
because Status = Submitted is considered a closed issue.


== Announce the Release ==
----
To: Repo and Gerrit Discussion <repo-discuss@googlegroups.com>
Subject: Announce: Gerrit 2.2.2.1  (Stable bug fix update)

I am pleased to announce Gerrit Code Review 2.2.2.1.

Download:

  http://code.google.com/p/gerrit/downloads/list


This release is a stable bug fix release with some
documentation updates including a new "Contributing to
Gerrit" doc:

  http://gerrit-
documentation.googlecode.com/svn/Documentation/2.2.2/dev-
contributing.html


To read more about the bug fixes:

  http://gerrit-
documentation.googlecode.com/svn/ReleaseNotes/ReleaseNotes-2.2.2.1.html



-Martin
----

-----------------------------------------
== Merging stable to master ==

After every stable release, stable should be merged to master to ensure that
none of the fixes ever get lost.

----
 git config merge.summary true
 git checkout master
 git reset --hard origin/master
 git branch -f stable origin/stable
 git merge stable
----
