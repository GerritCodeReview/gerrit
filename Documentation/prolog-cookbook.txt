Gerrit Code Review - Prolog Submit Rules Cookbook
=================================================

By definition, a change in Gerrit is submittable when it gets at least one
highest vote in each voting category and has no lowest vote (aka veto vote) in
any category.  Typically, this means that a change needs 'Code-Review+2',
'Verified+1' and has neither 'Code-Review-2' nor 'Verified-1' to become
submittable.

While this rule is a good default, there are projects which need more
flexibility for defining when a change is submittable.  In Gerrit, it is
possible to use prolog based rules to provide project specific submit rules and
replace the default submit rules. Using prolog based rules, project owners can
define both a policy when a change becomes submittable and a set of criteria
that needs to be fulfilled for a change to become submittable.  The set of
'need' criteria is displayed on Gerrit UI for each change.

link:https://groups.google.com/d/topic/repo-discuss/wJxTGhlHZMM/discussion[This
discussion thread] explains why Prolog was chosen for the purpose of writing
project specific submit rules.
link:http://gerrit-documentation.googlecode.com/svn/ReleaseNotes/ReleaseNotes-2.2.2.html[Gerrit
2.2.2 ReleaseNotes] introduces Prolog support in Gerrit.

Prolog Language
---------------
This document is not an introduction to Prolog programming language. 
link:http://en.wikipedia.org/wiki/Prolog[This Wikipedia article] is a good
starting point for learning about the Prolog language.

Prolog in Gerrit
----------------
Gerrit uses own link:https://code.google.com/p/prolog-cafe/[fork] of the original
link:http://kaminari.istc.kobe-u.ac.jp/PrologCafe/[prolog-cafe] project. Gerrit
embeds prolog-cafe library and can interpret Prolog programs at runtime.

Interactive Prolog Cafe Shell
-----------------------------
For interactive testing and playing with Prolog Gerrit provides the
link:pgm-prolog-shell.html[prolog-shell] program.  To use it one needs only to
provide the (path to the) 'gerrit.war' file.

`prolog-shell` program. 
how to start interactive shell (contribute a script which could use the plcafe jar file from
gerrit.war?)
how to consult a rules
Example:
searching for solutions


Definition
----------
where is project specific rules.pl file?
how to fetch, edit, push
how is return result evaluated by Gerrit
- decide if change is submittable
- show what is needed

Prolog vs Gerrit plugin for project specific submit rules
---------------------------------------------------------
Prolog rules can be defined and "uploaded" by project owners
(not so for plugins).
Prolog rules usually faster to write.

Examples
--------

Make every change submittable
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
