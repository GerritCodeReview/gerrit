= Creating and Editing Changes in the Gerrit Web Interface

The following content explains how to use the Gerrit web interface to create
and amend changes. The web interface is ideally suited to make minor changes
to files. When you create a change in the Gerrit user interface, you don't
clone a Gerrit repository or use the CLI to issue Git commands â€” you perform
your work directly in the Gerrit web interface.

To learn more, see link:intro-user.html[Gerrit User's Guide].


[[create-change]]
== Creating a Change

To create a change in the Gerrit web interface:

. From the link:https://gerrit-review.googlesource.com[Gerrit Code Review]
  dashboard, select Browse > Repositories.

. Under Repository Name, click the name of the repository you want to work
  on. For example, Public-Projects. To find a specific repository, enter all
  or part of its name next to Filter.

  image::images/inline-edit-home-page.png[width=700,
  link="images/inline-edit-home-page.png"]

. In the left navigation panel for the repository you selected, click
  Commands:

  image::images/inline-edit-create-change.png[width=400,
  link="images/inline-edit-create-change.png"]

. Under Repository Commands, click Create Change.

. In the Create Change window, enter the following information:

   -  Select branch for new change: Specify the destination branch of the
      change.

   -  Provide base commit SHA1 for change: Leave this field blank.

      Note: Git uses a unique SHA1 value to identify each and every commit (in
      other words, each Git commit generates a new SHA1 hash). This value
      differs from a Gerrit Change-Id, which is used by Gerrit to uniquely
      identify a change. The Gerrit Change-Id remains static throughout the
      life of a Gerrit change.

   -  Description: Briefly describe the change. Be sure to use the
      link:dev-contributing.html#commit-message[Commit Message] format.
      The first line becomes the subject of the change and is included in
      the Commit Message. Because the message also appears on its own in
      dashboards and in the results of `git log --pretty=oneline output`
      make the message informative and brief.

   -  Private change: Select this option to designate this change as private.
      Only you (and any reviewers you add) can see your private changes.

    image::images/inline-edit-create-change-form.png[width=400,
    link="images/inline-edit-create-change-form.png"]

. On the Create Change window, click Create. Gerrit creates a public Work
  In Progress (WIP) change. Until the change is sent for review, it remains a
  WIP and appears in _your_ dashboard only. In addition, all email
  notifications are turned off.

  image::images/inline-edit-new-change-page.png[width=700,
  link="images/inline-edit-new-change-page.png"]

. To add files to the change, see
  link:user-inline-edit.html#add-files[Adding Files to a Change].


[[add-files]]
== Adding a File to a Change

Files can only be added to changes that have not been merged into the code
base. If you add a file to an approved change, the change loses its +2 vote.

To add a file to the change:

. In the top left corner of the change, click Edit.
. Next to Files, click Open:

  image::images/inline-edit-open-file.png[width=500,
  link="images/inline-edit-open-file.png"]

. In the Open File window, do one of the following:

  -  To add an existing file:

     -  Enter part of the name of the file you want to edit or add.
        Gerrit automatically populates a list of possible matching files.

     -  Select the file you want to add to the change and then click Open.

  -  To create a new file:

     -  Enter the name of the new file you want to add to the change
        and then click Open.

  image::images/inline-edit-prefill-files.png[width=400,
  link="images/inline-edit-prefill-files.png"]


[[search-for-change-edits]]
== Searching for a Change

To search for a change in the web interface:

-  In the Search bar, enter link:user-search.html#has[has:edit].

_or_

-  From the Gerrit dashboard, select Your > Changes.


[[editing-change]]
== Editing a Change

To edit a file you've added to a change:

. On the change page, click the file name. When you create a new file, a
  blank page is displayed. When you add an existing file to a change, the
  entire file is displayed for you to edit the existing content. For example:

  image::images/inline-edit-open-file.png[width=500,
  link="images/inline-edit-open-file.png"]

. Update the file and then click Save. You _must_ click Save to add the
  file to the change.

. To close the text editor and display the change page, click Close.

When you save your work and close the file, the file is added to the change
and the file name is listed in the Files section. The letter displayed to the
left of the file name denotes the action performed on the file. In this case,
one file was modified:

-  M: Modified
-  A: Added
-  D: Deleted

image::images/inline-edit-add-file-page.png[width=600,
link="images/inline-edit-add-file-page.png"]

. When you're done editing and adding files, click Stop Editing.

. To apply the updated file to the change, click Publish Edit. When you
  publish a change, you promote it to a regular patch set. The special ref
  that represents the change is deleted when the change is published.

Not happy with your edits? Click Delete Edit.


[[delete-file]]
== Deleting a File from a Change

Files can be deleted from approved and unapproved changes. However, if you
delete a file from an approved change, the change will lose the +2 vote.
To delete a file from a change:

. In the top left corner of the change, click Edit. To indicate the change
  is in Edit mode, Stop Editing is displayed and the page banner is displayed
  in light blue.

. Next to the file you want to remove, select Actions > Delete:

  image::images/inline-edit-delete-file.png[width=500,
  link="images/inline-edit-delete-file.png"]

. On the Delete a File from the Repo form, click Delete. The file you
  highlighted is removed from the change.

Changed your mind about deleting a file? To restore a file you've previously
deleted:

. With the Gerrit change in Edit mode, next to the file name, select
  Actions > Restore.

. Use the form to find the desired file and then click Restore.


[[submit-change]]
== Submitting a Change to Review

When you submit a WIP change, Gerrit removes the WIP designation and submits
the change to code review. The change appears in other Gerrit dashboards and
reviewers are notified when the change is updated.

To submit a change to review:

. Open the change and then click Start Review:

  image::images/inline-edit-start-review-button.png[width=500,
  link="images/inline-edit-start-review-button.png"]

. In the change notification form, write a note to the reviewers and then
  click Start Review:

  image::images/inline-edit-review-message.png[width=500,
  link="images/inline-edit-review-message.png"]

The change is now displayed in other Gerrit dashboards and reviewers are
notified that the change is available for code review.


[[review-edits]]
== Reviewing Changes

Review changes in the same way you review regular patch sets, with the
side-by-side diff screen.

image::images/inline-edit-diff-screen.png[width=800,
link="images/inline-edit-diff-screen.png"]

It's possible that subsequent patch sets may exist. For example, this sequence
means that the change was created on top of patch set 9 while a regular patch
set was uploaded later:

....
1 2 3 4 5 6 7 8 9 edit 10
....


[[change-edit-actions]]
## == Editing Actions

You can perform these actions on a change:

-  link:user-inline-edit.html#rebase-change-edit[Rebase]
-  link:user-inline-edit.html#download-change-edit-patch[Download Patch]
-  link:user-inline-edit.html#delete-change-edit[Follow-up]
-  link:user-inline-edit.html#abandon-change-edit[Abandon]


[[rebase-change-edit]]

Only when a change is based on the current patch set can the change be
published. In the meantime, if a new patch set has been uploaded, the change
must be rebased on top of the current patch set before the change can be
published.

To rebase a change:

-  Open the change and then click Rebase Edit.

If the rebase generates conflicts, the conflicts can't be resolved in the web
interface. Instead, the change must be downloaded (see below) and the conflicts
resolved in the local environment.

When the conflicts are resolved in the local environment, the commit that
contains the conflict resolution can be uploaded by setting `edit` as option on
the target ref. For example:

....
$ git push host HEAD:refs/for/master%edit
....


[[download-change-edit-patch]]

As with regular patch sets, you can download changes. For example, as provided
by the `download-commands` plug-in).   Only the owners of a change and those
users granted the
link:access-control.html#capability_accessDatabase[accessDatabase] global
capability can access change refs.

To download a change:

. Open the change, click the More icon, and then select Download patch.
. Copy the desired scheme from the Download drop-down.
. Paste the command into a terminal window.

image::images/inline-edit-actions-download.png[width=600,
link="images/inline-edit-actions-download.png"]


[[follow-up]]

To Follow-up means to create a new change based on the selected change.

To create a follow-up:

. Open the change, click the More icon, and then select Follow-up.

. Fill out the form. The value you enter next to Description becomes the
  first line in the link:dev-contributing.html#commit-message[Commit Message]
  so make it informative and brief.

. Click Create. Gerrit displays the new change in the web interface. The
  follow-up is assigned a new Change-Id and change number.


[[abandon]]

To Abandon a change means that the change can not be committed to the branch
unless it's restored. In addition, the change is closed to review.

To abandon a change:

. Open the change and then click Abandon.

. On the Abandon change form, enter a brief message to describe why you want to
  abandon the change.

. Click Abandon. The change will be displayed on your dashboard, listed under
  Recently closed.

To restore a previously abandoned change:

- Open the change and then click Restore.


## GERRIT

Part of link:index.html[Gerrit Code Review]

## SEARCHBOX