{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c140c585_cd39ec9c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-12-08T13:20:24Z",
      "side": 1,
      "message": "Alternative suggestion that would have helped me understand better:\n\n----\nSupport resetting cherryPickOf in NoteDb\n\nThe commit API allows users to cherry pick a change onto an already existing change in a different branch. This operation will just create a new patch set on the existing change.\n\nIn cases where the existing change has cherryPickOf set and we use the commit API to create a cherry pick of a commit that is not associated with the change, we want to reset cherryPickOf.\n\nSubsequent changes will use this functionality to cover the aforementioned case.\n----",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 18,
        "endChar": 0
      },
      "revId": "a05021d4c8381ef9b1106ee22d0d9733de05fc2c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e50cd3fe_a7ba1077",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-12-08T16:10:14Z",
      "side": 1,
      "message": "\u003e Alternative suggestion that would have helped me understand better:\n\nThanks for restating it, helps to see your view.\n\n\u003e \n\u003e ----\n\u003e Support resetting cherryPickOf in NoteDb\n\u003e \n\u003e The commit API allows users to cherry pick a change onto an already existing change in a different branch. This operation will just create a new patch set on the existing change.\n\nIt seems like the child change is saying this doesn\u0027t currently work? \"This fixes a NPE when the Change-ID is provided in the commit message and the change with this Change-ID exists in the destination branch.\" Is the intent of this series to make that work? (and then this whole deal with clearing cherry-pick-of is a side effect that was noticed and should be improved?) If I\u0027m reading the child change correctly, I would expect this line to be stated differently to make it clear this change provides a path to that functionality.\n\n\u003e \n\u003e In cases where the existing change has cherryPickOf set and we use the commit API to create a cherry pick of a commit that is not associated with the change, we want to reset cherryPickOf.\n\u003e \n\u003e Subsequent changes will use this functionality to cover the aforementioned case.\n\nI like small changes, but I also like changes to mostly stand on their own. I\u0027m not sure this change does.\n\nI\u0027m still not seeing a good reason why these changes aren\u0027t squashed together. The \"problem\" here can\u0027t happen until the child change is implemented. These aren\u0027t very big changes (tiny when you exclude the test code) and the commit message / change motivation are much clearer when combined. For example a combined commit message would be:\n\n----\nAllow updating existing change on cherry-pick with CommitApi\n\nThis previously would NPE when the Change-ID was provided in the commit message and the change with this Change-ID existed in the destination branch. This operation will now create a new patch set on the existing change.\n\nIn cases where the existing change has cherryPickOf set we want to reset cherryPickOf since we don\u0027t know a source change that matches the given commit.\n----",
      "parentUuid": "c140c585_cd39ec9c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 18,
        "endChar": 0
      },
      "revId": "a05021d4c8381ef9b1106ee22d0d9733de05fc2c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "713c6910_8356a1da",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-12-10T09:03:46Z",
      "side": 1,
      "message": "I\u0027d be OK with combining, but I do think the changes can stand on their own just by reading the subjects:\n\nFor example: \"Add support to reset cherryPickOf in NoteDb\". That\u0027s a unit you can ship. I think the commit message creates a bit of confusion because as Nasser says, it should state that this helps fix a bug on a subsequent change.\n\n\"Update existing change on cherry-pick with CommitApi\" is also a unit you can ship. It\u0027s a bugfix for an NPE.\n\n\"Verify destination change of cherry-pick before trying to update it\" is also a unit you can ship. It\u0027s a bugfix to improve the error messages for wrongly provided change-ids.\n\nIn any case, it\u0027s bikeshedding. I would leave it up to Marija to decide if she wants to squash or not.",
      "parentUuid": "e50cd3fe_a7ba1077",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 18,
        "endChar": 0
      },
      "revId": "a05021d4c8381ef9b1106ee22d0d9733de05fc2c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ce32e0f_a05987ed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2020-12-10T15:26:40Z",
      "side": 1,
      "message": "I tried my best to update the change description with all the suggestions.\nLet me know if it is more readable now?\n\nI am still keeping the changes separate though.",
      "parentUuid": "713c6910_8356a1da",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 18,
        "endChar": 0
      },
      "revId": "a05021d4c8381ef9b1106ee22d0d9733de05fc2c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f6a6f40_617d8227",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-12-10T22:48:15Z",
      "side": 1,
      "message": "I generally don\u0027t think commits like \"Add support to \u003cdo some backend thing\u003e\" stand on their own because if no future change comes along to use that new backend thing, it\u0027s just bloat and there\u0027s no point merging it. I have exceptions to that for significantly large backend things that are difficult to review, but even then I look for ways to break them up so that I\u0027m shipping something a customer can use in each change. I do understand that others draw that line differently than I do, so I\u0027m not trying to impose my bar on Marija here.\n\nThis conversation came from me trying to understand the intent of *this* change. I think at this point I understand the intent to be \"Provide a way to reset cherryPickOf in NodeDb so that it can be used by the child change which fixes bugs in a mechanism where users would expect this feature\". That\u0027s hard to describe in a commit message (and bravo to Marija for trying several times to get it right!). I think if you reversed the first two commits and did the NPE bug fix first (acknowledging/ignoring that it would do the \"wrong thing\" for cherryPickOf since this was really an oversight when cherryPickOf was added), then this commit is much easier to describe: \"Reset cherryPickOf when using the cherry-pick CommitAPI\" and this commit naturally would add support for reseting cherryPickOf in NoteDb. Then your series is 1) Bug fix for NPE, 2) Behavior fix for cherryPickOf, 3) Bug/behavior fix for error messages. I would find that much easier to review.",
      "parentUuid": "4ce32e0f_a05987ed",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 18,
        "endChar": 0
      },
      "revId": "a05021d4c8381ef9b1106ee22d0d9733de05fc2c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "476ce376_374dbfc4",
        "filename": "java/com/google/gerrit/server/change/ResetCherryPickOp.java",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-12-08T13:26:47Z",
      "side": 1,
      "message": "This class needs no injected fields, so I\u0027d remove the @Singleton and just create a new instance when needed using the default constructor (new ResetCherryPickOp)",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 10
      },
      "revId": "a05021d4c8381ef9b1106ee22d0d9733de05fc2c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f50edaa_a943ede4",
        "filename": "java/com/google/gerrit/server/change/ResetCherryPickOp.java",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2020-12-10T15:26:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "476ce376_374dbfc4",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 10
      },
      "revId": "a05021d4c8381ef9b1106ee22d0d9733de05fc2c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f3f63e8_05eea0df",
        "filename": "java/com/google/gerrit/server/change/ResetCherryPickOp.java",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-12-08T13:20:24Z",
      "side": 1,
      "message": "nit: missing JavaDoc",
      "revId": "a05021d4c8381ef9b1106ee22d0d9733de05fc2c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f0eda1d_c8bd1ba9",
        "filename": "java/com/google/gerrit/server/change/ResetCherryPickOp.java",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2020-12-10T15:26:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f3f63e8_05eea0df",
      "revId": "a05021d4c8381ef9b1106ee22d0d9733de05fc2c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb73b734_06ba5827",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 5
      },
      "lineNbr": 162,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-12-08T13:20:24Z",
      "side": 1,
      "message": "Why do we need three states here? Do we need to care about \"unparsed\" vs unset? NoteDb is always parsed from oldest to newest entry. So a newer \"unset\" would trump any older \"set\" of a value.\n\nresult: unset\nc5 still unset\nc4 unset cherry pick of\nc3 set cherryPickOf to y\nc2 do not change cherry pick of\nc1 set cherryPickOf to x",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 162,
        "endChar": 55
      },
      "revId": "a05021d4c8381ef9b1106ee22d0d9733de05fc2c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c046cde4_848ee413",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 5
      },
      "lineNbr": 162,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2020-12-10T15:26:40Z",
      "side": 1,
      "message": "We actually parse Note Db from the tip (newest commit) to the oldest, in parse,\nhttps://gerrit.googlesource.com/gerrit/+/refs/changes/69/290069/5/java/com/google/gerrit/server/notedb/ChangeNotesParser.java#329\n\nFor many fields (e.g. changeId), we only parse the newest value so \u0027null\u0027 represents unparsed.\n\nSo parsing in reverse order c5 -\u003e c1, without the \u0027unparsed\u0027 state, in your example the result would be x (Also, the test would fail).",
      "parentUuid": "fb73b734_06ba5827",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 162,
        "endChar": 55
      },
      "revId": "a05021d4c8381ef9b1106ee22d0d9733de05fc2c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c3a0cd6_74a2dd48",
        "filename": "java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 160,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-12-08T13:20:24Z",
      "side": 1,
      "message": "How about using a second variable here to signal that we want to delete cherryPickOf?\n\nprivate String cherryPickOf; // If set, sets or overrides the cherryPickOf field\nprivate Boolean removeCherryPickOf; // If set, removes any existing cherryPickOf\n\nIt seems this class is pretty much used to @Nullable values - the way I read it is that any field that\u0027s null won\u0027t be touched. I don\u0027t think that\u0027s a very good way of representing updates - Optionals are much better (see InternalAccountUpdate for a good example), but I\u0027d rather not change the pattern for just a single field. In that case, IMO it\u0027s better to follow what\u0027s already there and use two fields.\n\nI would also remove the @Nullable annotation here. All fields are nullable (adding the annotation to all fields would work, but I am not sure that really increases readability).",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 160,
        "endChar": 50
      },
      "revId": "a05021d4c8381ef9b1106ee22d0d9733de05fc2c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a083ca4_cfca014f",
        "filename": "java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 5
      },
      "lineNbr": 160,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2020-12-10T15:26:40Z",
      "side": 1,
      "message": "I actually have used the idea of Optional from assignee update:\nhttps://gerrit.googlesource.com/gerrit/+/refs/changes/69/290069/5/java/com/google/gerrit/server/notedb/ChangeUpdate.java#648\n\nI would keep all cherry-pick related updates tied to a single variable, so I won\u0027t need to deal with the situation when both removeCherryPickOf and cherryPickOf are present somehow. WDYT?\n\nI removed @Nullable, It might be redundant with the comment and the way this class uses null.",
      "parentUuid": "4c3a0cd6_74a2dd48",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 160,
        "endChar": 50
      },
      "revId": "a05021d4c8381ef9b1106ee22d0d9733de05fc2c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}