{
  "comments": [
    {
      "key": {
        "uuid": "77929b13_7fcc2fbe",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/LabelId.java",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-01-28T02:18:51Z",
      "side": 1,
      "message": "WHYYYYY\n\nNext time, please use the Eclipse refactoring \"Move type to new class.\"",
      "revId": "a066f020092a50e3292db77659ee740a37c7d55d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b76333f1_e9da9570",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/LabelId.java",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-01-28T02:21:29Z",
      "side": 1,
      "message": "Gah, I didn\u0027t notice that this was changed from the original implementation in PatchSetApproval.LabelId",
      "parentUuid": "77929b13_7fcc2fbe",
      "revId": "a066f020092a50e3292db77659ee740a37c7d55d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "372663b6_cdd7e946",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/LabelId.java",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-01-28T02:58:22Z",
      "side": 1,
      "message": "I will take my share of the blame here. We don\u0027t need equals or hashCode at all, they come for free from StringKey, and I added them for no reason way back in I5df6f0c5.\n\nAnd nothing personal, Sven, you know how it is when you\u0027ve spent all afternoon debugging such a mysterious bug in production.",
      "parentUuid": "b76333f1_e9da9570",
      "revId": "a066f020092a50e3292db77659ee740a37c7d55d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d76c27f3_3a7241ce",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/LabelId.java",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2015-01-28T11:21:20Z",
      "side": 1,
      "message": "No worries.\nAs I stated earlier this change is just just a part of splitting up [1] to enable review. I must admit I didn\u0027t scrutinize the files before splitting the change.\n\n[1] https://gerrit-review.googlesource.com/#/c/58283/",
      "parentUuid": "372663b6_cdd7e946",
      "revId": "a066f020092a50e3292db77659ee740a37c7d55d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b77173c9_594aa36c",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/LabelId.java",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-01-28T16:57:42Z",
      "side": 1,
      "message": "\u003e WHYYYYY\n\u003e Next time, please use the Eclipse refactoring \"Move type to new class.\"\n\nI am really curious how using (or not) this specific Eclipse feature you\u0027ve mentioned can be related to this broken code, but thanks for telling us how to do the refactoring, otherwise we would never know ...\n\nThe refactoring was initially done right, but somehow was screwed up later: [1].\n\n* [1] https://gerrit-review.googlesource.com/#/c/58283/4..5/gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/LabelId.java",
      "parentUuid": "77929b13_7fcc2fbe",
      "revId": "a066f020092a50e3292db77659ee740a37c7d55d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "174cff89_441aae9d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/LabelId.java",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-01-28T17:16:59Z",
      "side": 1,
      "message": "\u003e I am really curious how using (or not) this specific Eclipse feature you\u0027ve mentioned can be related to this broken code\n\nIf you use that Eclipse refactoring, then the contents of the new class will be identical to the contents of the old class; there is no chance for copy-paste errors, because there is no human performing the copying. For this bug to happen, someone had to manually change the body of the method from what it was in the source. If instead we trusted the Eclipse refactoring, there would be no manual editing...\n\n\u003e The refactoring was initially done right, but somehow was screwed up later\n\n...except, well, if you go in there manually after the fact for some reason. So maybe it wouldn\u0027t have helped in this case.",
      "parentUuid": "b77173c9_594aa36c",
      "revId": "a066f020092a50e3292db77659ee740a37c7d55d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}