{
  "comments": [
    {
      "key": {
        "uuid": "e16227c9_8188d3b1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 34,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-08-01T21:15:39Z",
      "side": 1,
      "message": "The code LGTM. I\u0027m testing it now and seeing some problems: If I select change edit on the change screen, i can erroneously still apply some actions on it, that must not be possible on change edits, but on regular patch sets only:\n\n* 1. flip reviewed bit (checkbox in front of each file name + commit message). This is absolutely not supported. The reviewed bit is stored in the database, but when the change is opened again (say, change edit is based on patch set 2, and there weren\u0027t any reviewed bit set on ps 1 and 2) say ps 3, then we try to copy reviewed bit from previous patch set, but because the patch set number that was recorded in the AccountPatchReviewStore is 0, we try to load it, but this pacth set number 0, doesn\u0027t exist in the database or NoteDb, and this exception is reported: [1]. I remember Paladox reported something similar, so may be he already tested this change and this why his AccountPatchReviewStore was corrupted? We should prevent from flipping reviewed bit on change edit, in this or a follow-up change. So at least this should be added to the TODO list.\n* 2. even after selecting change edit, i still can vote on the change and post comment and it even succeed. In fact, i debugged and it seems that the fact that change edit was loaded is somehow ignored by the change screen, and voting happens on latest patch set and not on change edit. This is confusing. Voting shouldn\u0027t be possible on change edit. (there is no metadata storage for edits, neither in ReviewDb, no in NoteDb). So at least this should be added to the TODO list.\n* 3. other actions seems to be active too, like Rebase. This is confusing, because some similar actions, like Rebase and Delete are overloaded for the change edit. So Rebase change edit means, that the change edit is rebased on the latest patch set (if it was based on 2, and meantime we have latest patch set 7, then it will be based on patch set 7 after the rebase). All actions except change edit related actions should be disabled in the change screen, when change edit was selected. So at least this should be added to the TODO list.\n\n* [1] http://paste.openstack.org/show/617178",
      "revId": "a0aeaa7cb22f8de72dd13d5119dd2f01f81a8853",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17ddbeb4_9bd74bb0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 34,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2017-08-01T22:39:55Z",
      "side": 1,
      "message": "The paste you pasted you can reproduce from gwtui too.",
      "parentUuid": "e16227c9_8188d3b1",
      "revId": "a0aeaa7cb22f8de72dd13d5119dd2f01f81a8853",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78629a2e_ede12b8e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 34,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-08-01T22:47:11Z",
      "side": 1,
      "message": "1. Will look into it.\n\n2. I actually did that on purpose... I definitely envision cases in which it\u0027s useful to comment on a change that has a pending edit, e.g. if there\u0027s a discussion about the reason you\u0027re making the edit going on. I don\u0027t know that the UX is best, but I didn\u0027t find any specific reason that one couldn\u0027t vote on a change (perhaps saying something like \"-2, don\u0027t review. Edit incoming.\") as far as the backend is concerned, so I decided to leave it enabled. Am I wrong in that?\n\n3. I agree that we have an information problem right now regarding change actions. I\u0027ll look into that point, thanks for raising it.",
      "parentUuid": "17ddbeb4_9bd74bb0",
      "revId": "a0aeaa7cb22f8de72dd13d5119dd2f01f81a8853",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5094426_8252a07b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 34,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-08-02T04:25:49Z",
      "side": 1,
      "message": "As discusses on the issue you raised for that problem: [1] we were not able to reproduce how was it possible that patch set id 0 is written to the database. I uploaded a protection against such broken client: [2], like this change in its current form.\n\n* [1] https://bugs.chromium.org/p/gerrit/issues/detail?id\u003d6531\n* [2] https://gerrit-review.googlesource.com/c/117291",
      "parentUuid": "17ddbeb4_9bd74bb0",
      "revId": "a0aeaa7cb22f8de72dd13d5119dd2f01f81a8853",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6cfe63b6_9b6ac618",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 34,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-08-02T15:24:53Z",
      "side": 1,
      "message": "\u003e 2. I actually did that on purpose... I definitely envision cases in\n \u003e which it\u0027s useful to comment on a change that has a pending edit,\n \u003e e.g. if there\u0027s a discussion about the reason you\u0027re making the\n \u003e edit going on. I don\u0027t know that the UX is best, but I didn\u0027t find\n \u003e any specific reason that one couldn\u0027t vote on a change (perhaps\n \u003e saying something like \"-2, don\u0027t review. Edit incoming.\") as far as\n \u003e the backend is concerned, so I decided to leave it enabled. Am I\n \u003e wrong in that?\n\nYou made a valid point. PG UI behaves differently as GWT UI does. Particularly, there is no way to vote on non current patch set in GWT UI. You can add inline and file comment on non current patch sets.\n\nBut for reasons (no backend) there is now way to add inline and file comment on change edits.\n\nBotom line: I\u0027m fine either way. We should better communicate what we allow and what not and why.\n\nYesterday, i was sure, that flipping reviewed bit on change edits is disabled in GWT UI. Today morning I checked and it turns out, it is enabled, but the read of reviewed bit is disabled, so it\u0027s basically broken.",
      "parentUuid": "78629a2e_ede12b8e",
      "revId": "a0aeaa7cb22f8de72dd13d5119dd2f01f81a8853",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fa60bfc_9254e613",
        "filename": "polygerrit-ui/app/behaviors/gr-patch-set-behavior/gr-patch-set-behavior.html",
        "patchSetId": 17
      },
      "lineNbr": 108,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-08-01T22:29:17Z",
      "side": 1,
      "message": "Nit: you can lift this helper function out of the sort comparator so that it is only defined once.",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 108,
        "endChar": 36
      },
      "revId": "a0aeaa7cb22f8de72dd13d5119dd2f01f81a8853",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "053629c3_191c7894",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-view/gr-diff-view.js",
        "patchSetId": 17
      },
      "lineNbr": 503,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-08-01T22:29:17Z",
      "side": 1,
      "message": "IMO, this syntax is for assigning multiple locals. Would you be opposed to merely...\n\n const edit \u003d r[3];\n\n...?",
      "range": {
        "startLine": 503,
        "startChar": 8,
        "endLine": 503,
        "endChar": 31
      },
      "revId": "a0aeaa7cb22f8de72dd13d5119dd2f01f81a8853",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}