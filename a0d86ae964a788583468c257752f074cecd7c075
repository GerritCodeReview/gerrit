{
  "comments": [
    {
      "key": {
        "uuid": "ee73d737_202a1454",
        "filename": "polygerrit-ui/app/elements/change/gr-thread-list/gr-thread-list.js",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-03-30T08:00:22Z",
      "side": 1,
      "message": "Does this ensure that comments on /COMMIT_MESSAGE come first?\n\n(It is pretty much decided that patchset level comment will be using /PATCHSET_LEVEL as a path. So you could actually already put this in here, as well.)",
      "revId": "a0d86ae964a788583468c257752f074cecd7c075",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb7e3c1c_22018441",
        "filename": "polygerrit-ui/app/elements/change/gr-thread-list/gr-thread-list.js",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-03-30T08:01:22Z",
      "side": 1,
      "message": "Sorry, the correct path is \u0027/COMMIT_MSG\u0027.",
      "parentUuid": "ee73d737_202a1454",
      "revId": "a0d86ae964a788583468c257752f074cecd7c075",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da81db2f_3235ec5e",
        "filename": "polygerrit-ui/app/elements/change/gr-thread-list/gr-thread-list.js",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-03-30T08:03:20Z",
      "side": 1,
      "message": "yes, due to the `/`, it will always show before any other characters. and if both starts with `/`, then sort by the second and following chars, like `/COMMIT_MSG` and `/MERGE_LIST`",
      "parentUuid": "eb7e3c1c_22018441",
      "revId": "a0d86ae964a788583468c257752f074cecd7c075",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12599cc9_9ddfa22d",
        "filename": "polygerrit-ui/app/elements/change/gr-thread-list/gr-thread-list.js",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-03-30T07:47:15Z",
      "side": 1,
      "message": "Nit: I would either use a ternary here or do the `if (!c1.thread.line) { return -1; }` check without the if statement in line 147.",
      "range": {
        "startLine": 148,
        "startChar": 12,
        "endLine": 149,
        "endChar": 46
      },
      "revId": "a0d86ae964a788583468c257752f074cecd7c075",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e3ac0d9_286269db",
        "filename": "polygerrit-ui/app/elements/change/gr-thread-list/gr-thread-list.js",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-03-30T07:53:00Z",
      "side": 1,
      "message": "ya, I agree that this and also checks for unresolved / hasDraft can be short with ternary operators, and wrote with ternary inside this one first, but I found the `if` is much readable compared to ternary operators in such cases, and L147 makes it also very clear that the line is undefined for file comments. To be honest, for sorting with so many different situations, I would rather keep it like this so people who read it later can know every conditions very clear.",
      "parentUuid": "12599cc9_9ddfa22d",
      "range": {
        "startLine": 148,
        "startChar": 12,
        "endLine": 149,
        "endChar": 46
      },
      "revId": "a0d86ae964a788583468c257752f074cecd7c075",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}