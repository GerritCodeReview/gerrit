{
  "comments": [
    {
      "key": {
        "uuid": "0c3eb232_ed964f6e",
        "filename": "java/com/google/gerrit/server/restapi/change/CherryPickChange.java",
        "patchSetId": 2
      },
      "lineNbr": 372,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2018-10-13T00:29:17Z",
      "side": 1,
      "message": "What if the source change was work-in-progress? In that case should the newly created change also be set work-in-progress regardless of the cherry-pick result?\n\nI can see this happening for example if someone has a WIP change and they cherry-pick it to the same branch, i.e. effectively rebasing it.",
      "range": {
        "startLine": 372,
        "startChar": 8,
        "endLine": 372,
        "endChar": 82
      },
      "revId": "a0f246a8d71e9d68af19087126fb18c26ca1f28e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6b34111_9258e886",
        "filename": "java/com/google/gerrit/server/restapi/change/CherryPickChange.java",
        "patchSetId": 2
      },
      "lineNbr": 372,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-10-15T06:42:48Z",
      "side": 1,
      "message": "\u003e What if the source change was work-in-progress?\n\u003e In that case should the newly created change also\n\u003e be set work-in-progress regardless of the cherry-pick\n\u003e result?\n\nI guess that\u0027s a good idea too, but I would do it as a separate change.\n\n\u003e I can see this happening for example if someone has a WIP change\n\u003e and they cherry-pick it to the same branch, i.e. effectively rebasing\n\u003e it.\n\nThere are two cases for cherry-pick:\n1. create a new change\n2. create a new patch set on an existing change\n\nThis change is just about case 1.\nFor case 2 the WIP flag on the change stays unchanged.",
      "parentUuid": "0c3eb232_ed964f6e",
      "range": {
        "startLine": 372,
        "startChar": 8,
        "endLine": 372,
        "endChar": 82
      },
      "revId": "a0f246a8d71e9d68af19087126fb18c26ca1f28e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1606f415_7c0cdc1b",
        "filename": "javatests/com/google/gerrit/acceptance/api/revision/RevisionIT.java",
        "patchSetId": 2
      },
      "lineNbr": 327,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-15T19:46:12Z",
      "side": 1,
      "message": "Also check the WIP bit based on the value in this ChangeInfo.",
      "range": {
        "startLine": 327,
        "startChar": 8,
        "endLine": 327,
        "endChar": 77
      },
      "revId": "a0f246a8d71e9d68af19087126fb18c26ca1f28e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f6d634f_1e720684",
        "filename": "javatests/com/google/gerrit/acceptance/api/revision/RevisionIT.java",
        "patchSetId": 2
      },
      "lineNbr": 584,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-15T19:46:12Z",
      "side": 1,
      "message": "Also check the WIP bit based on the value in this ChangeInfo.",
      "revId": "a0f246a8d71e9d68af19087126fb18c26ca1f28e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}