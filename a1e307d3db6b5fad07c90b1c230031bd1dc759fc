{
  "comments": [
    {
      "key": {
        "uuid": "AAAEHH///+k\u003d",
        "filename": "gerrit-common/src/main/java/com/google/gerrit/common/data/ChangeManageService.java",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 1010015
      },
      "writtenOn": "2012-03-21T09:40:55Z",
      "side": 1,
      "message": "[option] s/message/commitMessage  is easy to understand for me,.",
      "revId": "a1e307d3db6b5fad07c90b1c230031bd1dc759fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAEHH///+w\u003d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/changedetail/MoveChangeHandler.java",
        "patchSetId": 8
      },
      "lineNbr": 1,
      "author": {
        "id": 1010015
      },
      "writtenOn": "2012-03-21T09:40:55Z",
      "side": 1,
      "message": "s/2009/2012",
      "revId": "a1e307d3db6b5fad07c90b1c230031bd1dc759fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAEIn////s\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/ApprovalsUtil.java",
        "patchSetId": 8
      },
      "lineNbr": 44,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2012-03-21T06:56:47Z",
      "side": 1,
      "message": "[optional] Another question came to my mind, what about -2 veto votings in the \u0027Code Review\u0027 category? Should they also be removed when the change is moved to another branch? Normally these veto votings must be explicitly unset by the reviewer who has given the veto voting (e.g. after a new patch set was uploaded). I\u0027m still undecided what would be the correct behaviour for the move change case, but I would like to hear your opinion about this.",
      "revId": "a1e307d3db6b5fad07c90b1c230031bd1dc759fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAEHn////I\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/ApprovalsUtil.java",
        "patchSetId": 8
      },
      "lineNbr": 44,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2012-03-21T07:45:28Z",
      "side": 1,
      "message": "If veto votes get removed by moving a change to another target branch then it would be possible for an evil developer to get rid of veto votes by moving its change to another branch and then moving it back to the original target branch. Right?",
      "parentUuid": "AAAEIn////s\u003d",
      "revId": "a1e307d3db6b5fad07c90b1c230031bd1dc759fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAEJH////8\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/ApprovalsUtil.java",
        "patchSetId": 8
      },
      "lineNbr": 44,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2012-03-21T18:56:27Z",
      "side": 1,
      "message": "The primary purpose of this change is likely to repurposing changes from a dead branch to a new branch.  Such changes would have to normally be abandoned and reuploaded to a new branch.  I originally planned on leaving blocking votes but decided against it because I realised that repurposing a change to a new branch differs from uploading a new patchset in one crucial place: the permissions for approvals may be different on anew branch.  I think this means that it might be possible for someone with -2 power on the original branch to not have the power to remove their -2 on the new branch.  Such a scenario would end up forcing the user to abandon their change and simply re-upload it again.  Since -2 votes can already be easily bypassed if truly desired by simply reuploading a new change, I figured that it might make sense to not focus too much on the new loophole of being able to eliminate a -2 via double branch change, but to instead avoid another case where users may need to abandon changes to work around -2s.  Although, I admit, I see this scenario as unlikely.  \n\nBut, I do think that it will be common for a -2 to mean \"do not put this change on this branch because it is for bug fixes only\" and so that particular vote would no longer apply once moving the change.  Also, while a change may get verified -1 failed on one branch, it probably should be retested if moved to another branch.  So, I liked this behaviour better.  Let me know if you still think I should keep the -2s.",
      "parentUuid": "AAAEHn////I\u003d",
      "revId": "a1e307d3db6b5fad07c90b1c230031bd1dc759fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAEMH////8\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/ApprovalsUtil.java",
        "patchSetId": 8
      },
      "lineNbr": 44,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2012-03-22T08:49:02Z",
      "side": 1,
      "message": "Edwin, Matthias Sohn and myself discussed this question:\n\nWe see 2 main scenarios where -2 vote is given:\n\n1. a change is really bad and must not go in into any branch.\n\n2. a change was pushed to a release branch but it should have been pushed to the master branch (similar to your example above).\n\nFor the case 1 removal of veto vote(s) would be bad.\n\nFor the case 2 it is OK to remove veto votes.\n\nSince Gerrit is not able to distinguish the case 1 from case 2 we believe it should be more restrictive and not remove the veto votes. Instead, for the case 2, the veto votes should be manually removed. \n\nWe believe that access permissions normally shouldn\u0027t get more restrictive in less stable (master) branch than in a more stable (release) branch. This is why it is unlikely that one who gave -2 in a stable branch isn\u0027t able to remove the -2 in a less stable branch. Do you have a good example where this is not the case?\n\nEven if this is not the case, there is still no need to abandon/reupload the change because the project owner is able to remove the veto by removing the reviewer.",
      "parentUuid": "AAAEJH////8\u003d",
      "revId": "a1e307d3db6b5fad07c90b1c230031bd1dc759fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAEJn////s\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/ApprovalsUtil.java",
        "patchSetId": 8
      },
      "lineNbr": 44,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2012-03-22T15:51:08Z",
      "side": 1,
      "message": "Believe it or not, we do actually have a setup where we have entirely different groups responsible for master and release branches, each not having perms in the other\u0027s branch. :-)\n\nI do agree with taking the more restrictive approach now.\n\nWould it make sense for this to be made a project config option later?",
      "parentUuid": "AAAEMH////8\u003d",
      "revId": "a1e307d3db6b5fad07c90b1c230031bd1dc759fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAEHH///+s\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/changedetail/MoveChange.java",
        "patchSetId": 8
      },
      "lineNbr": 1,
      "author": {
        "id": 1010015
      },
      "writtenOn": "2012-03-21T09:40:55Z",
      "side": 1,
      "message": "s/2011/2012",
      "revId": "a1e307d3db6b5fad07c90b1c230031bd1dc759fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAEHH///+o\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 8
      },
      "lineNbr": 280,
      "author": {
        "id": 1010015
      },
      "writtenOn": "2012-03-21T09:40:55Z",
      "side": 1,
      "message": "[option] at least for me the \u0027\u0027\u0026\u0026getProjectControl().controlForRef(branch).canUpload()\u0027 is easy to understand.",
      "revId": "a1e307d3db6b5fad07c90b1c230031bd1dc759fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAEHH///+U\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RefControl.java",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 1010015
      },
      "writtenOn": "2012-03-21T09:40:55Z",
      "side": 1,
      "message": "[option] reference https://gerrit-review.googlesource.com/#/c/33511/2/gerrit-httpd/src/main/java/com/google/gerrit/httpd/rpc/changedetail/ListDestinationBranches.java\n\nand\n\nhttps://gerrit-review.googlesource.com/#/c/32791/8/gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
      "revId": "a1e307d3db6b5fad07c90b1c230031bd1dc759fc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}