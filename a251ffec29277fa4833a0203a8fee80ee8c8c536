{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8cfe8c7c_05e7448e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2024-03-13T20:36:35Z",
      "side": 1,
      "message": "Still need to address the commit message, release notes and tests.",
      "revId": "a251ffec29277fa4833a0203a8fee80ee8c8c536",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f4f505a_b190e44b",
        "filename": "java/com/google/gerrit/index/query/IndexedQuery.java",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2024-03-13T20:36:35Z",
      "side": 1,
      "message": "This is because in the case of PaginationType `NONE` the limit passed to lucene is always `QueryOptions.limit()` but since the modification of LuceneChangeIndex the pagination needs to increase what it once was the `realLimit`.\n\nMaybe is a better idea to add a flag `hasRestarted` in the QueryOptions so that `AbstractLuceneIndex.`\n\nCould become:\n```\nstatic int getLimitBasedOnPaginationType(QueryOptions opts, int pagesize) {\n    return (PaginationType.NONE \u003d\u003d opts.config().paginationType() \u0026\u0026 ! opts.hasRestarted())? opts.limit() : pagesize;\n  }\n``` \n\nSo that there would be no need to add this method, and also the opt.limit would keep the information about the original limit (even if it is not used after the loop to backfill the results).\n\nThoughts?",
      "range": {
        "startLine": 101,
        "startChar": 55,
        "endLine": 101,
        "endChar": 79
      },
      "revId": "a251ffec29277fa4833a0203a8fee80ee8c8c536",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}