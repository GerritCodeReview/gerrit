{
  "comments": [
    {
      "key": {
        "uuid": "288a4e26_349c3664",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-05-02T06:31:27Z",
      "side": 1,
      "message": "Why would it be null if SSH is disabled, it shouldn\u0027t be null. Even if SSH is disabled we still want to check that actions that modify the account trigger a reindex event.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 40
      },
      "revId": "a2cec286fcc6ea97bb8c4da9af9bbbed0cf100cf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9514ea89_81ae6cd2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-05-02T06:41:02Z",
      "side": 1,
      "message": "For internal tests, if a test is annotated with @UseSsh, it will act like the following:\n1- @Before in AbstractDaemonTest will be called,.\n2- The tests will be skipped and @Before in AccountIT will not be called. That\u0027s why \u0027accountIndexEventCounterHandle\u0027 will not be initialized.\n3- @After in AccountIT will still be called, which results in a NPE for \u0027accountIndexEventCounterHandle\u0027.\n\nHow do yo think about this?",
      "parentUuid": "288a4e26_349c3664",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 40
      },
      "revId": "a2cec286fcc6ea97bb8c4da9af9bbbed0cf100cf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0d980d5_4c69c1fc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-05-02T06:49:17Z",
      "side": 1,
      "message": "OK, got it. It seems wrong to not skip the @After methods in this case. Can this be fixed? \n\nHaving the null check in the @After method cannot harm, but it would be cleaner to not invoke @After at all in this case.",
      "parentUuid": "9514ea89_81ae6cd2",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 40
      },
      "revId": "a2cec286fcc6ea97bb8c4da9af9bbbed0cf100cf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56c561df_3bfa1b8c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-05-02T07:27:22Z",
      "side": 1,
      "message": "@Before @After are controlled by JUnit.\n\n1- As in doc [1], @Before will be ran before a test and @Before in a super class will be ran before those @Before a sub-class. In AbstractDaemonTest#assumeSshIfRequired, \u0027useSsh\u0027 is true while \u0027SshMode.useSsh()\u0027 is false. So we will throw an exception here. Thus @Before methods in AccountIT are skipped and we fail to initialize \u0027accountIndexEventCounterHandle\u0027.\n\n2- As in doc [2], all @After are guaranteed to run even there are exceptions. So it seems we can\u0027t skip the @After in AccountIT.\n\n[1] http://junit.sourceforge.net/javadoc/org/junit/Before.html\n\n[2] http://junit.sourceforge.net/javadoc/org/junit/After.html",
      "parentUuid": "c0d980d5_4c69c1fc",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 40
      },
      "revId": "a2cec286fcc6ea97bb8c4da9af9bbbed0cf100cf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a8b3fba_9132c2a1",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/api/accounts/AccountIT.java",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-05-02T06:31:27Z",
      "side": 1,
      "message": "Instead of disabling this test completely can we just adapt the assertion if SSH is disabled?",
      "revId": "a2cec286fcc6ea97bb8c4da9af9bbbed0cf100cf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10a71ad9_29ad165b",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/api/accounts/AccountIT.java",
        "patchSetId": 1
      },
      "lineNbr": 210,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-05-02T06:41:02Z",
      "side": 1,
      "message": "Yes. It\u0027s an option. We should be able do like that.",
      "parentUuid": "9a8b3fba_9132c2a1",
      "revId": "a2cec286fcc6ea97bb8c4da9af9bbbed0cf100cf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90119a72_67789603",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/api/accounts/AccountIT.java",
        "patchSetId": 1
      },
      "lineNbr": 215,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-05-02T06:31:27Z",
      "side": 1,
      "message": "I guess if SSH is disabled this should expect 1, since no SSH keys are added.",
      "revId": "a2cec286fcc6ea97bb8c4da9af9bbbed0cf100cf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "968b69d6_98958dc9",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/api/accounts/AccountIT.java",
        "patchSetId": 1
      },
      "lineNbr": 215,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-05-02T06:41:02Z",
      "side": 1,
      "message": "Yes. It\u0027s 1.",
      "parentUuid": "90119a72_67789603",
      "revId": "a2cec286fcc6ea97bb8c4da9af9bbbed0cf100cf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}