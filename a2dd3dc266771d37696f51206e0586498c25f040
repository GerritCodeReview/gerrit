{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b18789e6_7a3903be",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-20T23:50:29Z",
      "side": 1,
      "message": "If I manually create a SR with the same name as a label function will the SR override the label function? If not, how can you be sure that a SR with the same name represents the same thing?",
      "range": {
        "startLine": 25,
        "startChar": 10,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "a2dd3dc266771d37696f51206e0586498c25f040",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bd34d38_f0e53802",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-06-21T07:47:34Z",
      "side": 1,
      "message": "If there\u0027s an already existing SR with the same name as a label, then nothing will happen. The migration pgm will just skip this label.\n\nThe intention is to mass migrate hosts/repos that don\u0027t have submit requirements yet. This change will turn off the {MaxWithBlock, etc...} label functions and create a similar submit requirement instead.",
      "parentUuid": "b18789e6_7a3903be",
      "range": {
        "startLine": 25,
        "startChar": 10,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "a2dd3dc266771d37696f51206e0586498c25f040",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "099e3665_34e26ca1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-22T19:14:51Z",
      "side": 1,
      "message": "\u003e If there\u0027s an already existing SR with the same name as a label, then nothing will happen. The migration pgm will just skip this label.\n\nI wasn\u0027t asking wrt migration, I meant if I manually made that change on a live server, what would the SR/Label behavior be?",
      "parentUuid": "5bd34d38_f0e53802",
      "range": {
        "startLine": 25,
        "startChar": 10,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "a2dd3dc266771d37696f51206e0586498c25f040",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66c61bd6_2e424d40",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-06-23T10:10:03Z",
      "side": 1,
      "message": "OK, thanks for clarifying. I misunderstood the first question and tried to relate it with this change.\n\n\u003e If I manually create a SR with the same name as a label function will the SR override the label function?\n\nYes and no. Gerrit server evaluates all submit requirements and all legacy submit rules {label functions, custom, prolog}.\nFor each label emitted from a legacy submit rule result (e.g. a blocked label in a MaxWithBlock function), the server checks if there\u0027s an SR with the same name, and\nif both results are matching (i.e. they both block or allow submission), only the new SR result is returned with the change detail API (and displayed on the change page). Otherwise, the API returns both results.\n\nThis is actually how we selectively migrated some hosts to SRs: we first added new submit requirements, allowing them to run beside label functions / prolog, then we removed label functions / prolog.\n\n\u003e If not, how can you be sure that a SR with the same name represents the same thing?\n\nAfter adding SRs, you could check these metrics [1] for how many times a SR was matching with a legacy SR result.\n\n[1] https://gerrit.googlesource.com/gerrit/+/b3ee73ea8dab65ea0041a5409608087d9c036c96/java/com/google/gerrit/server/project/SubmitRequirementsUtil.java#58",
      "parentUuid": "099e3665_34e26ca1",
      "range": {
        "startLine": 25,
        "startChar": 10,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "a2dd3dc266771d37696f51206e0586498c25f040",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ca0fa04_1ce6ad37",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-23T16:00:38Z",
      "side": 1,
      "message": "\u003e OK, thanks for clarifying. I misunderstood the first question and tried to relate it with this change.\n\nWell it is tied a bit, since this change assumes same name is same thing, but yeah, I see the confusion. I\u0027ll try to be clearer upfront next time ðŸ˜Š\n\n\u003e \n\u003e \u003e If I manually create a SR with the same name as a label function will the SR override the label function?\n\u003e \n\u003e Yes and no. Gerrit server evaluates all submit requirements and all legacy submit rules {label functions, custom, prolog}.\n\u003e For each label emitted from a legacy submit rule result (e.g. a blocked label in a MaxWithBlock function), the server checks if there\u0027s an SR with the same name, and\n\u003e if both results are matching (i.e. they both block or allow submission), only the new SR result is returned with the change detail API (and displayed on the change page). Otherwise, the API returns both results.\n\u003e \n\u003e This is actually how we selectively migrated some hosts to SRs: we first added new submit requirements, allowing them to run beside label functions / prolog, then we removed label functions / prolog.\n\nThanks for the detailed explanation, that really helps.\n\n\u003e \n\u003e \u003e If not, how can you be sure that a SR with the same name represents the same thing?\n\u003e \n\u003e After adding SRs, you could check these metrics [1] for how many times a SR was matching with a legacy SR result.\n\nOk, but this change isn\u0027t checking those metrics, so how can you be sure the SR you found with the same name was added by a prior run of this code vs manually (with potentially non-matching results)?\n\nI do think it\u0027s unlikely someone would be (intentionally or accidentally) using the same name for a SR and legacy-submit-rule-label for different things, but it\u0027s not impossible and it sounds like the server code would handle it correctly (if their results are different, both are included in the API response). If they did though, this change would miss migrating the legacy-submit-rule-label to a SR, correct?\n\nMaybe we could mitigate that by adding a dry-run/report mode that doesn\u0027t change anything but tells the user what would change and if any duplicate names were found?\n\n\u003e \n\u003e [1] https://gerrit.googlesource.com/gerrit/+/b3ee73ea8dab65ea0041a5409608087d9c036c96/java/com/google/gerrit/server/project/SubmitRequirementsUtil.java#58",
      "parentUuid": "66c61bd6_2e424d40",
      "range": {
        "startLine": 25,
        "startChar": 10,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "a2dd3dc266771d37696f51206e0586498c25f040",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d00317df_d1592225",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-27T13:30:16Z",
      "side": 1,
      "message": "Maybe the schema migration could emit warnings for these and say that these need to be checked manually?",
      "parentUuid": "8ca0fa04_1ce6ad37",
      "range": {
        "startLine": 25,
        "startChar": 10,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "a2dd3dc266771d37696f51206e0586498c25f040",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e89cf2d4_e51a12c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-29T18:26:16Z",
      "side": 1,
      "message": "\u003e Maybe the schema migration could emit warnings for these and say that these need to be checked manually?\n\nI think that could work, but it\u0027s probably not something admins expect to look for during schema migrations.",
      "parentUuid": "d00317df_d1592225",
      "range": {
        "startLine": 25,
        "startChar": 10,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "a2dd3dc266771d37696f51206e0586498c25f040",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b736ecc8_a42f7467",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-30T07:58:02Z",
      "side": 1,
      "message": "I still think this would be fine. If the warnings are ignored it doesn\u0027t break anything fundamentally. It\u0027s actually not unlikely that you want to ignore them, if you configured such a conflicting submit requirement it\u0027s likely that this conflicting submit requirement is already doing what you want, and no action is required.\n\nHowever I will still have a look to see if we can come up with something better.",
      "parentUuid": "e89cf2d4_e51a12c6",
      "range": {
        "startLine": 25,
        "startChar": 10,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "a2dd3dc266771d37696f51206e0586498c25f040",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53b6a98c_a2e469d4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-30T14:16:59Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "b736ecc8_a42f7467",
      "range": {
        "startLine": 25,
        "startChar": 10,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "a2dd3dc266771d37696f51206e0586498c25f040",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59007d7b_1dfba49a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-14T16:05:55Z",
      "side": 1,
      "message": "Thanks Edwin for replying. Yes, this is a tradeoff / approximation here. We are skipping creating SRs if there\u0027s existing one, assuming it was created by a previous run of this migration, or manually by admins which - hopefully - is doing the same thing.",
      "parentUuid": "53b6a98c_a2e469d4",
      "range": {
        "startLine": 25,
        "startChar": 10,
        "endLine": 25,
        "endChar": 69
      },
      "revId": "a2dd3dc266771d37696f51206e0586498c25f040",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}