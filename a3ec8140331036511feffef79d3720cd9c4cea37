{
  "comments": [
    {
      "key": {
        "uuid": "a5788fc7_1107a2c9",
        "filename": "java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 5
      },
      "lineNbr": 1448,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-03T07:24:38Z",
      "side": 1,
      "message": "Does this mean we get an exceptions logged also for non-errors, such as a user trying to call a REST endpoint with insufficient permissions? I\u0027m concerned that this spams the log too much.",
      "revId": "a3ec8140331036511feffef79d3720cd9c4cea37",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c8abb55_c6ff4333",
        "filename": "java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 5
      },
      "lineNbr": 1448,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-07-03T08:19:31Z",
      "side": 1,
      "message": "True, but that\u0027s the tricky thing: how can you make sure that the Gerrit admins can troubleshoot problems if we swallow the exception?\n\nMy use-case is: during traffic hours some REST-API calls to get a temporary 409 but there is no clue in the logs what\u0027s going on. How would you approach the problem?",
      "parentUuid": "a5788fc7_1107a2c9",
      "revId": "a3ec8140331036511feffef79d3720cd9c4cea37",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fefaf5a7_ffde4a4b",
        "filename": "java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 5
      },
      "lineNbr": 1448,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-03T08:28:18Z",
      "side": 1,
      "message": "My understanding is:\n* For errors (aka 500s) we do log exceptions.\n* For user errors (aka 400s) the response should contain enough information for the user to understand what\u0027s wrong. Admins shouldn\u0027t be bothered with these.\n\n\u003e My use-case is: during traffic hours some REST-API calls to get a temporary 409 but there is no clue in the logs what\u0027s going on. How would you approach the problem?\n\nAsk a user to reproduce this with tracing [1].\n\n[1] https://gerrit-review.googlesource.com/Documentation/user-request-tracing.html",
      "parentUuid": "6c8abb55_c6ff4333",
      "revId": "a3ec8140331036511feffef79d3720cd9c4cea37",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7903ac75_8b335777",
        "filename": "java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 5
      },
      "lineNbr": 1448,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-07-03T08:34:39Z",
      "side": 1,
      "message": "\u003e My understanding is:\n\u003e * For errors (aka 500s) we do log exceptions.\n\u003e * For user errors (aka 400s) the response should contain enough information for the user to understand what\u0027s wrong. Admins shouldn\u0027t be bothered with these.\n\u003e \n\u003e \u003e My use-case is: during traffic hours some REST-API calls to get a temporary 409 but there is no clue in the logs what\u0027s going on. How would you approach the problem?\n\u003e \n\u003e Ask a user to reproduce this with tracing [1].\n\u003e \n\u003e [1] https://gerrit-review.googlesource.com/Documentation/user-request-tracing.html\n\nI already thought about that option, which isn\u0027t feasible for two reasons:\n\na) The problem happens randomly during peak hours and to random users across thousands across the globe\nb) If the exception is swallowed and not traced with Flogger, there is no way to have it traced in log even with [1]\n\nWe need to detect the \"unexpected\" errors (not permission denied) and trace the relevant exception automatically, without human intervention or adding any trace header.",
      "parentUuid": "fefaf5a7_ffde4a4b",
      "revId": "a3ec8140331036511feffef79d3720cd9c4cea37",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e704ad7a_571c9223",
        "filename": "java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 5
      },
      "lineNbr": 1448,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-03T08:41:44Z",
      "side": 1,
      "message": "\u003e I already thought about that option, which isn\u0027t feasible for two reasons:\n\u003e\n\u003e a) The problem happens randomly during peak hours and to random users across thousands across the \n\u003e globe\n\nThen just set the log level for this class temporarily to FINE/DEBUG in your log config?\n\n\u003e b) If the exception is swallowed and not traced with Flogger, there is no way to have it traced in \n\u003e log even with [1]\n\nI\u0027m fine with logging it on FINE level (but not as WARNING).\n\n\u003e We need to detect the \"unexpected\" errors (not permission denied) and trace the relevant\n\u003e exception automatically, without human intervention or adding any trace header.\n\nAll 400s are *expected* errors, if something is *unexpected* it should be a 500. Once you found out what it is, you can either improve the error message that is returned with the 409 or make it a 500 if it\u0027s something unexpected.",
      "parentUuid": "7903ac75_8b335777",
      "revId": "a3ec8140331036511feffef79d3720cd9c4cea37",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44615385_ef99b169",
        "filename": "java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 5
      },
      "lineNbr": 1448,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-07-03T08:45:27Z",
      "side": 1,
      "message": "\u003e \u003e I already thought about that option, which isn\u0027t feasible for two reasons:\n\u003e \u003e\n\u003e \u003e a) The problem happens randomly during peak hours and to random users across thousands across the \n\u003e \u003e globe\n\u003e \n\u003e Then just set the log level for this class temporarily to FINE/DEBUG in your log config?\n\nThat wouldn\u0027t work either because the exception is swallowed and not traced.\nThis class serves *ALL* the REST-API activity, if I enabled at FINE level the production would just go down and I\u0027ll fill up the disk space in minutes.\n\nGenerally speaking, we should never swallow exceptions unless they are *really* managed in the code.\n\n\u003e \u003e b) If the exception is swallowed and not traced with Flogger, there is no way to have it traced in \n\u003e \u003e log even with [1]\n\u003e \n\u003e I\u0027m fine with logging it on FINE level (but not as WARNING).\n\nOK, will start with that change first.\n\n\u003e \u003e We need to detect the \"unexpected\" errors (not permission denied) and trace the relevant\n\u003e \u003e exception automatically, without human intervention or adding any trace header.\n\u003e \n\u003e All 400s are *expected* errors, if something is *unexpected* it should be a 500. Once you found out what it is, you can either improve the error message that is returned with the 409 or make it a 500 if it\u0027s something unexpected.\n\nReturning 500 instead of 409 is an interface change though, which I\u0027m not so confortable doing in a stable release.\n\nWDYT?",
      "parentUuid": "e704ad7a_571c9223",
      "revId": "a3ec8140331036511feffef79d3720cd9c4cea37",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5134f083_c8280acc",
        "filename": "java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 5
      },
      "lineNbr": 1448,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-03T08:51:46Z",
      "side": 1,
      "message": "\u003e Returning 500 instead of 409 is an interface change though, which I\u0027m not so confortable doing\n\u003e in a stable release.\n\u003e\n\u003e WDYT?\n\nWe don\u0027t need to fix this on the stable branch, but can do it in master.\nIt also depends on what\u0027s the cause here. If the 409 is justified, we should improve its error message. If the 409 is the wrong response code, it\u0027s a bug that should be fixed. This should be discussed once the problem is understood.",
      "parentUuid": "44615385_ef99b169",
      "revId": "a3ec8140331036511feffef79d3720cd9c4cea37",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d628d297_51e05b0b",
        "filename": "java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 5
      },
      "lineNbr": 1448,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-07-03T09:32:55Z",
      "side": 1,
      "message": "\u003e \u003e Returning 500 instead of 409 is an interface change though, which I\u0027m not so confortable doing\n\u003e \u003e in a stable release.\n\u003e \u003e\n\u003e \u003e WDYT?\n\u003e \n\u003e We don\u0027t need to fix this on the stable branch, but can do it in master.\n\u003e It also depends on what\u0027s the cause here. If the 409 is justified, we should improve its error message. If the 409 is the wrong response code, it\u0027s a bug that should be fixed. This should be discussed once the problem is understood.\n\nI\u0027ll post a follow-up change where the warning level from finer is set to warn if the status code is a 5xx.\n\nFor the 40x, agreed to be fixed on master, not on stable-2.16.",
      "parentUuid": "5134f083_c8280acc",
      "revId": "a3ec8140331036511feffef79d3720cd9c4cea37",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}