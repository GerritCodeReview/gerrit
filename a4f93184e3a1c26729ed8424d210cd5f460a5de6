{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1f078eae_41936ea0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-06-13T08:39:54Z",
      "side": 1,
      "message": "Historically this type of problem was solved through setting a label.\nIt feels a bit strange to have this type of assertion in the commit-message.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 72
      },
      "revId": "a4f93184e3a1c26729ed8424d210cd5f460a5de6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e10be7c_10121041",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-06-13T08:39:54Z",
      "side": 1,
      "message": "FWICT it\u0027s not really a footer, having \"CHANGE_IS_FW_COMPATIBLE\" anywhere in the commit message fulfills the submit-requirement.\nA commit footer is in the last paragraph of the commit message and is formatted as \"$KEY: $VALUE\", compare \"Google-Bug-Id\" and \"Change-Id\" footers at the bottom of this commit message.",
      "range": {
        "startLine": 7,
        "startChar": 16,
        "endLine": 7,
        "endChar": 29
      },
      "revId": "a4f93184e3a1c26729ed8424d210cd5f460a5de6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ba48919_89fc9bed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-06-13T10:20:18Z",
      "side": 1,
      "message": "Right, I wrongly used the term \"footer\" and should\u0027ve used a \"tag\". I adapted the commit message and the submit requirement.",
      "parentUuid": "0e10be7c_10121041",
      "range": {
        "startLine": 7,
        "startChar": 16,
        "endLine": 7,
        "endChar": 29
      },
      "revId": "a4f93184e3a1c26729ed8424d210cd5f460a5de6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7952797b_6289eabc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-06-13T10:53:14Z",
      "side": 1,
      "message": "Compare with \"Library-Compliance\" (i.e. someone must assert that they have verified that a submit requirement is fullfilled).\nWould a label be an alternative now that labels are decoupled from submit-requirements?",
      "parentUuid": "1f078eae_41936ea0",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 72
      },
      "revId": "a4f93184e3a1c26729ed8424d210cd5f460a5de6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "276e63b4_e74fbbcf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2022-06-11T08:29:37Z",
      "side": 1,
      "message": "The existence of such a footer in the commit message doesn\u0027t guarantee\ncompatibility, it only confirms that the developer had that in mind.\n\nMaybe a more formal approach would be to have a test (suite) which checks\nforward compatibility between the base version and current-patch-set version?",
      "revId": "a4f93184e3a1c26729ed8424d210cd5f460a5de6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23515cc2_5e45253b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-06-13T08:16:13Z",
      "side": 1,
      "message": "\u003e Maybe a more formal approach would be to have a test (suite) which checks\nforward compatibility between the base version and current-patch-set version?\n\nI researched this approach but could not come up with a solution given our codebase / tests. Doing FW compatibility testing requires serializing entities with the new code and deserializing with the old code in the same test, but there\u0027s no way to switch/rebuild code in the middle of a test.\n\nThe existence of the footer will help by alerting but won\u0027t prevent. I came up with more AIs to prevent this issue and I will write a proposal of these AIs.",
      "parentUuid": "276e63b4_e74fbbcf",
      "revId": "a4f93184e3a1c26729ed8424d210cd5f460a5de6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09d75754_759d6235",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-06-13T08:39:54Z",
      "side": 1,
      "message": "Nit: if you go for a label in the commit-message, as suggested here, I would vote for \"FW_COMPATIBLE\" instead of \"CHANGE_IS_FW_COMPATIBLE\".",
      "range": {
        "startLine": 21,
        "startChar": 48,
        "endLine": 21,
        "endChar": 71
      },
      "revId": "a4f93184e3a1c26729ed8424d210cd5f460a5de6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f97805f_da660569",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-13T08:54:45Z",
      "side": 1,
      "message": "\u003e The existence of such a footer in the commit message doesn\u0027t guarantee\n\u003e compatibility, it only confirms that the developer had that in mind.\n\nYes, this is a simple reminder. We figured having a reminder is better than nothing.\n\n\u003e Maybe a more formal approach would be to have a test (suite) which checks\n\u003e forward compatibility between the base version and current-patch-set version?\n\nRight, but this is not easily doable, or at least requires some larger efforts. We want to add the reminder as an intermediate measure until we can have this covered by tests.\n\nYoussef, can you maybe clarify this in the commit message?",
      "parentUuid": "276e63b4_e74fbbcf",
      "revId": "a4f93184e3a1c26729ed8424d210cd5f460a5de6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70d81aee_b57e0315",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-06-13T10:20:18Z",
      "side": 1,
      "message": "Thanks for the addendum. Done.",
      "parentUuid": "2f97805f_da660569",
      "revId": "a4f93184e3a1c26729ed8424d210cd5f460a5de6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ef40686_c5cce3b7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-06-13T10:20:18Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "09d75754_759d6235",
      "range": {
        "startLine": 21,
        "startChar": 48,
        "endLine": 21,
        "endChar": 71
      },
      "revId": "a4f93184e3a1c26729ed8424d210cd5f460a5de6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea14e155_db471dae",
        "filename": "project.config",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-13T08:54:45Z",
      "side": 1,
      "message": "Can you please help me understand why \u0027\\\"\u0027 works, but \u0027\\.\u0027 requires to be \u0027\\\\\\\\.\u0027? \n\nUnrelated to this change. Do we need to document escaping needs somewhere at [1]? E.g. I would have probably tried this with no escaping at all (except what is required for the regexp):\n\n  applicableIf \u003d -branch:refs/meta/config AND (file:\"^java/com/google/gerrit/server/notedb/.*\\.java$\" OR file:\"^java/com/google/gerrit/entities/.*\\.java$\")\n  \nWhy wouldn\u0027t this work?\n\n[optional] Maybe use \u0027[.]\u0027 instead of escaping \u0027.\u0027 to make this more readable?\n\n[1] https://gerrit-review.googlesource.com/Documentation/config-submit-requirements.html",
      "revId": "a4f93184e3a1c26729ed8424d210cd5f460a5de6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "664546c4_58224601",
        "filename": "project.config",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-06-13T10:20:18Z",
      "side": 1,
      "message": "\u003e [optional] Maybe use \u0027[.]\u0027 instead of escaping \u0027.\u0027 to make this more readable?\n\nNice idea. That should work. Done.\n\n\u003e Can you please help me understand why \u0027\\\"\u0027 works, but \u0027\\.\u0027 requires to be \u0027\\\\\\\\.\u0027? \n\nWell I think the escaping is needed as there are different levels of parsing:\n  - project.config is parsed into a submit requirement entity\n  - SR expression is then parsed by ANTLR\n  - In addition to that, we need to preserve backslashes for the characters we want to escape for the regex evaluator (e.g. the dot).\n\nI think ANTLR requires the expression to be enclosed in double quotes, hence we need to escape DQ such that project.config parsing preserves them for Antlr.\n\nI previously deduced the number of required backslashes by trial and error. I\u0027ll try removing the backslash before \" and see if it works.\n\nUpdate: I get commit upload rejected for [.], it looks like this requires escaping. One backslash did not solve it so adding two.\n\nUpdate: two backslashes for [] did not work either, so probably will need 4 backslashes as I\u0027m doing. I left this as is.",
      "parentUuid": "ea14e155_db471dae",
      "revId": "a4f93184e3a1c26729ed8424d210cd5f460a5de6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "189e96b7_da0b4d47",
        "filename": "project.config",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-13T10:27:53Z",
      "side": 1,
      "message": "Okay, thanks for checking.\n\n\u003e I previously deduced the number of required backslashes by trial and error.\n\nThis means that as a follow-up we must really understand and document this (if we as Gerrit experts have to guess by trial and error, normal project owners will have a hard time with this).\n\nAt best we also reduce the need for escaping to a minimum so that these configs a better readable.",
      "parentUuid": "664546c4_58224601",
      "revId": "a4f93184e3a1c26729ed8424d210cd5f460a5de6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e80f6568_4cf9fdf1",
        "filename": "project.config",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-06-13T10:53:14Z",
      "side": 1,
      "message": "The multiple-layers-of-escapes problem is quite general.\n\np.s\nFrom an old actions.config (when using its-hooks). There was a need to escape \"\\\" in the resulting json:\n\n    \\\"subject\\\":\\\"${subject.replaceAll(\\\"\\\\\\\"\\\"\\\",\\\"\\\\\\\\\\\"\\\"\\\")}\\\"",
      "parentUuid": "189e96b7_da0b4d47",
      "revId": "a4f93184e3a1c26729ed8424d210cd5f460a5de6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}