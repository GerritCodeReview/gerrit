{
  "comments": [
    {
      "key": {
        "uuid": "724e4182_cf9f4bba",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T12:08:38Z",
      "side": 1,
      "message": "This part is a bit unclear to me, maybe it should say \"to control the submitability of changes\"?",
      "range": {
        "startLine": 9,
        "startChar": 29,
        "endLine": 9,
        "endChar": 65
      },
      "revId": "a5c3b99de02d2beddf71aad988a65180ca39d193",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "043da0e5_81e0a7f6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:37:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "724e4182_cf9f4bba",
      "range": {
        "startLine": 9,
        "startChar": 29,
        "endLine": 9,
        "endChar": 65
      },
      "revId": "a5c3b99de02d2beddf71aad988a65180ca39d193",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17cf1359_d433902e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 38,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T12:08:38Z",
      "side": 1,
      "message": "It\u0027s not really a \"custom\" submit type, but it\u0027s a possibility to control from Prolog which of the (existing) submit types should be used to submit a change.",
      "range": {
        "startLine": 38,
        "startChar": 18,
        "endLine": 38,
        "endChar": 37
      },
      "revId": "a5c3b99de02d2beddf71aad988a65180ca39d193",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2aa0a8fb_e36a1d9d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 38,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:37:52Z",
      "side": 1,
      "message": "Done, thanks for the precision",
      "parentUuid": "17cf1359_d433902e",
      "range": {
        "startLine": 38,
        "startChar": 18,
        "endLine": 38,
        "endChar": 37
      },
      "revId": "a5c3b99de02d2beddf71aad988a65180ca39d193",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd35d57d_8a215d74",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 7
      },
      "lineNbr": 2735,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-03-05T09:10:48Z",
      "side": 1,
      "message": "Currently, we have the concept of submit_filter which is a mean for parent project(s) to enforce\n(some) submit rules on child projects. submit_filter it is actually not inheritance of submit rules.\nInstead, submit_filter from parent project transforms the result of the submit_rule from a child project.\n\nI am not sure if you considered submit filters at all and if what you are writing here\nis neutral to the concept of submit filters or intended to be a replacement for them?\n\nIMHO, the concept of submit filter is a core feature. They are implemented in Prolog\nbut they are a core concept.\n\nWe have users who use a submit filter on a common parent project to enforce mandatory\nsubmit-ability conditions on a set of child projects. Child projects can still define\nown submit rules but they cannot escape the (enforced) rules form parent project(s).\n\nIMHO, we should be able to define submit filter on a (parent) project using any plugin(s)\nwhich provides submit filters, independently on which plugins are used to implement\nsubmit rules on child projects.",
      "range": {
        "startLine": 2734,
        "startChar": 0,
        "endLine": 2735,
        "endChar": 93
      },
      "revId": "a5c3b99de02d2beddf71aad988a65180ca39d193",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a88f09dd_e2ad5700",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 7
      },
      "lineNbr": 2740,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T12:08:38Z",
      "side": 1,
      "message": "prevent",
      "range": {
        "startLine": 2740,
        "startChar": 0,
        "endLine": 2740,
        "endChar": 7
      },
      "revId": "a5c3b99de02d2beddf71aad988a65180ca39d193",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f5790d7_c86b257c",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 7
      },
      "lineNbr": 2740,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:37:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a88f09dd_e2ad5700",
      "range": {
        "startLine": 2740,
        "startChar": 0,
        "endLine": 2740,
        "endChar": 7
      },
      "revId": "a5c3b99de02d2beddf71aad988a65180ca39d193",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "163c9b3c_cd2416bb",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 7
      },
      "lineNbr": 2742,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T12:08:38Z",
      "side": 1,
      "message": "three?",
      "revId": "a5c3b99de02d2beddf71aad988a65180ca39d193",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85972a19_9392ef7d",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 7
      },
      "lineNbr": 2742,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:37:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "163c9b3c_cd2416bb",
      "revId": "a5c3b99de02d2beddf71aad988a65180ca39d193",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9811f600_38d245c6",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 7
      },
      "lineNbr": 2747,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T12:08:38Z",
      "side": 1,
      "message": "I think I would prefer this to be NOT_READY.",
      "range": {
        "startLine": 2747,
        "startChar": 41,
        "endLine": 2747,
        "endChar": 43
      },
      "revId": "a5c3b99de02d2beddf71aad988a65180ca39d193",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d4afb59_85bcb8c5",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 7
      },
      "lineNbr": 2747,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:37:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9811f600_38d245c6",
      "range": {
        "startLine": 2747,
        "startChar": 41,
        "endLine": 2747,
        "endChar": 43
      },
      "revId": "a5c3b99de02d2beddf71aad988a65180ca39d193",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "880815fb_1a66b004",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 7
      },
      "lineNbr": 2777,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-03-05T08:39:01Z",
      "side": 1,
      "message": "This is now: Collection\u003cSubmitRecord\u003e\n\nIt would be good to discuss an empty collection in the docs above as well especially that this enables opt-outs and these won\u0027t be recorded in NoteDb when the change is submitted.",
      "range": {
        "startLine": 2777,
        "startChar": 9,
        "endLine": 2777,
        "endChar": 21
      },
      "revId": "a5c3b99de02d2beddf71aad988a65180ca39d193",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b2b7f30_cef73813",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 7
      },
      "lineNbr": 2777,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:37:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "880815fb_1a66b004",
      "range": {
        "startLine": 2777,
        "startChar": 9,
        "endLine": 2777,
        "endChar": 21
      },
      "revId": "a5c3b99de02d2beddf71aad988a65180ca39d193",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "447fbfed_30f7a046",
        "filename": "java/com/google/gerrit/server/rules/SubmitRule.java",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-03-05T10:25:44Z",
      "side": 1,
      "message": "In this change we see a new extension point but we don\u0027t see how it is used from Gerrit core.\nI don\u0027t think we can approve and submit an extension point without seeing how and where\nin Gerrit core it gets used?\n\nIf we need to look in a follow-up change to find that code then this one and the one where\nthe extension point gets used, can only be reviewed and submitted together.\nInn that case, they should be squashed into one change.",
      "revId": "a5c3b99de02d2beddf71aad988a65180ca39d193",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}