{
  "comments": [
    {
      "key": {
        "uuid": "b3f6d29d_f186a07b",
        "filename": "java/com/google/gerrit/server/index/change/AllChangesIndexer.java",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-07-19T08:54:09Z",
      "side": 1,
      "message": "Rather than passing null here, pass Collections.emptySet()",
      "range": {
        "startLine": 199,
        "startChar": 48,
        "endLine": 199,
        "endChar": 52
      },
      "revId": "a645287ce45297ed0c9a306d2a015cf342899e61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e7bf364_e9b80a68",
        "filename": "java/com/google/gerrit/server/index/change/AllChangesIndexer.java",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-07-19T09:38:07Z",
      "side": 1,
      "message": "This is a kind of optional parameter, if not specified (null) means all changes.\nIf you don\u0027t like using null for this case, then maybe using Optional.empty() is\na better choice than Collections.emptySet()?",
      "parentUuid": "b3f6d29d_f186a07b",
      "range": {
        "startLine": 199,
        "startChar": 48,
        "endLine": 199,
        "endChar": 52
      },
      "revId": "a645287ce45297ed0c9a306d2a015cf342899e61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5f0d828_58fbdece",
        "filename": "java/com/google/gerrit/server/index/change/AllChangesIndexer.java",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-07-22T01:52:02Z",
      "side": 1,
      "message": "Generally it\u0027s not good practise to pass null for a collection type (see [1] for example). I\u0027d rather just pass the empty set.\n\nIs there any potential for the other reindexChanges to be called with a set (with intention of indexing a specific set of change) but the set is empty and thus triggers reindexing of all changes? In that case it might be better to wrap with Optional, but otherwise I don\u0027t think it adds any value over just passing the set.\n\n[1] http://www.informit.com/articles/article.aspx?p\u003d2133373\u0026seqNum\u003d5",
      "parentUuid": "4e7bf364_e9b80a68",
      "range": {
        "startLine": 199,
        "startChar": 48,
        "endLine": 199,
        "endChar": 52
      },
      "revId": "a645287ce45297ed0c9a306d2a015cf342899e61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "deb7d0e5_7e8b3fea",
        "filename": "java/com/google/gerrit/server/index/change/AllChangesIndexer.java",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-07-22T08:50:43Z",
      "side": 1,
      "message": "[1] is for return values but I agree with it also for the parameters.\n\nHowever, there is a big difference if we are talking about public API methods or about\nprivate methods, which are implementation details encapsulated inside a class.\nObviously, this is the latter case. Here I need to distinguish between the \"changes\"\nparameter being present or not:\n* If it is present then we index only changes from the given collection\n* If is is not present then we index all changes\n\nUsing empty collection to represent an absent parameter is unintuitive IMHO.\nOptional is better as its purpose is clearly to represent an optional parameter.\nIn the case of private methods, null may also be acceptable to represent an absent value.",
      "parentUuid": "a5f0d828_58fbdece",
      "range": {
        "startLine": 199,
        "startChar": 48,
        "endLine": 199,
        "endChar": 52
      },
      "revId": "a645287ce45297ed0c9a306d2a015cf342899e61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77148a7f_4d68985b",
        "filename": "java/com/google/gerrit/server/index/change/AllChangesIndexer.java",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-07-22T08:54:44Z",
      "side": 1,
      "message": "This isn\u0027t a private method within the class; it\u0027s public and accessed by another class.  It is possible it\u0027s also used by plugins.\n\nI would prefer to use Optional rather than null, but if we do use null, then it should be annotated as @Nullable on the method below.",
      "parentUuid": "deb7d0e5_7e8b3fea",
      "range": {
        "startLine": 199,
        "startChar": 48,
        "endLine": 199,
        "endChar": 52
      },
      "revId": "a645287ce45297ed0c9a306d2a015cf342899e61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30c838a2_fb46a777",
        "filename": "java/com/google/gerrit/server/index/change/AllChangesIndexer.java",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-07-19T08:54:09Z",
      "side": 1,
      "message": "When the above change is applied, this should be:\n\n  if (changes.isEmpty()) {",
      "range": {
        "startLine": 243,
        "startChar": 8,
        "endLine": 243,
        "endChar": 30
      },
      "revId": "a645287ce45297ed0c9a306d2a015cf342899e61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16f0bad9_7fd0d5a6",
        "filename": "java/com/google/gerrit/server/index/change/AllChangesIndexer.java",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-07-19T09:38:07Z",
      "side": 1,
      "message": "With the proposed Optional this would look like:\n\n  if (changes.isPresent()) {\n    ...\n  else {\n    ... \n  }",
      "parentUuid": "30c838a2_fb46a777",
      "range": {
        "startLine": 243,
        "startChar": 8,
        "endLine": 243,
        "endChar": 30
      },
      "revId": "a645287ce45297ed0c9a306d2a015cf342899e61",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}