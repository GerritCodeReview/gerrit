{
  "comments": [
    {
      "key": {
        "uuid": "1862175e_0f93fa33",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-03-09T06:52:16Z",
      "side": 1,
      "message": "Yes, but I would still do not know, what the capabilities the authenticated user has. Example: javamelody plugin is extending AllRequestFilter: [1] and provide this capability checker to actually check that the user was granted administrate server capability: [2].\n\n* [1] https://github.com/GerritCodeReview/plugins_javamelody/blob/master/src/main/java/com/googlesource/gerrit/plugins/javamelody/GerritMonitoringFilter.java#L43\n* [2] https://github.com/GerritCodeReview/plugins_javamelody/blob/master/src/main/java/com/googlesource/gerrit/plugins/javamelody/CapabilityChecker.java#L47-L52",
      "range": {
        "startLine": 11,
        "startChar": 25,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "a72281d2f964f588f9502cddd5580860a4afabad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bd39eb1_bfd9ce9e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1056821
      },
      "writtenOn": "2018-03-09T11:18:53Z",
      "side": 1,
      "message": "Valid point, David. For the current purpose and in my understanding, though, the knowledge of capabilities is not required for low-level tasks such as rate limiting (being my intention), where the mere knowledge of the user\u0027s identity is required. Otherwise, an early request to find the not yet established user leads to the user being declared \"anonymous\" and a bunch of troubles. I might not have the full picture, maybe Sasa or you can comment.",
      "parentUuid": "1862175e_0f93fa33",
      "range": {
        "startLine": 11,
        "startChar": 25,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "a72281d2f964f588f9502cddd5580860a4afabad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baa0237c_67d3b756",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-03-14T22:02:03Z",
      "side": 1,
      "message": "\u003e Yes, but I would still do not know, what the capabilities the\n \u003e authenticated user has. Example: javamelody plugin is extending\n \u003e AllRequestFilter: [1] and provide this capability checker to\n \u003e actually check that the user was granted administrate server\n \u003e capability: [2].\n\nFor my information, how do you get current user before it\nwas authenticated? AFAIK, AllRequestsFilter runs before\nany servlet filters in Gerrit core, right? And only a filter in\nGerrit core (like ProjectBasicAuthFilter) will authenticate\nthe user. Therefore any plugin contributed filters\nrun before (basic) authentication happens.\n\n\n \u003e \n \u003e * [1] https://github.com/GerritCodeReview/plugins_javamelody/blob/master/src/main/java/com/googlesource/gerrit/plugins/javamelody/GerritMonitoringFilter.java#L43\n \u003e * [2] https://github.com/GerritCodeReview/plugins_javamelody/blob/master/src/main/java/com/googlesource/gerrit/plugins/javamelody/CapabilityChecker.java#L47-L52",
      "parentUuid": "1862175e_0f93fa33",
      "range": {
        "startLine": 11,
        "startChar": 25,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "a72281d2f964f588f9502cddd5580860a4afabad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d76052a9_c672f612",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-03-19T21:12:54Z",
      "side": 1,
      "message": "\u003e For my information, how do you get current user before it\n \u003e was authenticated? AFAIK, AllRequestsFilter runs before\n \u003e any servlet filters in Gerrit core, right? And only a filter in\n \u003e Gerrit core (like ProjectBasicAuthFilter) will authenticate\n \u003e the user. Therefore any plugin contributed filters\n \u003e run before (basic) authentication happens.\n\nThe answer to your question is the dispatching order, as documented n guice WIKI: [1]:\n\n  They will be compared and dispatched in the order\n  in which the rules appear in your ServletModule.\n\nIn Daemon#createWebInjector() we have this:\n\n  [...]\n  modules.add(RequestContextFilter.module());\n  modules.add(AllRequestFilter.module());\n  modules.add(RequestMetricsFilter.module());\n  modules.add(H2CacheBasedWebSession.module());\n  modules.add(sysInjector.getInstance(GitOverHttpModule.class));\n  [...]\n\nThe are two major use cases to consider:\n\n* 1. Gerrit UI request: when authenticated user session is found and set in RequestContextFilter, before AllRequestFilter, that\u0027s why in AllRequestFilter we have a user. Example: in plugin implemented AllRequestFilter with this code: [2], that produces this output:\n\n  Account: 1000000 username: admin\n\n* 2. REST API request: e.g.:\n\n  $ curl --user admin:secret http://localhost:8080/a/config/server/version\n  \"2.14.7-9-g9ebfce95b7-dirty\"\n\nHere the AllRequestFilter is bound before GitOverHttpModule, that provides ProjectBasicAuthFilter filter, and thus, as you said, there is no identified user, the code in: [2] produces: by the request above:\n\n  anonymous\n\nSo what this series is trying to achive is to bind AllRequestfilter *after* GitOverHttpModule.\n\nInstead of splitting AllRequestFilter in two, by preserving the old one and split of new AllAuthenticatedRequestFilter, what id we just change the semantic of the old AllRequestFilter that is run after ProjectBasicAuthFilter?\n\nSo the much less intrusive change that do what the whol series is doing, is to change these two lines: [3].\n\nWith this two lines changed, running:\n\n  $ curl --user admin:secret http://localhost:8080/a/config/server/version\n\nproduces, would give you the user as expected:\n\n  Account: 1000000 username: admin\n\nThe better question, what would we lose with those two lines? In any event, the commit message should mention the dispatch order of guice filter binding and reflect on that considered alternative: to re-order AllRequestFilter to be bound after the ProjectBasicAuthFilter.\n\n\n* [1] https://github.com/google/guice/wiki/ServletModule#dispatch-order\n* [2] http://paste.openstack.org/show/705126\n* [3] http://paste.openstack.org/show/705146",
      "parentUuid": "baa0237c_67d3b756",
      "range": {
        "startLine": 11,
        "startChar": 25,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "a72281d2f964f588f9502cddd5580860a4afabad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d465ff2c_45d7d3f4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-03-19T22:01:38Z",
      "side": 1,
      "message": "\u003e Here the AllRequestFilter is bound before GitOverHttpModule, that provides ProjectBasicAuthFilter filter, and thus, as you said, there is no identified user, the code in: [2] produces: by the request above:\n\u003e \n\u003e   anonymous\n\u003e \n\u003e So what this series is trying to achive is to bind AllRequestfilter *after* GitOverHttpModule.\n\nYes\n\n\u003e \n\u003e Instead of splitting AllRequestFilter in two, by preserving the old one and split of new AllAuthenticatedRequestFilter, what id we just change the semantic of the old AllRequestFilter that is run after ProjectBasicAuthFilter?\n\nInteresting proposal.\n\n\u003e \n\u003e So the much less intrusive change that do what the whol series is doing, is to change these two lines: [3].\n\u003e \n\u003e With this two lines changed, running:\n\u003e \n\u003e   $ curl --user admin:secret http://localhost:8080/a/config/server/version\n\u003e \n\u003e produces, would give you the user as expected:\n\u003e \n\u003e   Account: 1000000 username: admin\n\u003e \n\u003e The better question, what would we lose with those two lines?\n\nhmm... it is hard to find a good example... \nAnyway, the way how AllRequestsFilter extension point currently works\ncan be confusing for plugin developers as you already commented: Provider\u003cCurrentUser\u003e\nmay work or NOT work depending on how a REST API endpoint was invoked: from UI\nor via basic auth.\nSince we don\u0027t have this difference in Gerrit core, why should we have it\nin plugins?",
      "parentUuid": "d76052a9_c672f612",
      "range": {
        "startLine": 11,
        "startChar": 25,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "a72281d2f964f588f9502cddd5580860a4afabad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cb68ae5_735e31c5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-03-19T22:20:10Z",
      "side": 1,
      "message": "\u003e Anyway, the way how AllRequestsFilter extension point currently\n \u003e works\n \u003e can be confusing for plugin developers as you already commented:\n \u003e Provider\u003cCurrentUser\u003e\n \u003e may work or NOT work depending on how a REST API endpoint was\n \u003e invoked: from UI\n \u003e or via basic auth.\n\nIt\u0027s not only confusing, it could also be considered as broken, as there currently now way to access identified user from plugin AllRequestsFilter in REST API call (in fact, otherwise this series wouldn\u0027t exist).\n\n \u003e Since we don\u0027t have this difference in Gerrit core, why should we have it in plugins?\n\nRight. It should just work in both kind of requests. I someone would argue that there should be extension point for the very first filter bound, before any other requests hit gerrit server, then AllFirstRequestFilter would need to be bound before the RequestContextFilter filter:\n\n  modules.add(AllFirstRequestFilter.module());\n  modules.add(RequestContextFilter.module());\n\nBut then there would be a huge problem: What if this plugin logic that is using AllFirstRequestFilter, would need to access protected resources, like Javamelody plugin and would need to check current identified user ACL? This would be impossible with this approach.\n\n//CC Dave and Luca. Personally, I don\u0027t see any reason not to change the semantic of AllRequestsFilter, and synchronize request behavior for both kind of requests: UI \u0026 REST API and allow to access identified user in both kinds of requests.",
      "parentUuid": "d465ff2c_45d7d3f4",
      "range": {
        "startLine": 11,
        "startChar": 25,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "a72281d2f964f588f9502cddd5580860a4afabad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be23fe9c_2aab525a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1056821
      },
      "writtenOn": "2018-03-20T11:40:07Z",
      "side": 1,
      "message": "For the current purpose (authenticated rate limiting) and apparently for other purposes (Javamelody), changing the semantic of AllRequestFilter is perfectly fine.\n\nStill, would like to remind that the original Sean\u0027s idea was \"to glue in very early in the serving pipeline\" and \"before any user authentication can happen\". From a conceptual point of view, such an extension point is important in my opinion. I would rather add a comment somewhere in the AllRequestFilter that it should NOT be used to get the user authentication. (In fact, factoring the user session provisioning out of RequestContextFilter could be considered.)\n\nAn understanding question: why after modules.add(sysInjector.getInstance(GitOverHttpModule.class)) and not after modules.add(sysInjector.getInstance(GetUserFilter.Module.class)), which if enabled sets the request\u0027s \"User\" attribute needed for logging as far as I see? That\u0027s just to make sure the original cautiousness not to put the extension point before something important were baseless.",
      "parentUuid": "5cb68ae5_735e31c5",
      "range": {
        "startLine": 11,
        "startChar": 25,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "a72281d2f964f588f9502cddd5580860a4afabad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab617514_2332b1a9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1056821
      },
      "writtenOn": "2018-03-20T13:26:57Z",
      "side": 1,
      "message": "Shawn (not Sean)",
      "parentUuid": "be23fe9c_2aab525a",
      "range": {
        "startLine": 11,
        "startChar": 25,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "a72281d2f964f588f9502cddd5580860a4afabad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}