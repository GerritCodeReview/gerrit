{
  "comments": [
    {
      "key": {
        "uuid": "813188d3_c788be06",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/common/EditPreferencesInfo.java",
        "patchSetId": 14
      },
      "lineNbr": 18,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-01-02T00:31:57Z",
      "side": 1,
      "message": "We should try very hard to avoid data migrations for things stored in Git.",
      "range": {
        "startLine": 17,
        "startChar": 44,
        "endLine": 18,
        "endChar": 42
      },
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "813188d3_878ec610",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/common/EditPreferencesInfo.java",
        "patchSetId": 14
      },
      "lineNbr": 22,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-01-02T00:31:57Z",
      "side": 1,
      "message": "We don\u0027t support lineWrapping in diff. Why should we support it in edit?",
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61781470_f6bae060",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/common/EditPreferencesInfo.java",
        "patchSetId": 14
      },
      "lineNbr": 22,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-01-05T22:39:43Z",
      "side": 1,
      "message": "I uploaded the change that does this: [1]. But we can add it later here, when this change is merged.\n\n [1] https://gerrit-review.googlesource.com/61605",
      "parentUuid": "813188d3_878ec610",
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c169c0a3_99bf1b34",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/common/EditPreferencesInfo.java",
        "patchSetId": 14
      },
      "lineNbr": 24,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-01-02T00:31:57Z",
      "side": 1,
      "message": "We call this showWhitespaceErrors in diff.",
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "813188d3_67c1d22b",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/common/EditPreferencesInfo.java",
        "patchSetId": 14
      },
      "lineNbr": 26,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-01-02T00:31:57Z",
      "side": 1,
      "message": "inverse this as hideLineNumbers to match diff.\n\nI know this was a point of debate earlier on this change, however diff has already set a precedent in the API as this being hideLineNumbers.\n\nI think it is more important for us to be consistent in the APIs than to have this particular field\u0027s default be any specific thing.",
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c169c0a3_7926c721",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/common/EditPreferencesInfo.java",
        "patchSetId": 14
      },
      "lineNbr": 30,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-01-02T00:31:57Z",
      "side": 1,
      "message": "Default diff tabSize is 8",
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "813188d3_a793ca3b",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/common/EditPreferencesInfo.java",
        "patchSetId": 14
      },
      "lineNbr": 36,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-01-02T00:31:57Z",
      "side": 1,
      "message": "Theme.DEFAULT by default",
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "813188d3_27a0ba75",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/ConfigUtil.java",
        "patchSetId": 14
      },
      "lineNbr": 274,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-01-02T00:31:57Z",
      "side": 1,
      "message": "One problem with this method is we usually unset a variable if it is being set to default value set by the server. This keeps the config files shorter to read.\n\nFor something like hideLineNumbers the server default is false. So we should unset the field rather than store \"hideLineNumbers \u003d false\".\n\nThis also applies for enums like theme. We should unset the field if theme is DEFAULT.\n\nYou may need to pass in two objects to bring in the defaults and the user values:\n\n  public \u003cT\u003e static void storeSection(Config cfg, String section, String sub,\n    T s, T defaults)",
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61781470_d6b5e473",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/ConfigUtil.java",
        "patchSetId": 14
      },
      "lineNbr": 274,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-01-05T22:39:43Z",
      "side": 1,
      "message": "| One problem with this method is we usually unset a variable if it is being set to default value set by the server. This keeps the config files shorter to read.\n\nMy intention was to reduce the code needed to add new config option. Persistence, GWT, JSON container, default values, it was very verbose in the past to add new config option. To achieve this goal i sought it would be OK to sacrifice that all the data is transferred over the wire (it is not that often that preferences are changed in the end) and that the whole data is saved in GIT config file. Thus the values are ints and booleans and not the wrapper classes. So that the normal ctor represents the default value. Here is how it looks like to add new config option with this approach: [1].\n\nHaving said that, i can see, that others may prefer to transfer less bits over the wire and save less data in the GIT config file, no matter how obfuscated the code is to achieve this. I will rework the code to optimize it the other way around.\n\n [1] https://gerrit-review.googlesource.com/61605",
      "parentUuid": "813188d3_27a0ba75",
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad677130_15b374ff",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/ConfigUtil.java",
        "patchSetId": 14
      },
      "lineNbr": 274,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-05-12T22:01:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "813188d3_27a0ba75",
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c169c0a3_b9c4dfd2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/ConfigUtil.java",
        "patchSetId": 14
      },
      "lineNbr": 334,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-01-02T00:31:57Z",
      "side": 1,
      "message": "This code is duplicated with the setter path. We could probably break these down into helper methods to check the type.\n\nFor primitives like int/long/boolean you can\u0027t subclass them. So \u003d\u003d is probably more appropriate to compare the types over isAssignableFrom. Its hard to make sense of why you would check for isAssignableFrom against types you can\u0027t subclass.",
      "range": {
        "startLine": 333,
        "startChar": 19,
        "endLine": 334,
        "endChar": 44
      },
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d662d35_f484f810",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/ConfigUtil.java",
        "patchSetId": 14
      },
      "lineNbr": 334,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-05-12T22:01:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c169c0a3_b9c4dfd2",
      "range": {
        "startLine": 333,
        "startChar": 19,
        "endLine": 334,
        "endChar": 44
      },
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "813188d3_e78dc213",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/ConfigUtil.java",
        "patchSetId": 14
      },
      "lineNbr": 343,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-01-02T00:31:57Z",
      "side": 1,
      "message": "This is going to go badly if defaultVal is null. I think we should check for that and fail quickly if we need to with a more verbose explanation than an obtuse NPE down inside getEnum().",
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d662d35_54968c49",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/ConfigUtil.java",
        "patchSetId": 14
      },
      "lineNbr": 343,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-05-12T22:01:47Z",
      "side": 1,
      "message": "Yes. Added the check above.",
      "parentUuid": "813188d3_e78dc213",
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "813188d3_07a3b684",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/ConfigUtil.java",
        "patchSetId": 14
      },
      "lineNbr": 345,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-01-02T00:31:57Z",
      "side": 1,
      "message": "ConfigInvalidException instead?",
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d662d35_b48a801a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/ConfigUtil.java",
        "patchSetId": 14
      },
      "lineNbr": 345,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-05-12T22:01:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "813188d3_07a3b684",
      "revId": "a77875c05cd40820b97895f03ed4d20402a3042b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}