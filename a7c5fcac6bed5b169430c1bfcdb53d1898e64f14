{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "26996896_3770b71e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-05-12T07:28:50Z",
      "side": 1,
      "message": "This looks suspicious for me. Do you know where this class loader come from?\n(to clarify: the fix looks good to me, but if you have more info I would be glad to get it)",
      "range": {
        "startLine": 22,
        "startChar": 12,
        "endLine": 22,
        "endChar": 34
      },
      "revId": "a7c5fcac6bed5b169430c1bfcdb53d1898e64f14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84ff0631_58ade7a7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-05-12T09:14:40Z",
      "side": 1,
      "message": "I tried to explain better in the commit message the reason of this.\n\nIt boils down to the way the resources were attempted to be loaded using the class path of the current thread [1].\n\nHope it makes sense.\n\n[1]https://github.com/google/guava/blob/v30.1/guava/src/com/google/common/io/Resources.java#L192",
      "parentUuid": "26996896_3770b71e",
      "range": {
        "startLine": 22,
        "startChar": 12,
        "endLine": 22,
        "endChar": 34
      },
      "revId": "a7c5fcac6bed5b169430c1bfcdb53d1898e64f14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07819208_84734a6c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-05-12T09:49:18Z",
      "side": 1,
      "message": "Thanks for the explanation.\n\nLooks like different threads return different class loader - and this is what I don\u0027t understand and seems suspicious for me. I expected that all threads in gerrit should share the same contextClassLoader.\n\nI see that there are several calls to setContextClassLoader in Gerrit. Can it be that the setContextClassLoader isn\u0027t called/called with incorrect arguments for some threads?",
      "parentUuid": "84ff0631_58ade7a7",
      "range": {
        "startLine": 22,
        "startChar": 12,
        "endLine": 22,
        "endChar": 34
      },
      "revId": "a7c5fcac6bed5b169430c1bfcdb53d1898e64f14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c9d3c79_d9790922",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-05-12T07:41:51Z",
      "side": 1,
      "message": "Would it worth to clarify, that this problem only affects gerrit sites, that do not provide their own soy template:\n\n  // Load as a file in the mail templates directory if present.\n  Path tmpl \u003d site.mail_dir.resolve(name);\n  if (Files.isRegularFile(tmpl)) {\n  [...]\n  \nIn this case, the classloader based resource loading code path isn\u0027t even reached.\n\nFor most sites I am aware of, the \u003cgerrit_site\u003e/etc/mail contains customized *.soy files (e.g. renamed from Abandoned.soy.example to Abandoned.soy).",
      "revId": "a7c5fcac6bed5b169430c1bfcdb53d1898e64f14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7550a436_5d4ac933",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-05-12T09:14:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c9d3c79_d9790922",
      "revId": "a7c5fcac6bed5b169430c1bfcdb53d1898e64f14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f655bc8_c34fb2e7",
        "filename": "java/com/google/gerrit/server/mail/send/MailSoySauceLoader.java",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-05-12T07:28:50Z",
      "side": 1,
      "message": "Is it possible to user this.getClass().getClassLoader() here and do not pass classLoader from the MailSoySauceModule?",
      "range": {
        "startLine": 140,
        "startChar": 16,
        "endLine": 140,
        "endChar": 52
      },
      "revId": "a7c5fcac6bed5b169430c1bfcdb53d1898e64f14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f3db9ec_2ca5c7eb",
        "filename": "java/com/google/gerrit/server/mail/send/MailSoySauceLoader.java",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-05-12T07:36:46Z",
      "side": 1,
      "message": "Good point. The base version that uses Resources.getResource(logicalPath) using this code:\n\n  ClassLoader loader \u003d\n        MoreObjects.firstNonNull(\n            Thread.currentThread().getContextClassLoader(), \n  Resources.class.getClassLoader());\n\nAnd in async code path, during refresh it\u0027s problematic.\nHow and why it works at Google@HEAD? Is cache refreshing happens synchronously?",
      "parentUuid": "5f655bc8_c34fb2e7",
      "range": {
        "startLine": 140,
        "startChar": 16,
        "endLine": 140,
        "endChar": 52
      },
      "revId": "a7c5fcac6bed5b169430c1bfcdb53d1898e64f14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77f20178_d827d05f",
        "filename": "java/com/google/gerrit/server/mail/send/MailSoySauceLoader.java",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-05-12T09:14:40Z",
      "side": 1,
      "message": "Very good point @dmitrii,\nUsing the class loader of the class rather than the one from the thread fixes the issue without having to pass the classpath all the way through.\n\nDo you know why you were not seeing this at google? might be to do with the fact that you use customized templates?",
      "parentUuid": "9f3db9ec_2ca5c7eb",
      "range": {
        "startLine": 140,
        "startChar": 16,
        "endLine": 140,
        "endChar": 52
      },
      "revId": "a7c5fcac6bed5b169430c1bfcdb53d1898e64f14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97e7cda8_287bb96b",
        "filename": "java/com/google/gerrit/server/mail/send/MailSoySauceLoader.java",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-05-12T10:04:57Z",
      "side": 1,
      "message": "\u003e Do you know why you were not seeing this at google? \nI can only speculate here, because I don\u0027t understand the root cause of the issue (as I wrote here https://gerrit-review.git.corp.google.com/c/gerrit/+/336998/comments/26996896_3770b71e I expect that all threads shares the same contextClassLoader in gerrit).\nPossible explanation why it works in google:\n- I see that Gerrit calls setContextClassLoader in several classes; and exactly these classes are not used internally in google\n- In google there is a build step to merge some of required jars into a single jar. As a result, class loaders are the same (i.e. points to the same jar).",
      "parentUuid": "77f20178_d827d05f",
      "range": {
        "startLine": 140,
        "startChar": 16,
        "endLine": 140,
        "endChar": 52
      },
      "revId": "a7c5fcac6bed5b169430c1bfcdb53d1898e64f14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb1a2175_2fc5738a",
        "filename": "java/com/google/gerrit/server/mail/send/MailSoySauceModule.java",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-05-12T07:36:46Z",
      "side": 1,
      "message": "Unrelated to this change, but are 5 seconds for refreshAfterWrite and 1 minute for expireAfterWrite are sane defaults? I know, previously it was reloading on each and every access, but I guess it would be sufficient to have x10 default values, say 1 minute for refreshAfterWrite and 10 minutes for expireAfterWrite?",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 53,
        "endChar": 48
      },
      "revId": "a7c5fcac6bed5b169430c1bfcdb53d1898e64f14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c35f27e2_6747ac13",
        "filename": "java/com/google/gerrit/server/mail/send/MailSoySauceModule.java",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-05-12T10:04:57Z",
      "side": 1,
      "message": "There is no strong explanation behind these numbers, this is more my expectations.\nI tried to set values big enough to avoid too many reloads in tests, but at the same time keep almost immediately reload in production.\n10 minutes for refreshAfterWrite means that (in rare cases) old templates can be used up to 10 minutes after they were changed. Seems too much for me.",
      "parentUuid": "fb1a2175_2fc5738a",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 53,
        "endChar": 48
      },
      "revId": "a7c5fcac6bed5b169430c1bfcdb53d1898e64f14",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}