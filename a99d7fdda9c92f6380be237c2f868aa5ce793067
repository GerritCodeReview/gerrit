{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ebae2649_0dba856a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-17T09:45:50Z",
      "side": 1,
      "message": "The name doesn\u0027t really tell the whole story: duplicate accounts are always forbidden in Gerrit.\n\nThe point here is if we perform a case-sensitive or case-insensitive match of the account username.",
      "range": {
        "startLine": 15,
        "startChar": 2,
        "endLine": 15,
        "endChar": 27
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bf19e9b_f6f96b57",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2021-03-17T12:39:02Z",
      "side": 1,
      "message": "How about `auth.caseInsensitiveAccountCreation`?",
      "parentUuid": "ebae2649_0dba856a",
      "range": {
        "startLine": 15,
        "startChar": 2,
        "endLine": 15,
        "endChar": 27
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3b2d90f_907ca677",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-17T09:45:50Z",
      "side": 1,
      "message": "I believe this is creating more trouble rather than cleaning up the \"messy situation\" we have with lowercase vs. mixed-case accounts.\n\nI am in favour of resolving the mess and introduce a case-insensitive authentication for accounts, how can we make this less problematic? Why not simply changing the matching logic when resolving the external-id for the \u0027username:\u0027 scheme?",
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f98271f5_15f80605",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2021-03-17T12:39:02Z",
      "side": 1,
      "message": "Our aim with this change was to make sure that no more duplicates will be created, until a solution exists to have case insensitive authentication and a clean and consistent representation of the username / external ID.\nOur idea was (and we will hopefully soon have the promised design doc) that as a first step, we could make authentication case-agnostic, i.e. the user can use any capitalization of the user he/she wants and it will be matched. However, to achieve this, it has to be impossible to create such \"duplicate\" accounts. This would solve the issue without having to change existing data besides of removal of \"duplicate\" accounts. In a next step the repair of the existing accounts can be tackled, i.e. converting all usernames to lowercase and dealing with the user branches.",
      "parentUuid": "d3b2d90f_907ca677",
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "209a46d3_591a7770",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-18T00:01:02Z",
      "side": 1,
      "message": "Does it make sense to start a brand-new approach?",
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf03b6a5_74168cf9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-18T01:21:21Z",
      "side": 1,
      "message": "Thanks Thomas for this change and Matthias and Edwin for the fruitful discussion.\nI do believe that we should then use this \u0027case-insensitive\u0027 matching set to true by default in Gerrit v3.4, so that the cleanup process can happen at migration time.\n\nHaving all those duplicates has created so many side effects in the past :-(",
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36ad96f9_d7c0000a",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 2
      },
      "lineNbr": 151,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-17T09:45:50Z",
      "side": 1,
      "message": "This is the key part: *IF* we perform a case insensitive check then we would need to just look if it exists with any capitalisation.\n\nP.S. I do see an issue here: the account resolver is based on indexes which may or may not be always up to date. Indexes should be used for searching quickly but never used during the authentication process.",
      "range": {
        "startLine": 151,
        "startChar": 16,
        "endLine": 151,
        "endChar": 84
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97b7516d_89ad2523",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-03-17T09:46:13Z",
      "side": 1,
      "message": "Using accountResolver is maybe not a good idea:\n- it is searching over a number of account fields, e.g. it would also find accounts that contain username as part of their fullname\n- it filters out inactive and non-visible accounts\n- it may use the account index,that may contain stale entries\n\nAlso with doing the check here it\u0027s possible that there is a race between requests that create the usernames with different capitalisation and so that both succeed (maybe unlikely to happen but possible).",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad092dd1_5ace3bb3",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-17T09:56:00Z",
      "side": 1,
      "message": "My comment was somehow related to yours: using the index is a bad idea.\n\nI believe that we need a bit of thinking on how to make a case-insensitive external-id resolution, *without* making use of indexes.",
      "parentUuid": "97b7516d_89ad2523",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55cff7d5_ecf8400b",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-03-17T10:14:42Z",
      "side": 1,
      "message": "Yeah, I saw your comment only afterwards ðŸ˜Š\n\nI somehow like storing all usernames as lowercase only more, as then the storage layer prevents duplicates and races automatically.",
      "parentUuid": "ad092dd1_5ace3bb3",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8907c53_604b1f52",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-03-17T10:17:34Z",
      "side": 1,
      "message": "One wild idea: the storage layer stores external IDs by their SHA1, this means external IDs that have the same SHA1 are duplicates, if usernames that only differ by case would have the same SHA1 they would be detected as duplicates too",
      "parentUuid": "55cff7d5_ecf8400b",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2546c547_4233dc60",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-17T10:29:18Z",
      "side": 1,
      "message": "\u003e One wild idea: the storage layer stores external IDs by their SHA1, this means external IDs that have the same SHA1 are duplicates, if usernames that only differ by case would have the same SHA1 they would be detected as duplicates too\n\nThat\u0027s a great idea: we just need to amend the way we calculate the SHA1 for it (lowercase first and then SHA1 on it)",
      "parentUuid": "a8907c53_604b1f52",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38466d17_00a8de1f",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-03-17T10:34:34Z",
      "side": 1,
      "message": "Yeah, I think that would be in ExternalId.Key#sha1()",
      "parentUuid": "2546c547_4233dc60",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c7521e1_c07e48e5",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2021-03-17T12:39:02Z",
      "side": 1,
      "message": "But this would not work for already existing accounts, would it? Or can they be migrated?\nI agree that the accountResolver is not a good fit. Thanks for explaining the side effects.",
      "parentUuid": "38466d17_00a8de1f",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cce2801b_c172eaa1",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-03-17T13:08:43Z",
      "side": 1,
      "message": "Yes, this would require migrating existing external IDs. Doing so is possible, but it definitely would produce churn for all Gerrit admins. This migration is definitely the biggest concern (and why I called it a \"wild idea\").",
      "parentUuid": "4c7521e1_c07e48e5",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abf8da1f_204c5ed7",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-03-17T13:10:20Z",
      "side": 1,
      "message": "Especially the biggest challenge for the migration would be to handle external IDs that will be conflicting now.",
      "parentUuid": "cce2801b_c172eaa1",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2526d45a_87796180",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2021-03-17T13:10:57Z",
      "side": 1,
      "message": "This sounds like a nice way to implement this constraint.\n\nLooks like this way we could implement case-insensitive but case-preserving behaviour of user names. So a user name could be stored as \"JohnDoe\" but resolve to the same account if written in different case e.g. \"johndoe\". This is similar to how the serviceuser plugin handles user names for the additional metadata it stores in a git config file. The user name is stored as a sub-section name. Git config handles section and key names case-insensitive but case-preserving.\n\nThis approach would require to rewrite all existing keys which were created from user names which aren\u0027t all lower case. It seems ExternalIdNotes.replace() already provides a method which could be used to implement such migration.\n\nIs the key\u0027s sha1 also stored in other places which would need to be migrated as well ?",
      "parentUuid": "4c7521e1_c07e48e5",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "909a85fc_70d97c7d",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2021-03-17T13:29:31Z",
      "side": 1,
      "message": "I wrote a script [1] which finds the problematic duplicates which need to be cleaned up before we can switch an existing site to case-insensitive user names.\n\nConflicts induced by duplicate user names only differing in case could be cleaned up by\n- deleting all but one of the conflicting accounts\n- renaming user name(s) of the conflicting accounts\n\nOn one of our servers we have no duplicates for the gerrit scheme and a few dozens of duplicates in the username scheme. Most of the duplicates are technical user accounts conflicting with another technical account. A few are conflicts between an account of a human user and a technical user.\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/300308",
      "parentUuid": "2526d45a_87796180",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e530d5b9_0494a85d",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-03-17T13:57:16Z",
      "side": 1,
      "message": "\u003e Is the key\u0027s sha1 also stored in other places which would need to be migrated as well ?\n\nNot as far as I remember.\n\n\u003e deleting all but one of the conflicting accounts\n\nDeleting accounts may cause trouble, because account IDs are referenced from NoteDb, but just deleting the conflicting external ID from the account should be fine (and maybe marking the account as inactive).\n\n\u003e Looks like this way we could implement case-insensitive but case-preserving \n\u003e behaviour of user names. \n\nI only wonder if case-insensitivity is wanted for all kind of external IDs, e.g. what about mailto external IDs? IIRC emails are case-sensitive [1]. So you may want to be able to allow emails which only differ by capitalisation to be used by different users (but not sure if Gerrit needs to support this).\n\n[1] https://www.computerhope.com/issues/ch001081.htm#:~:text\u003dYes%2C%20according%20to%20RFC%202821,the%20server%2C%20and%20the%20administrator.",
      "parentUuid": "909a85fc_70d97c7d",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8637c55e_fbc56141",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2021-03-17T14:44:02Z",
      "side": 1,
      "message": "ok understood, so we better delete only the username\n\nFound the following external IDs on our servers:\n\n $ git grep externalId refs/meta/external-ids | cut -d\\\" -f2 | cut -d: -f1 | sort | uniq\n\n gerrit   (LDAP, is the javadoc in ExternalId correct ?) \n username (authentication REST and git endpoints)\n external (external authentication e.g. oauth, saml)\n gpgkey   (gpg keys)\n mailto   (email addresses)\n\nIn addition ExternalId defines the scheme uuid, seems we don\u0027t use that.\n\nMaybe we need an option for case-sensitivity per externalId scheme ?\n\n[2] https://www.alphr.com/are-emails-case-sensitive/",
      "parentUuid": "e530d5b9_0494a85d",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d8647ca_957bc7ea",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-18T00:01:02Z",
      "side": 1,
      "message": "\u003e ok understood, so we better delete only the username\n\nNever delete anything, just leave them unused.\nIf they are referenced by an unreachable SHA1, they can\u0027t cause problems.\n\nDo we need therefore a brand-new approach and possibly abandon this change?\nI believe there will be also an offline process for migrating the existing non-lowercase IDs into lowercase IDs.\n\nAs mentioned, the process would have to issue warnings when duplicates are found and therefore won\u0027t be converted, resulting in the associated users not being able to login after the conversion.\n\n\u003e Found the following external IDs on our servers:\n\u003e \n\u003e  $ git grep externalId refs/meta/external-ids | cut -d\\\" -f2 | cut -d: -f1 | sort | uniq\n\u003e \n\u003e  gerrit   (LDAP, is the javadoc in ExternalId correct ?) \n\u003e  username (authentication REST and git endpoints)\n\u003e  external (external authentication e.g. oauth, saml)\n\u003e  gpgkey   (gpg keys)\n\u003e  mailto   (email addresses)\n\u003e \n\u003e In addition ExternalId defines the scheme uuid, seems we don\u0027t use that.\n\u003e \n\u003e Maybe we need an option for case-sensitivity per externalId scheme ?\n\u003e \n\u003e [2] https://www.alphr.com/are-emails-case-sensitive/",
      "parentUuid": "8637c55e_fbc56141",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "085e459e_742be59e",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2021-03-18T01:08:15Z",
      "side": 1,
      "message": "\u003e \u003e ok understood, so we better delete only the username\n\u003e \n\u003e Never delete anything, just leave them unused.\n\u003e If they are referenced by an unreachable SHA1, they can\u0027t cause problems.\n\nI don\u0027t understand this, we can\u0027t delete accounts so how do we make the duplicate username entries unused without deleting them ?\n\n\u003e Do we need therefore a brand-new approach and possibly abandon this change?\n\u003e I believe there will be also an offline process for migrating the existing non-lowercase IDs into lowercase IDs.\n\nif we switch from case-sensitive to case-insensitive but case-preserving usernames\n username:JohnDoe d9611ba9f6c3f5d9f5c688b63edd35d37e2acd04\n\nbecomes\n\n username:JohnDoe dff75e3a490f949fa0bb50de4618d7aba7700b57\n\nwe only recompute the sha1, instead of\n\n sha1(\"username:JohnDoe\")\n\nwe now compute\n\n sha1(\"username:JohnDoe\".toLowerCase())\n\nto implement case-insensitive lookup but we still store the original username (not converted to lower case) to make it case-preserving\n\n\u003e As mentioned, the process would have to issue warnings when duplicates are found and therefore won\u0027t be converted, resulting in the associated users not being able to login after the conversion.\n\nno, we envision the following process to migrate an existing site to case-insensitive behaviour in 3 steps:\n1. prohibit creation of new duplicate externalIds only differing in case\n2. find and cleanup the duplicates in a one-time cleanup by either\ndeleting the duplicate externalIds (then they can\u0027t logon anymore and we would also mark these accounts inactive) or replacing their externalId by a new unique one (replace duplicate username by a new one)\n3. change server configuration to case-insensitive, case-preserving behaviour\n\nlet\u0027s continue this discussion in a design doc",
      "parentUuid": "0d8647ca_957bc7ea",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "669facde_2a230f01",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-18T01:21:21Z",
      "side": 1,
      "message": "\u003e \u003e \u003e ok understood, so we better delete only the username\n\u003e \u003e \n\u003e \u003e Never delete anything, just leave them unused.\n\u003e \u003e If they are referenced by an unreachable SHA1, they can\u0027t cause problems.\n\u003e \n\u003e I don\u0027t understand this, we can\u0027t delete accounts so how do we make the duplicate username entries unused without deleting them ?\n\nSee above: if you change the way you reach them (e.g. calculate the SHA1 based on the lowercase version of them), then the old accounts will not be reachable anymore, so the do not exist for Gerrit.\n\n\u003e \n\u003e \u003e Do we need therefore a brand-new approach and possibly abandon this change?\n\u003e \u003e I believe there will be also an offline process for migrating the existing non-lowercase IDs into lowercase IDs.\n\u003e \n\u003e if we switch from case-sensitive to case-insensitive but case-preserving usernames\n\u003e  username:JohnDoe d9611ba9f6c3f5d9f5c688b63edd35d37e2acd04\n\u003e \n\u003e becomes\n\u003e \n\u003e  username:JohnDoe dff75e3a490f949fa0bb50de4618d7aba7700b57\n\u003e \n\u003e we only recompute the sha1, instead of\n\u003e \n\u003e  sha1(\"username:JohnDoe\")\n\u003e \n\u003e we now compute\n\u003e \n\u003e  sha1(\"username:JohnDoe\".toLowerCase())\n\u003e \n\u003e to implement case-insensitive lookup but we still store the original username (not converted to lower case) to make it case-preserving\n\nYep, that\u0027s the new approach.\nWe would also need a conversion tool for that.\n\n\u003e \u003e As mentioned, the process would have to issue warnings when duplicates are found and therefore won\u0027t be converted, resulting in the associated users not being able to login after the conversion.\n\u003e \n\u003e no, we envision the following process to migrate an existing site to case-insensitive behaviour in 3 steps:\n\u003e 1. prohibit creation of new duplicate externalIds only differing in case\n\n+1\n\n\u003e 2. find and cleanup the duplicates in a one-time cleanup by either\n\u003e deleting the duplicate externalIds (then they can\u0027t logon anymore and we would also mark these accounts inactive) or replacing their externalId by a new unique one (replace duplicate username by a new one)\n\nSee my comment above: if they aren\u0027t reachable anymore, they would be like they are deleted anyway.\n\n\u003e 3. change server configuration to case-insensitive, case-preserving behaviour\n\u003e \n\u003e let\u0027s continue this discussion in a design doc\n\n+1",
      "parentUuid": "085e459e_742be59e",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca220b67_ff0b14cd",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2021-03-31T12:43:26Z",
      "side": 1,
      "message": "I implemented the first steps of Edwins suggestion here: https://gerrit-review.googlesource.com/c/gerrit/+/301324\n\nWhat is missing are the `external:` external IDs, since those are harder to handle. Please have a look, whether my implementation is ok. It required quite a lot of changed lines.",
      "parentUuid": "669facde_2a230f01",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24a7c391_3b458251",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-04-24T01:52:33Z",
      "side": 1,
      "message": "I do not believe there is any username in the external ids.",
      "parentUuid": "ca220b67_ff0b14cd",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}