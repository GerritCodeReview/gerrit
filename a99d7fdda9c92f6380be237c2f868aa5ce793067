{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ebae2649_0dba856a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-17T09:45:50Z",
      "side": 1,
      "message": "The name doesn\u0027t really tell the whole story: duplicate accounts are always forbidden in Gerrit.\n\nThe point here is if we perform a case-sensitive or case-insensitive match of the account username.",
      "range": {
        "startLine": 15,
        "startChar": 2,
        "endLine": 15,
        "endChar": 27
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3b2d90f_907ca677",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-17T09:45:50Z",
      "side": 1,
      "message": "I believe this is creating more trouble rather than cleaning up the \"messy situation\" we have with lowercase vs. mixed-case accounts.\n\nI am in favour of resolving the mess and introduce a case-insensitive authentication for accounts, how can we make this less problematic? Why not simply changing the matching logic when resolving the external-id for the \u0027username:\u0027 scheme?",
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36ad96f9_d7c0000a",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 2
      },
      "lineNbr": 151,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-17T09:45:50Z",
      "side": 1,
      "message": "This is the key part: *IF* we perform a case insensitive check then we would need to just look if it exists with any capitalisation.\n\nP.S. I do see an issue here: the account resolver is based on indexes which may or may not be always up to date. Indexes should be used for searching quickly but never used during the authentication process.",
      "range": {
        "startLine": 151,
        "startChar": 16,
        "endLine": 151,
        "endChar": 84
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97b7516d_89ad2523",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-03-17T09:46:13Z",
      "side": 1,
      "message": "Using accountResolver is maybe not a good idea:\n- it is searching over a number of account fields, e.g. it would also find accounts that contain username as part of their fullname\n- it filters out inactive and non-visible accounts\n- it may use the account index,that may contain stale entries\n\nAlso with doing the check here it\u0027s possible that there is a race between requests that create the usernames with different capitalisation and so that both succeed (maybe unlikely to happen but possible).",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad092dd1_5ace3bb3",
        "filename": "java/com/google/gerrit/server/restapi/account/CreateAccount.java",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-03-17T09:56:00Z",
      "side": 1,
      "message": "My comment was somehow related to yours: using the index is a bad idea.\n\nI believe that we need a bit of thinking on how to make a case-insensitive external-id resolution, *without* making use of indexes.",
      "parentUuid": "97b7516d_89ad2523",
      "range": {
        "startLine": 134,
        "startChar": 36,
        "endLine": 134,
        "endChar": 69
      },
      "revId": "a99d7fdda9c92f6380be237c2f868aa5ce793067",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}