{
  "comments": [
    {
      "key": {
        "uuid": "d1a653ff_6a8750f2",
        "filename": "java/com/google/gerrit/server/permissions/DefaultRefFilter.java",
        "patchSetId": 6
      },
      "lineNbr": 283,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-01-23T10:37:27Z",
      "side": 1,
      "message": "Do we need this exclusion?",
      "range": {
        "startLine": 283,
        "startChar": 56,
        "endLine": 283,
        "endChar": 100
      },
      "revId": "a9c11a72bec08b3eee3699215357eec45bd52dc9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd30b473_ec6f336b",
        "filename": "java/com/google/gerrit/server/permissions/DefaultRefFilter.java",
        "patchSetId": 6
      },
      "lineNbr": 283,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-01-23T10:39:12Z",
      "side": 1,
      "message": "Yes, because a tag is not a taggable ref.\n\nA future commit in the series adds a checkArgument in the caller to assert that on the second pass (when filtering tags) we don\u0027t encounter any more tags that we deferred visibility checks on.",
      "parentUuid": "d1a653ff_6a8750f2",
      "range": {
        "startLine": 283,
        "startChar": 56,
        "endLine": 283,
        "endChar": 100
      },
      "revId": "a9c11a72bec08b3eee3699215357eec45bd52dc9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b25fdbf6_960a90cc",
        "filename": "java/com/google/gerrit/server/permissions/DefaultRefFilter.java",
        "patchSetId": 6
      },
      "lineNbr": 283,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-01-23T11:23:29Z",
      "side": 1,
      "message": "I\u0027m just wondering what happens if someone creates a tag locally, off another tag object, and pushes it.  I haven\u0027t tried it, but I would think it\u0027s a valid git operation to do that.  How will Gerrit then react?\n\nI remember we\u0027ve had some issues with Gerrit not handling tags in some cases before.  IIRC there were some on the linux kernel project that could never be fetched.",
      "parentUuid": "fd30b473_ec6f336b",
      "range": {
        "startLine": 283,
        "startChar": 56,
        "endLine": 283,
        "endChar": 100
      },
      "revId": "a9c11a72bec08b3eee3699215357eec45bd52dc9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cf97b1b_81646cf2",
        "filename": "java/com/google/gerrit/server/permissions/DefaultRefFilter.java",
        "patchSetId": 6
      },
      "lineNbr": 283,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-01-23T12:13:17Z",
      "side": 1,
      "message": "I think if this works or doesn\u0027t work isn\u0027t determined by this code, but rather by TagMatcher and how it implements reachability it should peel all objects so if you have a tag pointing to another tag pointing to a ref it should be able to handle that. For this caller here it should be sufficient to provide just the ref for a reachability check.",
      "parentUuid": "b25fdbf6_960a90cc",
      "range": {
        "startLine": 283,
        "startChar": 56,
        "endLine": 283,
        "endChar": 100
      },
      "revId": "a9c11a72bec08b3eee3699215357eec45bd52dc9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}