{
  "comments": [
    {
      "key": {
        "uuid": "6d0019f0_1b7cfb69",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-05-08T04:25:01Z",
      "side": 1,
      "message": "We should find a way to unit test this, to prevent future regressions. One idea is to mark the database as not available and execute \"status:open OR status:merged\" query and it should still work.",
      "range": {
        "startLine": 11,
        "startChar": 52,
        "endLine": 12,
        "endChar": 60
      },
      "revId": "a9da5a40a4d000968b904fb1536d3023d9cbbe83",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d119541_7a6659db",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2015-05-08T08:30:08Z",
      "side": 1,
      "message": "In theory the standard solution would involve Mocks with Spies :-)\nYou Mock the DB access introducing a Spy and assert that you should never go there.",
      "parentUuid": "6d0019f0_1b7cfb69",
      "range": {
        "startLine": 11,
        "startChar": 52,
        "endLine": 12,
        "endChar": 60
      },
      "revId": "a9da5a40a4d000968b904fb1536d3023d9cbbe83",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}