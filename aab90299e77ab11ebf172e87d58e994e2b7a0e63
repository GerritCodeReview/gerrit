{
  "comments": [
    {
      "key": {
        "uuid": "2f26f59c_66db8e3e",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 1
      },
      "lineNbr": 1700,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-02-26T11:28:39Z",
      "side": 1,
      "message": "[optional] Should we add some more details about where these links will be displayed in the Gerrit WebUI?",
      "range": {
        "startLine": 1698,
        "startChar": 0,
        "endLine": 1700,
        "endChar": 54
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_876c068f",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 1
      },
      "lineNbr": 1700,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-26T16:11:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f26f59c_66db8e3e",
      "range": {
        "startLine": 1698,
        "startChar": 0,
        "endLine": 1700,
        "endChar": 54
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_07fd7687",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 1
      },
      "lineNbr": 1709,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-02-26T11:28:39Z",
      "side": 1,
      "message": "nit: missing space before \u0027{\u0027",
      "range": {
        "startLine": 1709,
        "startChar": 55,
        "endLine": 1709,
        "endChar": 56
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_e79dc255",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 1
      },
      "lineNbr": 1709,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-26T11:33:25Z",
      "side": 1,
      "message": "Nit: blank is missing here.",
      "range": {
        "startLine": 1709,
        "startChar": 55,
        "endLine": 1709,
        "endChar": 56
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_667f0e36",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 1
      },
      "lineNbr": 1709,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-26T16:11:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f3169d0_07fd7687",
      "range": {
        "startLine": 1709,
        "startChar": 55,
        "endLine": 1709,
        "endChar": 56
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_e69dbe55",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 1
      },
      "lineNbr": 1712,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-26T11:33:25Z",
      "side": 1,
      "message": "We are using camel case naming convention in sever code.",
      "range": {
        "startLine": 1712,
        "startChar": 17,
        "endLine": 1712,
        "endChar": 35
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_866c0a8f",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 1
      },
      "lineNbr": 1712,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-26T16:11:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f26f59c_e69dbe55",
      "range": {
        "startLine": 1712,
        "startChar": 17,
        "endLine": 1712,
        "endChar": 35
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_06b3bae6",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/common/RevisionInfo.java",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-26T11:33:25Z",
      "side": 1,
      "message": "ChangeWebLinks would go into ChangeInfo.",
      "range": {
        "startLine": 20,
        "startChar": 13,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_c68d221d",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/common/RevisionInfo.java",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-02-26T11:28:39Z",
      "side": 1,
      "message": "Please document this new field in the REST API documentation.",
      "range": {
        "startLine": 29,
        "startChar": 2,
        "endLine": 29,
        "endChar": 36
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_468212eb",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/common/RevisionInfo.java",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-26T16:11:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f26f59c_c68d221d",
      "range": {
        "startLine": 29,
        "startChar": 2,
        "endLine": 29,
        "endChar": 36
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_27b0bad7",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/webui/PatchSetWebLink.java",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-26T11:33:25Z",
      "side": 1,
      "message": "May be mention in the commit message, that only revision specific links are supported and not Change specific? We are supporting UiAction for both RevisionResource and ChangeResource, but place them in the same panel.\n\nI can see value for supporting ChangeWebLink as well, by putting change specific links in header panel of change screen (and not in commit box).",
      "range": {
        "startLine": 19,
        "startChar": 17,
        "endLine": 19,
        "endChar": 32
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_0778164f",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/webui/PatchSetWebLink.java",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-26T16:11:52Z",
      "side": 1,
      "message": "It \"should\" be fairly straight forward to add an extensionpoint for ChangeWeblink as well.",
      "parentUuid": "4f3169d0_27b0bad7",
      "range": {
        "startLine": 19,
        "startChar": 17,
        "endLine": 19,
        "endChar": 32
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_a688260e",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/webui/PatchSetWebLink.java",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-02-26T11:28:39Z",
      "side": 1,
      "message": "Is this tied to a patch set, could it (in future) just be a link to any commit (even if there isn\u0027t a patch set for it)?",
      "range": {
        "startLine": 28,
        "startChar": 16,
        "endLine": 28,
        "endChar": 30
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_27751a58",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/webui/PatchSetWebLink.java",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-26T16:11:52Z",
      "side": 1,
      "message": "Hmmm, it is , even in the present, just a link to any commit. It\u0027s just named PatchSetWeblink...\nI believe the method name should be getUrl(...) instead (the name is really a leftover from a defunct idea I had about implementing all weblinks with one single class in the plugin)\nI\u0027m an inheritance-sucker so I\u0027m thinking a deeper structure here with PatchSetWeblink exends CommitWebLink extends WebLink...\nWhen would you link to anything in the UI that is a commit but not a patch set?",
      "parentUuid": "2f26f59c_a688260e",
      "range": {
        "startLine": 28,
        "startChar": 16,
        "endLine": 28,
        "endChar": 30
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_6658eee9",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/webui/PatchSetWebLink.java",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-02-26T20:01:23Z",
      "side": 1,
      "message": "I like the idea of being able to implement all web links in a single class. So I believe it is good to choose method names that they don\u0027t conflict with each other. \n\n \u003e When would you link to anything in the UI that is a commit but not a patch set?\n\nCurrently we are not having this case, But I could imagine that one day we would like to also show commits which were pushed directly into a repository, bypassing code review. For these commits there are no patch sets, but having a link to GitWeb etc. would still make sense. Maybe this is just looking to far ahead. I\u0027m actually pretty fine with calling it PatchSetWebLink and getPatchSetUrl. When reading this method name I was only wondering why the arguments are not project + patch set, but project + commit.",
      "parentUuid": "4f3169d0_27751a58",
      "range": {
        "startLine": 28,
        "startChar": 16,
        "endLine": 28,
        "endChar": 30
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_47adae7a",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/webui/WebLink.java",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-26T11:33:25Z",
      "side": 1,
      "message": "I wouldn\u0027t use public here, as all methods in interfaces are public, but i see we are doing it differently. The JLS is very clear about it [1]:\n\n\"It is permitted, but discouraged as a matter of style, to redundantly specify\nthe public and/or abstract modifier for a method declared in an interface.\"\n\n[1] http://docs.oracle.com/javase/specs/jls/se7/html/jls-9.html#jls-9.4",
      "range": {
        "startLine": 26,
        "startChar": 2,
        "endLine": 26,
        "endChar": 9
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_c766feac",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/webui/WebLink.java",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-26T16:11:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f3169d0_47adae7a",
      "range": {
        "startLine": 26,
        "startChar": 2,
        "endLine": 26,
        "endChar": 9
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_67aab265",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/CommitBox.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-02-26T11:28:39Z",
      "side": 1,
      "message": "Remove this?",
      "range": {
        "startLine": 106,
        "startChar": 4,
        "endLine": 106,
        "endChar": 30
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_e76b0272",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/CommitBox.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-26T16:11:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f3169d0_67aab265",
      "range": {
        "startLine": 106,
        "startChar": 4,
        "endLine": 106,
        "endChar": 30
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_a60d8606",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/CommitBox.ui.xml",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-02-26T11:28:39Z",
      "side": 1,
      "message": "Can you fix the alignment here? All lines except \u0027margin-left:16px;\u0027 should be moved one space to the left.",
      "range": {
        "startLine": 81,
        "startChar": 5,
        "endLine": 85,
        "endChar": 6
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_0761f692",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/change/CommitBox.ui.xml",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-26T16:11:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f26f59c_a60d8606",
      "range": {
        "startLine": 81,
        "startChar": 5,
        "endLine": 85,
        "endChar": 6
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_26b0b6d7",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/ChangeInfo.java",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-26T11:33:25Z",
      "side": 1,
      "message": "Be consequent with yourself concerning naming conventions. You are mixing low case with underscore (line 220) with camel case naming convention in the same source file.",
      "range": {
        "startLine": 301,
        "startChar": 31,
        "endLine": 301,
        "endChar": 39
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_275efad7",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/ChangeInfo.java",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-26T16:11:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f26f59c_26b0b6d7",
      "range": {
        "startLine": 301,
        "startChar": 31,
        "endLine": 301,
        "endChar": 39
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_46adb27a",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/ChangeInfo.java",
        "patchSetId": 1
      },
      "lineNbr": 302,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-26T11:33:25Z",
      "side": 1,
      "message": "Same comment as above.",
      "range": {
        "startLine": 302,
        "startChar": 31,
        "endLine": 302,
        "endChar": 38
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_475beee6",
        "filename": "gerrit-gwtui/src/main/java/com/google/gerrit/client/changes/ChangeInfo.java",
        "patchSetId": 1
      },
      "lineNbr": 302,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-26T16:11:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f26f59c_46adb27a",
      "range": {
        "startLine": 302,
        "startChar": 31,
        "endLine": 302,
        "endChar": 38
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_66aaae65",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-26T11:33:25Z",
      "side": 1,
      "message": "I don\u0027t think you need factory pattern here. Just inject WebLinks directly.",
      "range": {
        "startLine": 23,
        "startChar": 2,
        "endLine": 25,
        "endChar": 3
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_27e43ac1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-27T08:34:39Z",
      "side": 1,
      "message": "Please correct me if I\u0027m wrong. But now when weblinks are optional in the ListChangesOptions, the factory pattern is, accidently, valid. Since WebLinks are only instanciated when needed.\nIf this is the case I believe this is the first instance of coding by accident, that I witnessed, that actually paid off.\nI could argue that I had this in mind all along... I won\u0027t! I will take the shame.",
      "parentUuid": "2f26f59c_66aaae65",
      "range": {
        "startLine": 23,
        "startChar": 2,
        "endLine": 25,
        "endChar": 3
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_67de32f7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-27T09:16:34Z",
      "side": 1,
      "message": "Oh, cute comment: that would be your chance to claim it was all my intention, and you haven\u0027t used it ;-)\n\nBut, even after making WebLinks optional, factory pattern is still wrong here. The appropriate pattern to create the injected bean only when it is really needed is Provider pattern. So you inject\n\n  Provider\u003cWebLinks\u003e webLinksProvider;\n\nand call get() on it only when WebLinks was requested in request:\n\n  if (has(WEB_LINKS)) {\n    webLinksProvider.get().getPatchSetLinks(project, revision);\n  }",
      "parentUuid": "4f3169d0_27e43ac1",
      "range": {
        "startLine": 23,
        "startChar": 2,
        "endLine": 25,
        "endChar": 3
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_07b3b6e6",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-26T11:33:25Z",
      "side": 1,
      "message": "We are on Java 7 now. Either without type or with Guava\u0027s:\n\n  Lists.newArrayListWithExpectedCapacity(patchSetLinks.size());",
      "range": {
        "startLine": 36,
        "startChar": 42,
        "endLine": 36,
        "endChar": 46
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_a671066a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/WebLinks.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-26T16:11:52Z",
      "side": 1,
      "message": "I\u0027ll meet you half way. The call to DynamicSet.size() is quite expensive.",
      "parentUuid": "4f3169d0_07b3b6e6",
      "range": {
        "startLine": 36,
        "startChar": 42,
        "endLine": 36,
        "endChar": 46
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_e792223e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeJson.java",
        "patchSetId": 1
      },
      "lineNbr": 883,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-26T11:33:25Z",
      "side": 1,
      "message": "We are trying to only fetch the data that is really needed on that screen that issues the request. So the screens are passing request options what to fetch, like\n\n  if (has(DRAFT_COMMENTS))\n\non line 869. That because the same REST requests are fired multiple times in different parts of the UI: change screen, PatchSet box, Download box, etc, and only a subset of data must be rendered and retrieved. Consider to introduce new request option:\n\n WEB_LINKS\n\nor some such and pass it from the client only in change screen, and only fetch the data if this option was passed.",
      "range": {
        "startLine": 879,
        "startChar": 4,
        "endLine": 883,
        "endChar": 5
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_86832af3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/GerritGlobalModule.java",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-02-26T11:28:39Z",
      "side": 1,
      "message": "If I understand it correctly the idea is to support also other web links in future (e.g. for branches and projects). Will we have one DynamicSet for each web link kind or could we also have a single DynamicSet of just WebLink?",
      "range": {
        "startLine": 268,
        "startChar": 4,
        "endLine": 268,
        "endChar": 54
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_47820eeb",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/GerritGlobalModule.java",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-26T16:11:52Z",
      "side": 1,
      "message": "I\u0027m thinking one DynamicSet for each weblink-type, since each weblink takes different arguments to produce the url so if we mix them we need to filter them out in the end.",
      "parentUuid": "2f26f59c_86832af3",
      "range": {
        "startLine": 268,
        "startChar": 4,
        "endLine": 268,
        "endChar": 54
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_a7ae6a63",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/GerritGlobalModule.java",
        "patchSetId": 1
      },
      "lineNbr": 268,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-02-26T20:01:23Z",
      "side": 1,
      "message": "Yes, having just one DynamicSet for WebLink makes it a little more difficult to use in Gerrit core since we are normally only needing one kind in a place and then we would need to filter.\n\nOn the other hand as a plugin author I would likely have a single class implementing several WebLink interfaces. Having the DynamicSet for WebLink I would only need to bind my class once in Guice. Having a DynamicSet for each weblink-type means I need to bind my class for each type once.\n\nI\u0027m fine with either way.",
      "parentUuid": "4f3169d0_47820eeb",
      "range": {
        "startLine": 268,
        "startChar": 4,
        "endLine": 268,
        "endChar": 54
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f3169d0_a7882a0e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/GerritGlobalModule.java",
        "patchSetId": 1
      },
      "lineNbr": 276,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-26T11:33:25Z",
      "side": 1,
      "message": "Not needed.",
      "range": {
        "startLine": 276,
        "startChar": 4,
        "endLine": 276,
        "endChar": 36
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f26f59c_c6cc4252",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/GerritGlobalModule.java",
        "patchSetId": 1
      },
      "lineNbr": 276,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2014-02-27T08:34:39Z",
      "side": 1,
      "message": "Or is it? See other comment and please advice!",
      "parentUuid": "4f3169d0_a7882a0e",
      "range": {
        "startLine": 276,
        "startChar": 4,
        "endLine": 276,
        "endChar": 36
      },
      "revId": "aab90299e77ab11ebf172e87d58e994e2b7a0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}