{
  "comments": [
    {
      "key": {
        "uuid": "fc2efe18_db41692e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 14,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-11-11T12:05:04Z",
      "side": 1,
      "message": "I think, I was able to reproduce the old locking issue locally during tests with Bazel:\n\n  $ bazel test javatests/com/google/gerrit/acceptance/api/revision/api_revision\n  [104 / 105] Testing \n  //javatests/com/google/gerrit/acceptance/api/revision:api_revision      TIMEOUT in 915.0s\n\n^^^ And the test is never terminated. The offending thread is:\n\n  \"main\" #1 prio\u003d5 os_prio\u003d0 tid\u003d0x00007f339800e000 nid\u003d0x43d2 runnable \n  [0x00007f339e1ad000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1934)\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:2377)\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:2360)\n\tat com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:108)\n\tat com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:62)\n\tat com.github.benmanes.caffeine.guava.CaffeinatedGuavaCache.get(CaffeinatedGuavaCache.java:67)\n\tat com.google.gerrit.server.patch.PatchListCacheImpl.get(PatchListCacheImpl.java:102)\n\tat com.google.gerrit.server.patch.PatchListLoader.determineEditsDueToRebase(PatchListLoader.java:273)\n\tat com.google.gerrit.server.patch.PatchListLoader.readPatchList(PatchListLoader.java:189)\n\tat com.google.gerrit.server.patch.PatchListLoader.call(PatchListLoader.java:129)\n\tat com.google.gerrit.server.patch.PatchListLoader.call(PatchListLoader.java:79)\n\tat com.github.benmanes.caffeine.guava.CaffeinatedGuavaCache.lambda$get$0(CaffeinatedGuavaCache.java:69)\n\tat com.github.benmanes.caffeine.guava.CaffeinatedGuavaCache$$Lambda$633/471597569.apply(Unknown Source)\n\tat com.github.benmanes.caffeine.cache.LocalCache.lambda$statsAware$0(LocalCache.java:139)\n\tat com.github.benmanes.caffeine.cache.LocalCache$$Lambda$369/1131042367.apply(Unknown Source)\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$14(BoundedLocalCache.java:2379)\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache$$Lambda$370/896508113.apply(Unknown Source)\n\tat java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1853)\n\t- locked \u003c0x00000000fb0670e0\u003e (a java.util.concurrent.ConcurrentHashMap$ReservationNode)\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:2377)\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:2360)\n\tat com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:108)\n\tat com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:62)\n\tat com.github.benmanes.caffeine.guava.CaffeinatedGuavaCache.get(CaffeinatedGuavaCache.java:67)\n\tat com.google.gerrit.server.patch.PatchListCacheImpl.get(PatchListCacheImpl.java:102)\n\tat com.google.gerrit.server.patch.PatchScriptFactory.listFor(PatchScriptFactory.java:254)\n\tat com.google.gerrit.server.patch.PatchScriptFactory.call(PatchScriptFactory.java:222)\n\tat com.google.gerrit.server.restapi.change.GetDiff.apply(GetDiff.java:157)\n\tat com.google.gerrit.server.api.changes.FileApiImpl.get(FileApiImpl.java:130)\n\tat com.google.gerrit.server.api.changes.FileApiImpl.access$000(FileApiImpl.java:31)\n\tat com.google.gerrit.server.api.changes.FileApiImpl$1.get(FileApiImpl.java:97)\n\tat com.google.gerrit.acceptance.api.revision.RevisionDiffIT.rebaseHunksOneLineApartFromRegularHunkAreIdentified(RevisionDiffIT.java:1665)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\n\tat com.google.gerrit.acceptance.AbstractDaemonTest$1$1.evaluate(AbstractDaemonTest.java:216)\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)\n\tat com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:153)\n\tat com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:84)\n\nThe better question is why it is not deterministic behavior? And sometime deadlock is not happening (in fact the CI was green)?",
      "range": {
        "startLine": 13,
        "startChar": 41,
        "endLine": 14,
        "endChar": 24
      },
      "revId": "ac5756895dab7b9e35303d8bfc0228d3481cfba7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3603a6a_0648ee12",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 14,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-11-11T13:07:58Z",
      "side": 1,
      "message": "I can reproduce if I remove lib:caffeine from some places, also with this patch the test is passing again:[1]. This was the change in patch set 18.\n\n* [1] http://paste.openstack.org/show/785940",
      "parentUuid": "fc2efe18_db41692e",
      "range": {
        "startLine": 13,
        "startChar": 41,
        "endLine": 14,
        "endChar": 24
      },
      "revId": "ac5756895dab7b9e35303d8bfc0228d3481cfba7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}