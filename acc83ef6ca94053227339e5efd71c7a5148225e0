{
  "pushCert": "certificate version 0.1\npusher F41A2656 1447721419 -0800\nnonce AFd3BxvrS+A4O7lx784uxRCuQ6okHxQKccWkKjTWKfKKu4g2g489VQnAL2us3w/OV8dauQwsgHMS\n\n0000000000000000000000000000000000000000 acc83ef6ca94053227339e5efd71c7a5148225e0 refs/for/master\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJWSnnLAAoJEHFVO370GiZWU74H/idnrBxdTBxRc5NCOkzSRGf/\nZVt6eqD/CpHoduuh9TueQ4PAF+JHG0Zu481jtAkzShac+W+joSIEh8i4+kxiEv4I\nuNA6BYLqbxQgNP93aq22bTSUKdy2SSZA7CbtEd9E17CJEvi8oQ5VpQTi4DqDiqJe\nL3XWLNr+D6XF1pLqjTaAbOWy5HV4mILmU+V33m0GYT334BnBimml/d8dJ+19V51n\nQcyjb5/QN9/rLDhgy5J9dQ5ODhYTuj3v+Z/DGWbO05ZRjvdLhlN0x6NADdPW0P1T\nQHZIWt1Egn+HlrW6JjQeNok2ybpipz0HagmR+utgjqovyvAyILcS66ysMFOKiJk\u003d\n\u003d75w6\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "fb9cdf2b_3b2237e5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T15:37:58Z",
      "side": 1,
      "message": "The downside of this ref format (which I don\u0027t think we fully bikeshedded when doing refs/draft-comments) is that you can\u0027t do a single ref prefix lookup for \"all starred changes by this user\". You have to scan an entire directory shard.\n\nI think (though I have no numbers to back this up) that the number of starred changes per user is likely to grow higher than the number of outstanding draft comments per user.\n\nObviously this is not hard to change later, as long as we do it before migration.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 33
      },
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b93d719_fddcc734",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-17T16:25:23Z",
      "side": 1,
      "message": "\u003e that you can\u0027t do a single ref prefix lookup for \"all starred changes by this user\"\n\nYou can, at the moment getting all starred changes by user is easy, since we can just fetch all refs starting with refs/starred-changes/YY/XXXX-\nGetting all users that have starred a certain change is the case where it\u0027s required to scan the whole refs/starred-changes/ namespace, this is the case when sending emails or when deleting a draft change :(",
      "parentUuid": "fb9cdf2b_3b2237e5",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 33
      },
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ba29363_3c2231e5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T17:24:56Z",
      "side": 1,
      "message": "Conceptually it is still a prefix scan, but RefDirectory has explicit optimizations for the case when the prefix ends with /, which this does not.",
      "parentUuid": "3b93d719_fddcc734",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 33
      },
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbd2bbe6_b2b8a0e9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-18T00:01:25Z",
      "side": 1,
      "message": "Oh, I didn\u0027t know about this optimisation. Then it should better be refs/starred-changes/YY/XXXX/ZZZZ?\n\nDone",
      "parentUuid": "1ba29363_3c2231e5",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 33
      },
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb9cdf2b_5b2383eb",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 60,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T15:37:58Z",
      "side": 1,
      "message": "This looks like it can just be an assisted factory, there\u0027s no special logic in create()",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbd2bbe6_52c7f46b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 60,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-18T00:01:25Z",
      "side": 1,
      "message": "Not applicable anymore, since I found a solution which doesn\u0027t require a factory.",
      "parentUuid": "fb9cdf2b_5b2383eb",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ba29363_5c3a9d19",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T15:37:58Z",
      "side": 1,
      "message": "I would pass in an actual ReviewDb.\n\nThe alternative is to just not use a factory at all, and depend on the request context to give us the ReviewDb. IIRC this was an issue with ApprovalsUtil for some reason, maybe due to spawning background threads. But I don\u0027t remember.",
      "range": {
        "startLine": 74,
        "startChar": 37,
        "endLine": 74,
        "endChar": 66
      },
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b93d719_9de903d6",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-17T16:25:23Z",
      "side": 1,
      "message": "\u003e I would pass in an actual ReviewDb.\n\nOK.\n\n \u003e The alternative is to just not use a factory at all, and depend on the \n \u003e request context to give us the ReviewDb. IIRC this was an issue with \n \u003e ApprovalsUtil for some reason, maybe due to spawning background \n \u003e threads. But I don\u0027t remember.\n\nI tried this, but then a lot of tests start failing due to injection issues (see comment from davido on patch set 3 [1]). I\u0027m not sure that converting all tests to acceptance tests would be the right thing to do.\n\n[1] https://gerrit-review.googlesource.com/#/c/72417/3/gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java@101",
      "parentUuid": "1ba29363_5c3a9d19",
      "range": {
        "startLine": 74,
        "startChar": 37,
        "endLine": 74,
        "endChar": 66
      },
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb70a7c4_9957db4f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-11-17T16:36:37Z",
      "side": 1,
      "message": "| I\u0027m not sure that converting all tests to acceptance tests would be the right thing to do.\n\nThat would be my suggestion, yes. Convert all them to acceptance tests (in its own change of course) and avoid all this mess. Note, that we made acceptance test faster by reusing running daemon and tweaking Buck test execution. And even when server tests are still faster, we should try to avoid to be nominated for this year obfuscation contest in our production code, to satisfy corner cases for performance optimized unit tests.",
      "parentUuid": "3b93d719_9de903d6",
      "range": {
        "startLine": 74,
        "startChar": 37,
        "endLine": 74,
        "endChar": 66
      },
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ba29363_dc36ad29",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T17:24:56Z",
      "side": 1,
      "message": "\u003e That would be my suggestion, yes. Convert all them to acceptance tests (in its own change of course) and avoid all this mess.\n\nMaybe, but that\u0027s a lot of work and should not block this change.",
      "parentUuid": "bb70a7c4_9957db4f",
      "range": {
        "startLine": 74,
        "startChar": 37,
        "endLine": 74,
        "endChar": 66
      },
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b93d719_9d02634c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-18T00:01:25Z",
      "side": 1,
      "message": "Not applicable anymore, since I found a solution which doesn\u0027t require a factory.",
      "parentUuid": "1ba29363_dc36ad29",
      "range": {
        "startLine": 74,
        "startChar": 37,
        "endLine": 74,
        "endChar": 66
      },
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ba29363_7c3f5908",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T15:37:58Z",
      "side": 1,
      "message": "If you use the factory, don\u0027t use @Inject, make this constructor private.",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbd2bbe6_529e147a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-17T16:25:23Z",
      "side": 1,
      "message": "The factory is used only in a single place (IdentifiedUser.GenericFactory), all other callers get StarredChangesUtil injected directly. In the previous patch set I had two factories for this, one where the caller needs to provide reviewDb to create a StarredChangesUtil, and one that can be used in request scope where reviewDb doesn\u0027t need to be provided by the caller. Would it be cleaner to go back to this pattern?",
      "parentUuid": "1ba29363_7c3f5908",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ba29363_fc336936",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T17:24:56Z",
      "side": 1,
      "message": "I think using a single assisted factory with two methods, create() and create(ReviewDb), is easier for callers to understand.",
      "parentUuid": "dbd2bbe6_529e147a",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b93d719_bdff1f81",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-18T00:01:25Z",
      "side": 1,
      "message": "Not applicable anymore, since I found a solution which doesn\u0027t require a factory.",
      "parentUuid": "1ba29363_fc336936",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb9cdf2b_7b28bfc4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T15:37:58Z",
      "side": 1,
      "message": "Optional nit: the non-brace style is more prevalent:\n\n $ find g* -name \\*.java | xargs pcregrep \u0027(case \\w+|default):\\s*\\{\u0027 | wc -l\n 14\n $ find g* -name \\*.java | xargs pcregrep \u0027(case \\w+|default):\\s*$\u0027 | wc -l\n 693",
      "range": {
        "startLine": 114,
        "startChar": 19,
        "endLine": 114,
        "endChar": 20
      },
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b93d719_5d3a9b19",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-18T00:01:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb9cdf2b_7b28bfc4",
      "range": {
        "startLine": 114,
        "startChar": 19,
        "endLine": 114,
        "endChar": 20
      },
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ba29363_1c44159c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 141,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T15:37:58Z",
      "side": 1,
      "message": "Optional: reduce nesting with an early return:\n\n if (!migration.writeChanges()) {\n   return;\n }",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b93d719_7d3f5708",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 141,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-18T00:01:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ba29363_1c44159c",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ba29363_3c49d1b2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T15:37:58Z",
      "side": 1,
      "message": "Optional: reduce nesting with an early return",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbd2bbe6_72cc788d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-18T00:01:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ba29363_3c49d1b2",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ba29363_9c57c54f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 231,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T15:37:58Z",
      "side": 1,
      "message": "What\u0027s the advantage of doing this over letting the error propagate?",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b93d719_bde63f03",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 231,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-17T16:25:23Z",
      "side": 1,
      "message": "Not sure, this is how it was done in the old code in IdentifiedUser and I didn\u0027t want to change the behaviour. I guessed that we don\u0027t want change queries to fail just because the starred changes cannot be loaded from the database, but this might be a wrong assumption.",
      "parentUuid": "1ba29363_9c57c54f",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ba29363_fc4a89a4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 247,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T15:37:58Z",
      "side": 1,
      "message": "It sounds odd to have a method called list() that doesn\u0027t return a List. Maybe rename this toSet(), or simply get()",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b93d719_1d44139c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 247,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-18T00:01:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ba29363_fc4a89a4",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb9cdf2b_1b1dfba1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 252,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T15:37:58Z",
      "side": 1,
      "message": "What if query() just returned a ResultSet directly? In the notedb case you could just use a ListResultSet.\n\nYou don\u0027t get the free conversion to a Set, but do all the callers really need that? For the ones that do, is it too much to ask them to call ImmutableSet.copyOf(...) on their own?",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbd2bbe6_32ad90ab",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 252,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-17T17:18:11Z",
      "side": 1,
      "message": "\u003e What if query() just returned a ResultSet directly? In the notedb case you   \n \u003e could just use a ListResultSet.\n\nThe ResultSet in the db case contains StarredChange entities, but the callers just need the Change.Id\u0027s. This means in the notedb case we would need to instantiate StarredChange classes in vain, wouldn\u0027t we?",
      "parentUuid": "fb9cdf2b_1b1dfba1",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ba29363_bc2de1d0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 252,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T17:28:37Z",
      "side": 1,
      "message": "I missed that part.\n\nYou could implement your own ResultSet\u003cChange.Id\u003e that wraps the ResultSet\u003cStarredChange\u003e and passes through the close() call. Not sure if that will end up saving code overall. Up to you.",
      "parentUuid": "dbd2bbe6_32ad90ab",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b93d719_3d49cfb2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 252,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-18T00:01:25Z",
      "side": 1,
      "message": "Looks better to me :-)\n\nDone.",
      "parentUuid": "1ba29363_bc2de1d0",
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ba29363_dc4d4dbf",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 287,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-11-17T15:37:58Z",
      "side": 1,
      "message": "Optional: you could just store the FluentIterable and only materialize to a set below.",
      "range": {
        "startLine": 287,
        "startChar": 12,
        "endLine": 287,
        "endChar": 21
      },
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbd2bbe6_12c16c54",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/StarredChangesUtil.java",
        "patchSetId": 4
      },
      "lineNbr": 287,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-11-18T00:01:25Z",
      "side": 1,
      "message": "Not applicable anymore.",
      "parentUuid": "1ba29363_dc4d4dbf",
      "range": {
        "startLine": 287,
        "startChar": 12,
        "endLine": 287,
        "endChar": 21
      },
      "revId": "acc83ef6ca94053227339e5efd71c7a5148225e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}