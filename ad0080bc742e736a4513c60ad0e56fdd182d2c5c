{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "09a4f63a_cfd07f43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-11-10T00:01:01Z",
      "side": 1,
      "message": "@ekempin@google.com are you OK with a LC +1 for including this in Gerrit v3.9.0-rc4?",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1d27ead_55f49800",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-11-10T07:24:07Z",
      "side": 1,
      "message": "Please don\u0027t add me for changes that require LC. If you need the attention of a Googler on such a change, please follow the process that is described in [1]. We have a onduty rotation that should take care of such changes and it\u0027s currently not me. Adding Nitzan who is currently onduty.\n\n[1] https://gerrit-review.googlesource.com/Documentation/dev-processes.html#upgrading-libraries",
      "parentUuid": "09a4f63a_cfd07f43",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1884cc96_355be850",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1146706
      },
      "writtenOn": "2023-11-10T08:38:10Z",
      "side": 1,
      "message": "Sorry for the delayed response, there were a few things I had to handle before this change.\n\nCan you please explain why this is done first in `stable-3.9` and not in `master`?\n\nThanks!",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a92b364b_a24746f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-11-10T08:40:48Z",
      "side": 1,
      "message": "because 3.9 switches the default Java version to 17",
      "parentUuid": "1884cc96_355be850",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab5b8991_2569a485",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3042426
      },
      "writtenOn": "2023-11-21T01:30:10Z",
      "side": 1,
      "message": "https://gerrit-review.googlesource.com/c/plugins/high-availability/+/390987/comments/fe2480f5_9f45a9c4",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd5e200d_9d956ffe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3042426
      },
      "writtenOn": "2023-11-21T01:31:40Z",
      "side": 1,
      "message": "390986: Update mockito to 5.6.0 and bytebuddy to 1.14.9 | https://gerrit-review.googlesource.com/c/gerrit/+/390986",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a77a3c9e_4eb86a6a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-11-21T20:03:54Z",
      "side": 1,
      "message": "Ping @nitzan@google.com, can we get this change merged to stable-3.9? We are due to release this coming Friday!",
      "parentUuid": "a92b364b_a24746f6",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "945a1faf_46be63f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1146706
      },
      "writtenOn": "2023-11-22T13:02:36Z",
      "side": 1,
      "message": "Reassigned to @hiesel@google.com as per-\nhttps://g-issues.gerritcodereview.com/issues/307779434",
      "parentUuid": "a77a3c9e_4eb86a6a",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfb3872f_b4e9fd97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2023-11-23T12:36:41Z",
      "side": 1,
      "message": "No concerns. Our version are current.",
      "parentUuid": "945a1faf_46be63f4",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5fd9dac_ffc441c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-11-27T10:05:34Z",
      "side": 1,
      "message": "Since this change was merged I\u0027m seeing test failure like this:\n\n35) usePreloadRest(com.google.gerrit.httpd.raw.IndexHtmlUtilTest)\njava.lang.IllegalStateException: Could not initialize plugin: interface org.mockito.plugins.MockMaker (alternate: null)\n\tat org.mockito.internal.configuration.plugins.PluginLoader$1.invoke(PluginLoader.java:84)\n\tat jdk.proxy2/jdk.proxy2.$Proxy16.isTypeMockable(Unknown Source)\n\tat org.mockito.internal.util.MockUtil.typeMockabilityOf(MockUtil.java:78)\n\tat org.mockito.internal.util.MockCreationValidator.validateType(MockCreationValidator.java:22)\n\tat org.mockito.internal.creation.MockSettingsImpl.validatedSettings(MockSettingsImpl.java:274)\n\tat org.mockito.internal.creation.MockSettingsImpl.build(MockSettingsImpl.java:235)\n\tat org.mockito.internal.MockitoCore.mock(MockitoCore.java:86)\n\tat org.mockito.Mockito.mock(Mockito.java:2101)\n\tat org.mockito.Mockito.mock(Mockito.java:2016)\n\tat com.google.gerrit.httpd.raw.IndexHtmlUtilTest.usePreloadRest(IndexHtmlUtilTest.java:100)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:108)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:116)\n\tat com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:145)\n\tat com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:76)\nCaused by: java.lang.IllegalStateException: Internal problem occurred, please report it. Mockito is unable to load the default implementation of class that is a part of Mockito distribution. Failed to load interface org.mockito.plugins.MockMaker\n\tat org.mockito.internal.configuration.plugins.DefaultMockitoPlugins.create(DefaultMockitoPlugins.java:105)\n\tat org.mockito.internal.configuration.plugins.DefaultMockitoPlugins.getDefaultPlugin(DefaultMockitoPlugins.java:79)\n\tat org.mockito.internal.configuration.plugins.PluginLoader.loadPlugin(PluginLoader.java:75)\n\tat org.mockito.internal.configuration.plugins.PluginLoader.loadPlugin(PluginLoader.java:50)\n\tat org.mockito.internal.configuration.plugins.PluginRegistry.\u003cinit\u003e(PluginRegistry.java:27)\n\tat org.mockito.internal.configuration.plugins.Plugins.\u003cclinit\u003e(Plugins.java:22)\n\tat org.mockito.internal.MockitoCore.\u003cclinit\u003e(MockitoCore.java:73)\n\tat org.mockito.Mockito.\u003cclinit\u003e(Mockito.java:1683)\n\tat com.google.gerrit.httpd.AllRequestFilterFilterProxyTest.postponedLoading(AllRequestFilterFilterProxyTest.java:218)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n\t... 23 more\nCaused by: java.lang.reflect.InvocationTargetException\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\n\tat org.mockito.internal.configuration.plugins.DefaultMockitoPlugins.create(DefaultMockitoPlugins.java:103)\n\t... 40 more\nCaused by: org.mockito.exceptions.base.MockitoInitializationException: \nCould not initialize inline Byte Buddy mock maker.\n\nIt appears as if your JDK does not supply a working agent attachment mechanism.\nJava               : 17\nJVM vendor name    : Azul Systems, Inc.\nJVM vendor version : 17.0.5+8-LTS\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 17.0.5+8-LTS\nJVM info           : mixed mode, sharing\nOS name            : Linux\nOS version         : 6.5.6-1rodete4-amd64\n\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.\u003cinit\u003e(InlineDelegateByteBuddyMockMaker.java:244)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.\u003cinit\u003e(InlineByteBuddyMockMaker.java:23)\n\t... 46 more\nCaused by: java.lang.IllegalStateException: The Byte Buddy agent is not initialized or unavailable\n\tat net.bytebuddy.agent.ByteBuddyAgent.getInstrumentation(ByteBuddyAgent.java:230)\n\tat net.bytebuddy.agent.ByteBuddyAgent.install(ByteBuddyAgent.java:617)\n\tat net.bytebuddy.agent.ByteBuddyAgent.install(ByteBuddyAgent.java:568)\n\tat net.bytebuddy.agent.ByteBuddyAgent.install(ByteBuddyAgent.java:545)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.\u003cclinit\u003e(InlineDelegateByteBuddyMockMaker.java:115)\n\t... 47 more\n\n\nAny idea what\u0027s wrong?",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49fb072f_229ed5c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-11-27T15:41:48Z",
      "side": 1,
      "message": "I tried with both Java 11 and Java 17 and doesn\u0027t happen to me:\n\n```\nbazelisk test --config\u003djava11 //javatests/com/google/gerrit/httpd/...\nbazelisk test //javatests/com/google/gerrit/httpd/...\n```\n\nMy Java 17 is: `java full version \"17.0.9+11-LTS-201\"`\n\nMy Java 11 is: `java full version \"11.0.17+10-LTS-269\"`\n\nThe two above are successful for me and this change passed the CI validation as well. How can we reproduce the issue?",
      "parentUuid": "f5fd9dac_ffc441c5",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83da9066_59003bcd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-11-27T22:22:15Z",
      "side": 1,
      "message": "several similar mockito issues were already reported for multiple mockito versions\nhttps://github.com/mockito/mockito/issues/2952\nhttps://github.com/mockito/mockito/issues/1879\nhttps://github.com/mockito/mockito/issues?q\u003dis%3Aissue+%22Could+not+initialize+inline+Byte+Buddy+mock+maker%22",
      "parentUuid": "49fb072f_229ed5c4",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef0dd81c_2b3eb8b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-11-29T09:30:24Z",
      "side": 1,
      "message": "Thanks a lot for links. The advice at [1] fixed the issue for me.\n\n[1] https://github.com/mockito/mockito/issues/1879#issuecomment-922459131",
      "parentUuid": "83da9066_59003bcd",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6bf49627_7c48aae6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-11-29T10:40:02Z",
      "side": 1,
      "message": "\u003e Thanks a lot for links. The advice at [1] fixed the issue for me.\n\u003e \n\u003e [1] https://github.com/mockito/mockito/issues/1879#issuecomment-922459131\n\nNeat finding, that would actually explain why we don\u0027t see the issue on Gerrit-CI: we introduced that option because of Bazel crashing randomly from Java 11 onwards.\n\nThanks for sharing it, good stuff!\n\nP.S. Should we also add a note to the development instructions?",
      "parentUuid": "ef0dd81c_2b3eb8b0",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebdbbdac_aee90e76",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3005157
      },
      "writtenOn": "2023-12-08T14:34:57Z",
      "side": 1,
      "message": "Id 302886334",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3053531_5c46609b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3005157
      },
      "writtenOn": "2023-12-08T14:47:34Z",
      "side": 1,
      "message": "https://gerrit-review.googlesource.com/c/gerrit/+/390986/comments/f5fd9dac_ffc441c5",
      "parentUuid": "ab5b8991_2569a485",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f9c4bfb_4e584518",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3005157
      },
      "writtenOn": "2023-12-08T14:47:34Z",
      "side": 1,
      "message": "Cometer",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "659019f7_e0f3099c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3005157
      },
      "writtenOn": "2023-12-08T14:47:34Z",
      "side": 1,
      "message": "@cdesir@google.com",
      "parentUuid": "ebdbbdac_aee90e76",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efe77dfc_f925c278",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3005157
      },
      "writtenOn": "2023-12-08T14:47:34Z",
      "side": 1,
      "message": "https://gerrit-review.googlesource.com/c/gerrit/+/390986/comments/ab5b8991_2569a485",
      "parentUuid": "a1d27ead_55f49800",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b556a93_a3936f3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3005157
      },
      "writtenOn": "2023-12-08T14:53:46Z",
      "side": 1,
      "message": "Resolviendo",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d97bfeb_a3c5f630",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3005157
      },
      "writtenOn": "2023-12-08T14:54:11Z",
      "side": 1,
      "message": "Realizando cambios o adds",
      "revId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Style",
        "description": {
          "value": "Code has correct style and format"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^~(polygerrit-ui/.*)$\" OR -branch:refs/heads/master)"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Style\u003dMAX AND -label:Code-Style\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^~(polygerrit-ui/.*)$\" OR -branch:refs/heads/master)"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["file:\"^~(polygerrit-ui/.*)$\""],"failingAtoms":["branch:refs/meta/config","branch:refs/heads/master"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Style=MAX AND -label:Code-Style=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Style=MAX"],"failingAtoms":["label:Code-Style=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Forward-Compatibility",
        "description": {
          "value": "Changes to NoteDb, data serialization in ChangeField, or the entities packages require careful consideration. Make sure your change is forward compatible and add the footer \u0027Forward-Compatible: checked\u0027 to your commit message"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\" OR file:\"^java/com/google/gerrit/entities/.*\\\\.java$\" OR file:\"^java/com/google/gerrit/server/index/.*Field\\\\.java\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Forward-Compatible\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\" OR file:\"^java/com/google/gerrit/entities/.*\\\\.java$\" OR file:\"^java/com/google/gerrit/server/index/.*Field\\\\.java\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\"","file:\"^java/com/google/gerrit/entities/.*\\\\.java$\"","file:\"^java/com/google/gerrit/server/index/.*Field\\\\.java\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Forward-Compatible\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Frontend-Verified",
        "description": {
          "value": "Frontend compilation, tests, and linters pass"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "branch:refs/heads/master AND file:\"^polygerrit-ui/.*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Frontend-Verified\u003dMAX AND -label:Frontend-Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"branch:refs/heads/master AND file:\"^polygerrit-ui/.*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/heads/master","file:\"^polygerrit-ui/.*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Frontend-Verified=MAX AND -label:Frontend-Verified=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Library-Compliance",
        "description": {
          "value": "Changes to specific library/metadata files require additional approval"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Library-Compliance\u003dMAX AND -label:Library-Compliance\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["file:\"^tools/deps.bzl$\""],"failingAtoms":["branch:refs/meta/config","file:\"^lib/.*\"","file:\"^WORKSPACE$\"","file:\"^.gitmodule$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Library-Compliance=MAX AND -label:Library-Compliance=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Library-Compliance=MAX"],"failingAtoms":["label:Library-Compliance=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Release-Notes",
        "description": {
          "value": "Changes must include a \u0027Release-Notes\u0027 footer with a single sentence to mention in the release notes. Changes not worth mentioning in the release notes should put \u0027Release-Notes: skip\u0027"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND -hasfooter:\"Release-Notes\" AND -is:pure-revert"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Release-Notes\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND -hasfooter:\"Release-Notes\" AND -is:pure-revert"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["hasfooter:\"Release-Notes\""],"failingAtoms":["branch:refs/meta/config","is:pure-revert"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Release-Notes\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^~(polygerrit-ui/.*)$\" OR -branch:refs/heads/master)"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^~(polygerrit-ui/.*)$\" OR -branch:refs/heads/master)"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["file:\"^~(polygerrit-ui/.*)$\""],"failingAtoms":["branch:refs/meta/config","branch:refs/heads/master"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ad0080bc742e736a4513c60ad0e56fdd182d2c5c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}