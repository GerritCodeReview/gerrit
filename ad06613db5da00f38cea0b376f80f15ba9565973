{
  "comments": [
    {
      "key": {
        "uuid": "626f7506_06de47f6",
        "filename": "java/com/google/gerrit/server/account/AccountDefaultDisplayNameProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-02-13T12:26:19Z",
      "side": 1,
      "message": "optional: This class is boiler plate and you could remove it.",
      "revId": "ad06613db5da00f38cea0b376f80f15ba9565973",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "155bd316_3c9536b4",
        "filename": "java/com/google/gerrit/server/account/AccountDefaultDisplayNameProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-02-13T15:28:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "626f7506_06de47f6",
      "revId": "ad06613db5da00f38cea0b376f80f15ba9565973",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43ae058b_cba79a8e",
        "filename": "java/com/google/gerrit/server/config/GerritGlobalModule.java",
        "patchSetId": 3
      },
      "lineNbr": 276,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-02-13T12:26:19Z",
      "side": 1,
      "message": "optional:\n\nAccountDisplayName accountDisplayName \u003d cfg.getEnum(\"accounts\", null, \"defaultDisplayName\", AccountDefaultDisplayName.FULL_NAME)\nbind(AccountDisplayName.class).toInstance(accountDisplayName);",
      "range": {
        "startLine": 274,
        "startChar": 3,
        "endLine": 276,
        "endChar": 23
      },
      "revId": "ad06613db5da00f38cea0b376f80f15ba9565973",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a91902c_5500449b",
        "filename": "java/com/google/gerrit/server/config/GerritGlobalModule.java",
        "patchSetId": 3
      },
      "lineNbr": 276,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-02-13T15:28:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43ae058b_cba79a8e",
      "range": {
        "startLine": 274,
        "startChar": 3,
        "endLine": 276,
        "endChar": 23
      },
      "revId": "ad06613db5da00f38cea0b376f80f15ba9565973",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b72f10d0_849b7c94",
        "filename": "java/com/google/gerrit/server/restapi/config/GetServerInfo.java",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-02-13T12:26:19Z",
      "side": 1,
      "message": "Instead of shipping this with ServerInfo, why don\u0027t we fill in the default into AccountInfo in the backend?\nThis way, the frontend doesn\u0027t have to care about what is configured, it can just always use \"display_name\"\n\nThis would only require a change in AccountLoader AFAICS.",
      "revId": "ad06613db5da00f38cea0b376f80f15ba9565973",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2fa3a4a_f870c977",
        "filename": "java/com/google/gerrit/server/restapi/config/GetServerInfo.java",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-02-13T15:28:34Z",
      "side": 1,
      "message": "That is an option, yes, but generally I like the frontend to be in the know about stuff. In this case it would be nice in the user settings dialog to tell the user that the \"display name\" is unset, but that the host applies a default policy. If the frontend does not know about this, then the user would not really have the insight into how it works and would not be able to go back to an \"unset\" display name and thus choosing the default rule to apply. WDYT?",
      "parentUuid": "b72f10d0_849b7c94",
      "revId": "ad06613db5da00f38cea0b376f80f15ba9565973",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1058a774_686d205b",
        "filename": "java/com/google/gerrit/server/restapi/config/GetServerInfo.java",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-02-14T08:54:47Z",
      "side": 1,
      "message": "I am not at all against the frontend knowing the default policy. The use case on showing the default in a user settings dialog makes a lot of sense. This is different from other endpoints, so I wanted to make sure we have thought about it.\n\nFor example: User preferences are shipped on the API using inheritance from: Defaults -\u003e host overrides -\u003e user overrides. The JSON you get on the API has all these defaults and overrides applied and is authoritative on what should be done (e.g. how fast the cursor should blink ;-)).\n\nIf we stick with shipping only explicitly set display_names in AccountInfo, we need to document in the AccountInfo doc that the default will not be applied and that we expect the client to apply the default if unset.\n\nI do think there would be value in having the backend apply a default instead of leaving it unset. For example: If we were to build a dashboard for more than one Gerrit host, we\u0027d not only have to query all the hosts, but also load their ServerInfo before showing a combined list of changes with display names.",
      "parentUuid": "e2fa3a4a_f870c977",
      "revId": "ad06613db5da00f38cea0b376f80f15ba9565973",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b025586e_23d70f21",
        "filename": "java/com/google/gerrit/server/restapi/config/GetServerInfo.java",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-02-14T09:32:58Z",
      "side": 1,
      "message": "Yes, thanks for bringing this up. It is very helpful for me to look deeper into this and think about it more.\n\nFor user preferences I consider it as a missing feature that the user/client/frontend does not know whether a setting is just an applied default value or a consciously chosen user value. Personally I often have the problem that I play around with different diff settings (e.g. for debugging issues) and then I have no idea what the default was. And I have no way to reset my settings.\n\nAccountInfo is a different endpoint than preferences, so having the account behave consistent with user preferences is maybe not so important. Also for preferences you typically have default *values*, not an enum that describes a fallback strategy.\n\nIf you are ok with keeping as is, then yes, I can add some more documentation to the AccountInfo, although AccountInfo.java already has a few lines explaining this fairly well.\n\nI am not convinced that in your example the prefilled display name is a good idea, because it might have different values dependent on the host. Is it then good that the name of a user is rendered differently for some changes vs others?\n\nIdeally I think you would need both: Fill the default value, but also set a boolean \"isDefault\". That would be a nice feature, but we don\u0027t have the time to build it right now, so I would prefer to keep as is and leave the displayName unset.",
      "parentUuid": "1058a774_686d205b",
      "revId": "ad06613db5da00f38cea0b376f80f15ba9565973",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}