{
  "comments": [
    {
      "key": {
        "uuid": "1779da9c_b7f8b903",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 7,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2018-01-11T01:44:05Z",
      "side": 1,
      "message": "Long-term, I envision a way to toggle any of the annotation layers that are installed.\n\nIn this sense, I think the ability to toggle annotations does not belong in the plugin API. After plugins have defined layers into the overall layer list, we could allow the user to toggle any of them (plugin layer or otherwise), which would have the effect of filtering the list.\n\nIn other words, I expect layer toggling to eventually be a feature general to all layers not just plugins, so it seems good to avoid defining a new plugin API surface for a feature that all plugins should eventually get for free.\n\nFor the short-term, regarding coverage plugin specifically, would it be possible to add this toggle as part of the coverage plugin itself (or as an additional plugin) using the current plugin API?",
      "range": {
        "startLine": 7,
        "startChar": 19,
        "endLine": 7,
        "endChar": 34
      },
      "revId": "ad5c3aaa892505c3e1c258b91341a3ed73ab19d1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4ae1465_a3a63feb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 7,
      "author": {
        "id": 1028847
      },
      "writtenOn": "2018-01-11T16:04:10Z",
      "side": 1,
      "message": "\u003e Long-term, I envision a way to toggle any of the annotation layers that are installed.\n\u003e \n\u003e In this sense, I think the ability to toggle annotations does not belong in the plugin API. After plugins have defined layers into the overall layer list, we could allow the user to toggle any of them (plugin layer or otherwise), which would have the effect of filtering the list.\n\u003e \n\u003e In other words, I expect layer toggling to eventually be a feature general to all layers not just plugins, so it seems good to avoid defining a new plugin API surface for a feature that all plugins should eventually get for free.\n\nThat sounds great to me.\nIs there a bug tracking this work? We can re-purpose https://bugs.chromium.org/p/gerrit/issues/detail?id\u003d8077 for this if that is convenient.\n\n\u003e \n\u003e For the short-term, regarding coverage plugin specifically, would it be possible to add this toggle as part of the coverage plugin itself (or as an additional plugin) using the current plugin API?\n\nYes, that is what I had done in an earlier patchset of this change: https://gerrit-review.googlesource.com/c/gerrit/+/150210/4\nIt is hacky because it relies on the existence of two elements. I personally do not mind the hardcoding in the short term till the feature you mentioned is added. WDYT?",
      "parentUuid": "1779da9c_b7f8b903",
      "range": {
        "startLine": 7,
        "startChar": 19,
        "endLine": 7,
        "endChar": 34
      },
      "revId": "ad5c3aaa892505c3e1c258b91341a3ed73ab19d1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f7c1b22_c3171d0b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 7,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2018-01-11T23:57:18Z",
      "side": 1,
      "message": "\u003e \u003e In other words, I expect layer toggling to eventually be a feature general to all layers not just plugins, [...]\n\u003e \n\u003e That sounds great to me.\n\u003e Is there a bug tracking this work? We can re-purpose https://bugs.chromium.org/p/gerrit/issues/detail?id\u003d8077 for this if that is convenient.\n\nCool. Yeah I agree, that looks to me like the right bug to repurpose.\n\n\u003e \u003e For the short-term, regarding coverage plugin specifically, would it be possible to add this toggle as part of the coverage plugin itself [...]\n\u003e \n\u003e Yes, that is what I had done in an earlier patchset of this change: https://gerrit-review.googlesource.com/c/gerrit/+/150210/4\n\nAssuming that Viktar agrees this is the right direction for the annotation API, that seems to me like a good short term solution.",
      "parentUuid": "b4ae1465_a3a63feb",
      "range": {
        "startLine": 7,
        "startChar": 19,
        "endLine": 7,
        "endChar": 34
      },
      "revId": "ad5c3aaa892505c3e1c258b91341a3ed73ab19d1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2696771_d69da1c4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 7,
      "author": {
        "id": 1028847
      },
      "writtenOn": "2018-01-16T14:29:08Z",
      "side": 1,
      "message": "\u003e \u003e \u003e In other words, I expect layer toggling to eventually be a feature general to all layers not just plugins, [...]\n\u003e \u003e \n\u003e \u003e That sounds great to me.\n\u003e \u003e Is there a bug tracking this work? We can re-purpose https://bugs.chromium.org/p/gerrit/issues/detail?id\u003d8077 for this if that is convenient.\n\u003e \n\u003e Cool. Yeah I agree, that looks to me like the right bug to repurpose.\n\nDone: https://bugs.chromium.org/p/gerrit/issues/detail?id\u003d8077\n\n\u003e \n\u003e \u003e \u003e For the short-term, regarding coverage plugin specifically, would it be possible to add this toggle as part of the coverage plugin itself [...]\n\u003e \u003e \n\u003e \u003e Yes, that is what I had done in an earlier patchset of this change: https://gerrit-review.googlesource.com/c/gerrit/+/150210/4\n\u003e \n\u003e Assuming that Viktar agrees this is the right direction for the annotation API, that seems to me like a good short term solution.\n\nViktar, WDYT?\nThe annotation API will not have to change. The temporary change will be localized to the plugin. It will be the responsibility of the plugin maintainers to notice if things stop working and fix it (till the better approach in https://bugs.chromium.org/p/gerrit/issues/detail?id\u003d8077 is ready).",
      "parentUuid": "1f7c1b22_c3171d0b",
      "range": {
        "startLine": 7,
        "startChar": 19,
        "endLine": 7,
        "endChar": 34
      },
      "revId": "ad5c3aaa892505c3e1c258b91341a3ed73ab19d1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b08aeeae_4a41c559",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 7,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-01-18T19:37:51Z",
      "side": 1,
      "message": "Just to make sure we\u0027re all on the same page, the decision is to:\n\n- do not add annotation layer toggling right now, and implement a general syntax layer toggling eventually\n\n- for the annotations API, use DOM crawling to add/remove checkbox\n\nAm I missing something? I\u0027m not sure this is the best way to move forward.",
      "parentUuid": "e2696771_d69da1c4",
      "range": {
        "startLine": 7,
        "startChar": 19,
        "endLine": 7,
        "endChar": 34
      },
      "revId": "ad5c3aaa892505c3e1c258b91341a3ed73ab19d1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "776d4302_05befca1",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-annotation-actions-js-api.js",
        "patchSetId": 10
      },
      "lineNbr": 61,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-01-10T18:05:23Z",
      "side": 1,
      "message": "Would this work for multiple plugins that enable the checkbox?",
      "revId": "ad5c3aaa892505c3e1c258b91341a3ed73ab19d1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76af9a72_304d8c1f",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-annotation-actions-js-api.js",
        "patchSetId": 10
      },
      "lineNbr": 62,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-01-10T18:05:23Z",
      "side": 1,
      "message": "onAttached or onCheckboxAttached?",
      "range": {
        "startLine": 62,
        "startChar": 21,
        "endLine": 62,
        "endChar": 31
      },
      "revId": "ad5c3aaa892505c3e1c258b91341a3ed73ab19d1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9bd8bd5_08352c79",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-annotation-actions-js-api.js",
        "patchSetId": 10
      },
      "lineNbr": 62,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-01-10T18:05:23Z",
      "side": 1,
      "message": "Does it make sense to have a default label, e.g. \u0027Enable\u0027? This way checkboxLabel param would become optional (maybe even set by a different method) while the callback would be required.",
      "range": {
        "startLine": 62,
        "startChar": 6,
        "endLine": 62,
        "endChar": 19
      },
      "revId": "ad5c3aaa892505c3e1c258b91341a3ed73ab19d1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}