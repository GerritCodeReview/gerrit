{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b6698af9_00463c44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-04-19T15:20:50Z",
      "side": 1,
      "message": "Sorry that it takes too long for review - we had holidays in Germany.\n",
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46fde6eb_2f275a8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-04-19T15:35:08Z",
      "side": 1,
      "message": "See my comments below.",
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40d94b17_e5f5935f",
        "filename": "java/com/google/gerrit/server/cache/PerThreadCache.java",
        "patchSetId": 21
      },
      "lineNbr": 80,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-04-19T15:20:50Z",
      "side": 1,
      "message": "My impression from our discussion is that only refs should be cached (\"5. Limit the window to the RepoRefCache typed entries only\")\n\nWhat other types are you planning to add here?\nAt PatchSet 15 solution looks better for me, just need some improvements/renaming.\n\nIf you are going to add more types here, maybe we should discuss it again, because it now looks very complicated.\n\nIf no other types will be cached - let\u0027s remove all unnecessary complication + rename classes/methods to make them more refs specific. Like:\nopenReadonlyRequestWindow -\u003e openRequestRefsCacheWindow, etc...\n\nI understand that you are trying to split responsibilities, but in this situation I would prefer to have everything in one place with a clear description + comment that it never must be merged into master.",
      "range": {
        "startLine": 80,
        "startChar": 33,
        "endLine": 80,
        "endChar": 58
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a3e16f6_54b57960",
        "filename": "java/com/google/gerrit/server/cache/PerThreadCache.java",
        "patchSetId": 21
      },
      "lineNbr": 80,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-04-19T15:35:08Z",
      "side": 1,
      "message": "Makes sense, I like to keep things simple. I\u0027ll also add a TODO to remove it from stable-3.2 onwards.",
      "parentUuid": "40d94b17_e5f5935f",
      "range": {
        "startLine": 80,
        "startChar": 33,
        "endLine": 80,
        "endChar": 58
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb81f36a_25c974a3",
        "filename": "java/com/google/gerrit/server/cache/PerThreadCache.java",
        "patchSetId": 21
      },
      "lineNbr": 80,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-04-19T22:20:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a3e16f6_54b57960",
      "range": {
        "startLine": 80,
        "startChar": 33,
        "endLine": 80,
        "endChar": 58
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8e81dc6_2f7ae760",
        "filename": "java/com/google/gerrit/server/cache/PerThreadCache.java",
        "patchSetId": 21
      },
      "lineNbr": 204,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-04-19T15:20:50Z",
      "side": 1,
      "message": "Is it possible to set this property to true for all tests (by default)?",
      "range": {
        "startLine": 204,
        "startChar": 8,
        "endLine": 204,
        "endChar": 100
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f7a2ca9_ad881bf9",
        "filename": "java/com/google/gerrit/server/cache/PerThreadCache.java",
        "patchSetId": 21
      },
      "lineNbr": 204,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-04-19T15:35:08Z",
      "side": 1,
      "message": "All IT tests, yes, we can. For all the NON-IT tests we never cache anyway, so it is irrelevant there.",
      "parentUuid": "d8e81dc6_2f7ae760",
      "range": {
        "startLine": 204,
        "startChar": 8,
        "endLine": 204,
        "endChar": 100
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0aac544_b1b035a2",
        "filename": "java/com/google/gerrit/server/cache/PerThreadCache.java",
        "patchSetId": 21
      },
      "lineNbr": 204,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-04-19T18:55:17Z",
      "side": 1,
      "message": "LGTM, I think IT tests is enough",
      "parentUuid": "6f7a2ca9_ad881bf9",
      "range": {
        "startLine": 204,
        "startChar": 8,
        "endLine": 204,
        "endChar": 100
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18f0040b_30fa7b13",
        "filename": "java/com/google/gerrit/server/cache/PerThreadCache.java",
        "patchSetId": 21
      },
      "lineNbr": 204,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-04-19T22:20:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0aac544_b1b035a2",
      "range": {
        "startLine": 204,
        "startChar": 8,
        "endLine": 204,
        "endChar": 100
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8acdddf4_32441dcd",
        "filename": "java/com/google/gerrit/server/events/StreamEventsApiListener.java",
        "patchSetId": 21
      },
      "lineNbr": 418,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-04-19T15:20:50Z",
      "side": 1,
      "message": "The new code doesn\u0027t catch OrmException if it is thrown by the dispatch.run or by the d.postEvent call. Not sure how important it is - could you please check this?\n\nOr maybe rewrite this with nested try-catch:\n  try {\n    Change chage;\n    ...\n    try (ReadonlyRequestWindow window \u003d ...) {\n       ... get change and create event\n    }\n    dispatcher.run(d -\u003e d.postEvent(change, event));\n  } catch (OrmException e) {\n    logger.atSevere().withCause(e).log(\"Failed to dispatch event\");\n  }",
      "range": {
        "startLine": 398,
        "startChar": 3,
        "endLine": 418,
        "endChar": 52
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdf4fab5_fce5cd54",
        "filename": "java/com/google/gerrit/server/events/StreamEventsApiListener.java",
        "patchSetId": 21
      },
      "lineNbr": 418,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-04-19T15:35:08Z",
      "side": 1,
      "message": "dispatcher.run() and postEvent() do not throw OrmException. Can they throw a checked Exception without declaring it?",
      "parentUuid": "8acdddf4_32441dcd",
      "range": {
        "startLine": 398,
        "startChar": 3,
        "endLine": 418,
        "endChar": 52
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "caae9fa8_afbddaca",
        "filename": "java/com/google/gerrit/server/events/StreamEventsApiListener.java",
        "patchSetId": 21
      },
      "lineNbr": 418,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-04-19T18:55:17Z",
      "side": 1,
      "message": "\u003e dispatcher.run() and postEvent() do not throw OrmException. Can they throw a checked Exception without declaring it?\n\nSorry, you are right, they can\u0027t. I incorrectly checked the version 3 for this exception. The v3 uses StorageException instead of OrmException and StorageException extends RuntimeException (i.e. it is unchecked). \n\nCould you please verify/confirm that dispatcher.run and postEvent don\u0027t throw StorageException in v3, i.e. it is safe to move them outside of catch blaock?",
      "parentUuid": "fdf4fab5_fce5cd54",
      "range": {
        "startLine": 398,
        "startChar": 3,
        "endLine": 418,
        "endChar": 52
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4b0cbc2_e9829814",
        "filename": "java/com/google/gerrit/server/events/StreamEventsApiListener.java",
        "patchSetId": 21
      },
      "lineNbr": 418,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-04-19T22:20:16Z",
      "side": 1,
      "message": "I\u0027ve used the double-try, so that the overall catch() flow isn\u0027t impacted anymore.",
      "parentUuid": "caae9fa8_afbddaca",
      "range": {
        "startLine": 398,
        "startChar": 3,
        "endLine": 418,
        "endChar": 52
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3fb9889_6199eaac",
        "filename": "java/com/google/gerrit/server/extensions/events/CommentAdded.java",
        "patchSetId": 21
      },
      "lineNbr": 89,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-04-19T15:20:50Z",
      "side": 1,
      "message": "Same problem as with StreamEventsApiListener.\nI would prefer to use a solution with additional try... block, because it doesn\u0027t require additional returns.",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 89,
        "endChar": 52
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98f9fcb7_a933cbd1",
        "filename": "java/com/google/gerrit/server/extensions/events/CommentAdded.java",
        "patchSetId": 21
      },
      "lineNbr": 89,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-04-19T22:20:16Z",
      "side": 1,
      "message": "I\u0027ve used the double-try, so that the overall catch() flow isn\u0027t impacted anymore.",
      "parentUuid": "a3fb9889_6199eaac",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 89,
        "endChar": 52
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d99f752e_e7482f46",
        "filename": "java/com/google/gerrit/server/git/RepoRefCache.java",
        "patchSetId": 21
      },
      "lineNbr": 48,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-04-19T15:20:50Z",
      "side": 1,
      "message": "If the solution is for repo refs only, then maybe move it into PerThreadCache. So it is not spread in our code.",
      "range": {
        "startLine": 39,
        "startChar": 2,
        "endLine": 48,
        "endChar": 3
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccbaf077_55c1027f",
        "filename": "java/com/google/gerrit/server/git/RepoRefCache.java",
        "patchSetId": 21
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-04-19T15:35:08Z",
      "side": 1,
      "message": "PerThreadCache doesn\u0027t know anything about repositories and it shouldn\u0027t IMHO.",
      "parentUuid": "d99f752e_e7482f46",
      "range": {
        "startLine": 39,
        "startChar": 2,
        "endLine": 48,
        "endChar": 3
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "620a855f_74038c47",
        "filename": "java/com/google/gerrit/server/git/RepoRefCache.java",
        "patchSetId": 21
      },
      "lineNbr": 48,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-04-19T18:55:17Z",
      "side": 1,
      "message": "Ok. Please add a comment in this file that the code must be in master.",
      "parentUuid": "ccbaf077_55c1027f",
      "range": {
        "startLine": 39,
        "startChar": 2,
        "endLine": 48,
        "endChar": 3
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5634236c_b9dfbbd1",
        "filename": "java/com/google/gerrit/server/git/RepoRefCache.java",
        "patchSetId": 21
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-04-19T22:20:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "620a855f_74038c47",
      "range": {
        "startLine": 39,
        "startChar": 2,
        "endLine": 48,
        "endChar": 3
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "909af225_a036de41",
        "filename": "java/com/google/gerrit/server/git/RepoRefCache.java",
        "patchSetId": 21
      },
      "lineNbr": 107,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-04-19T15:20:50Z",
      "side": 1,
      "message": "The same as comment above - maybe move to PerThreadCache (maybe put into some nested class there for grouping)",
      "range": {
        "startLine": 73,
        "startChar": 2,
        "endLine": 107,
        "endChar": 3
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a86d360_6064130e",
        "filename": "java/com/google/gerrit/server/git/RepoRefCache.java",
        "patchSetId": 21
      },
      "lineNbr": 107,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-04-19T15:35:08Z",
      "side": 1,
      "message": "PerThreadCache isn\u0027t about Repositories but any object type. That\u0027s why I needed to introduce a generic interface.",
      "parentUuid": "909af225_a036de41",
      "range": {
        "startLine": 73,
        "startChar": 2,
        "endLine": 107,
        "endChar": 3
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bd3a421_09bc11fe",
        "filename": "java/com/google/gerrit/server/git/RepoRefCache.java",
        "patchSetId": 21
      },
      "lineNbr": 107,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2022-04-19T18:55:17Z",
      "side": 1,
      "message": "\u003e PerThreadCache isn\u0027t about Repositories but any object type. That\u0027s why I needed to introduce a generic interface.\n\nI understand. But because this is a temporary solution, placing everything in one place (PerThreadCache) adds less changes in other places.\nHowever, this is an optional suggest. But please add a clear comment about this part of code.",
      "parentUuid": "3a86d360_6064130e",
      "range": {
        "startLine": 73,
        "startChar": 2,
        "endLine": 107,
        "endChar": 3
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b0cd819_fc44a3f0",
        "filename": "java/com/google/gerrit/server/git/RepoRefCache.java",
        "patchSetId": 21
      },
      "lineNbr": 107,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-04-19T22:20:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6bd3a421_09bc11fe",
      "range": {
        "startLine": 73,
        "startChar": 2,
        "endLine": 107,
        "endChar": 3
      },
      "revId": "ad9b8e0268d5a9235ba0528dc7427f1cd7d73fdd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}