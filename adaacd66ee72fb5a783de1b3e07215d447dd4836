{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "476e9ea9_f273fdaa",
        "filename": "java/com/google/gerrit/server/comment/CommentContextCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-08T10:09:07Z",
      "side": 1,
      "message": "How will we roll this out? Will it ignore the file written with version 1 and simply start cold?",
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa03132e_2c5ad347",
        "filename": "java/com/google/gerrit/server/comment/CommentContextCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-08T14:39:10Z",
      "side": 1,
      "message": "Yes, the version is encoded into the file cache keys in prd. When this is modified, this will cause reload for all keys.\n\nRight now the feature is not yet available in the frontend, so there is no impact on anyone.",
      "parentUuid": "476e9ea9_f273fdaa",
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7452da2e_0386faab",
        "filename": "java/com/google/gerrit/server/comment/CommentContextKey.java",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-08T10:09:07Z",
      "side": 1,
      "message": "Context range, no?",
      "range": {
        "startLine": 39,
        "startChar": 9,
        "endLine": 39,
        "endChar": 16
      },
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ee92765_07ab01a4",
        "filename": "java/com/google/gerrit/server/comment/CommentContextKey.java",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-08T14:39:10Z",
      "side": 1,
      "message": "Comment range is also fine. The range is an attribute of the comment, specifying the start/end lines of the source code where the comment is written.\n\nComment range or context range are actually the same.",
      "parentUuid": "7452da2e_0386faab",
      "range": {
        "startLine": 39,
        "startChar": 9,
        "endLine": 39,
        "endChar": 16
      },
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80359463_11d898a0",
        "filename": "java/com/google/gerrit/server/comment/CommentContextKey.java",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-08T15:03:35Z",
      "side": 1,
      "message": "I thought the context range includes lines before and after the comment range (hence the \"con\" prefix)?",
      "parentUuid": "8ee92765_07ab01a4",
      "range": {
        "startLine": 39,
        "startChar": 9,
        "endLine": 39,
        "endChar": 16
      },
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39d936ab_9eb2d2a8",
        "filename": "java/com/google/gerrit/server/comment/CommentContextKey.java",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-08T17:08:32Z",
      "side": 1,
      "message": "OK I think I got your point: comment range is fixed but context range is variable. I updated the description here and in CommentContextLoader.",
      "parentUuid": "80359463_11d898a0",
      "range": {
        "startLine": 39,
        "startChar": 9,
        "endLine": 39,
        "endChar": 16
      },
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19723fb5_489c5e33",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-08T10:09:07Z",
      "side": 1,
      "message": "Isn\u0027t that double the padding? I.e. if this is 100 then we have a padding of 50 on top and bottom.",
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "715ee936_7629c4be",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-08T14:39:10Z",
      "side": 1,
      "message": "If numContextLines \u003d 10, and comment range \u003d 4, padding will be 6.\n\nPadding is the extra number of lines that we want to add. See line 190: I add padding/2 before the first line, and the remaining of the padding after.",
      "parentUuid": "19723fb5_489c5e33",
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cbb8b8d_c02a1d52",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-08T15:03:35Z",
      "side": 1,
      "message": "[I realize this is just a nit...] I think padding means the distance from the content to the border [1], which is half of \"padding\" in this case. If an element has 50px of padding then it will have 100px of vertical whitespace.\n\n[1] https://www.w3schools.com/css/css_padding.asp",
      "parentUuid": "715ee936_7629c4be",
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38b688d3_5a31140e",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-08T17:08:32Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "9cbb8b8d_c02a1d52",
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03969ea7_2da0d7ef",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-08T10:09:07Z",
      "side": 1,
      "message": "This extends the context range further beyond the comment than specified. Shouldn\u0027t this be min(commentRange.end() + padding/2, fileLines)?",
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "777f9ecb_1b353aec",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-08T14:39:10Z",
      "side": 1,
      "message": "The idea is to return exactly the number of context lines specified by the caller, which will usually imply ending at few lines after the comment range, i.e. if comment is written at lines [7-8] and we request 6 context lines, caller should expect lines [5-10] inclusive.\n\nnumContextLines are respected, unless the file contains less lines than the number of requested context lines. In this case, we return the whole file.",
      "parentUuid": "03969ea7_2da0d7ef",
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc2fb401_2e916a85",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-08T15:03:35Z",
      "side": 1,
      "message": "IIUC if you have a comment at line 10 and request 50 context lines then you\u0027d get lines 1-50 in this case. Wouldn\u0027t you rather expect lines 1-35?",
      "parentUuid": "777f9ecb_1b353aec",
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6696fdc4_8cc21b84",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-08T17:08:32Z",
      "side": 1,
      "message": "I modified this to context-padding as per our discussion.",
      "parentUuid": "bc2fb401_2e916a85",
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0775b84b_1ff4a081",
        "filename": "java/com/google/gerrit/server/restapi/change/ListChangeComments.java",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-08T10:09:07Z",
      "side": 1,
      "message": "Would it be helpful to mention here that this value divided by 2 is the number of lines before and after?",
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eae504d4_d34367ce",
        "filename": "java/com/google/gerrit/server/restapi/change/ListChangeComments.java",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-08T14:39:10Z",
      "side": 1,
      "message": "Yes. Done. Also checked the change I did in documentation and it was already mentioned.",
      "parentUuid": "0775b84b_1ff4a081",
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1e4457a_c22d5f9c",
        "filename": "javatests/com/google/gerrit/acceptance/server/change/CommentContextIT.java",
        "patchSetId": 1
      },
      "lineNbr": 373,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-08T10:09:07Z",
      "side": 1,
      "message": "I think you could extract the setup and assertion code so that these three tests become very short, and then add more tests for ranges that are partially outside the file, e.g. comment on line 3, 20 lines total, 10 lines context, etc.",
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bfa6759c_bd080caa",
        "filename": "javatests/com/google/gerrit/acceptance/server/change/CommentContextIT.java",
        "patchSetId": 1
      },
      "lineNbr": 373,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-08T14:39:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1e4457a_c22d5f9c",
      "revId": "adaacd66ee72fb5a783de1b3e07215d447dd4836",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}