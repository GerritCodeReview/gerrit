{
  "comments": [
    {
      "key": {
        "uuid": "583ac546_d106a259",
        "filename": "java/com/google/gerrit/httpd/WebSessionManager.java",
        "patchSetId": 4
      },
      "lineNbr": 334,
      "author": {
        "id": 1012155
      },
      "writtenOn": "2020-06-19T07:25:09Z",
      "side": 1,
      "message": "Does this `asMap()` really work for you?\n\nFor me, it fails with an `UnsupportedOperationException`.\n\nAs I said before on I0b09bbf96dcad2c5d13f7faa07bcf69212355918:\n\n\u003e [...] But I tried back then, and the Cache\u0027s `asMap` method is not implemented for persistent Caches\n\u003e (See `H2CacheImpl`, whose `asMap` implementation is taken from `AbstractCache`, which just\n\u003e throws an `UnsupportedOperationException`. And the corresponding H2-backed persistence does\n\u003e not offer a nice and easy way to iterate over values either).",
      "range": {
        "startLine": 334,
        "startChar": 16,
        "endLine": 334,
        "endChar": 23
      },
      "revId": "ae3c6a031a98278b3c9b8f9262d374df324f9553",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7eb3ccae_5e8e523d",
        "filename": "java/com/google/gerrit/httpd/WebSessionManager.java",
        "patchSetId": 4
      },
      "lineNbr": 334,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-19T08:39:23Z",
      "side": 1,
      "message": "\u003e Does this `asMap()` really work for you?\n\u003e \n\u003e For me, it fails with an `UnsupportedOperationException`.\n\u003e \n\u003e As I said before on I0b09bbf96dcad2c5d13f7faa07bcf69212355918:\n\u003e \n\u003e \u003e [...] But I tried back then, and the Cache\u0027s `asMap` method is not implemented for persistent Caches\n\u003e \u003e (See `H2CacheImpl`, whose `asMap` implementation is taken from `AbstractCache`, which just\n\u003e \u003e throws an `UnsupportedOperationException`. And the corresponding H2-backed persistence does\n\u003e \u003e not offer a nice and easy way to iterate over values either).\n\nIn that case you could just keep a reverse lookup between the account-id and the associated sessions, and that would work.\nLet me change it in that direction, just as an example.",
      "parentUuid": "583ac546_d106a259",
      "range": {
        "startLine": 334,
        "startChar": 16,
        "endLine": 334,
        "endChar": 23
      },
      "revId": "ae3c6a031a98278b3c9b8f9262d374df324f9553",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaf352a7_1ddfe638",
        "filename": "java/com/google/gerrit/httpd/WebSessionManager.java",
        "patchSetId": 4
      },
      "lineNbr": 334,
      "author": {
        "id": 1012155
      },
      "writtenOn": "2020-06-19T08:45:49Z",
      "side": 1,
      "message": "Sure, that will work.\n\nBut that reverse-lookup is another cache that we need to persist and manage.\nWe have tooling for that. Agreed. But it increases complexity of our code-base\nand for admins.\n\nIs all that really worth it?\n\nI mean: Your commit fixed the issue. Why fix it twice?",
      "parentUuid": "7eb3ccae_5e8e523d",
      "range": {
        "startLine": 334,
        "startChar": 16,
        "endLine": 334,
        "endChar": 23
      },
      "revId": "ae3c6a031a98278b3c9b8f9262d374df324f9553",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7f02c72_d913ca13",
        "filename": "java/com/google/gerrit/httpd/WebSessionManager.java",
        "patchSetId": 4
      },
      "lineNbr": 334,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-19T08:52:04Z",
      "side": 1,
      "message": "\u003e Sure, that will work.\n\u003e \n\u003e But that reverse-lookup is another cache that we need to persist and manage.\n\nPersist? Manage? It will be automatic, I don\u0027t expect the Gerrit admin to do anything with it. I won\u0027t even persist it anyway: it\u0027s a cache.\n\nIf a session hasn\u0027t been used for days, it would be possibly already expired, isn\u0027t it?\n\n\u003e We have tooling for that. Agreed. But it increases complexity of our code-base\n\u003e and for admins.\n\nLet me try that path and see what\u0027s the complexity associated with it.\n\n\u003e Is all that really worth it?\n\nI don\u0027t know, it depends how critical is the problem of keeping a session associated to a disabled account?\n\n\u003e I mean: Your commit fixed the issue. Why fix it twice?\n\nI leave to you to decide, it depends on your policies at Wikimedia Foundation. I don\u0027t believe anyone else raised this problem / concern.",
      "parentUuid": "aaf352a7_1ddfe638",
      "range": {
        "startLine": 334,
        "startChar": 16,
        "endLine": 334,
        "endChar": 23
      },
      "revId": "ae3c6a031a98278b3c9b8f9262d374df324f9553",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c0f6814_9b4a2e2d",
        "filename": "java/com/google/gerrit/httpd/WebSessionManager.java",
        "patchSetId": 4
      },
      "lineNbr": 334,
      "author": {
        "id": 1012155
      },
      "writtenOn": "2020-06-19T09:16:26Z",
      "side": 1,
      "message": "\u003e I won\u0027t even persist it anyway: it\u0027s a cache.\n\nIf you don\u0027t persist it, you create a loop-hole. Because a server restart would remove the association between session and user, yet the session (as it\u0027s persistent) survives a restart.\n\n\u003e \u003e I mean: Your commit fixed the issue. Why fix it twice?\n\u003e\n\u003e I leave to you to decide, it depends on your policies at Wikimedia Foundation.\n\nThe issue we had, was that an inactive user could continue to use it\u0027s session.\nYour merged commit fixed that issue.\n\nIt would of course be nice to also evict affected sessions right when the\ndeactivation occurs. Unfortunately, it\u0027s not easily possible with the current machinery. But that would have just been the icing on the cake anyways.\n\nYour fix is perfectly effective without that.\nSo as I said before, I\u0027d stop at this point.\nNo need to fix the issue twice.\n\nI\u0027d just abandon this and my corresponding change I0b09bbf96dcad2c5d13f7faa07bcf69212355918.\n\nWhat do you think?",
      "parentUuid": "b7f02c72_d913ca13",
      "range": {
        "startLine": 334,
        "startChar": 16,
        "endLine": 334,
        "endChar": 23
      },
      "revId": "ae3c6a031a98278b3c9b8f9262d374df324f9553",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}