{
  "comments": [
    {
      "key": {
        "uuid": "a41da35e_3490f09d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/ApprovalsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-09-18T23:56:12Z",
      "side": 1,
      "message": "This is incorrect usage, you can\u0027t begin if you are already in a transaction (which this may be), and if you begin you must commit or rollback.",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84489f79_433506eb",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/ApprovalsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-19T04:12:09Z",
      "side": 1,
      "message": "Ups, copy-paste mistake :-(",
      "parentUuid": "a41da35e_3490f09d",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84489f79_4374e68f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/ApprovalsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-19T11:22:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84489f79_433506eb",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "443a27c6_d149c465",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/ApprovalsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-09-18T23:56:12Z",
      "side": 1,
      "message": "I think this is pretty verbose. Do we really need a new message on the change to indicate labels were copied?\n\nRemember that we are here because a new patch set was created, and that already creates a message. If we need these message text I think it should be part of message already noting a new revision exists.",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84489f79_233a0adb",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/ApprovalsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-19T04:12:09Z",
      "side": 1,
      "message": "I got the idea for adding such a message from your change (only you had it even more verbose adding a message per approval that was copied). I can try to incorporate this into the patch set created message, but not sure if this is easily possible.",
      "parentUuid": "443a27c6_d149c465",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84489f79_2369eab3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/ApprovalsUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-19T11:22:40Z",
      "side": 1,
      "message": "I have removed the message completely. We also do not have such a message if an approval is copied due to copyMinScore or copyMaxScore.",
      "parentUuid": "84489f79_233a0adb",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "443a27c6_b1464054",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 2
      },
      "lineNbr": 365,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-09-18T23:56:12Z",
      "side": 1,
      "message": "Did I suggest this in my abandoned change? Seems to me we shouldn\u0027t have trees identical on a trivial rebase. Such cases would mean any delta introduced by the new parent was deleted by this new commit, which is not the same delta as what was reviewed, and is not the delta that `git rebase` would probably have created.",
      "range": {
        "startLine": 363,
        "startChar": 4,
        "endLine": 365,
        "endChar": 5
      },
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84489f79_033f0ecb",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 2
      },
      "lineNbr": 365,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-19T04:12:09Z",
      "side": 1,
      "message": "Yes, this comes from your change. You\u0027ve had it as:\n\n  trivialRebase \u003d newCommit.getTree() \u003d\u003d prior.getTree()\t1589\n                || isTrivialRebase(prior, newCommit)\n\nSee https://gerrit-review.googlesource.com/#/c/34801/2/gerrit-server/src/main/java/com/google/gerrit/server/git/ReceiveCommits.java\n\nI thought it means that the parent wasn\u0027t changed.",
      "parentUuid": "443a27c6_b1464054",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84489f79_036eeebb",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 2
      },
      "lineNbr": 365,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-19T11:22:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84489f79_033f0ecb",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a41da35e_1495f48d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 2
      },
      "lineNbr": 371,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-09-18T23:56:12Z",
      "side": 1,
      "message": "nit: blank before here, I find it hard to read } followed by //",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "842fbf8b_8b430d44",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 2
      },
      "lineNbr": 371,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-19T11:22:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a41da35e_1495f48d",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "443a27c6_91433c44",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 2
      },
      "lineNbr": 375,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-09-18T23:56:12Z",
      "side": 1,
      "message": "Configure a MergeUtil.createDryRunInserter() here.",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "842fbf8b_6b86a16d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 2
      },
      "lineNbr": 375,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-19T11:22:40Z",
      "side": 1,
      "message": "I believe the dry-run-inserter can\u0027t be used here, because it comes up with random object ids. Due to this the result tree id will never be equal to the tree id of the next commit, which is the comparison we do below to detect a trivial rebase.",
      "parentUuid": "443a27c6_91433c44",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "241613dd_9833d5d7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 2
      },
      "lineNbr": 375,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-09-27T16:44:36Z",
      "side": 1,
      "message": "Why does it return random ObjectIds? It should return correct ids, but avoid writing to the object database.",
      "parentUuid": "842fbf8b_6b86a16d",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c44377e0_bd38ffb1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 2
      },
      "lineNbr": 375,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-27T16:55:36Z",
      "side": 1,
      "message": "Until now these IDs were not relevant, it was only important if the merge succeeded or not. At the moment the code looks like this:\n\n  public ObjectInserter createDryRunInserter() {\n    return new ObjectInserter() {\n      private final MutableObjectId buf \u003d new MutableObjectId();\n      private static final int LAST_BYTE \u003d Constants.OBJECT_ID_LENGTH - 1;\n\n      @Override\n      public ObjectId insert(int objectType, long length, InputStream in)\n          throws IOException {\n        // create non-existing dummy ID\n        buf.setByte(LAST_BYTE, buf.getByte(LAST_BYTE) + 1);\n        return buf.copy();\n      }\n      \n      ...\n\nHow would the computation  of the correct ObjectId be done?",
      "parentUuid": "241613dd_9833d5d7",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "241613dd_783b61ac",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 2
      },
      "lineNbr": 375,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-09-27T16:58:55Z",
      "side": 1,
      "message": "Delegate the insert() methods to idFor() methods.",
      "parentUuid": "c44377e0_bd38ffb1",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a45043a5_dc294d67",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PatchSetInserter.java",
        "patchSetId": 2
      },
      "lineNbr": 375,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-27T17:01:27Z",
      "side": 1,
      "message": "Cool, this is easy enough :-)",
      "parentUuid": "241613dd_783b61ac",
      "revId": "ae6e4723b7f7479a27c64b5ba14a079336a3f0df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}