{
  "comments": [
    {
      "key": {
        "uuid": "2d5efdcf_c656421f",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/raw/ProjectDocLoader.java",
        "patchSetId": 8
      },
      "lineNbr": 79,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-01-14T23:25:19Z",
      "side": 1,
      "message": "I wonder how can we unit test that the cache is actualy working? We can call the resoure twice, but how can we know that it was retrieved from the cache and wasn\u0027t rendered again by markdown?\n\n  @Test\n  @GerritConfig(name\u003d\"site.enableProjectDocs\", value\u003d\"true\")\n  public void getDoc() throws IOException, GitAPIException {\n    pushFactory.create(db, admin.getIdent(), \"Add readme\", \"README.md\", \"read me\")\n        .to(git, \"refs/heads/master\");\n\n    HttpResponse r \u003d httpSession.get(\"/doc/\" + project.get() + \"/README.html\");\n    String not_from_cache \u003d r.getEntityContent();\n    r \u003d httpSession.get(\"/doc/\" + project.get() + \"/README.html\");\n    String from_cache \u003d r.getEntityContent();\n    // how can we do this?\n    assertTrue(\"document was retrieved from cache\");\n  }",
      "range": {
        "startLine": 79,
        "startChar": 18,
        "endLine": 79,
        "endChar": 49
      },
      "revId": "aedb7f11c9d65af77caaf170a9cf7f8f6c823b0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2da19d0c_ee501f23",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/raw/ProjectDocLoader.java",
        "patchSetId": 8
      },
      "lineNbr": 79,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-01-15T21:09:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d5efdcf_c656421f",
      "range": {
        "startLine": 79,
        "startChar": 18,
        "endLine": 79,
        "endChar": 49
      },
      "revId": "aedb7f11c9d65af77caaf170a9cf7f8f6c823b0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2da19d0c_2ef0670a",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/raw/ProjectDocResourceKey.java",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-01-15T07:08:05Z",
      "side": 1,
      "message": "Nit: missing blank",
      "range": {
        "startLine": 25,
        "startChar": 71,
        "endLine": 25,
        "endChar": 72
      },
      "revId": "aedb7f11c9d65af77caaf170a9cf7f8f6c823b0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dbc1132_0f1f656e",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/raw/ProjectDocResourceKey.java",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-01-15T21:09:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2da19d0c_2ef0670a",
      "range": {
        "startLine": 25,
        "startChar": 71,
        "endLine": 25,
        "endChar": 72
      },
      "revId": "aedb7f11c9d65af77caaf170a9cf7f8f6c823b0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d5efdcf_2629569d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/raw/ProjectDocServlet.java",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-01-14T23:25:19Z",
      "side": 1,
      "message": "docCache?",
      "range": {
        "startLine": 62,
        "startChar": 9,
        "endLine": 62,
        "endChar": 22
      },
      "revId": "aedb7f11c9d65af77caaf170a9cf7f8f6c823b0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dbc1132_6f2c31ae",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/raw/ProjectDocServlet.java",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-01-15T21:09:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d5efdcf_2629569d",
      "range": {
        "startLine": 62,
        "startChar": 9,
        "endLine": 62,
        "endChar": 22
      },
      "revId": "aedb7f11c9d65af77caaf170a9cf7f8f6c823b0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad6aed63_ca7723b6",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/raw/ProjectDocServlet.java",
        "patchSetId": 8
      },
      "lineNbr": 116,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-01-14T23:25:19Z",
      "side": 1,
      "message": "I had to look into test and debug to understand what this condition is for.\n\nMay be it would be simpler, if this part of servlet lines 73 - 126 just extract all the needed parts:\n\n* rev\n* path\n* project\n\nand the whole checks and redirects and error reporting occurs later, in one place?",
      "range": {
        "startLine": 110,
        "startChar": 6,
        "endLine": 116,
        "endChar": 7
      },
      "revId": "aedb7f11c9d65af77caaf170a9cf7f8f6c823b0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dbc1132_af56191d",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/raw/ProjectDocServlet.java",
        "patchSetId": 8
      },
      "lineNbr": 116,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-01-15T21:09:18Z",
      "side": 1,
      "message": "Could be done, but since this code is not touched in this change it should be rather done in the predecessor commit.",
      "parentUuid": "ad6aed63_ca7723b6",
      "range": {
        "startLine": 110,
        "startChar": 6,
        "endLine": 116,
        "endChar": 7
      },
      "revId": "aedb7f11c9d65af77caaf170a9cf7f8f6c823b0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d5efdcf_a63c66df",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/raw/ProjectDocServlet.java",
        "patchSetId": 8
      },
      "lineNbr": 152,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-01-14T23:25:19Z",
      "side": 1,
      "message": "Objects.firstNonNull(rev, Constants.HEAD)",
      "range": {
        "startLine": 152,
        "startChar": 38,
        "endLine": 152,
        "endChar": 72
      },
      "revId": "aedb7f11c9d65af77caaf170a9cf7f8f6c823b0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2da19d0c_4e29739c",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/raw/ProjectDocServlet.java",
        "patchSetId": 8
      },
      "lineNbr": 152,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-01-15T21:09:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d5efdcf_a63c66df",
      "range": {
        "startLine": 152,
        "startChar": 38,
        "endLine": 152,
        "endChar": 72
      },
      "revId": "aedb7f11c9d65af77caaf170a9cf7f8f6c823b0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dbc1132_6f139172",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/raw/ProjectDocServlet.java",
        "patchSetId": 8
      },
      "lineNbr": 159,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-01-15T11:28:02Z",
      "side": 1,
      "message": "In second thought, why not to use ETags here, check for \"If-None-Match\" and return status 304 Not Modified instead of always returning the same response for unchanged resources?\n\nThat way we can also write a unit test and teach HttpSession to honor ETags and check, that the document was unchanged \u003d\u003d HTTP status 304.",
      "revId": "aedb7f11c9d65af77caaf170a9cf7f8f6c823b0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dbc1132_2f4b4976",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/raw/ProjectDocServlet.java",
        "patchSetId": 8
      },
      "lineNbr": 159,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-01-15T21:09:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4dbc1132_6f139172",
      "revId": "aedb7f11c9d65af77caaf170a9cf7f8f6c823b0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2da19d0c_6e138f72",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/resources/SmallResource.java",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-01-15T11:28:02Z",
      "side": 1,
      "message": "Derive BigResource or some such from this class or from Resource, and make it cacheable?",
      "revId": "aedb7f11c9d65af77caaf170a9cf7f8f6c823b0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2da19d0c_ce556311",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/resources/SmallResource.java",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-01-15T21:09:18Z",
      "side": 1,
      "message": "I\u0027ve added the Cache header in ProjectDocServlet.",
      "parentUuid": "2da19d0c_6e138f72",
      "revId": "aedb7f11c9d65af77caaf170a9cf7f8f6c823b0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}