{
  "comments": [
    {
      "key": {
        "uuid": "3f08ecaa_6810636e",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/GitHubLogin.java",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1010404
      },
      "writtenOn": "2014-05-29T12:57:11Z",
      "side": 1,
      "message": "Are you forced to do that redirect passing the OAuth access_token in the URL? One of the strengths of OAuth is that specifically the token can be kept \"private\".",
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f876029_a9179d5c",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/GitHubOAuthConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-05-29T01:57:44Z",
      "side": 1,
      "message": "is it possible to put these in the secure config?",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 59,
        "endChar": 78
      },
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f876029_c924d1d0",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/HttpGitHubOAuthModule.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-05-29T01:57:44Z",
      "side": 1,
      "message": "This and the other added files have older dates in the copyright header.  Is this intentional since the files are copied from the github plugin?",
      "range": {
        "startLine": 1,
        "startChar": 17,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f82641a_ea2187bd",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/OAuthProtocol.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-05-29T01:57:44Z",
      "side": 1,
      "message": "Missing copyright/license header.",
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f0de8bb_c7005e25",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/OAuthProtocol.java",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1010404
      },
      "writtenOn": "2014-05-29T12:57:11Z",
      "side": 1,
      "message": "Use Guava\u0027s Objects.hashCode? (or Java7\u0027s Objects.hash)",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 75,
        "endChar": 20
      },
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f0de8bb_e7fb62e2",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/OAuthProtocol.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1010404
      },
      "writtenOn": "2014-05-29T12:57:11Z",
      "side": 1,
      "message": "Use Guava\u0027s Objects.equal? (or Java 7\u0027s Objects.equals)",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 90,
        "endChar": 18
      },
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f08ecaa_a8f53bed",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/OAuthProtocol.java",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1010404
      },
      "writtenOn": "2014-05-29T12:57:11Z",
      "side": 1,
      "message": "Couldn\u0027t you inject an HttpClint instance directly then?",
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f08ecaa_88fa77db",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/OAuthProtocol.java",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1010404
      },
      "writtenOn": "2014-05-29T12:57:11Z",
      "side": 1,
      "message": "That second (empty string) argument (and the corresponding %s in the format string) is useless.",
      "range": {
        "startLine": 108,
        "startChar": 8,
        "endLine": 108,
        "endChar": 33
      },
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f0de8bb_a7f56aed",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/OAuthProtocol.java",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1010404
      },
      "writtenOn": "2014-05-29T12:57:11Z",
      "side": 1,
      "message": "If this is what\u0027s used on gerrithub.io, that doesn\u0027t look secure: the me() is the same for me between different browsers.\n\nYou\u0027ll want to generate a cryptographically-secure random and store it in a cookie.\n\nSee http://tools.ietf.org/html/rfc6819#section-3.6 for the related threat.\n\nIt\u0027s not a serious threat in the context of Gerrit I believe (allows an attacker to log you in with his own account; the main risk is when the victim will later enter credit card number or link account to Paypal, etc.), which is why I disclose it here publicly.",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 109,
        "endChar": 66
      },
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f0de8bb_6710926e",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/OAuthProtocol.java",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-05-29T14:04:36Z",
      "side": 1,
      "message": "Thanks Thomas for this security feedback.\nCan you explain exactly the scenario and how a potential attacker could use it to steal personal information or impersonate yourself on Gerrit  ?\n\nThe pattern for OAuth implementation is taken directly from GitHub documentation, so if that pattern is flowed potentially many other applications integrated with GitHub would have the same problem :-(\n\nIt is important then to clarify what is the problem / risk and find an effective workaround.",
      "parentUuid": "1f0de8bb_a7f56aed",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 109,
        "endChar": 66
      },
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f0de8bb_270a9a40",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/OAuthProtocol.java",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1010404
      },
      "writtenOn": "2014-05-29T16:01:44Z",
      "side": 1,
      "message": "As an attacker, I intercept the URL GitHub redirects to (the one at gerrithub containing the code) without dereferencing it (something like https://review.gerrithub.io/oauth?code\u003df500ac0f787d222fc7ad\u0026state\u003d626120578%2C%2Flogin) and lead you to follow it; and bam, you\u0027re logged in to gerrithub as \"Thomas Broyer\".\n\nAs I said, this is no big deal for Gerrit. All I could do (unless I missed something important) is trick you to give me your email address or your SSH public key.\n\nI could possibly badly interact with other plugins that ask you for more information though (e.g. enter your payment info to get *me* a \"premium account\", and possibly give *me* your payment info to retrive later from *my* account where you entered them)",
      "parentUuid": "1f0de8bb_6710926e",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 109,
        "endChar": 66
      },
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f0de8bb_07079636",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/OAuthProtocol.java",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2014-05-29T16:11:22Z",
      "side": 1,
      "message": "mmm ... intercepting a URL redirect over HTTPS ? and modifying it ?\n\nIt would be possibly ONLY if you\u0027ve stolen the SSL Server private key ... and if you did it ... you definitely have MUCH BIGGER PROBLEMS right ?\n\nWith security, the overall security of a system is as strong as the weakest link: if you someone has stolen the SSL Server private key, the weakest link is not really the URL redirect :-)\n\nDoes it make sense ?",
      "parentUuid": "1f0de8bb_270a9a40",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 109,
        "endChar": 66
      },
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f0de8bb_87fa66db",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/auth/github/OAuthProtocol.java",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1010404
      },
      "writtenOn": "2014-05-29T12:57:11Z",
      "side": 1,
      "message": "This is where you\u0027re supposed to validate the random part of the \"state\" to mitigate CSRF, before you make the request to GitHub to exchange the code for a token.",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 130,
        "endChar": 56
      },
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f82641a_0a4edb81",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/AuthConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 201,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-05-29T01:57:44Z",
      "side": 1,
      "message": "nit: It\u0027s",
      "range": {
        "startLine": 201,
        "startChar": 11,
        "endLine": 201,
        "endChar": 14
      },
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f82641a_2a539f26",
        "filename": "lib/BUCK",
        "patchSetId": 1
      },
      "lineNbr": 351,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-05-29T01:57:44Z",
      "side": 1,
      "message": "nit: trailing whitespace",
      "range": {
        "startLine": 351,
        "startChar": 9,
        "endLine": 351,
        "endChar": 10
      },
      "revId": "aefe4c8546a8f0984c02042d4debf4efe6014455",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}