{
  "pushCert": "certificate version 0.1\npusher Dave Borowitz \u003cdborowitz@google.com\u003e 1479839842 -0500\nnonce AG58fQow1yrXSeRYtvy91wmDAOfv066dXd4cBMx91MbSF3Gcg9VOtbiOqseDy3eY070okOdpGzS8\n\n0000000000000000000000000000000000000000 702d1830ed2c8ab6425584592321a3ffadda94fe refs/for/master\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYNJBiAAoJEF/XxZqaEoiM2twQAKRYXsdBylrKFvoaDinza1Q9\nIbSliqHLTaH/klR/pBthKLnbzp8rd37Y5uJ3akHai1bqQ13xZa2W4Gdl10GShPt7\njJvQJFO/uwECskEq/2DkuR7djCxTSXBTFro8eW8M7X/dQntgKQtcAEIaolTvHR7I\nCfHVO7NtU4ng2BFcFe8UTMjdRiqH6opMCCEBZvHKQ961dyEe8OhgWLOw2rpZaXG1\nusRxnI7R9yeKYtgnwIZekozUfiPvPAgYpUiOXDdRgtFS5jaM8ZKLj9iAjr/OZqgW\ndheKLssWl1drOQcDWq58HBdD9QmlrC4MLd/6mbWspc7mQtZcOShI1zp7rs0bjdBN\ncYkhPt//8unAcRoP377dSxTWt5deNFSXbQJ/NVcXYKuwZy9wWQKAQN2FmA0qchhx\nFG0LHDQ3N4yjeIPfafPqDt+QdPxyE3u40tEW4cT7p4Q0elZgzCXPzOufUB3dkXOi\nvH0T5MdDBmcPiCWmaR45VW0dQvQJGzm+CJ0EuVDBfj4U7vhCQdi86QfOM/bFy7xK\n1s7gkR4ADSj4Ne1/sNMq+dAIQNHuOCVx5YOHmoimvL+y2ZOe89E8Pga40XxTesRe\nZ0eBRiHLreIqh1jkG4CucfY/WFxCJOXZc2YgiHDcLy4cBIcdVCHQPrZxDE9Wgs4w\n451BZGap5X6lGf+wT2/9\n\u003dSAMB\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "70e76057_c0c9be14",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-11-23T15:34:30Z",
      "side": 1,
      "message": "Should robot comments be mentioned here?",
      "range": {
        "startLine": 21,
        "startChar": 3,
        "endLine": 21,
        "endChar": 29
      },
      "revId": "af600037015e9ef080ab23a98dc4c93f85ef1f64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90e69458_81d85adc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-11-23T20:28:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70e76057_c0c9be14",
      "revId": "af600037015e9ef080ab23a98dc4c93f85ef1f64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0e1d842_02da8a07",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-11-22T19:44:15Z",
      "side": 1,
      "message": "I would also be open to storing these in a JSON format like we do for a few other fields, rather than parse Yet Another Format. Any thoughts one way or the other?",
      "range": {
        "startLine": 26,
        "startChar": 8,
        "endLine": 26,
        "endChar": 29
      },
      "revId": "af600037015e9ef080ab23a98dc4c93f85ef1f64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70e76057_20b4ea81",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 3
      },
      "lineNbr": 962,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-11-23T15:34:30Z",
      "side": 1,
      "message": "Why not just String?",
      "range": {
        "startLine": 962,
        "startChar": 52,
        "endLine": 962,
        "endChar": 58
      },
      "revId": "af600037015e9ef080ab23a98dc4c93f85ef1f64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0e1d842_6201d66a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 3
      },
      "lineNbr": 962,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-11-23T15:40:02Z",
      "side": 1,
      "message": "STORED_ONLY is a FieldType\u003cbyte[]\u003e\n\nI guess we could add STORED_ONLY_STRING, that would simplify this code and the other JSON parsing code (but we still need the byte[] version for the proto fields).",
      "parentUuid": "70e76057_20b4ea81",
      "revId": "af600037015e9ef080ab23a98dc4c93f85ef1f64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70e76057_e0c8420e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 3
      },
      "lineNbr": 962,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-11-23T15:46:15Z",
      "side": 1,
      "message": "I missed that STORED_ONLY is always FieldType\u003cbyte[]\u003e. I\u0027m fine with byte[] then.",
      "parentUuid": "b0e1d842_6201d66a",
      "revId": "af600037015e9ef080ab23a98dc4c93f85ef1f64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0e1d842_a2611e4f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 3
      },
      "lineNbr": 962,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-11-23T16:07:55Z",
      "side": 1,
      "message": "(We can always clean this up later; it wouldn\u0027t affect the data stored in the index.)",
      "parentUuid": "70e76057_e0c8420e",
      "revId": "af600037015e9ef080ab23a98dc4c93f85ef1f64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50ec1c3c_bfc93715",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 3
      },
      "lineNbr": 989,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-11-23T15:34:30Z",
      "side": 1,
      "message": "nit: bad formatting",
      "range": {
        "startLine": 989,
        "startChar": 8,
        "endLine": 989,
        "endChar": 12
      },
      "revId": "af600037015e9ef080ab23a98dc4c93f85ef1f64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70e76057_a0ce3a18",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 3
      },
      "lineNbr": 1013,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-11-23T15:34:30Z",
      "side": 1,
      "message": "Should this be\n\n  RefNames.refsStarredChangesPrefix(id) + \"*\"\n\n?",
      "range": {
        "startLine": 1013,
        "startChar": 27,
        "endLine": 1013,
        "endChar": 64
      },
      "revId": "af600037015e9ef080ab23a98dc4c93f85ef1f64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0e1d842_22b4ee81",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 3
      },
      "lineNbr": 1013,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-11-23T20:28:38Z",
      "side": 1,
      "message": "Good catch.\n\nThis would have been caught in tests if the toByteArray actually round-tripped through RefStatePattern, since this incorrect format would have failed the checks in RefStatePattern#create.\n\nFixed.",
      "parentUuid": "70e76057_a0ce3a18",
      "revId": "af600037015e9ef080ab23a98dc4c93f85ef1f64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50ec1c3c_9fcef318",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 3
      },
      "lineNbr": 1015,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-11-23T15:34:30Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 1015,
        "startChar": 27,
        "endLine": 1015,
        "endChar": 63
      },
      "revId": "af600037015e9ef080ab23a98dc4c93f85ef1f64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90e69458_41de52ca",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 3
      },
      "lineNbr": 1015,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-11-23T20:28:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50ec1c3c_9fcef318",
      "revId": "af600037015e9ef080ab23a98dc4c93f85ef1f64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50ec1c3c_dfc87b0e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/StalenessChecker.java",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-11-23T15:34:30Z",
      "side": 1,
      "message": "Why don\u0027t we check also for\n\n  !parts.get(2).isEmpty()\n\n?\n\nIf parts.get(2) is empty we will fail in RefState.create since ObjectId.fromString would throw an InvalidObjectIdException, wouldn\u0027t it?",
      "range": {
        "startLine": 55,
        "startChar": 14,
        "endLine": 55,
        "endChar": 41
      },
      "revId": "af600037015e9ef080ab23a98dc4c93f85ef1f64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90e69458_21db4eda",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/StalenessChecker.java",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-11-23T20:28:38Z",
      "side": 1,
      "message": "Right, ObjectId.fromString would throw, that\u0027s good enough for me.\n\n(Actually it would have to be ObjectId.isId(parts.get(2)) which just seems extra redundant.)",
      "parentUuid": "50ec1c3c_dfc87b0e",
      "revId": "af600037015e9ef080ab23a98dc4c93f85ef1f64",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}