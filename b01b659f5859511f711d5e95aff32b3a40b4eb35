{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "06f6bc23_0c6a2cb1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-04-08T07:29:55Z",
      "side": 1,
      "message": "I had a quick look, but did not finish review.\n\nYou\u0027re choosing to fix this in the backend, but have you considered a front-end solution? \n\nif we let the front-end do the substitution, it could use a richer UI, eg. show an account chip with avatar.  ",
      "revId": "b01b659f5859511f711d5e95aff32b3a40b4eb35",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33fff0ea_96a6a648",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2021-04-08T10:01:01Z",
      "side": 1,
      "message": "I did consider that, but I think it is better to do in the backend:\n* We need to replace templates in the backend for indexing changes on comments anyway\n* In the same commit message, we might have templates for multiple accounts, which means frontend would have to call backend to get account information for each of the accounts in the message.\n* If we do it in the frontend for existing instances, each time we add a new feature we would have to add frontend support to it (especially if we add more templates at some point).\n\nShowing an avatar sounds like a UI feature request rather than fixing NoteDB :)",
      "parentUuid": "06f6bc23_0c6a2cb1",
      "revId": "b01b659f5859511f711d5e95aff32b3a40b4eb35",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87dcb9b7_ceef4eb4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-04-08T10:10:22Z",
      "side": 1,
      "message": "\u003e We need to replace templates in the backend for indexing changes on comments anyway\n\nAt first that sounded like a decisive reason, but it actually means that we are also persisting PII in the index, and if an account gets removed we won\u0027t have a way to cleanup the index.",
      "parentUuid": "33fff0ea_96a6a648",
      "revId": "b01b659f5859511f711d5e95aff32b3a40b4eb35",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "848ac390_b3588b09",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-04-08T13:19:00Z",
      "side": 1,
      "message": "There seem to be two solutions to this:\na) Introduce the same indirection into the index, i.e. when searching the index for e.g. email address, we convert that to the account ID. Maybe this isn\u0027t even that hard. It might also enable template expansion on the FE, though I think the 3rd con Marija listed above is still valid.\nb) Have the Wipeout Flume update the index on account deletion. Or do that in the reindex_stale_* jobs; at first glance that seems to be feasible: http://google3/third_party/java_src/gerritcodereview/gerrit/java/com/google/gerrit/server/index/change/StalenessChecker.java?l\u003d104\u0026rcl\u003d366916968",
      "parentUuid": "87dcb9b7_ceef4eb4",
      "revId": "b01b659f5859511f711d5e95aff32b3a40b4eb35",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e2643fa_eb0a3815",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-04-08T14:42:30Z",
      "side": 1,
      "message": "\u003e Have the Wipeout Flume update the index on account deletion. \n\na wise man once said to me that it\u0027s better to avoid post-facto fixup jobs ðŸ˜Š\n\nInside Google, The wipeout flume may work for account deletions, but won\u0027t cut it for name changes, which is another area we want to improve. You could use the reindex flume by adding all the user refs as input to the staleness check.\n\nHowever\n\n* upstream Gerrit doesn\u0027t have flumes.\n\n* if we\u0027re trying to not persist PII, to me it seems most logical to avoid persisting it all places, including the index.\n\n\u003e In the same commit message, we might have templates for multiple accounts, which means frontend would have to call backend to get account information for each of the accounts in the message.\n\ncorrect. But we get the account IDs involved from NoteDb footers, right? So we can ship them in the ChangeInfo, without much extra overhead. \n\n\u003e each time we add a new feature we would have to add frontend support to it\n\nThe avatar/chip idea is probably nicer than necessary, but if you do textual substitution, it seems like an equal amount of work, whether you do it in the frontend or the backend, no?",
      "parentUuid": "848ac390_b3588b09",
      "revId": "b01b659f5859511f711d5e95aff32b3a40b4eb35",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8470baeb_e168613c",
        "filename": "java/com/google/gerrit/entities/ChangeMessage.java",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-04-08T07:29:55Z",
      "side": 1,
      "message": "does this need updatign?",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 153,
        "endChar": 52
      },
      "revId": "b01b659f5859511f711d5e95aff32b3a40b4eb35",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4cc22a9_8bedc58f",
        "filename": "java/com/google/gerrit/entities/ChangeMessage.java",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2021-04-08T10:01:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8470baeb_e168613c",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 153,
        "endChar": 52
      },
      "revId": "b01b659f5859511f711d5e95aff32b3a40b4eb35",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a00a9da8_38a58d72",
        "filename": "java/com/google/gerrit/entities/ChangeMessage.java",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-04-08T07:29:55Z",
      "side": 1,
      "message": "detailedMessage\u003d ?",
      "range": {
        "startLine": 175,
        "startChar": 13,
        "endLine": 178,
        "endChar": 15
      },
      "revId": "b01b659f5859511f711d5e95aff32b3a40b4eb35",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44d752e8_511845fe",
        "filename": "java/com/google/gerrit/entities/ChangeMessage.java",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2021-04-08T10:01:01Z",
      "side": 1,
      "message": "I though it could be redundant, but added.",
      "parentUuid": "a00a9da8_38a58d72",
      "range": {
        "startLine": 175,
        "startChar": 13,
        "endLine": 178,
        "endChar": 15
      },
      "revId": "b01b659f5859511f711d5e95aff32b3a40b4eb35",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}