{
  "comments": [
    {
      "key": {
        "uuid": "a7e971aa_d3d584ac",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-08-31T11:07:52Z",
      "side": 1,
      "message": "maybe `PluginInfo` ?",
      "range": {
        "startLine": 40,
        "startChar": 10,
        "endLine": 40,
        "endChar": 22
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c678ef0_1d42f2a0",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-08-31T20:43:49Z",
      "side": 1,
      "message": "PluginObject is maybe not ideal, but the Info suffix is kind of tied to API objects, so I would also like to avoid that. Don\u0027t have a better idea. :-/",
      "parentUuid": "a7e971aa_d3d584ac",
      "range": {
        "startLine": 40,
        "startChar": 10,
        "endLine": 40,
        "endChar": 22
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53eebeb0_8d052fec",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-08-31T11:07:52Z",
      "side": 1,
      "message": "its recommended to use `interface` instead of type alias for object types:\n\n\n```\nTypeScript supports type aliases for naming a type expression. This can be used to name primitives, unions, tuples, and any other types.\n\nHowever, when declaring types for objects, use interfaces instead of a type alias for the object literal expression.\n```",
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "398a8274_3c922518",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-08-31T20:43:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53eebeb0_8d052fec",
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6610728b_39eba39f",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-08-31T11:07:52Z",
      "side": 1,
      "message": "why its unknown ? can we make it void ?",
      "range": {
        "startLine": 92,
        "startChar": 27,
        "endLine": 92,
        "endChar": 34
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8eae840e_5e625eed",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-08-31T20:43:49Z",
      "side": 1,
      "message": "Done. At the expense of a `as Promise\u003cvoid\u003e` cast in awaitPluginsLoaded().",
      "parentUuid": "6610728b_39eba39f",
      "range": {
        "startLine": 92,
        "startChar": 27,
        "endLine": 92,
        "endChar": 34
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58f01d31_5f641ce2",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-08-31T11:07:52Z",
      "side": 1,
      "message": "is this necessary ? can it just be `() \u003d\u003e void)` instead",
      "range": {
        "startLine": 95,
        "startChar": 22,
        "endLine": 95,
        "endChar": 37
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0680a3fb_c8e7c374",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-08-31T20:43:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "58f01d31_5f641ce2",
      "range": {
        "startLine": 95,
        "startChar": 22,
        "endLine": 95,
        "endChar": 37
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "863c8347_3094a212",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-08-31T11:07:52Z",
      "side": 1,
      "message": "why not also remove `opt_` here ?",
      "range": {
        "startLine": 173,
        "startChar": 4,
        "endLine": 173,
        "endChar": 15
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cd0ffb9_a3f07a66",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-08-31T20:43:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "863c8347_3094a212",
      "range": {
        "startLine": 173,
        "startChar": 4,
        "endLine": 173,
        "endChar": 15
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d242c73_8d84921d",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-08-31T11:07:52Z",
      "side": 1,
      "message": "this is pretty hard to read lol, why not just:\n\n`document.currentScript?[\"__importElement\"] : document.currentScript) as unknown as HTMLScriptElement|null`\n\nshould be the same ?",
      "range": {
        "startLine": 177,
        "startChar": 4,
        "endLine": 179,
        "endChar": 69
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e09488c3_9e5d693b",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-08-31T20:43:49Z",
      "side": 1,
      "message": "Accessing [\"__importElement\"] does not work without prior casting.\n\nI think this is a good compromise:\n\n  const gerritScript \u003d document.currentScript as GerritScriptElement|null;\n  const script \u003d gerritScript?.__importElement ?? gerritScript;",
      "parentUuid": "0d242c73_8d84921d",
      "range": {
        "startLine": 177,
        "startChar": 4,
        "endLine": 179,
        "endChar": 69
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56dd874f_1234a911",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 193,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-08-31T11:07:52Z",
      "side": 1,
      "message": "this probably fits better to a template string as well",
      "range": {
        "startLine": 190,
        "startChar": 10,
        "endLine": 193,
        "endChar": 24
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e2f29b2_1591ecce",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 193,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-08-31T20:43:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56dd874f_1234a911",
      "range": {
        "startLine": 190,
        "startChar": 10,
        "endLine": 193,
        "endChar": 24
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d77d9d9c_e20d594b",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 357,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-08-31T11:07:52Z",
      "side": 1,
      "message": "maybe just use the augmented type (same as window.onerror): `OnErrorEventHandlerNonNull`",
      "range": {
        "startLine": 357,
        "startChar": 57,
        "endLine": 357,
        "endChar": 76
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8043450d_1f86ac01",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 357,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-08-31T20:43:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d77d9d9c_e20d594b",
      "range": {
        "startLine": 357,
        "startChar": 57,
        "endLine": 357,
        "endChar": 76
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e35b4dde_645079c6",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 395,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-08-31T11:07:52Z",
      "side": 1,
      "message": "can we overload this method so `_urlFor` with non-empty `pathOrUrl` always return non-empty string ? that should simplify a lot checks above",
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a318c9c5_4e542caa",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 395,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-08-31T20:43:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e35b4dde_645079c6",
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f18cddb1_c7e3b9f5",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 425,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2020-08-31T11:07:52Z",
      "side": 1,
      "message": "add a note on why this must exist when `shouldTryLoadFromAssetsPathFirst` is true.\nits a good habit to always add a note when use `!`",
      "range": {
        "startLine": 425,
        "startChar": 13,
        "endLine": 425,
        "endChar": 23
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c03d086d_92172aa2",
        "filename": "polygerrit-ui/app/elements/shared/gr-js-api-interface/gr-plugin-loader.ts",
        "patchSetId": 1
      },
      "lineNbr": 425,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-08-31T20:43:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f18cddb1_c7e3b9f5",
      "range": {
        "startLine": 425,
        "startChar": 13,
        "endLine": 425,
        "endChar": 23
      },
      "revId": "b0de99d57dab42b96bce21c41e642ede438118bd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}