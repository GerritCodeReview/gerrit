{
  "comments": [
    {
      "key": {
        "uuid": "8960ad3c_356b88cf",
        "filename": "java/com/google/gerrit/exceptions/InvalidMergeStrategyException.java",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-12-03T11:34:52Z",
      "side": 1,
      "message": "Should this be an IOException?",
      "range": {
        "startLine": 19,
        "startChar": 43,
        "endLine": 19,
        "endChar": 62
      },
      "revId": "b0fa4d7c0df27b18c577d988507b43739ac6539c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30c03c49_12098adb",
        "filename": "java/com/google/gerrit/exceptions/InvalidMergeStrategyException.java",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-12-03T11:42:01Z",
      "side": 1,
      "message": "Making it an IOException means it gets caught by existing catch blocks for IOException.  Previously an IllegalArgumentException was being thrown, which is an unchecked exception and thus was not caught by those but somewhere at the top level handling.",
      "parentUuid": "8960ad3c_356b88cf",
      "range": {
        "startLine": 19,
        "startChar": 43,
        "endLine": 19,
        "endChar": 62
      },
      "revId": "b0fa4d7c0df27b18c577d988507b43739ac6539c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc45feae_011bed8f",
        "filename": "java/com/google/gerrit/exceptions/InvalidMergeStrategyException.java",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-12-03T11:50:41Z",
      "side": 1,
      "message": "If it\u0027s too much work to handle this exception everywhere, maybe it can continue to be a RuntimeException as it was before with IllegalArgumentException? So we could just extend RuntimeException here.",
      "parentUuid": "30c03c49_12098adb",
      "range": {
        "startLine": 19,
        "startChar": 43,
        "endLine": 19,
        "endChar": 62
      },
      "revId": "b0fa4d7c0df27b18c577d988507b43739ac6539c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "955cb5b2_17c9a3a3",
        "filename": "java/com/google/gerrit/exceptions/InvalidMergeStrategyException.java",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-12-03T23:20:27Z",
      "side": 1,
      "message": "It can be a RuntimeException, but that\u0027s an unchecked exception and the compiler will not tell you when you write code that can potentially result in it being thrown. This would be consistent with how it was before, but I think having a checked exception is an improvement.",
      "parentUuid": "fc45feae_011bed8f",
      "range": {
        "startLine": 19,
        "startChar": 43,
        "endLine": 19,
        "endChar": 62
      },
      "revId": "b0fa4d7c0df27b18c577d988507b43739ac6539c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5aebabcf_f35dc5a9",
        "filename": "java/com/google/gerrit/exceptions/InvalidMergeStrategyException.java",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-12-04T14:49:08Z",
      "side": 1,
      "message": "I think in this case we should adapt all callers to handle this exception (instead of extending IOException).",
      "parentUuid": "955cb5b2_17c9a3a3",
      "range": {
        "startLine": 19,
        "startChar": 43,
        "endLine": 19,
        "endChar": 62
      },
      "revId": "b0fa4d7c0df27b18c577d988507b43739ac6539c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "feb854c2_2a47e952",
        "filename": "java/com/google/gerrit/server/restapi/change/CreateChange.java",
        "patchSetId": 2
      },
      "lineNbr": 524,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-12-03T11:34:52Z",
      "side": 1,
      "message": "I think it would be better to have separate catch clauses for NoMergeBaseException and InvalidMergeStrategyException. Or, as it is now InvalidMergeStrategyException is caught and rethrown, so we would not need to catch it at all. However since the merge strategy comes from the input that the user provided, we should actually convert InvalidMergeStrategyException into a BadRequestException (could be done as follow-up change).",
      "range": {
        "startLine": 514,
        "startChar": 4,
        "endLine": 524,
        "endChar": 5
      },
      "revId": "b0fa4d7c0df27b18c577d988507b43739ac6539c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "717b646b_6ad1916b",
        "filename": "java/com/google/gerrit/server/restapi/change/CreateChange.java",
        "patchSetId": 2
      },
      "lineNbr": 524,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-12-03T11:42:01Z",
      "side": 1,
      "message": "It looks like the whole change here is not needed.  The InvalidMergeStrategyException gets caught at L343 and translated into a BadRequestException.",
      "parentUuid": "feb854c2_2a47e952",
      "range": {
        "startLine": 514,
        "startChar": 4,
        "endLine": 524,
        "endChar": 5
      },
      "revId": "b0fa4d7c0df27b18c577d988507b43739ac6539c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}