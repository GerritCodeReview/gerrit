{
  "pushCert": "certificate version 0.1\npusher Dave Borowitz \u003cdborowitz@google.com\u003e 1538432991 -0700\nnonce AP50N7Z/FSN/uUG8onzgOW3wNU3BEuzXqZU7OuIkIfSFZ/8catUGQ2XYA8fHqFLEQ2ZxpJdiGiGq\n\n0000000000000000000000000000000000000000 fecdc8a1e967219a956dd441ff6e226223729411 refs/for/master%r\u003dhiesel@google.com,r\u003dlogan@google.com\n-----BEGIN PGP SIGNATURE-----\n\niQJJBAABCgAzFiEEpPm/sOxWgSqG5grhX9fFmpoSiIwFAluyn98VHGRib3Jvd2l0\nekBnb29nbGUuY29tAAoJEF/XxZqaEoiMtn8QAJooXgb0twULHFwOA3Qn2akyD8qF\nsgbt24saMhx+umdKcqF7ewoFgMElw55fSgMs00bDjDU3dPzpEtNWw0x1g8kAU4gg\n1iTVC51bL8HNmbDQBHv1PswukbdN4u+GOYrGm50ou2m+K1bGR8NdGa/tJ0d5uTw8\nkPGQbRBMsexPj5lNsJnVOC15i2/5IzRGc9ypsFhBlReO0hCAKtXoqca5wkHs2dNe\nKssu3MzaLQFco4O39ry/wTSI4OlC4PJ0Xik1al3j4ZO7hxRPXJjXQ2BLosyach+m\nW/MP5bLW3b+Uau21oOcOD3h2IELyr5rrszQXv99r4cqExieYY2G302K+UnztyUdG\nc9XAJwpwzXsqH9MIYs45cK+YMAzyovjbGm36Wji0ROMtzSlZu7q2dgr5ub0gBdpY\n4dp37tQOscYA59FBqlZD/w91wLLYI5OHB+okEJLPC/sjWP6Q1XOJxtGQCAK59akA\nNH6V7rMxVM3LH6biSwXtrwz/NABWHwAoKF+TM1OKjjdCT4wVbpAmrUxT/97pIEoP\nvc5K2uZYqXiUyiJmgEukKSH7xV5aAx+JOuOZ3yhjepukZjk4OkVJbPbRhWCUl7oJ\nJGpIjzd1hUHcpGp3rqQtIL0ElSzwy7BUR7RCav9/5FAgmgD3pvxfimj5T4m9Y7c/\nXFZaTafbBvF9y89q\n\u003dGuX8\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "80b9c031_4c22c853",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-10-02T09:27:56Z",
      "side": 1,
      "message": "I think this is what you are suggesting, but I am not 100% sure from the wording: I think we would do ourselves a favor if all processing logic would move out of PostReviewer making it so that PostReviewer just contains the REST-to-processing glue code. That makes reusing it somewhere else cleaner.\n\nSimilarly, it\u0027d be nice if PostReview would not just reuse another API endpoint (PostReviewers) but of processing would be again moved out.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 55
      },
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93757bd0_e80325a4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-02T19:39:42Z",
      "side": 1,
      "message": "\u003e I think this is what you are suggesting, but I am not 100% sure from the wording: I think we would do ourselves a favor if all processing logic would move out of PostReviewer making it so that PostReviewer just contains the REST-to-processing glue code. That makes reusing it somewhere else cleaner.\n\nWe\u0027re certainly moving in that direction: PostReviewers#applyImpl is a quite thin wrapper around prepareApplication followed by addOp(addition.op). But I haven\u0027t yet moved prepareApplication \u0026 Addition to their own class; point taken that that\u0027s a much better end state.\n\nThat said, I\u0027m leaning towards doing that final refactoring after finishing the work to reuse PostReviewersOp from ChangeInserter, which has actual user impact. Let me know if you think I should do it earlier.\n\n\u003e Similarly, it\u0027d be nice if PostReview would not just reuse another API endpoint (PostReviewers) but of processing would be again moved out.\n\nWell, it\u0027s not like PostReview doesn\u0027t call PostReviewers#applyImpl, it just calls prepareApplication. So once that\u0027s moved out then PostReview would have no dependency on PostReviewers.",
      "parentUuid": "80b9c031_4c22c853",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 55
      },
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b987dd7_a032db4c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-03T17:25:47Z",
      "side": 1,
      "message": "\u003e That said, I\u0027m leaning towards doing that final refactoring after finishing the work to reuse PostReviewersOp from ChangeInserter, which has actual user impact. Let me know if you think I should do it earlier.\n\nActually, I have to move it out of the restapi package if we want to be able to reuse it from ChangeInserter, so I guess I\u0027m doing it sooner rather than later.",
      "parentUuid": "93757bd0_e80325a4",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 55
      },
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1b726e2_38f6868e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-10-02T09:27:56Z",
      "side": 1,
      "message": "In my opinion, having the ChangeResource as a container for change + user in API code is completely fine. However, this aids my previous comment: This isn\u0027t just API code anymore, it is reused elsewhere. So removing ChangeResource sounds good to me.",
      "range": {
        "startLine": 14,
        "startChar": 2,
        "endLine": 14,
        "endChar": 30
      },
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4eabb3f_66c02802",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-01T22:32:24Z",
      "side": 1,
      "message": "Patrick, please double-check my thinking here.\n\nThe reason I really want to do this is that if we reuse PostReviewersOp from ReceiveCommits when creating a new change, the ChangeNotes that we have will be a stub for the to-be-created change. I am not at all confident that such a stub will work in all the places in this class where we would like to use it from within PostReviewersOp.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 25
      },
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b9f0e3c_697b5df7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-10-02T09:27:56Z",
      "side": 1,
      "message": "Technically, you can assign viewPrivateChanges to anonymous users (for sure a reductio ad absurdum).\n\nPersonally, I think the ref-check as replacement for the change-check is OK. If you want to keep the existing behavior, you could pass around the ChangeNotes instead of the destination branch key and just make sure they don\u0027t get passed into the Op.",
      "parentUuid": "a4eabb3f_66c02802",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 25
      },
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4594a374_6077617a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-02T19:39:42Z",
      "side": 1,
      "message": "\u003e Technically, you can assign viewPrivateChanges to anonymous users (for sure a reductio ad absurdum).\n\nGah :(\n\n\u003e Personally, I think the ref-check as replacement for the change-check is OK. If you want to keep the existing behavior, you could pass around the ChangeNotes instead of the destination branch key and just make sure they don\u0027t get passed into the Op.\n\nMy problem with doing this is that it makes it easy for the implementer to use the ChangeNotes in a not-approved way.\n\nAdmittedly this concern is kind of abstract, since I haven\u0027t tried to see if the ChangeNotes will actually work the way I want it to. And maybe if it doesn\u0027t, we should be fixing that issue directly, rather than rewriting callers to not need ChangeNotes.\n\nI\u0027ll take another pass at this.",
      "parentUuid": "4b9f0e3c_697b5df7",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 25
      },
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25f760d1_3d4356bf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-02T20:23:24Z",
      "side": 1,
      "message": "\u003e I haven\u0027t tried to see if the ChangeNotes will actually work the way I want it to.\n\nOk, now I\u0027ve tried. The immediate problem is that the synthetic change doesn\u0027t have a correct destination branch:\nhttps://gerrit.googlesource.com/gerrit/+/ef6b778ed4e6bef6dd20f83c92a5799ab7aee15d/java/com/google/gerrit/server/notedb/ChangeNotes.java#159\n\nI think I need to go deeper with this series. Even just looking at the code in this patch set of this change, PostReviewersOp needs ctx.getChange().getDest() to be accurate.\n\nIdea: teach BatchUpdate implementations to populate the required Change columns based on the result of the InsertChangeOp.",
      "parentUuid": "4594a374_6077617a",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 25
      },
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ad20f7a_ae582c25",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-02T21:18:34Z",
      "side": 1,
      "message": "\u003e The immediate problem is that the synthetic change doesn\u0027t have a correct destination branch\n\u003e ...\n\u003e Idea: teach BatchUpdate implementations to populate the required Change columns based on the result of the InsertChangeOp.\n\nOops, I should give 2015-Dave a little more credit. The Change in the ChangeContext is in fact populated based on the result of InsertChangeOp#createChange:\nhttps://gerrit-review.googlesource.com/c/gerrit/+/71426/2/gerrit-server/src/main/java/com/google/gerrit/server/git/BatchUpdate.java#255\n\nI think at this point I feel pretty good about passing in the ChangeNotes through PostReviewersOp, so I\u0027ll go ahead and rework this change.\n\n(There is still the more general issue that later ops in the same batch don\u0027t see the results of previous ops, with the exception of the initial InsertChangeOp. This is a pretty deep design decision/feature of the ChangeNotes/ChangeUpdate split so I won\u0027t be addressing it in this series.)",
      "parentUuid": "25f760d1_3d4356bf",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 25
      },
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95f8d2c3_38a67200",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-02T21:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ad20f7a_ae582c25",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 25
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92ef0e33_0ef39d1b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2018-10-01T23:13:57Z",
      "side": 1,
      "message": "Can this be factored out to a separate commit?",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 21,
        "endChar": 16
      },
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c023ca3_c0fd950c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-10-02T09:27:56Z",
      "side": 1,
      "message": "Do you have concerns about a potentially negative impact of this change?",
      "parentUuid": "92ef0e33_0ef39d1b",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 21,
        "endChar": 16
      },
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f89a1ab5_d1357c94",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2018-10-02T10:32:25Z",
      "side": 1,
      "message": "No, I was thinking more of the fact that since this is fixing incorrect behaviour it should also be applied to the stable branch, and that would be easier if it were a separate commit.",
      "parentUuid": "5c023ca3_c0fd950c",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 21,
        "endChar": 16
      },
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "136638c6_3a432c61",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-02T20:23:24Z",
      "side": 1,
      "message": "Yeah, this race would be pretty rare, but fair point that it\u0027s a correctness issue. Since I\u0027m already reworking this commit I have no problem splitting it out. Done.",
      "parentUuid": "f89a1ab5_d1357c94",
      "range": {
        "startLine": 19,
        "startChar": 2,
        "endLine": 21,
        "endChar": 16
      },
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd4a6bb1_c2f19d6f",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReviewers.java",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-10-02T09:27:56Z",
      "side": 1,
      "message": "nit: instead",
      "range": {
        "startLine": 418,
        "startChar": 30,
        "endLine": 418,
        "endChar": 36
      },
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c660651d_f70bf85f",
        "filename": "java/com/google/gerrit/server/restapi/change/PostReviewers.java",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-10-02T21:32:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd4a6bb1_c2f19d6f",
      "range": {
        "startLine": 418,
        "startChar": 30,
        "endLine": 418,
        "endChar": 36
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "b112b3e45266813c3b8ef91bd70ce42d2049d3ee",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}