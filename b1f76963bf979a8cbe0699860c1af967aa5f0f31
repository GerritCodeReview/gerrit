{
  "comments": [
    {
      "key": {
        "uuid": "a4847f6f_474f734f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/DiffSummaryKey.java",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-06-14T14:50:57Z",
      "side": 1,
      "message": "Optional nit: checkArgument",
      "revId": "b1f76963bf979a8cbe0699860c1af967aa5f0f31",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1689ee17_6e7aa642",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/DiffSummaryKey.java",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-06-14T15:04:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4847f6f_474f734f",
      "revId": "b1f76963bf979a8cbe0699860c1af967aa5f0f31",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b9e4a05_d9365f51",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListKey.java",
        "patchSetId": 3
      },
      "lineNbr": 214,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-06-14T14:50:57Z",
      "side": 1,
      "message": "Note that our Bigtable-backed cache doesn\u0027t use default serialization, so you will need to support this new field in our custom serialization thingie.",
      "revId": "b1f76963bf979a8cbe0699860c1af967aa5f0f31",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9972c323_f688a10a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListKey.java",
        "patchSetId": 3
      },
      "lineNbr": 214,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-06-14T15:04:54Z",
      "side": 1,
      "message": "Sigh. I somehow knew that there was more work looming ahead of me. I will take care of it.",
      "parentUuid": "0b9e4a05_d9365f51",
      "revId": "b1f76963bf979a8cbe0699860c1af967aa5f0f31",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "335d76dc_06f3132c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-06-14T13:56:42Z",
      "side": 1,
      "message": "Why removing \"Rebase\" from the method name? Rebase is a Git concept, not something specific to Gerrit patch-sets only. I guess that \"with rebase in between\" is more precise than \"with others in between\" for someone familiar with Git.\n\nTrying to understand what exactly this method is: it seems like it is checking that the result of:\n\n  git merge-base A B\n\nis neither of:\n\n  A, B, A^, B^\n\nAssuming this is true I would at least put this into the javadoc of this method.",
      "range": {
        "startLine": 266,
        "startChar": 44,
        "endLine": 266,
        "endChar": 50
      },
      "revId": "b1f76963bf979a8cbe0699860c1af967aa5f0f31",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53a6a451_a2872b14",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-06-14T14:14:23Z",
      "side": 1,
      "message": "Continuing on my own comment: maybe this check could be split into two which are easier to name:\n\n  private boolean areParentChild(RevCommit a, RevCommit b)\n\n  private boolean haveCommonParent(RevCommit a, RevCommit b)\n\nThen the if statement at the line 247 becomes:\n\n  if (areParentChild(a, b) || haveCommonParent(a, b)) {\n    return ImmutableMultimap.of();\n  }",
      "parentUuid": "335d76dc_06f3132c",
      "range": {
        "startLine": 266,
        "startChar": 44,
        "endLine": 266,
        "endChar": 50
      },
      "revId": "b1f76963bf979a8cbe0699860c1af967aa5f0f31",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca97f6e2_d25369b0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-06-14T14:46:25Z",
      "side": 1,
      "message": "+1 this would be easier to read for me",
      "parentUuid": "53a6a451_a2872b14",
      "range": {
        "startLine": 266,
        "startChar": 44,
        "endLine": 266,
        "endChar": 50
      },
      "revId": "b1f76963bf979a8cbe0699860c1af967aa5f0f31",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bae5c952_ca462143",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-06-14T15:04:54Z",
      "side": 1,
      "message": "I like the idea with the individual methods but I needed to add a third one (isRootOrMergeCommit()) and a null check for commitA to match the current logic. In addition, I omitted the check \u0027key.getOldId() !\u003d null\u0027. It should be safe to omit because when oldId is null, commitA is either the parent of commitB, or commitB is a merge or root commit and hence the other checks would apply.",
      "parentUuid": "53a6a451_a2872b14",
      "range": {
        "startLine": 266,
        "startChar": 44,
        "endLine": 266,
        "endChar": 50
      },
      "revId": "b1f76963bf979a8cbe0699860c1af967aa5f0f31",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}