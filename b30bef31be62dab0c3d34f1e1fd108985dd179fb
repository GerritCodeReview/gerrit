{
  "comments": [
    {
      "key": {
        "uuid": "478869e2_41f2b21a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/IdentifiedUser.java",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-09-09T01:41:04Z",
      "side": 1,
      "message": "Is there already an assumption that IdentifiedUser is per-thread (i.e. because it comes from a request) and thus need not be threadsafe? If not, this change introduces some more threadunsafety.",
      "revId": "b30bef31be62dab0c3d34f1e1fd108985dd179fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e77f9d95_16eddc38",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/IdentifiedUser.java",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-09-09T22:17:59Z",
      "side": 1,
      "message": "Yes. IdentifedUser should be (roughly) per-request. The starred changes thing has always been sort of unsafe here. Its not volatile for example. Its possible to have a partially constructed HashSet visible cross threads in starredChanges even in the old version. I don\u0027t think the new version is any more unsafe.",
      "parentUuid": "478869e2_41f2b21a",
      "revId": "b30bef31be62dab0c3d34f1e1fd108985dd179fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67100d3f_5ae6f5ce",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/QueryChanges.java",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-09-09T01:41:04Z",
      "side": 1,
      "message": "It looks like you never use the starred changes in the body of this method or query0, so isn\u0027t this just discarding the starred changes query before it\u0027s used?",
      "revId": "b30bef31be62dab0c3d34f1e1fd108985dd179fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c77c59a6_55e34c4e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/QueryChanges.java",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-09-09T22:17:59Z",
      "side": 1,
      "message": "Nope. Its used within query0 by the json.formatList2().",
      "parentUuid": "67100d3f_5ae6f5ce",
      "revId": "b30bef31be62dab0c3d34f1e1fd108985dd179fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e77f9d95_1604fc26",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/QueryChanges.java",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-09-09T22:48:32Z",
      "side": 1,
      "message": "Ah, self comes from a provider that is also injected into json. Well that\u0027s some indirection for you.",
      "parentUuid": "c77c59a6_55e34c4e",
      "revId": "b30bef31be62dab0c3d34f1e1fd108985dd179fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e77f9d95_36f2581a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/QueryChanges.java",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-09-09T22:17:59Z",
      "side": 1,
      "message": "This uses the starred changes.",
      "range": {
        "startLine": 169,
        "startChar": 58,
        "endLine": 169,
        "endChar": 75
      },
      "revId": "b30bef31be62dab0c3d34f1e1fd108985dd179fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}