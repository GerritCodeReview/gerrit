{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2b25765c_c285287d",
        "filename": "polygerrit-ui/app/utils/async-util.ts",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-02-14T11:21:40Z",
      "side": 1,
      "message": "Actually this code is no longer correct. flushing should call the callback which implies resolving, but it\u0027s canceling the timer.",
      "revId": "b3387104c72f6370164fcc95d91d289fa176be59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad70754c_dcb4b4e5",
        "filename": "polygerrit-ui/app/utils/async-util.ts",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2023-02-14T11:25:18Z",
      "side": 1,
      "message": "I should have typed more slowly. What I mean is that the semantics of flush are a mix of promise.reject() and this.callback() which seems like a weird mix.\n\nMaybe we should have a cancel timer that only cancels the timer, as a private method, and then the cnacel function calls that and the reject promise and flush calls that and the callback and resolves?",
      "parentUuid": "2b25765c_c285287d",
      "revId": "b3387104c72f6370164fcc95d91d289fa176be59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}