{
  "pushCert": "certificate version 0.1\npusher A0D0EF51 1533819292 +0200\nnonce APISObQ0CWDVGubKE90odzuj2/74u3Gn5CyiMshqUKV/Xs+pcXMQbKy2Px+H1m/jvyXnRunTBSz6\n\n0000000000000000000000000000000000000000 2e8c849c4dc4b06737babc42cf178cae6c36ba3b refs/for/master\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEjcOJ9ZBmQPrFqZA3UbX9l6DQ71EFAltsOZ0ACgkQUbX9l6DQ\n71GhTQgAgBcKRus1Vqacey5yoRRDDGMCzPEMxnJQjmK1rSePZM7AZ2Rq3pCbUlQ0\nqreB91bBpPI6wPnyPDKjXmdQmytqwwCwzA0XdF7nZdmPVvDT+dXmLSBk4KG9Br49\n3ksdh/i6y0dJGYqr29gg+MXOqHjqdvxHuQLmjKG06b2MUGTpxgT+g5wkhToKGNjB\nKGG9q89foKobMzxv76bXhPTFodF/tfZhKvloTbDb/R3hqn1eZnTYyOmklf2LGnaV\nWW4TaJCH/rGnzRhM+QGliDTMJw9EMVAvT6VeGhrKB+aRSapDYtxzNeuXGHJubOv2\nPV9qS5rZA6Y8LEb7AVp6c11g4lIwwQ\u003d\u003d\n\u003d9TVK\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "56314b36_1d07dc94",
        "filename": "java/com/google/gerrit/server/logging/LoggingContext.java",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-08-10T15:46:24Z",
      "side": 1,
      "message": "Are these garbage collected? I see that tags can be removed from the MutableTags (I assume by auto-closing a TraceContext, so the size can go to 0, but the empty map would still stick around, right? So the steady state is we now have one extra Map per thread?",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04e046f0_c2f58f2d",
        "filename": "java/com/google/gerrit/server/logging/LoggingContext.java",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-08-13T07:45:10Z",
      "side": 1,
      "message": "Good point. Fixed.",
      "parentUuid": "56314b36_1d07dc94",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3176c01c_2dc679a7",
        "filename": "java/com/google/gerrit/server/logging/MutableTags.java",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-08-10T15:46:24Z",
      "side": 1,
      "message": "Can you just use SortedSetMultimap? ISTM it would make the implementation considerably simpler.",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83641e26_8ab5cc53",
        "filename": "java/com/google/gerrit/server/logging/MutableTags.java",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-08-13T07:45:10Z",
      "side": 1,
      "message": "A SortedSetMultimap only sorts the values, but not the keys, which is why I didn\u0027t use it in the first place.\n\nHowever now I realized that we don\u0027t need to care about sorting here, as this is done by the Tags class. So we can just use a normal Multimap.\n\nDone.",
      "parentUuid": "3176c01c_2dc679a7",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a3a8003_e58d23a3",
        "filename": "java/com/google/gerrit/server/logging/MutableTags.java",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-08-13T15:34:21Z",
      "side": 1,
      "message": "Sure, but I was thinking MultimapBuilder.treeKeys().treeSetValues().\n\nAnyway, I like what you have in PS6 better: you\u0027re right that ordering doesn\u0027t matter, and TreeSets are pretty wasteful of memory.",
      "parentUuid": "83641e26_8ab5cc53",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f91ac1d_616166f5",
        "filename": "java/com/google/gerrit/server/logging/MutableTags.java",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-08-14T06:12:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3a3a8003_e58d23a3",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89e7086a_c534f9c3",
        "filename": "java/com/google/gerrit/server/logging/MutableTags.java",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-08-10T15:46:24Z",
      "side": 1,
      "message": "Why does this class need synchronized methods? Is it used somewhere other than in the ThreadLocal?",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e762922_cfb6fca0",
        "filename": "java/com/google/gerrit/server/logging/MutableTags.java",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-08-13T07:45:10Z",
      "side": 1,
      "message": "It doesn\u0027t need synchronization.\n\nDone.",
      "parentUuid": "89e7086a_c534f9c3",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "419c8bd2_6c5e4813",
        "filename": "java/com/google/gerrit/server/logging/MutableTags.java",
        "patchSetId": 5
      },
      "lineNbr": 96,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-08-10T15:46:24Z",
      "side": 1,
      "message": "If you use a multimap, this is as simple as tagMap.forEach(tagsBuilder::addTag)",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c696321_94ca8aab",
        "filename": "java/com/google/gerrit/server/logging/MutableTags.java",
        "patchSetId": 5
      },
      "lineNbr": 96,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-08-13T07:45:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "419c8bd2_6c5e4813",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f84a54dd_04da883d",
        "filename": "javatests/com/google/gerrit/server/logging/MutableTagsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-08-10T15:46:24Z",
      "side": 1,
      "message": "Don\u0027t use ExpectedException.",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63c00eee_1d48b18f",
        "filename": "javatests/com/google/gerrit/server/logging/MutableTagsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-08-13T07:45:10Z",
      "side": 1,
      "message": "What else should be used? assertThrows comes only with JUnit5, but we are still on 4.12. This is why our other tests use ExpectedException too.",
      "parentUuid": "f84a54dd_04da883d",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20368107_4a0d3bcb",
        "filename": "javatests/com/google/gerrit/server/logging/MutableTagsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-08-13T15:34:21Z",
      "side": 1,
      "message": "The argument against ExpectedException is that it is actively harmful. Try/catch is better, even though it\u0027s more boilerplate. In many cases, such as this test, you\u0027re always catching a similar type of exception so it\u0027s easy to factor out a single method:\n\n assertNullPointerException(\"tag value is required\", () -\u003e tags.remove(\"foo\", null));",
      "parentUuid": "63c00eee_1d48b18f",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8daa226a_0ddf43a9",
        "filename": "javatests/com/google/gerrit/server/logging/MutableTagsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-08-14T06:12:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20368107_4a0d3bcb",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c5f3ce2_b899b4e2",
        "filename": "javatests/com/google/gerrit/server/logging/MutableTagsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-08-10T15:46:24Z",
      "side": 1,
      "message": "Optional: I might find this easier to read as:\n\n assertThat(tagMap).containsExactly(\n     ImmutableMap.of(\n         \"name1\", ImmutableSet.of(\"value1\"),\n         \"name2\", ImmutableSet.of(\"value2\")));",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7212a2f9_14f860e7",
        "filename": "javatests/com/google/gerrit/server/logging/MutableTagsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-08-13T07:45:10Z",
      "side": 1,
      "message": "Did you mean\n\n  assertThat(tagMap).isEqualTo(...)\n\nor\n\n  assertThat(tagMap).containsExactlyEntriesIn(...)\n\n?\n\nThis doesn\u0027t work well, since the Map value is an Collections.UnmodifiableSortedSet if it contains several values, and that\u0027s not an ImmutableSet and the assertion fails.\n\nFound another way to simplify this assertion.",
      "parentUuid": "6c5f3ce2_b899b4e2",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97468203_4889de21",
        "filename": "javatests/com/google/gerrit/server/logging/MutableTagsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 82,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-08-10T15:46:24Z",
      "side": 1,
      "message": "IMO this is unnecessarily paranoid; it\u0027s just testing that the implementation of SortedMap that the Flogger library uses actually conforms to its stated interface.",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5639440_9638096a",
        "filename": "javatests/com/google/gerrit/server/logging/MutableTagsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 82,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-08-13T07:45:10Z",
      "side": 1,
      "message": "Right this test is not needed.",
      "parentUuid": "97468203_4889de21",
      "revId": "b44cac6133c964520fc8670a26aa1c99d8c24a12",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}