{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f0eb84f8_c1778543",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 5
      },
      "lineNbr": 716,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-02-14T08:27:39Z",
      "side": 1,
      "message": "Can you help me understand what would be the scenario where you would need to set allowRegisterNewEmail to false but httpAllowRegisterNewEmail to true?\n\nIf you are using SAML, you have auth\u003dHTTP and you could set allowRegisterNewEmail to true. I know that was historically not used when auth\u003dHTTP, but you could amend the behaviour because this change is for master where we do allow breaking changes as long as they are properly documented and notified on the release notes.\n\nHaving yet another config option looks like a tech debt we\u0027ll need to remove anyway at some point in the future.",
      "range": {
        "startLine": 716,
        "startChar": 7,
        "endLine": 716,
        "endChar": 32
      },
      "revId": "b460ddbc974951fe738f9ec58e6babbd21423327",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e401cab_5d52dc54",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 5
      },
      "lineNbr": 716,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-02-14T08:39:01Z",
      "side": 1,
      "message": "\u003e Can you help me understand what would be the scenario where you would need to set allowRegisterNewEmail to false but httpAllowRegisterNewEmail to true?\n\nThey don\u0027t set allowRegisterNewEmail to false.\n\nThey set HttpEmailHeader, and that would currently neutralize AllowRegisterNewEmail option. See, the base version of DefaultRealm#allowsEdit() method, that amended in this change:\n\n    case REGISTER_NEW_EMAIL:\n      return authConfig.isAllowRegisterNewEmail()\n          \u0026\u0026 Strings.emptyToNull(authConfig.getHttpEmailHeader()) \u003d\u003d null;\n          \nAlso, have you noticed very detail problem description of linked issue 13490, quoting:\n\n```\nThe docs are very clear that setting auth.httpEmailHeader will cause auth.allowRegisterNewEmail to be ignored. This, however, means that systems that end up having to set auth.httpEmailHeader (such as for the SAML plugin) are _not_ able to register alternate email address for accounts.\n\nWhile this may seem like a non-issue for some folks, others, like in our case, this because a major problem. We\u0027ve been switching off of using LDAP as our backend (which allows for registering new email addresses) to using the SAML plugin which requires the setting of multiple different auth.http* headers, including auth.httpEmailHeader. We just discovered that because of this we can no longer have our end customer self-service adding extra email addresses!\n\nI\u0027m requesting that this forced ignoring of the auth.allowRegisterNewEmail when auth.httpEmailHeader is set is in fact a _bad_ design. If an admin desires to allow their users to register new email addresses they should be able to do that and the flag should be honored no matter what!\n```",
      "parentUuid": "f0eb84f8_c1778543",
      "range": {
        "startLine": 716,
        "startChar": 7,
        "endLine": 716,
        "endChar": 32
      },
      "revId": "b460ddbc974951fe738f9ec58e6babbd21423327",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "178bb04d_348982d3",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 5
      },
      "lineNbr": 716,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-02-14T08:44:25Z",
      "side": 1,
      "message": "\u003e \u003e Can you help me understand what would be the scenario where you would need to set allowRegisterNewEmail to false but httpAllowRegisterNewEmail to true?\n\u003e \n\u003e They don\u0027t set allowRegisterNewEmail to false.\n\u003e \n\u003e They set HttpEmailHeader, and that would currently neutralize AllowRegisterNewEmail option.\n\nSo, why not making the allowRegisterNewEmail to true also work with HTTP instead? It looks a much clear solution rather than introducing yet another configuration parameter: we have way too many of them, we should remove the ones that are less needed rather than introducing new ones for corner cases, isn\u0027t it?\n\n\u003e I\u0027m requesting that this forced ignoring of the auth.allowRegisterNewEmail when auth.httpEmailHeader is set is in fact a _bad_ design. If an admin desires to allow their users to register new email addresses they should be able to do that and the flag should be honored no matter what!\n\nYes, agreed. So why don\u0027t we do that instead? Make the allowRegisterNewEmail be honoured unconditionally? That would also work for James isn\u0027t it?\nIt also looks a much better design go understand and config option to use.",
      "parentUuid": "7e401cab_5d52dc54",
      "range": {
        "startLine": 716,
        "startChar": 7,
        "endLine": 716,
        "endChar": 32
      },
      "revId": "b460ddbc974951fe738f9ec58e6babbd21423327",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55a5e72c_a309e622",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 5
      },
      "lineNbr": 716,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2022-02-14T09:23:31Z",
      "side": 1,
      "message": "\u003e So why don\u0027t we do that instead? Make the allowRegisterNewEmail be honoured unconditionally?\n\nThose two options were done mutual exclusive for a reason. The approach of this change was minimal invasive: allow to register new emails but preserve mutual exclusive kind of the above options as-is per default.\n\nIf we would like to consider to change that logic, we would have to do further investigations, why it was done that way in the first place, and whom we would break, if we would change this behaviour per default.",
      "parentUuid": "178bb04d_348982d3",
      "range": {
        "startLine": 716,
        "startChar": 7,
        "endLine": 716,
        "endChar": 32
      },
      "revId": "b460ddbc974951fe738f9ec58e6babbd21423327",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}