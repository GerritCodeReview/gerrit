{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "35007954_ba7be348",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-02-16T16:22:59Z",
      "side": 1,
      "message": "nit: n",
      "range": {
        "startLine": 18,
        "startChar": 29,
        "endLine": 18,
        "endChar": 30
      },
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae83c8bc_3af66136",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-02-17T09:52:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35007954_ba7be348",
      "range": {
        "startLine": 18,
        "startChar": 29,
        "endLine": 18,
        "endChar": 30
      },
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69a4ce29_b8dd26fb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-02-16T18:07:01Z",
      "side": 1,
      "message": "Not sure, but maybe we should mention something about the NoteDb format update in the release notes?",
      "range": {
        "startLine": 22,
        "startChar": 15,
        "endLine": 22,
        "endChar": 19
      },
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4d70cb3_a2e259f6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-02-17T09:52:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69a4ce29_b8dd26fb",
      "range": {
        "startLine": 22,
        "startChar": 15,
        "endLine": 22,
        "endChar": 19
      },
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e19402f_f533d1ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-02-16T18:07:01Z",
      "side": 1,
      "message": "LGTM, + my suggestion in the predecessor change. \nAlso, could you, please, file a bug to track the rollout, since we first need to make sure the predecessor is roll back safe, only than import this change?",
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f38f1b07_6636a757",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 7
      },
      "lineNbr": 8249,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-02-16T16:22:59Z",
      "side": 1,
      "message": "If we change this entity, we have to adapt the storage and make sure the change rolls out in a safe manner as you suggest.\n\nI wonder what other options we have that don\u0027t require this. Two ideas:\n\n1) We could just populate expression and leave the rest of the fields empty. Status is the only one that isn\u0027t already optional.\n2) Instead of shipping this entity (it\u0027s called SubmitRequirementExpressionInfo but in the case at hand we didn\u0027t actually compute anything, so there is no result), we ship a different entity/string: e.g. rawApplicabilityExpressionResult",
      "range": {
        "startLine": 8243,
        "startChar": 0,
        "endLine": 8249,
        "endChar": 51
      },
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3eee0fc_18c30678",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 7
      },
      "lineNbr": 8249,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-02-16T18:07:01Z",
      "side": 1,
      "message": "I think that Youssef noticed the possible roolout issue (see the predecessor change).\n\nOption #1 was actually suggested as an implementation in this PS [1], but I agree with Youssef\u0027s comment [2] this is more clear in the API if we are explicit whether the submit requirement is evaluated.\nI am in favor of having actual statuses instead of the \u0027fulfilled\u0027 field, that we can not populate meaningfully for the non-evaluated expression. \n\n[1]https://gerrit-review.googlesource.com/c/gerrit/+/328617/7\n[2]https://gerrit-review.googlesource.com/c/gerrit/+/328617/comments/2fde331d_2107a0ba",
      "parentUuid": "f38f1b07_6636a757",
      "range": {
        "startLine": 8243,
        "startChar": 0,
        "endLine": 8249,
        "endChar": 51
      },
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b542b77d_c0d1f0bb",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 7
      },
      "lineNbr": 8249,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-02-17T09:52:22Z",
      "side": 1,
      "message": "Thank you Maria for the clarifications.\n\n@Patrick, yes the change to the storage requires a safe rollout, for which I added the predecessor change. I\u0027d actually prefer to keep as is and be more explicit on the API; i.e. if we just keep the \"fulfilled\" boolean and populate expression strings, a user won\u0027t be able to differentiate between the expression being evaluated or not, and the fulfilled boolean will be confusing. The user will need to inspect the overall result, and if it\u0027s \"NOT_APPLICABLE\" then they will deduce that the \"fulfilled\" is redundant. Putting this explicit on the API is better IMO.\n\nPlease LMK if you see otherwise.",
      "parentUuid": "f3eee0fc_18c30678",
      "range": {
        "startLine": 8243,
        "startChar": 0,
        "endLine": 8249,
        "endChar": 51
      },
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "453d42db_a37bb927",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 7
      },
      "lineNbr": 8249,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-02-17T12:51:57Z",
      "side": 1,
      "message": "I looked at this some more and here is what I think we should do:\n\n1) NOT_EVALUATED will never be serialized in Notedb. Because we only store SRs that were applicable (if we store not applicable SRs, we can just remove that). So we can update the Status enum directly and add a checkState to the logic that serializes SubmitRequirementExpressionResults into NoteDb to make sure the status is either pass or fail (also, we would not serialize an error status).\n\nSo we can spare the extra rollout hop, by just adding the enum value + a checkState call. We can also spare the adapter for unknown enum values. Already in this change, we can use the set NOT_EVALUATED because we aren\u0027t putting it into the storage.\n\n2) The web UI actually warrants a staged rollout: It is currently using the boolean fulfilled, so we need to ship status next to fulfilled to allow for an online migration (both values are there in the API and the web UI gets updated to use status). So we need a change that ships status next to the boolean.\n\n3) Remove the boolean once the web UI is rollback safe in using status.",
      "parentUuid": "b542b77d_c0d1f0bb",
      "range": {
        "startLine": 8243,
        "startChar": 0,
        "endLine": 8249,
        "endChar": 51
      },
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "270f8882_dbeeff62",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 7
      },
      "lineNbr": 8249,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-02-21T16:58:42Z",
      "side": 1,
      "message": "I think that currently non-applicable SR\u0027s are stored, but I don\u0027t see any strong reason why this is the case.\n\nI am not opposed to Patrick\u0027s suggestion (to skip the enum adoption on storage level), however, I really dislike the logic of EnumTypeAdapterFactory[1]. This is like a ticking bomb, that might explode with any change.\n\nI will let Youssef to select an option to proceed with. +1 for the more explicit API though.\n\nhttps://gerrit.googlesource.com/gerrit/+/edc37bcca670d31a19ccc15011bbea3317d29083/java/com/google/gerrit/json/EnumTypeAdapterFactory.java",
      "parentUuid": "453d42db_a37bb927",
      "range": {
        "startLine": 8243,
        "startChar": 0,
        "endLine": 8249,
        "endChar": 51
      },
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35a985a4_c1106920",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 7
      },
      "lineNbr": 8249,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-04-08T10:28:27Z",
      "side": 1,
      "message": "\u003e Because we only store SRs that were applicable\n\nWe store all SRs in NoteDb, including non-applicable.\n\n\u003e 1) NOT_EVALUATED will never be serialized in Notedb. Because we only store SRs that were applicable (if we store not applicable SRs, we can just remove that). So we can update the Status enum directly and add a checkState to the logic that serializes SubmitRequirementExpressionResults into NoteDb to make sure the status is either pass or fail (also, we would not serialize an error status). So we can spare the extra rollout hop, by just adding the enum value + a checkState call. We can also spare the adapter for unknown enum values. Already in this change, we can use the set NOT_EVALUATED because we aren\u0027t putting it into the storage.\n\nWe can do that, but I prefer to keep things simple and avoid extra custom logic. See my suggestion below.\n\nAs a middle ground and in order not to overcomplicate things, I came to a much simpler solution for now: I kept the fulfilled boolean and just appended the STATUS field: this is both rollout safe and will serve our purpose.",
      "parentUuid": "270f8882_dbeeff62",
      "range": {
        "startLine": 8243,
        "startChar": 0,
        "endLine": 8249,
        "endChar": 51
      },
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5baef048_3b52475b",
        "filename": "java/com/google/gerrit/extensions/common/SubmitRequirementExpressionInfo.java",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-02-16T18:07:01Z",
      "side": 1,
      "message": "nit: link com.google.gerrit.entities.SubmitRequirementExpressionResult.Status and mention they should match.",
      "range": {
        "startLine": 49,
        "startChar": 14,
        "endLine": 49,
        "endChar": 20
      },
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d05feca_f51fb649",
        "filename": "java/com/google/gerrit/extensions/common/SubmitRequirementExpressionInfo.java",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-02-17T09:52:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5baef048_3b52475b",
      "range": {
        "startLine": 49,
        "startChar": 14,
        "endLine": 49,
        "endChar": 20
      },
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab149e37_9af6635c",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/SubmitRequirementIT.java",
        "patchSetId": 7
      },
      "lineNbr": 1974,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-02-16T18:07:01Z",
      "side": 1,
      "message": "Should there also be an assertion that the expression string is populated, since we are interested in it in the frontend?",
      "range": {
        "startLine": 1974,
        "startChar": 4,
        "endLine": 1974,
        "endChar": 65
      },
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d579d0ca_339ed2be",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/SubmitRequirementIT.java",
        "patchSetId": 7
      },
      "lineNbr": 1974,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-02-17T09:52:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab149e37_9af6635c",
      "range": {
        "startLine": 1974,
        "startChar": 4,
        "endLine": 1974,
        "endChar": 65
      },
      "revId": "b54ffeacabde4534b4f13310e0436b963c209292",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}