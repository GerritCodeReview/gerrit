{
  "comments": [
    {
      "key": {
        "uuid": "fda13c5f_5c97fd64",
        "filename": "polygerrit-ui/app/elements/gr-change-view.html",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-08T19:17:52Z",
      "side": 1,
      "message": "Hm, is there a more readable/scalable way to arrange z-indexes? Maybe some crazy use of variables and calculations?",
      "revId": "b70ab1d4c1e300b55085f0d9c0bd72d0deeaca07",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d937019_ddd1cb1c",
        "filename": "polygerrit-ui/app/elements/gr-change-view.html",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2016-02-08T20:07:14Z",
      "side": 1,
      "message": "Yes, but it really only works if other components follow the same convention. For instance, if I controlled all z-indices, I would defined variables @zIndex-1 -\u003e @zIndex-9 where nothing can be greater than z-Index-9. But the overlay z-index is set within iron-overlay.",
      "parentUuid": "fda13c5f_5c97fd64",
      "revId": "b70ab1d4c1e300b55085f0d9c0bd72d0deeaca07",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91410cda_5f252b87",
        "filename": "polygerrit-ui/app/elements/gr-change-view.html",
        "patchSetId": 2
      },
      "lineNbr": 503,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-02-08T12:26:03Z",
      "side": 1,
      "message": "Is this a temporarily hack (in which case \"TODO: Fixme\" is missing)? I\u0027m asking because it\u0027s not how it supposed to work. There is a reason why options to REST handler \"/changes/\u003cid\u003e/detail\" were introduced in the first place. If you are passing all them at once, then you jeopardize the optimization to only retrieve and transport the data that is actually needed and shown, by redundantly fetching the whole data at once. Instead, the the different views and panels supposed to retrieve the data on their own. Because unless the user haven\u0027t opened Download dropdown, the data shouldn\u0027t to be retrieved (Note, that the data should be cached there, so that if the user open the Dropdown second time it shouldn\u0027t be re-fetched). IOW, Dropdown should work similar to gr-change-actions element, where revision actions are retrieved (to render submit button asynchronously, because it takes ages to compute it, when submit whole topic option was activated on gerrit site).",
      "range": {
        "startLine": 503,
        "startChar": 12,
        "endLine": 503,
        "endChar": 52
      },
      "revId": "b70ab1d4c1e300b55085f0d9c0bd72d0deeaca07",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d2530a9_0dbdf1dd",
        "filename": "polygerrit-ui/app/elements/gr-change-view.html",
        "patchSetId": 2
      },
      "lineNbr": 503,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2016-02-08T17:18:01Z",
      "side": 1,
      "message": "No this was a conscious choice. It simplifies the implementation and unless there is _significant_ overhead involved in calculating the fetch commands Iâ€™m going to leave it as is.",
      "parentUuid": "91410cda_5f252b87",
      "revId": "b70ab1d4c1e300b55085f0d9c0bd72d0deeaca07",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d2530a9_cdcec97a",
        "filename": "polygerrit-ui/app/elements/gr-change-view.html",
        "patchSetId": 2
      },
      "lineNbr": 503,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-08T17:26:15Z",
      "side": 1,
      "message": "Yeah I\u0027m with Andy, I\u0027m not sure why we decided download commands would be expensive enough to warrant another request in ChangeScreen2.\n\nIf we really want to overthink it then download commands should be a separate endpoint and not populate a whole ChangeInfo just for that.",
      "parentUuid": "1d2530a9_0dbdf1dd",
      "revId": "b70ab1d4c1e300b55085f0d9c0bd72d0deeaca07",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91410cda_7f5a6fd3",
        "filename": "polygerrit-ui/app/elements/gr-change-view.html",
        "patchSetId": 2
      },
      "lineNbr": 503,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-02-08T18:07:34Z",
      "side": 1,
      "message": "Eh, so i measured the time spent to calculate the fetch commands. The commands are supplied by the download-plugin and can be extended. I\u0027m not aware of any custom implementation of this plugin. So i used the default one. The time spent to calculate the commands on my test site is about 1-2 milliseconds. So we clearly don\u0027t care. And ca. 1K additional (and possibly unused) data to transport: [1] too.\n\n* [1] http://paste.openstack.org/show/486317",
      "parentUuid": "1d2530a9_cdcec97a",
      "revId": "b70ab1d4c1e300b55085f0d9c0bd72d0deeaca07",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d937019_5d97fb64",
        "filename": "polygerrit-ui/app/elements/gr-change-view.html",
        "patchSetId": 2
      },
      "lineNbr": 503,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-08T19:17:52Z",
      "side": 1,
      "message": "\u003e I\u0027m not aware of any custom implementation of this plugin.\n\nWe actually have a couple, for our custom download schemes. But they just do trivial checks against our custom group backends, so they\u0027re fast. I think anybody who implements something super slow here is doing it wrong :)",
      "parentUuid": "91410cda_7f5a6fd3",
      "revId": "b70ab1d4c1e300b55085f0d9c0bd72d0deeaca07",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}