{
  "comments": [
    {
      "key": {
        "uuid": "b2337cd6_ca1d2352",
        "filename": "gerrit-gwtui/src/main/java/net/codemirror/lib/LintLine.java",
        "patchSetId": 53
      },
      "lineNbr": 33,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2016-05-14T04:32:41Z",
      "side": 1,
      "message": "I have several issues with this approach:\n\nscalability:  The browser cannot handle an infinite number of style injections. Over time the style sheets are going to grow based on the number of files viewed and the number of commits that modified those files. If a file has 1000 commits in its blame, we added 1000 style sheet injections. Much of this is identical text over and over.\n\ninjection attack:  If shortMsg contains \u0027 and it may commonly do so if the developer used a contraction (\"Don\u0027t allow XSS injection in CSS\") the stylesheet breaks. Once its known that you can insert a commit message into a file history that uses a \u0027 to break the string quoting for content, its easy to insert something else. E.g. make a commit with subject:\n\n  A\u0027; font-weight: bold; content:\u0027\n\nAs a result we have this feature disabled on gerrit-review, and we will not be be able to turn it on.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 33,
        "endChar": 15
      },
      "revId": "b72d4c6d8f5df501d568d9fb4dcdb6d1185b4add",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2337cd6_0a381bc2",
        "filename": "gerrit-gwtui/src/main/java/net/codemirror/lib/LintLine.java",
        "patchSetId": 53
      },
      "lineNbr": 33,
      "author": {
        "id": 1012758
      },
      "writtenOn": "2016-05-14T04:55:47Z",
      "side": 1,
      "message": "The use of StyleInjector is a hack due to the limitation of CodeMirror\u0027s lint addon. I\u0027m working on a version that does not use the lint addon, but it\u0027s not ready yet.",
      "parentUuid": "b2337cd6_ca1d2352",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 33,
        "endChar": 15
      },
      "revId": "b72d4c6d8f5df501d568d9fb4dcdb6d1185b4add",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94f59693_ab90493e",
        "filename": "gerrit-gwtui/src/main/java/net/codemirror/lib/LintLine.java",
        "patchSetId": 53
      },
      "lineNbr": 33,
      "author": {
        "id": 1011624
      },
      "writtenOn": "2016-08-03T12:35:25Z",
      "side": 1,
      "message": "Question:\nsoy seems to have a js-string escape function (closure-templates/SanitizedContent.java), would this be an option here?",
      "parentUuid": "b2337cd6_0a381bc2",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 33,
        "endChar": 15
      },
      "revId": "b72d4c6d8f5df501d568d9fb4dcdb6d1185b4add",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c82e7d90_4b176594",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/GerritGlobalModule.java",
        "patchSetId": 53
      },
      "lineNbr": 177,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-04-26T14:17:44Z",
      "side": 1,
      "message": "FYI this is a purely in-memory cache, and the default binding will give you a hard-coded size of 10M blame regions. I suspect for a large, active server that is probably too small; we get pretty low blame cache hit rates\n\nI would encourage you to consider implementing a persistent blame cache. One of the reasons I had not previously exposed Gitiles\u0027 BlameCache as a library is I kind of wanted to do that within Gitiles using the Gerrit H2-based cache implementation. But you could do it entirely within Gerrit, using a separate implementation using the Gerrit persistent cache framework that delegates to BlameCacheImpl for its Loader/Weigher. That is what we do for googlesource.com and that\u0027s why all those classes are public.",
      "revId": "b72d4c6d8f5df501d568d9fb4dcdb6d1185b4add",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}