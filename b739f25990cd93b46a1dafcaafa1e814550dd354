{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5e25ebc5_c69c176e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-11-25T22:23:09Z",
      "side": 1,
      "message": "LGTM, can you also add one test?",
      "revId": "b739f25990cd93b46a1dafcaafa1e814550dd354",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e90bf169_731ac9e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-11-25T23:19:35Z",
      "side": 1,
      "message": "It seems not to be that easy to do, because right now in both cases in memory and on disk use cases, gerrit server is starting in headless mode:\n\n1. In Memory use case: headless mode is unconditionally set in setDatabaseForTesting() method:\n\n  @VisibleForTesting\n  public void setDatabaseForTesting(List\u003cModule\u003e modules) {\n    dbInjector \u003d Guice.createInjector(Stage.PRODUCTION, modules);\n    inMemoryTest \u003d true;\n    headless \u003d true;\n  }\n\n2. On disk: \"--headless\" option is unconditionally passed to Daemon ctor:\n\n  Stream.of(\n    \"-d\", site.toString(), \"--headless\", \"--console-log\", \"--show-stack-trace\"),\n\nSo basically, in the current acceptance test setup project \"x/y/z\" would already be served by Git over HTTP protocol without any problem.",
      "parentUuid": "5e25ebc5_c69c176e",
      "revId": "b739f25990cd93b46a1dafcaafa1e814550dd354",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c50beb5_bbeb64fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-11-25T23:23:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e90bf169_731ac9e7",
      "revId": "b739f25990cd93b46a1dafcaafa1e814550dd354",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a709a2a_a2d4c20f",
        "filename": "java/com/google/gerrit/httpd/UserAgentUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-11-25T22:07:29Z",
      "side": 1,
      "message": "Have you checked libgit2?",
      "revId": "b739f25990cd93b46a1dafcaafa1e814550dd354",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22c86635_05321ab4",
        "filename": "java/com/google/gerrit/httpd/UserAgentUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-11-25T22:21:16Z",
      "side": 1,
      "message": "I have found this comment: [1]:\n\n  Yes, it would be more accurate, but a lot of server side tools scan the\n  user-agent for /^git/ and may assume it\u0027s a true human if they don\u0027t see it. \n  Anyway, that\u0027s why we report git/1.0 (libgit2 0.0).\n\nSo that libgit2 clients should work as is.\n\n[1] https://github.com/libgit2/libgit2/pull/3448#commitcomment-24405403",
      "parentUuid": "4a709a2a_a2d4c20f",
      "revId": "b739f25990cd93b46a1dafcaafa1e814550dd354",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d25273c0_478e1872",
        "filename": "java/com/google/gerrit/httpd/UserAgentUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-05-17T13:07:22Z",
      "side": 1,
      "message": "I switched to using:\n\n  GitSmartHttpTools.isGitClient(httpRequest)",
      "parentUuid": "22c86635_05321ab4",
      "revId": "b739f25990cd93b46a1dafcaafa1e814550dd354",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}