{
  "comments": [
    {
      "key": {
        "uuid": "84625f22_f3fff0dc",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/PluginConfig.java",
        "patchSetId": 13
      },
      "lineNbr": 44,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-09-21T03:17:38Z",
      "side": 1,
      "message": "I think I would prefer something like this for the implementation:\n\n  List\u003cProjectState\u003e tree \u003d Lists.newArrayList(\n      projectStateFactory.create(projectConfig).tree());\n  Collections.reverse(tree);\n\n  Config c \u003d new Config();\n  copy(c, tree.get(0));\n\n  for (int i \u003d 1; i \u003c tree.size(); i++) {\n    c \u003d new Config(c);\n    copy(c, tree.get(i));\n  }\n  cfg \u003d c;\n\n  private void copy(Config dst, ProjectState state) {\n    Config src \u003d state.getConfig();\n    for (String name : src.getNames(PLUGIN, pluginName)) {\n      dst.setStringList(PLUGIN, pluginName, Arrays.asList(\n        src.getStringList(PLUGIN, pluginName, name));\n    }\n  }\n\nThen standard Git and JGit inheritance rules apply. For single value variables the child overrides the parent. For getStringList() all values are presented, in inheritance order from the child up through parents with All-Projects last.\n\nBut I could be convinced otherwise.",
      "revId": "b77de8704786f29e10e81bb2b95543627baa0b41",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4f07ba0_8ef2bb16",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/PluginConfig.java",
        "patchSetId": 13
      },
      "lineNbr": 44,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-23T09:06:45Z",
      "side": 1,
      "message": "If this is the standard behaviour for inheritance of config settings in Git and JGit we should follow the same rule here. Although personally I find it more intuitive to get the inherited values for getStringList(...) only if the child config doesn\u0027t define this key at all. \n\nI\u0027ve implemented the suggested coding. As result getStringList(...) is now returning all values, but the order of the values is top down from All-Projects down to the child. Looking at the implementation of Config.getStringList(...) I can see that first the values from the base are copied and then the own values are appended. Is this a bug in JGit and the sorting should actually be the other way around?\n\n  System.arraycopy(base, 0, res, 0, n);\n  System.arraycopy(self, 0, res, n, self.length);",
      "parentUuid": "84625f22_f3fff0dc",
      "revId": "b77de8704786f29e10e81bb2b95543627baa0b41",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84625f22_7353e01b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/config/PluginConfig.java",
        "patchSetId": 13
      },
      "lineNbr": 44,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-09-23T15:21:31Z",
      "side": 1,
      "message": "OK, obviously I don\u0027t understand what the correct ordering should be.\n\nI just retested with git config and --get-all returns parent then children. So JGit is correct in returning All-Projects down to the child from getStringList().\n\nThis is perhaps not useful in this context. So maybe this version in revision 13 is the best approach. Sorry for the confusion.",
      "parentUuid": "e4f07ba0_8ef2bb16",
      "revId": "b77de8704786f29e10e81bb2b95543627baa0b41",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}