{
  "comments": [
    {
      "key": {
        "uuid": "f71fc077_3e67bee0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-04-07T12:41:22Z",
      "side": 1,
      "message": "I\u0027m fine with adding an option for this to the CherryPickInput, but the use-case that is described here doesn\u0027t convince me and I\u0027m not sure that it\u0027s actually solving your issue.\n\nI would actually expect that users will have the same amount of confusion if the cherry-picked topic contains empty changes (rather than only the non-empty changes for which the cherry-pick succeeded).\n\nWhat are the users expected to do with these empty changes? \n\n- Should they submit them?\nDoes this actually work?\nI believe depending on the submit strategy submitting an empty change may actually fail (e.g. with the Cherry-Pick strategy which sets ignoreIdenticalTree\u003dfalse [1]).\n\n- Should they remove them from the topic and delete them?\nIn this case why would we even create them?\n\n\n[1] https://gerrit.googlesource.com/gerrit/+/refs/heads/master/java/com/google/gerrit/server/submit/CherryPick.java#118",
      "range": {
        "startLine": 22,
        "startChar": 15,
        "endLine": 23,
        "endChar": 9
      },
      "revId": "b7cab273be1194f120d452261540f5b529cadbc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "529646b4_a540a4e0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-04-07T13:31:15Z",
      "side": 1,
      "message": "Well, I was essentially replicating the current behavior in RevertSubmission: empty commits are created in RevertSubmission, so why not in Cherry-pick topic? I guess we missed it when implementing I2673888b7?\n\nI do see your point though: empty commits can\u0027t be submitted if the submit strategy is cherry-pick, and then the users in fact would have to abandon the created change.\n\nI see 3 logical options:\n1. Submit this change and users should ignore/delete/submit if possible empty commits.\n2. Abandon this change, and have cherry-pick topic fail the changes that create an empty commit with some error message saying that this empty commit is unnecessary. Also, RevertSubmission should also be adjusted in a similar way but letting the user know that one of the reverts was empty and that\u0027s why it \"disappeared\" is more tricky here..\n3. Leave RevertSubmission as is and have the frontend notify the user when cherry-picking failed because of empty commit. Abandon this change.\n\nHonestly, this is a really minor edge case - it\u0027s kind of really unlikely for empty commits to be created, and option 2 sounds like a few hours of work.\n\nWDYT about the options?",
      "parentUuid": "f71fc077_3e67bee0",
      "range": {
        "startLine": 22,
        "startChar": 15,
        "endLine": 23,
        "endChar": 9
      },
      "revId": "b7cab273be1194f120d452261540f5b529cadbc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddcebf24_5ccb0e6d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-04-07T13:52:24Z",
      "side": 1,
      "message": "\u003e Well, I was essentially replicating the current behavior in RevertSubmission: empty commits are created in RevertSubmission, so why not in Cherry-pick topic? I guess we missed it when implementing I2673888b7?\n\nYes, it seems we missed this issue back then. I actually forget that this was the behaviour that was implemented for RevertSubmission :(\n\n\u003e I do see your point though: empty commits can\u0027t be submitted if the submit strategy is cherry-pick, and then the users in fact would have to abandon the created change.\n\u003e \n\u003e I see 3 logical options:\n\u003e 1. Submit this change and users should ignore/delete/submit if possible empty commits.\n\nFor now this is fine for me to unblock the work on cherry-picking topics (especially since the behaviour seems to be consistent with what RevertSubmission is doing).\n\n\u003e 2. Abandon this change, and have cherry-pick topic fail the changes that create an empty commit with some error message saying that this empty commit is unnecessary. \n\nI wouldn\u0027t call it \"have cherry-pick topic fail the changes that create an empty commit\" but rather \"have cherry-pick topic skip the changes that create an empty commit\". If this happens it\u0027s not an error, but expected behaviour. Of course we should show a message to the user, but it\u0027s not an \"error message\".\n\n\u003e Also, RevertSubmission should also be adjusted in a similar way but letting the user know that one of the reverts was empty and that\u0027s why it \"disappeared\" is more tricky here.\n\nYes, RevertSubmission should then be changed too.\n\nI think this option is the best. If there is no time to implement it now, we should at least file an issue for this, so that we know that this problem exists and what is our idea to solve it.\n\n\u003e 3. Leave RevertSubmission as is and have the frontend notify the user when cherry-picking failed because of empty commit. Abandon this change.\n\nThis means that the behaviour for RevertSubmission and Cherry-picking topics would be inconsistent, which I think we should avoid.\n\n\n\u003e Honestly, this is a really minor edge case - it\u0027s kind of really unlikely for empty commits to be created, and option 2 sounds like a few hours of work.\n\nI don\u0027t care much, if we don\u0027t want to do this work now, we should file an issue for this so that it can be picked up later.\n\n\u003e \n\u003e WDYT about the options?\n\nSee above.",
      "parentUuid": "529646b4_a540a4e0",
      "range": {
        "startLine": 22,
        "startChar": 15,
        "endLine": 23,
        "endChar": 9
      },
      "revId": "b7cab273be1194f120d452261540f5b529cadbc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f7b61b2_279cbbc4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-04-07T14:20:53Z",
      "side": 1,
      "message": "OK, then I went with option 1 for now. I\u0027ll track it to later maybe change this behavior for both cherry-picks and revertSubmission.",
      "parentUuid": "ddcebf24_5ccb0e6d",
      "range": {
        "startLine": 22,
        "startChar": 15,
        "endLine": 23,
        "endChar": 9
      },
      "revId": "b7cab273be1194f120d452261540f5b529cadbc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "094b3523_949ca12e",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 6188,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-04-07T12:41:22Z",
      "side": 1,
      "message": "Can we find a name that is easier to understand?\nE.g. \"allow_empty\" which would be consistent with the option that is used for this on the git command line [1].\n\n[1] https://git-scm.com/docs/git-cherry-pick#Documentation/git-cherry-pick.txt---allow-empty",
      "range": {
        "startLine": 6188,
        "startChar": 2,
        "endLine": 6188,
        "endChar": 23
      },
      "revId": "b7cab273be1194f120d452261540f5b529cadbc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f046dd0d_d7e45a0b",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 6188,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-04-07T14:20:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "094b3523_949ca12e",
      "range": {
        "startLine": 6188,
        "startChar": 2,
        "endLine": 6188,
        "endChar": 23
      },
      "revId": "b7cab273be1194f120d452261540f5b529cadbc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa2200e_eab38c3b",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 6189,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-04-07T12:41:22Z",
      "side": 1,
      "message": "will",
      "range": {
        "startLine": 6189,
        "startChar": 63,
        "endLine": 6189,
        "endChar": 68
      },
      "revId": "b7cab273be1194f120d452261540f5b529cadbc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e567bc19_9e886b63",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 6189,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-04-07T14:20:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3fa2200e_eab38c3b",
      "range": {
        "startLine": 6189,
        "startChar": 63,
        "endLine": 6189,
        "endChar": 68
      },
      "revId": "b7cab273be1194f120d452261540f5b529cadbc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4da8fcc_74f731e3",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 6190,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-04-07T12:41:22Z",
      "side": 1,
      "message": "a cherry-pick",
      "range": {
        "startLine": 6190,
        "startChar": 12,
        "endLine": 6190,
        "endChar": 23
      },
      "revId": "b7cab273be1194f120d452261540f5b529cadbc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f68e657_d5f32dca",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 6190,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-04-07T12:41:22Z",
      "side": 1,
      "message": "fails",
      "range": {
        "startLine": 6190,
        "startChar": 58,
        "endLine": 6190,
        "endChar": 62
      },
      "revId": "b7cab273be1194f120d452261540f5b529cadbc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a35e820_01fe498e",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 6190,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-04-07T14:20:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f68e657_d5f32dca",
      "range": {
        "startLine": 6190,
        "startChar": 58,
        "endLine": 6190,
        "endChar": 62
      },
      "revId": "b7cab273be1194f120d452261540f5b529cadbc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71ccc9f9_74f48eda",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 2
      },
      "lineNbr": 6190,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-04-07T14:20:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f4da8fcc_74f731e3",
      "range": {
        "startLine": 6190,
        "startChar": 12,
        "endLine": 6190,
        "endChar": 23
      },
      "revId": "b7cab273be1194f120d452261540f5b529cadbc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdf3e8da_8a706111",
        "filename": "javatests/com/google/gerrit/acceptance/api/revision/RevisionIT.java",
        "patchSetId": 2
      },
      "lineNbr": 548,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2020-04-07T12:41:22Z",
      "side": 1,
      "message": "Maybe add an assertion to check that the created commit is empty.",
      "revId": "b7cab273be1194f120d452261540f5b529cadbc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dc02668_174dfdb2",
        "filename": "javatests/com/google/gerrit/acceptance/api/revision/RevisionIT.java",
        "patchSetId": 2
      },
      "lineNbr": 548,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-04-07T14:20:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cdf3e8da_8a706111",
      "revId": "b7cab273be1194f120d452261540f5b529cadbc7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}