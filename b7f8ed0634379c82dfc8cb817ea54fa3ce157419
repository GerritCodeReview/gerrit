{
  "comments": [
    {
      "key": {
        "uuid": "f85d7cd3_06fa1aa3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-08-13T17:25:36Z",
      "side": 1,
      "message": "Wrong level of abstraction. If you want to handle web sessions you should be replacing the WebSession, not the underlying cache.",
      "revId": "b7f8ed0634379c82dfc8cb817ea54fa3ce157419",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f85d7cd3_c6c9626f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1012923
      },
      "writtenOn": "2013-08-13T17:53:18Z",
      "side": 1,
      "message": "The aim is to have the multi-master plugin register an implementation that will let the masters share one web session cache. With the current Cache implementation, sharing is not possible. All session data is stored in the cache only, so with a shared cache and a common hostname (using a load balancer), the masters will share web sessions.",
      "parentUuid": "f85d7cd3_06fa1aa3",
      "revId": "b7f8ed0634379c82dfc8cb817ea54fa3ce157419",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d818b82e_55760c97",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-08-13T18:03:55Z",
      "side": 1,
      "message": "I understand the aim.\n\nBut I\u0027m telling you its the wrong way to implement it. The multi-master system behind gerrit-review replaces WebSession with its own backing implementation that knows how to handle replicated sessions across the cluster.",
      "parentUuid": "f85d7cd3_c6c9626f",
      "revId": "b7f8ed0634379c82dfc8cb817ea54fa3ce157419",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d818b82e_75cea8a1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2013-08-13T19:09:45Z",
      "side": 1,
      "message": "I could see why you would want to be able to replace the entire websession implementation, but for simpler cases I don\u0027t see what we would gain?  I suspect that if were to take that approach, we would start by just copying all the current websession code to the plugin and then simply modify the caching portion as Ahaan has currently done already in his plugin changes, to share the cache.  That would be easiest and be less code to rewrite/test/prove since it would be basically using most of today\u0027s websession code. \n\nI guess I am not sure if you are saying it is \"wrong\" because you feel that others should be able to modify the entire websession implementation, or because you think that we would have technical problems, that it wouldn\u0027t work right to not do so?",
      "parentUuid": "d818b82e_55760c97",
      "revId": "b7f8ed0634379c82dfc8cb817ea54fa3ce157419",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "385394fe_f0f4a00b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-08-16T00:49:29Z",
      "side": 1,
      "message": "In a multi-master configuration it can be safer to use signatures with no state to verify sessions. E.g. the servers have a private key they use to sign a token that identifies the user, and the WebSession just verifies the signature on each request rather than looking it up in a common cache. Fewer things to go wrong. You really only have to worry about key rotation, but this is also (easily) solved if you use something like KeyCzar where key hashes are part of the signature and multiple keys can be used for verification during the rotation window.\n\nIf you want to reuse the CacheBasedWebSession then I suggest a new change to first refactor it to be an abstract base class where the Cache implementation is supplied in the constructor by the concrete subclass, and then make WebSession pluggable. The single-server case can use CacheBasedWebSession but the multi-master would use a different subclass that uses a distributed cache.\n\nFWIW gerrit-review follows more of a signature based system than a cache based system. I can\u0027t get into all of the details because its also similar to what is used on other Google properties, but I can say we don\u0027t have a cache under our WebSession.",
      "parentUuid": "d818b82e_75cea8a1",
      "revId": "b7f8ed0634379c82dfc8cb817ea54fa3ce157419",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d0f7025_26bb28ba",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1012923
      },
      "writtenOn": "2013-08-19T21:59:25Z",
      "side": 1,
      "message": "any idea how to fix this error I get when I bind a subclass of CacheBasedWebSession in the plugin: \"No scope is bound to com.google.inject.servlet.RequestScoped\" ? I tried \"bindScope(RequestScoped.class, PerThreadRequestScope.REQUEST)\", but then i get \"No implementation for javax.servlet.http.HttpServletResponse was bound\"",
      "parentUuid": "385394fe_f0f4a00b",
      "revId": "b7f8ed0634379c82dfc8cb817ea54fa3ce157419",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dd1cce1_12ef2c39",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-08-20T00:06:44Z",
      "side": 1,
      "message": "That is not easily fixable. The DynamicItem stuff is bound in the system injector where there is no request scope and no HttpServletRequest.\n\nMaybe you can declare your implementation in the Gerrit-HttpModule injector and use a LifecycleListener to push the Provider of your implementation into the DynamicItem, instead of relying on automatic binding from the system module?",
      "parentUuid": "0d0f7025_26bb28ba",
      "revId": "b7f8ed0634379c82dfc8cb817ea54fa3ce157419",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}