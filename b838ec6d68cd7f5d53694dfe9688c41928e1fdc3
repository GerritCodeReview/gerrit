{
  "comments": [
    {
      "key": {
        "uuid": "571ace48_d1ea5a6d",
        "filename": "javatests/com/google/gerrit/acceptance/api/revision/PortedCommentsIT.java",
        "patchSetId": 2
      },
      "lineNbr": 828,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2020-08-19T12:40:45Z",
      "side": 0,
      "message": "The comment is not ending within modified line, no? (contradicting with the test name).\n\nOnly modified line is line 3, and the comment is from line 1 to 4.",
      "range": {
        "startLine": 828,
        "startChar": 13,
        "endLine": 828,
        "endChar": 22
      },
      "revId": "b838ec6d68cd7f5d53694dfe9688c41928e1fdc3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2509317c_2faa80d2",
        "filename": "javatests/com/google/gerrit/acceptance/api/revision/PortedCommentsIT.java",
        "patchSetId": 2
      },
      "lineNbr": 1166,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2020-08-19T12:40:45Z",
      "side": 0,
      "message": "Idea: For this and the similar test portedRangeCommentBecomesFileCommentOnConflict(), I think the problem is that we can not identify the line offsets in the target patchset, but if we can know the target start/end lines (?), we can probably attach the comment somewhere there (e.g. on the start line).\nNot sure if this is feasible, but could be a future improvement.",
      "range": {
        "startLine": 1166,
        "startChar": 14,
        "endLine": 1166,
        "endChar": 59
      },
      "revId": "b838ec6d68cd7f5d53694dfe9688c41928e1fdc3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}