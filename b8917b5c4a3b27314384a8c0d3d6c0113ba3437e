{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "179fd7c5_a4b0f90e",
        "filename": "java/com/google/gerrit/entities/SubmitRequirementResult.java",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-05-25T09:49:17Z",
      "side": 1,
      "message": "Instead of computing the status in SubmitRuleEvaluator and setting in on this result, I think it would be better to implement the computation of the status here. The status only depends on the expression results above and hence can be computed here. The advantage of computing it here is that then it\u0027s impossible to create a SubmitRequirementResult instance where the status doesn\u0027t match the expression results. If you implement the status computation here, you can use @Memoized to ensure it\u0027s computed only once.",
      "revId": "b8917b5c4a3b27314384a8c0d3d6c0113ba3437e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7ea94a3_465f9756",
        "filename": "java/com/google/gerrit/server/project/SubmitRequirementsEvaluator.java",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-05-25T09:49:17Z",
      "side": 1,
      "message": "I think it would be cleaner to keep the old method signature and just not invoke this method if the expression is empty.",
      "range": {
        "startLine": 95,
        "startChar": 6,
        "endLine": 95,
        "endChar": 55
      },
      "revId": "b8917b5c4a3b27314384a8c0d3d6c0113ba3437e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "794b768e_8d240bc9",
        "filename": "java/com/google/gerrit/server/project/SubmitRequirementsEvaluator.java",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-05-25T09:49:17Z",
      "side": 1,
      "message": "Is this possible to happen? If yes, I think we should rather ensure at the creation time of SubmitRequirementExpression that is not the case.",
      "range": {
        "startLine": 97,
        "startChar": 35,
        "endLine": 97,
        "endChar": 81
      },
      "revId": "b8917b5c4a3b27314384a8c0d3d6c0113ba3437e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e149228e_e7850449",
        "filename": "javatests/com/google/gerrit/acceptance/server/project/SubmitRequirementsEvaluatorIT.java",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-05-25T09:49:17Z",
      "side": 1,
      "message": "The names in these comments should match the actual parameter names. But there is a mismatch here: \u0027applicabilityExpr\u0027 here vs. \u0027applicability\u0027 as parameter name.\n\nSame below.",
      "range": {
        "startLine": 106,
        "startChar": 15,
        "endLine": 106,
        "endChar": 32
      },
      "revId": "b8917b5c4a3b27314384a8c0d3d6c0113ba3437e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}