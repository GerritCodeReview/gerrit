{
  "comments": [
    {
      "key": {
        "uuid": "97b77cf5_47621806",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-09-10T12:32:27Z",
      "side": 1,
      "message": "Would you be able to score CR(s) so I know if I can get this series in soon? -Thanks.",
      "revId": "b911f2392ce7b622365787c383d039b2406949d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea9b4e60_f1bce564",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-09-14T15:34:48Z",
      "side": 1,
      "message": "Thanks for the second review! -Feedback below.",
      "revId": "b911f2392ce7b622365787c383d039b2406949d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bee2ea04_dc9df48b",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckNewProjectReplica1.scala",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-14T13:44:32Z",
      "side": 1,
      "message": "defaultName?",
      "range": {
        "startLine": 25,
        "startChar": 14,
        "endLine": 25,
        "endChar": 21
      },
      "revId": "b911f2392ce7b622365787c383d039b2406949d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dd71234_dcef9f34",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckNewProjectReplica1.scala",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-09-14T15:34:48Z",
      "side": 1,
      "message": "\u003e defaultName?\n\nI think this would be redundant with this very line\u0027s code. This \u0027name\u0027 is found elsewhere in other sibling files, too. If anything, I think we should improve the naming across all the involved files, consistently.",
      "parentUuid": "bee2ea04_dc9df48b",
      "range": {
        "startLine": 25,
        "startChar": 14,
        "endLine": 25,
        "endChar": 21
      },
      "revId": "b911f2392ce7b622365787c383d039b2406949d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7049148_62076e31",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckNewProjectReplica1.scala",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-14T19:43:44Z",
      "side": 1,
      "message": "\u003e \u003e defaultName?\n\u003e \n\u003e I think this would be redundant with this very line\u0027s code. \n\nTrue, however, when the variable is used is not obvious to read what the default is referring to.\n\n\u003e This \u0027name\u0027 is found elsewhere in other sibling files, too. If anything, I think we should improve the naming across all the involved files, consistently.\n\nGood point, would you like to address this in a follow-up?",
      "parentUuid": "9dd71234_dcef9f34",
      "range": {
        "startLine": 25,
        "startChar": 14,
        "endLine": 25,
        "endChar": 21
      },
      "revId": "b911f2392ce7b622365787c383d039b2406949d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee0776e2_81d20cfa",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckNewProjectReplica1.scala",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-09-14T20:14:53Z",
      "side": 1,
      "message": "\u003e \u003e \u003e defaultName?\n\u003e \u003e \n\u003e \u003e I think this would be redundant with this very line\u0027s code. \n\u003e \n\u003e True, however, when the variable is used is not obvious to read what the default is referring to.\n\nAck.\n\n\u003e \u003e This \u0027name\u0027 is found elsewhere in other sibling files, too. If anything, I think we should improve the naming across all the involved files, consistently.\n\u003e \n\u003e Good point, would you like to address this in a follow-up?\n\nSure, either myself or somebody else; keeping this in mind.",
      "parentUuid": "e7049148_62076e31",
      "range": {
        "startLine": 25,
        "startChar": 14,
        "endLine": 25,
        "endChar": 21
      },
      "revId": "b911f2392ce7b622365787c383d039b2406949d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af88017a_7e0e3263",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckNewProjectReplica1.scala",
        "patchSetId": 8
      },
      "lineNbr": 27,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-14T13:44:32Z",
      "side": 1,
      "message": "Why is this starting with a capital latter and the one at L28 isn\u0027t?",
      "range": {
        "startLine": 27,
        "startChar": 19,
        "endLine": 27,
        "endChar": 37
      },
      "revId": "b911f2392ce7b622365787c383d039b2406949d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "466a1f1c_22010734",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckNewProjectReplica1.scala",
        "patchSetId": 8
      },
      "lineNbr": 27,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-09-14T15:34:48Z",
      "side": 1,
      "message": "Because this specific value is not a locally computed one, as opposed to the one below. That is a Scala coding standard I learned from @Ponch originally, IIRC. I also found it well documented somewhere.",
      "parentUuid": "af88017a_7e0e3263",
      "range": {
        "startLine": 27,
        "startChar": 19,
        "endLine": 27,
        "endChar": 37
      },
      "revId": "b911f2392ce7b622365787c383d039b2406949d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9c319ae_d0b0f7fb",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckNewProjectReplica1.scala",
        "patchSetId": 8
      },
      "lineNbr": 27,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-14T19:43:44Z",
      "side": 1,
      "message": "Ah, gotcha, then this is really just SecondsPerWeightUnit, correct?\n\nI would then keep SecondsPerWeightUnit also in L28, I do not believe this val provides any benefit here.\n\nI was tricked by the \u0027lazy\u0027 declaration which typically is related to a computed value and not to a constant.",
      "parentUuid": "466a1f1c_22010734",
      "range": {
        "startLine": 27,
        "startChar": 19,
        "endLine": 27,
        "endChar": 37
      },
      "revId": "b911f2392ce7b622365787c383d039b2406949d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b71016e1_72b1de28",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckNewProjectReplica1.scala",
        "patchSetId": 8
      },
      "lineNbr": 27,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-09-14T20:14:53Z",
      "side": 1,
      "message": "\u003e Ah, gotcha, then this is really just SecondsPerWeightUnit, correct?\n\nYes.\n\n\u003e I would then keep SecondsPerWeightUnit also in L28, I do not believe this val provides any benefit here.\n\nBenefit was the explicitness, at least to me. But I agree with simplifying this; done.\n\n\u003e I was tricked by the \u0027lazy\u0027 declaration which typically is related to a computed value and not to a constant.\n\nIndeed. Here, \u0027lazy\u0027 is (was) used to guarantee the timely assignment of this value at below relativeRuntimeWeight calculation time. Without that keyword, wrong defaults are used instead of the expected (coded in) values.",
      "parentUuid": "a9c319ae_d0b0f7fb",
      "range": {
        "startLine": 27,
        "startChar": 19,
        "endLine": 27,
        "endChar": 37
      },
      "revId": "b911f2392ce7b622365787c383d039b2406949d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9a89861_842305b6",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckNewProjectReplica1.scala",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-14T13:44:32Z",
      "side": 1,
      "message": "Should we also give some % of tolerance? If the Gerrit replication is set to 15s, as an example, it will show-up *well after* 15s. Typically allowing a 2x factor has demonstrated to be safe. WDYT?",
      "range": {
        "startLine": 28,
        "startChar": 41,
        "endLine": 28,
        "endChar": 57
      },
      "revId": "b911f2392ce7b622365787c383d039b2406949d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45c0d441_fc8c9cbb",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckNewProjectReplica1.scala",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-09-14T15:34:48Z",
      "side": 1,
      "message": "This value defaults to 15s in the GerritSimulation parent, but can be customized depending on such specific environments. See [1]\u0027s doc added in this change, about the replication_delay property that one can set otherwise. So, this value can be tuned based on that Gerrit replication set in the SUT:\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/277634/8/Documentation/dev-e2e-tests.txt\n\nThere is also the above ReplicationSeconds small buffer added. Beyond this and that more significant replication_delay property which can be set ([1]), one can also set the optional power_factor property [2]. But I\u0027d rather rely on [1] first in this specific case.\n\n[2] https://gerrit-documentation.storage.googleapis.com/Documentation/3.0.12/dev-e2e-tests.html#_environment_properties",
      "parentUuid": "a9a89861_842305b6",
      "range": {
        "startLine": 28,
        "startChar": 41,
        "endLine": 28,
        "endChar": 57
      },
      "revId": "b911f2392ce7b622365787c383d039b2406949d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "967f470d_1869672e",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckNewProjectReplica1.scala",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-14T19:43:44Z",
      "side": 1,
      "message": "\u003e This value defaults to 15s in the GerritSimulation parent, but can be customized depending on such specific environments. See [1]\u0027s doc added in this change, about the replication_delay property that one can set otherwise. So, this value can be tuned based on that Gerrit replication set in the SUT:\n\u003e \n\u003e [1] https://gerrit-review.googlesource.com/c/gerrit/+/277634/8/Documentation/dev-e2e-tests.txt\n\u003e \n\u003e There is also the above ReplicationSeconds small buffer added. Beyond this and that more significant replication_delay property which can be set ([1]), one can also set the optional power_factor property [2]. But I\u0027d rather rely on [1] first in this specific case.\n\u003e \n\u003e [2] https://gerrit-documentation.storage.googleapis.com/Documentation/3.0.12/dev-e2e-tests.html#_environment_properties\n\nTrue, but by default that is set to 1.0, if I read [2]. That means that we are certain that this would fail, because the replication takes at least the replication time and typically a bit more.",
      "parentUuid": "45c0d441_fc8c9cbb",
      "range": {
        "startLine": 28,
        "startChar": 41,
        "endLine": 28,
        "endChar": 57
      },
      "revId": "b911f2392ce7b622365787c383d039b2406949d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74efd009_f8712231",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckNewProjectReplica1.scala",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-09-14T20:14:53Z",
      "side": 1,
      "message": "\u003e \u003e This value defaults to 15s in the GerritSimulation parent, but can be customized depending on such specific environments. See [1]\u0027s doc added in this change, about the replication_delay property that one can set otherwise. So, this value can be tuned based on that Gerrit replication set in the SUT:\n\u003e \u003e \n\u003e \u003e [1] https://gerrit-review.googlesource.com/c/gerrit/+/277634/8/Documentation/dev-e2e-tests.txt\n\u003e \u003e \n\u003e \u003e There is also the above ReplicationSeconds small buffer added. Beyond this and that more significant replication_delay property which can be set ([1]), one can also set the optional power_factor property [2]. But I\u0027d rather rely on [1] first in this specific case.\n\u003e \u003e \n\u003e \u003e [2] https://gerrit-documentation.storage.googleapis.com/Documentation/3.0.12/dev-e2e-tests.html#_environment_properties\n\u003e \n\u003e True, but by default that is set to 1.0, if I read [2]. That means that we are certain that this would fail, because the replication takes at least the replication time and typically a bit more.\n\nIt is true that power_factor defaults to 1.0 ([2]), but I\u0027m rather recommending to use replication_delay ([1]), above. Again, one can tune the latter at will to fit with SUT\u0027s replication delays. That is the first part of my intended explanation, above. This is also explained in the commit message.",
      "parentUuid": "967f470d_1869672e",
      "range": {
        "startLine": 28,
        "startChar": 41,
        "endLine": 28,
        "endChar": 57
      },
      "revId": "b911f2392ce7b622365787c383d039b2406949d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}