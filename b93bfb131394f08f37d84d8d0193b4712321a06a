{
  "comments": [
    {
      "key": {
        "uuid": "660579fa_c50230d2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-02T07:19:59Z",
      "side": 1,
      "message": "FYI: Thanks for mentioning this explicitly. I think it\u0027s a current \u0027feature\u0027 of the JSON framework we\u0027re using to distinguish between empty lists and null. There might be some other frameworks which automatically map an empty list to not being set.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 57
      },
      "revId": "b93bfb131394f08f37d84d8d0193b4712321a06a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ecf1abb_9c198196",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-02T07:19:59Z",
      "side": 1,
      "message": "There seems to be a word missing here.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 12
      },
      "revId": "b93bfb131394f08f37d84d8d0193b4712321a06a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cde09ea4_a743eb63",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2019-07-02T07:44:27Z",
      "side": 1,
      "message": "Actually a word too much. Good catch.",
      "parentUuid": "6ecf1abb_9c198196",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 12
      },
      "revId": "b93bfb131394f08f37d84d8d0193b4712321a06a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5711d092_8409eb97",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 6256,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-02T07:19:59Z",
      "side": 1,
      "message": "Optional: If we wanted to be very clear in the documentation, we could mention here that those values are only set if intraline diffs are requested (there\u0027s a parameter for it) and if intraline edits considering other factors like whitespace settings have been found.",
      "range": {
        "startLine": 6251,
        "startChar": 0,
        "endLine": 6256,
        "endChar": 52
      },
      "revId": "b93bfb131394f08f37d84d8d0193b4712321a06a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6488d839_a8ac958e",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 6256,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2019-07-02T07:44:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5711d092_8409eb97",
      "range": {
        "startLine": 6251,
        "startChar": 0,
        "endLine": 6256,
        "endChar": 52
      },
      "revId": "b93bfb131394f08f37d84d8d0193b4712321a06a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aea075e_0b5113b7",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 6322,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-02T07:19:59Z",
      "side": 1,
      "message": "Thanks for adding this. There might just be one small possible interpretation which I hope readers don\u0027t have: The entire DiffContent shouldn\u0027t be considered as being an intraline edit. In Gerrit, we typically have the distinction between a line is edited (similar to Git which is only working on whole lines) and a section inside of the line is edited (which we have on top and are the intraline edits). If no intraline edits are available, the whole line can still be considered as being edited (and hence marked only with the color for whole line edits). Do you think you could make this a bit clearer?",
      "range": {
        "startLine": 6321,
        "startChar": 0,
        "endLine": 6322,
        "endChar": 25
      },
      "revId": "b93bfb131394f08f37d84d8d0193b4712321a06a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c14d4c9_37f4b2d7",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 6322,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-02T07:19:59Z",
      "side": 1,
      "message": "I\u0027m not sure why the word \u0027marked\u0027 is included here and it\u0027s a bit confusing to me. Does it come from thinking of marked lines/sections on the UI? If so, I think we should rather stick to only \u0027edited\u0027 as the documentation for the REST API is actually written in terms of domain knowledge and not from the viewpoint of a UI.",
      "range": {
        "startLine": 6322,
        "startChar": 11,
        "endLine": 6322,
        "endChar": 17
      },
      "revId": "b93bfb131394f08f37d84d8d0193b4712321a06a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45758fed_1064dc12",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 6322,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2019-07-02T07:44:27Z",
      "side": 1,
      "message": "Do you have a suggestion what would make this clearer?\n\nAs I see it, we have the following cases:\na) a/b set, but edit_a/b not set: The entire line should be displayed in dark color, all of it has changed.\nb) a/b set, edit_a/b are non-empty lists: The line should be displayed in light color, the portions \"marked\" in edit_a/b have actually changed, and should be marked in dark color.\nc) a/b set, edit_a/b are empty lists\n\nc) is the case I would like to document/define here. I think if this happens it should mean: Nothing to skip \u003d mark everything is changed and thus make the entire line dark (treat this basically the same as case a)). It\u0027s not clear to me what the danger is of people calling this an intraline edit, but I also do not use that language here I think.\n\nAnyways, very open to suggestions for how to make this clearer. Thanks!",
      "parentUuid": "5aea075e_0b5113b7",
      "range": {
        "startLine": 6321,
        "startChar": 0,
        "endLine": 6322,
        "endChar": 25
      },
      "revId": "b93bfb131394f08f37d84d8d0193b4712321a06a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f814b9da_3df93fdd",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 6322,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2019-07-02T07:44:27Z",
      "side": 1,
      "message": "This comes from the paragraph before, where DiffIntralineInfo is defined as list of `\u003cskip length, mark length\u003e` pairs. I also find edited more understandable, that\u0027s why I added that here. Should I replace \"mark length\" with \"edited length\" above instead?",
      "parentUuid": "6c14d4c9_37f4b2d7",
      "range": {
        "startLine": 6322,
        "startChar": 11,
        "endLine": 6322,
        "endChar": 17
      },
      "revId": "b93bfb131394f08f37d84d8d0193b4712321a06a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cb7ad25_7f477323",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 6322,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-05T09:55:39Z",
      "side": 1,
      "message": "For a), I think the whole line should only be displayed in *light* color as no intraline edits were found (or requested). The latter case (\u003d not requested) can be disregarded for the UI as PolyGerrit always requests intraline edits. (I remember that there was a diff setting in PolyGerrit for this at some point in time but it seems to be gone now.)\n\nI agree with you that the handling of c) should be the same as a).\n\nSo, we only have different opinions on whether the whole line should be displayed in dark or light color for a) and c). I would have guessed that the light color is the current behavior of Gerrit for a). If helpful for you, I can also explain in more detail why I think that light color would be the better choice.\n\nRegarding a formulation for the documentation, what about:\nAn empty list of edits signifies the same as if no DiffIntralineInfo is available. This means that no intraline edits are available or have been found. Hence, only the basic information that the line was modified without indicating where within it will be available to users.",
      "parentUuid": "45758fed_1064dc12",
      "range": {
        "startLine": 6321,
        "startChar": 0,
        "endLine": 6322,
        "endChar": 25
      },
      "revId": "b93bfb131394f08f37d84d8d0193b4712321a06a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "811e6706_803a9c01",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 6322,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-05T09:55:39Z",
      "side": 1,
      "message": "I would use \"edit length\".",
      "parentUuid": "f814b9da_3df93fdd",
      "range": {
        "startLine": 6322,
        "startChar": 11,
        "endLine": 6322,
        "endChar": 17
      },
      "revId": "b93bfb131394f08f37d84d8d0193b4712321a06a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24257aaa_e1578345",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 6322,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2019-07-05T11:11:07Z",
      "side": 1,
      "message": "Yes, the light color is the current behavior - except that this case never happens in Gerrit: When you request intraline (which we always do), and the whole line has changed, Gerrit will return a/b set and edit_a/b will be set to the entire line (only the portion that actually has content, not the full width):\nhttps://gerrit-review.googlesource.com/c/gerrit/+/220974/4..5/test_intraline\n\nWhat is not defined in the documentation yet is what happens when the line is empty (and this case never occurs in Gerrit, but it can occur for other usages of gr-diff).\nIn my opinion, the dark color is the \"normal\" diff color: For example, when you just add/remove some lines, they are completely dark:\nhttps://gerrit-review.googlesource.com/c/gerrit/+/220974/7..8/test_add_remove_lines\n\nThe API returns:\n\n  \"intraline_status\": \"OK\",\n\nBut does not return either edit_a nor edit_b. Still the UI renders it dark. Light color means: This is part of a changed line, but technically these chars have not changed.\n\n\"An empty list of edits signifies the same as if no DiffIntralineInfo is available\" - I agree. To be consistent with the example of completely added/removed lines for which the API also does not return edit_a/edit_b, I think these lines should be dark.\n\nWas I able to convince you? If not let\u0027s talk about it in person when you are back.",
      "parentUuid": "6cb7ad25_7f477323",
      "range": {
        "startLine": 6321,
        "startChar": 0,
        "endLine": 6322,
        "endChar": 25
      },
      "revId": "b93bfb131394f08f37d84d8d0193b4712321a06a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f1e3d58_f08fbe1b",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 6322,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2019-07-05T11:11:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "811e6706_803a9c01",
      "range": {
        "startLine": 6322,
        "startChar": 11,
        "endLine": 6322,
        "endChar": 17
      },
      "revId": "b93bfb131394f08f37d84d8d0193b4712321a06a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}