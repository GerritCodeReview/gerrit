{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "70b0928b_8d512564",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-07-22T14:45:56Z",
      "side": 1,
      "message": "I also fixed the test in RevisionDiffIT that was causing CI failures.",
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecc5d10b_d323b0f3",
        "filename": "java/com/google/gerrit/server/patch/diff/ModifiedFilesCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 148,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-07-22T12:36:03Z",
      "side": 1,
      "message": "I\u0027d find this more readable inline.",
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "baf23662_269ebfc2",
        "filename": "java/com/google/gerrit/server/patch/diff/ModifiedFilesCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 148,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-07-22T14:45:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecc5d10b_d323b0f3",
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba1281bd_53f8775e",
        "filename": "java/com/google/gerrit/server/patch/diff/ModifiedFilesCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-07-22T12:36:03Z",
      "side": 1,
      "message": "\"two diff entries (ADDED+DELETED)\"\n\nThe current wording could also be read as \"two ADDED diff entries\".",
      "range": {
        "startLine": 216,
        "startChar": 49,
        "endLine": 216,
        "endChar": 80
      },
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53f6b81a_af09bc8b",
        "filename": "java/com/google/gerrit/server/patch/diff/ModifiedFilesCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-07-22T14:45:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba1281bd_53f8775e",
      "range": {
        "startLine": 216,
        "startChar": 49,
        "endLine": 216,
        "endChar": 80
      },
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8321b178_453c31aa",
        "filename": "java/com/google/gerrit/server/patch/diff/ModifiedFilesCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 249,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-07-22T12:36:03Z",
      "side": 1,
      "message": "Would it be easier to build a com.google.common.collect.Multimap keyed by file path, then iterate over it and merge the values where the Collection\u003cV\u003e has 2 elements? You could also verify that there are always either 1 or 2 entries.",
      "range": {
        "startLine": 228,
        "startChar": 6,
        "endLine": 249,
        "endChar": 48
      },
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48553138_152f68d1",
        "filename": "java/com/google/gerrit/server/patch/diff/ModifiedFilesCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 249,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-07-22T14:45:56Z",
      "side": 1,
      "message": "You have to inspect both old and new file paths:\n   * old path for DELETED entries\n   * new path for ADDED entries\n   \nso a single map won\u0027t suffice.\n\nWe could add keys \u003d {old_path + new_path}, values \u003d {ModifiedFile instances} but that would result in duplicate entries for, e.g., renamed files which will occur two times in the map. I also tried that prior to uploading PS4 and got failures with tests that do copies (a file can have many entries with same old path, but with different new paths).\n\nI found this implementation easier to understand.",
      "parentUuid": "8321b178_453c31aa",
      "range": {
        "startLine": 228,
        "startChar": 6,
        "endLine": 249,
        "endChar": 48
      },
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9906a143_8bc3a1e3",
        "filename": "java/com/google/gerrit/server/patch/diff/ModifiedFilesCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 249,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-07-22T16:06:21Z",
      "side": 1,
      "message": "Couldn\u0027t you use key\u003doldPath for DELETE, newPath for ADD? And then maybe use a special key (\"\") for all other operation types.\n\nI imagine that building the Multimap would be simple this way, and iterating over it to merge ADDED and DELETED would also be straightforward. By grouping all other change types to a key of \"\" (and then just copying them) you would avoid the problem of copies.",
      "parentUuid": "48553138_152f68d1",
      "range": {
        "startLine": 228,
        "startChar": 6,
        "endLine": 249,
        "endChar": 48
      },
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db62a9fa_bd2e151d",
        "filename": "java/com/google/gerrit/server/patch/diff/ModifiedFilesCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 249,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-07-23T09:01:54Z",
      "side": 1,
      "message": "Ah I see. Thanks for the suggestion. That worked.\n\nDone.",
      "parentUuid": "9906a143_8bc3a1e3",
      "range": {
        "startLine": 228,
        "startChar": 6,
        "endLine": 249,
        "endChar": 48
      },
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d605c8ea_be226b9e",
        "filename": "java/com/google/gerrit/server/patch/gitfilediff/GitFileDiffCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 252,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-07-22T12:36:03Z",
      "side": 1,
      "message": "opt: forEach()?",
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51740870_dc051200",
        "filename": "java/com/google/gerrit/server/patch/gitfilediff/GitFileDiffCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 252,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-07-22T14:45:56Z",
      "side": 1,
      "message": "Had to keep it as explicit for loop since createGitFileDiff throws an exception that we want to propagate back to callers.",
      "parentUuid": "d605c8ea_be226b9e",
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c8997dc_062b04ce",
        "filename": "java/com/google/gerrit/server/patch/gitfilediff/GitFileDiffCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 378,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-07-22T12:36:03Z",
      "side": 1,
      "message": "private static final Set\u003cChangeType\u003e ADDED_AND_DELETED \u003d ImmutableSet.of(ADDED, DELETED);\n\nThen you can simply do:\nImmutableSet.of(gitDiffs.get(0).changeType(), gitDiffs.get(1).changeType()).equals(ADDED_AND_DELETED);",
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7dbfd8a_7e3958d4",
        "filename": "java/com/google/gerrit/server/patch/gitfilediff/GitFileDiffCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 378,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-07-22T14:45:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c8997dc_062b04ce",
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11a085b0_2268cff7",
        "filename": "java/com/google/gerrit/server/patch/gitfilediff/GitFileDiffCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 392,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-07-22T12:36:03Z",
      "side": 1,
      "message": "Shouldn\u0027t this be in GitFileDiff?",
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c551233_7c32de2d",
        "filename": "java/com/google/gerrit/server/patch/gitfilediff/GitFileDiffCacheImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 392,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-07-22T14:45:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11a085b0_2268cff7",
      "revId": "b957ceb52728ac9c53681680d3e53ec601150004",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}