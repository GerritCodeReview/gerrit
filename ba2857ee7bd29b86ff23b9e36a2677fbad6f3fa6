{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c8a49423_6cabc3e2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-10-09T16:49:00Z",
      "side": 1,
      "message": "Can you use a publicly accessible link please?",
      "revId": "ba2857ee7bd29b86ff23b9e36a2677fbad6f3fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45b6c1d4_bc288ba1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2023-10-10T10:46:46Z",
      "side": 1,
      "message": "Sorry. Done",
      "parentUuid": "c8a49423_6cabc3e2",
      "revId": "ba2857ee7bd29b86ff23b9e36a2677fbad6f3fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce12a522_d27b2826",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2023-10-10T07:51:49Z",
      "side": 1,
      "message": "I thought about testing, but testing this seems hard because it is a heuristical optimization.",
      "revId": "ba2857ee7bd29b86ff23b9e36a2677fbad6f3fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c49b708_74b965f4",
        "filename": "java/com/google/gerrit/server/restapi/project/CommitsCollection.java",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-10-09T16:49:00Z",
      "side": 1,
      "message": "Maybe invert this check and de-dup lines 157-163 and 190-193? That would also make it clearer this isn\u0027t an entirely new code path. So this would be something like:\n\n```\nif (!parentPredicates.isEmpty()) {\n[insert lines 165-186]\n}\n[insert lines 152-154 + 188-193]\n```",
      "revId": "ba2857ee7bd29b86ff23b9e36a2677fbad6f3fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2175c5ae_695fcd92",
        "filename": "java/com/google/gerrit/server/restapi/project/CommitsCollection.java",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2023-10-10T07:51:49Z",
      "side": 1,
      "message": "+1 we could do:\n\nif (commit.getParents() \u003d\u003d null || commit.getParents().length \u003d\u003d 0) {\nreturn ...\n}\n\nSeems more readable.",
      "parentUuid": "9c49b708_74b965f4",
      "revId": "ba2857ee7bd29b86ff23b9e36a2677fbad6f3fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e6097c3_7512ff3f",
        "filename": "java/com/google/gerrit/server/restapi/project/CommitsCollection.java",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2023-10-10T10:46:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2175c5ae_695fcd92",
      "revId": "ba2857ee7bd29b86ff23b9e36a2677fbad6f3fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7795ab40_add1e8fe",
        "filename": "java/com/google/gerrit/server/restapi/project/CommitsCollection.java",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-10-09T16:49:00Z",
      "side": 1,
      "message": "2 comments on this:\n1) \"check the visibility on each\" is misleading since I think we would only be checking the visibility of the distinct set of branches for all changes\n2) Is this comment important to the new behavior or just describing the problem with the old behavior?",
      "range": {
        "startLine": 152,
        "startChar": 47,
        "endLine": 154,
        "endChar": 18
      },
      "revId": "ba2857ee7bd29b86ff23b9e36a2677fbad6f3fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7fe6374c_580b5b3f",
        "filename": "java/com/google/gerrit/server/restapi/project/CommitsCollection.java",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2023-10-10T10:46:46Z",
      "side": 1,
      "message": "1) We request changes from index with enforceVisibility\u003dtrue. Post filter predicate will check visibility on each change, until it finds N visible changes, where N is the user query limit. I think the comment makes it clear enough that requesting all changes is a bad idea.\n2) This comment is important so that noone is tempted to remove this line.",
      "parentUuid": "7795ab40_add1e8fe",
      "range": {
        "startLine": 152,
        "startChar": 47,
        "endLine": 154,
        "endChar": 18
      },
      "revId": "ba2857ee7bd29b86ff23b9e36a2677fbad6f3fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab135a56_20d0215a",
        "filename": "java/com/google/gerrit/server/restapi/project/CommitsCollection.java",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-10-12T05:09:17Z",
      "side": 1,
      "message": "\u003e 1) We request changes from index with enforceVisibility\u003dtrue. Post filter predicate will check visibility on each change, until it finds N visible changes, where N is the user query limit. I think the comment makes it clear enough that requesting all changes is a bad idea.\n\nGot it, thanks. Now that I see that enforceVisibility\u003dtrue in the code, I wonder if it would be more optimal to collect the set of branches for the changes (without enforcing visibility during the change query) and then only check visibility on each branch once. Does that make sense to you?\n\nWith either approach, it seems like limiting the query results to the user query limit could lead to unpredictable results. Why is this query limited like that?\n\n\u003e 2) This comment is important so that noone is tempted to remove this line.\n\nAck.",
      "parentUuid": "7fe6374c_580b5b3f",
      "range": {
        "startLine": 152,
        "startChar": 47,
        "endLine": 154,
        "endChar": 18
      },
      "revId": "ba2857ee7bd29b86ff23b9e36a2677fbad6f3fa6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}