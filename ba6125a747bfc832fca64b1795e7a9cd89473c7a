{
  "comments": [
    {
      "key": {
        "uuid": "92301b08_e9592e58",
        "filename": "gerrit-acceptance-framework/src/test/java/com/google/gerrit/acceptance/ChangeIndexedCounter.java",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-09-11T09:57:02Z",
      "side": 1,
      "message": "This class has IMHO a couple of design issues which I discovered while trying\nto reuse it for my test cases in [1] as suggested by Edwin.\n\nDetails below...\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/231853/8",
      "revId": "ba6125a747bfc832fca64b1795e7a9cd89473c7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "389c8955_16126cf3",
        "filename": "gerrit-acceptance-framework/src/test/java/com/google/gerrit/acceptance/ChangeIndexedCounter.java",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-09-11T09:57:02Z",
      "side": 1,
      "message": "This assumes that there is only one entry in the counter map?! Means, we cannot make\ntwo asserts which check that two changes where reindexed.\n\nFurther, this prevents us from asserting that a change was NOT reindexed.",
      "revId": "ba6125a747bfc832fca64b1795e7a9cd89473c7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b8677e0_fce9ebb4",
        "filename": "gerrit-acceptance-framework/src/test/java/com/google/gerrit/acceptance/ChangeIndexedCounter.java",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-09-11T09:57:02Z",
      "side": 1,
      "message": "Why clear()? This means that we cannot make more than one assert as the first one\nclears the counter map.",
      "revId": "ba6125a747bfc832fca64b1795e7a9cd89473c7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d4ac1b7_ba948a21",
        "filename": "gerrit-acceptance-framework/src/test/java/com/google/gerrit/acceptance/ChangeIndexedCounter.java",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-09-11T10:01:06Z",
      "side": 1,
      "message": "This class is supposed to be used like this:\n\n1. clear() -\u003e reset the counter\n2. make the request that should be tested\n3. assertReindexOf() -\u003e check that the request from 2. triggered the expected number of reindexes\n4. make another request that should be tested\n5. assertReindexOf() -\u003e check that the request from 4. triggered the expected number of reindexes",
      "parentUuid": "4b8677e0_fce9ebb4",
      "revId": "ba6125a747bfc832fca64b1795e7a9cd89473c7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19cda513_fb541f51",
        "filename": "gerrit-acceptance-framework/src/test/java/com/google/gerrit/acceptance/ChangeIndexedCounter.java",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-09-11T10:02:12Z",
      "side": 1,
      "message": "If you need to check reindex events for more than one change, you can add further assert methods here.",
      "parentUuid": "6d4ac1b7_ba948a21",
      "revId": "ba6125a747bfc832fca64b1795e7a9cd89473c7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbd1967e_d9d49ad9",
        "filename": "gerrit-acceptance-framework/src/test/java/com/google/gerrit/acceptance/ChangeIndexedCounter.java",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-09-11T11:40:44Z",
      "side": 1,
      "message": "This class exposes the clear() method which is good.\nIMO, the step 4 should be an explicit clear() call from the test code and not a side effect of an assert.\nFor example I would like to index 2 changes (in one REST call) and then have two asserts:\n\n  counter.assertReindexOf(C1);\n  counter.assertReindexOf(C2);\n\nIf the first assert clears all the counters then the second assert will not work.\nThe countsByChange map stores any number of counters, but they are all cleared after\nthe first assert?!\n\nAdding new assert methods which do not clear the state will create further confusion\nabout how to properly use this class.",
      "parentUuid": "19cda513_fb541f51",
      "revId": "ba6125a747bfc832fca64b1795e7a9cd89473c7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66d32f45_c1fad9a8",
        "filename": "gerrit-acceptance-framework/src/test/java/com/google/gerrit/acceptance/ChangeIndexedCounter.java",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-09-11T11:49:30Z",
      "side": 1,
      "message": "\u003e IMO, the step 4 should be an explicit clear() call from the test code and not a side effect of an assert.\n\nI\u0027m fine with changing this, but it might be some effort to adapt all the tests that use this.\n\n\u003e Adding new assert methods which do not clear the state will create further confusion\n\u003e about how to properly use this class.\n\nI was thinking about a new assert method that checks the state for a set of changes and then does clear.",
      "parentUuid": "dbd1967e_d9d49ad9",
      "revId": "ba6125a747bfc832fca64b1795e7a9cd89473c7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec640ebf_d2f7d027",
        "filename": "gerrit-acceptance-framework/src/test/java/com/google/gerrit/acceptance/ChangeIndexedCounter.java",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-09-11T12:36:07Z",
      "side": 1,
      "message": "\u003e I was thinking about a new assert method that checks the state for a set of changes and then does clear.\n\nLooking at the ChangeIT test (as an example) we see that we anyway need an explicit clear call\nbefore we start counting:\n\n  info \u003d createChange();\n  changeIndexedCounter.clear()\n  ... do something that should index the change ...\n  changeIndexedCounter.assertReindexOf(info)\n\nThis is because the createChange() already indexed the change and the counter for\nthat change is already set to 1.\n\nWithout starting the effort to adapt all tests which rely on ChangeIndexedCounter class\nI am going to expose the non-mutating getCount() method and rely on it and clear() for my asserts.",
      "parentUuid": "66d32f45_c1fad9a8",
      "revId": "ba6125a747bfc832fca64b1795e7a9cd89473c7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98756753_35017877",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/ssh/AbstractIndexTests.java",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2018-06-19T23:35:19Z",
      "side": 1,
      "message": "Need to remove this.  The output of the show-queue command gets truncated, so the entire project name is not included.\n\nIt was just chance that it was passing before; most likely the delay caused by executing the command gave enough time for the indexing to complete.",
      "range": {
        "startLine": 113,
        "startChar": 61,
        "endLine": 113,
        "endChar": 77
      },
      "revId": "ba6125a747bfc832fca64b1795e7a9cd89473c7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}