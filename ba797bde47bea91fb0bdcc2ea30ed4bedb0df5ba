{
  "comments": [
    {
      "key": {
        "uuid": "AAAAbH///7o\u003d",
        "filename": "src/main/java/com/google/gerrit/client/patches/PatchScreen.java",
        "patchSetId": 7
      },
      "lineNbr": 275,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2009-07-15T18:39:25Z",
      "side": 1,
      "message": "OK, lets ignore the stacking and leave it in the 3rd column as you have it.",
      "revId": "ba797bde47bea91fb0bdcc2ea30ed4bedb0df5ba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///7k\u003d",
        "filename": "src/main/java/com/google/gerrit/client/patches/PatchScreen.java",
        "patchSetId": 7
      },
      "lineNbr": 297,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2009-07-15T18:39:25Z",
      "side": 1,
      "message": "Trailing whitespace.",
      "revId": "ba797bde47bea91fb0bdcc2ea30ed4bedb0df5ba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///7w\u003d",
        "filename": "src/main/java/com/google/gerrit/client/reviewdb/AccountPatchReview.java",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2009-07-15T18:39:25Z",
      "side": 1,
      "message": "Also add\n\n    @Override\n    public Account.Id getParentKey() {\n      return accountId;\n    }\n\nsince you have declared the parent to be of type Account.Id.",
      "revId": "ba797bde47bea91fb0bdcc2ea30ed4bedb0df5ba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///7Q\u003d",
        "filename": "src/main/java/com/google/gerrit/client/reviewdb/AccountPatchReview.java",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1002059
      },
      "writtenOn": "2009-07-15T18:49:34Z",
      "side": 1,
      "message": "Done, but I was puzzled by the generic parameter, and still am. Account doesn\u0027t seem to make much sense as a parent, and the Javadoc recommends using Key in such a case. Should I just do that?",
      "revId": "ba797bde47bea91fb0bdcc2ea30ed4bedb0df5ba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///7s\u003d",
        "filename": "src/main/java/com/google/gerrit/client/reviewdb/AccountPatchReview.java",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2009-07-15T18:39:25Z",
      "side": 1,
      "message": "If you override accountId then the parentKey is automatically a member, and this needs to only include the patchKey.",
      "revId": "ba797bde47bea91fb0bdcc2ea30ed4bedb0df5ba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///7M\u003d",
        "filename": "src/main/java/com/google/gerrit/client/reviewdb/AccountPatchReview.java",
        "patchSetId": 7
      },
      "lineNbr": 51,
      "author": {
        "id": 1002059
      },
      "writtenOn": "2009-07-15T18:49:34Z",
      "side": 1,
      "message": "Fixed.",
      "revId": "ba797bde47bea91fb0bdcc2ea30ed4bedb0df5ba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///70\u003d",
        "filename": "src/main/java/com/google/gerrit/client/reviewdb/AccountPatchReviewAccess.java",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2009-07-15T18:39:25Z",
      "side": 1,
      "message": "Actually, this should be by patch set.  E.g.\n\n  @Query(\"WHERE key.accountId \u003d ? AND key.patchKey.patchSetId \u003d ?\")\n  ResultSet\u003cAccountPatchReview\u003e byPatchSet(Account.Id who, PatchSet.Id ps) throws OrmException;\n\nThat way we don\u0027t load every file the user has ever looked at, but instead load only the ones most relevant for right now.",
      "revId": "ba797bde47bea91fb0bdcc2ea30ed4bedb0df5ba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///7U\u003d",
        "filename": "src/main/java/com/google/gerrit/client/reviewdb/AccountPatchReviewAccess.java",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1002059
      },
      "writtenOn": "2009-07-15T18:49:34Z",
      "side": 1,
      "message": "Of course. Fixed.",
      "revId": "ba797bde47bea91fb0bdcc2ea30ed4bedb0df5ba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///7g\u003d",
        "filename": "src/main/java/com/google/gerrit/server/patch/PatchDetailServiceImpl.java",
        "patchSetId": 7
      },
      "lineNbr": 204,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2009-07-15T18:39:25Z",
      "side": 1,
      "message": "Should be:\n\n  } else if (apr !\u003d NULL \u0026\u0026 !reviewed) {\n\nI don\u0027t know what gwtorm does if you ask it to delete null from a table; it makes no sense, its likely to NPE because I probably don\u0027t check for null coming out of the collection.",
      "revId": "ba797bde47bea91fb0bdcc2ea30ed4bedb0df5ba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAbH///7I\u003d",
        "filename": "src/main/java/com/google/gerrit/server/patch/PatchDetailServiceImpl.java",
        "patchSetId": 7
      },
      "lineNbr": 205,
      "author": {
        "id": 1002059
      },
      "writtenOn": "2009-07-15T18:49:34Z",
      "side": 1,
      "message": "Regardless of gwtorm\u0027s behavior, testing against null is definitely the right thing to do here, my bad. Fixed.",
      "revId": "ba797bde47bea91fb0bdcc2ea30ed4bedb0df5ba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}