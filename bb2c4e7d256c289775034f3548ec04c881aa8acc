{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d798e665_088d3315",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-23T16:00:38Z",
      "side": 1,
      "message": "I just realized this says \"pgm\", but you\u0027re not adding a pgm class, only a server class. How will someone run this?",
      "range": {
        "startLine": 7,
        "startChar": 6,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe26b1f7_a56132a5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-27T13:30:16Z",
      "side": 1,
      "message": "Yeah, this is not a pgm (aka a program that is a server side administrative tool [1]), but I also think it doesn\u0027t need to be one, as we are intending to make this a schema migration (see l. 27-29) below. A pgm is only needed if for some reason it\u0027s not possible to implement this as a schema migration. So I think rephrasing this should be sufficient.\n\n[1] https://gerrit-review.googlesource.com/Documentation/pgm-index.html",
      "parentUuid": "d798e665_088d3315",
      "range": {
        "startLine": 7,
        "startChar": 6,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be7f345a_1af013f2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-29T18:26:16Z",
      "side": 1,
      "message": "\u003e A pgm is only needed if for some reason it\u0027s not possible to implement this as a schema migration.\n\nBut would it be safe to run this migration on 3.6.X (online or offline) so that you don\u0027t need downtime upgrading to 3.7? If yes, I think have a pgm (and moving this change to stable-3.6) would be beneficial.\n\nIf there must be a schema version change, does this need to be idempotent? We only expect those to run once.",
      "parentUuid": "fe26b1f7_a56132a5",
      "range": {
        "startLine": 7,
        "startChar": 6,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2ffb6e8_05ea0015",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-30T07:58:02Z",
      "side": 1,
      "message": "This must be a schema migration, since we will drop all code for the deprecated label functions in the next step. At that moment your projects will be broken if you haven\u0027t migrated yet.\n\nIt would be possible to delay the removal of the deprecated label functions to the next release so that you could do an online migration in this release, but AFAIK we are not committed to support online migration and haven\u0027t done such an approach for any other migrations yet (an exception may have been the copy-approvals pgm, but that\u0027s an optional migration that is not mandatory to be executed, and I think it only became a pgm by accident since we missed the release where this should have been included as a schema migration).\n\n\u003e I think have a pgm (and moving this change to stable-3.6) would be beneficial.\n\nThis would require backporting other changes, at least [1], as otherwise people may manually reset the deprecated label functions after they have been migrated. I think backporting that change would be against our stable branch policy.\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/337456",
      "parentUuid": "be7f345a_1af013f2",
      "range": {
        "startLine": 7,
        "startChar": 6,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4002388_b093800e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-30T14:16:59Z",
      "side": 1,
      "message": "\u003e This must be a schema migration, since we will drop all code for the deprecated label functions in the next step. At that moment your projects will be broken if you haven\u0027t migrated yet.\n\nAck.\n\n\u003e \n\u003e It would be possible to delay the removal of the deprecated label functions to the next release so that you could do an online migration in this release, but AFAIK we are not committed to support online migration and haven\u0027t done such an approach for any other migrations yet (an exception may have been the copy-approvals pgm, but that\u0027s an optional migration that is not mandatory to be executed, and I think it only became a pgm by accident since we missed the release where this should have been included as a schema migration).\n\nI was just thinking that since Google ends up doing online migrations always, maybe it would make sense to start aligning the rest of the community to being able to do that. There\u0027s continued growing interest in HA setups and online migrations help reduce downtime. It\u0027s not a must-have thing for me, I just got onto this thinking because of the \u0027pgm\u0027 wording in the commit message ðŸ˜Š\n\n\u003e \n\u003e \u003e I think have a pgm (and moving this change to stable-3.6) would be beneficial.\n\u003e \n\u003e This would require backporting other changes, at least [1], as otherwise people may manually reset the deprecated label functions after they have been migrated. I think backporting that change would be against our stable branch policy.\n\nI think if we had both pgm and schema migration it would be fine to do the pgm without that change, because you\u0027d still run the schema migration later as a final check. But so long as the migration is fast (timing it on a test site would be ideal), I\u0027m ok with it being only a schema migration.",
      "parentUuid": "a2ffb6e8_05ea0015",
      "range": {
        "startLine": 7,
        "startChar": 6,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df8b61ea_58e957d5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-14T16:05:55Z",
      "side": 1,
      "message": "Thanks Edwin for replying, and Nasser for the discussion; I really appreciate your inputs and perspectives.\n\nOne comment:\n\n\u003e since we will drop all code for the deprecated label functions in the next step.\n\nI think it\u0027s a bit more complicated; this change is skipping hosts that have prolog rules, as those have to be updated manually by admins (removing prolog, updating label fns).\n\nThis change is about adding SRs replacing label fns, but for projects having Prolog, it might be the case that Prolog is manipulating the labels (e.g. in Android they have twisted conditions on labels like +1 is not blocking if other label is ..., blocking otherwise), that we cannot simply replace.\n\nI imagine best we could do is to pre-announce that, starting at release $x prolog and label functions will be fully deprecated, and SRs will be the sole decider for submittability.",
      "parentUuid": "e4002388_b093800e",
      "range": {
        "startLine": 7,
        "startChar": 6,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "246c495b_247b0d76",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-07-15T06:22:28Z",
      "side": 1,
      "message": "\u003e I think it\u0027s a bit more complicated\n\nYeah, I know. I thought the plan is something like this?\n\n1. have a schema migration that migrates label functions to submit requirements on installations/hosts that do not use Prolog (this change and follow-up change that adds the schema migration)\n\n2. for hosts that use Prolog publish a guide how admins can migrate to submit requirements manually\n\n3. say in the release notes that if Prolog is used doing the manual migration is mandatory before upgrading Gerrit and probably make the Gerrit upgrade abort if it still finds Prolog rules or any deprecated label functions\n\n4. Drop the code for the deprecated and now unused label functions\n\nDid I get this right?",
      "parentUuid": "df8b61ea_58e957d5",
      "range": {
        "startLine": 7,
        "startChar": 6,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d8a3053_8e17d276",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-15T07:25:57Z",
      "side": 1,
      "message": "Yes, this plan looks good to me. We need host owners + user guide (from us) to get rid of prolog because we cannot automate it with a migration.\n\nOne question:\n\n\u003e make the Gerrit upgrade abort if it still ...\n\nIs the way implementing this is to add a schema migration that fails (i.e. throws an exception) if ...? Does this prevent server upgrades?",
      "parentUuid": "246c495b_247b0d76",
      "range": {
        "startLine": 7,
        "startChar": 6,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dec87c5_330524bc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-07-15T07:50:50Z",
      "side": 1,
      "message": "\u003e \u003e make the Gerrit upgrade abort if it still ...\n\u003e Is the way implementing this is to add a schema migration\n\u003e that fails (i.e. throws an exception) if ...?\n\u003e Does this prevent server upgrades?\n\nI think this is one option to consider, but maybe not the best.\nOn upgrade of Gerrit multiple schema migrations can be executed and if your schema migration is not the first one, other schema migrations have already been executed before you can abort the upgrade. This means on a re-run of the upgrade those other schema migrations would be executed again, and I think there is no guarantee that they are idempotent.\n\nI think what would be better is to add an InitStep for this (implement com.google.gerrit.pgm.init.api.InitStep), since InitSteps are executed before schema migrations. I believe if the InitStep throws an exception the upgrade will be aborted.",
      "parentUuid": "5d8a3053_8e17d276",
      "range": {
        "startLine": 7,
        "startChar": 6,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb5da239_fc91deff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-23T16:00:38Z",
      "side": 1,
      "message": "I think your intent is to make this safe to run ahead of upgrading. Is that true? If yes, how could someone do that?",
      "range": {
        "startLine": 28,
        "startChar": 37,
        "endLine": 29,
        "endChar": 15
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ae4514d_b74883fa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-27T13:30:16Z",
      "side": 1,
      "message": "We have a custom framework to run migrations against all our live servers. For such a migration we write custom code, and in this case this code will get the MigrateLabelFunctionsToSubmitRequirement class injected to do the migration of the project configs, the same way as the upstream schema migration will get the MigrateLabelFunctionsToSubmitRequirement class injected to do the migration of the project configs.\n\nFWIW the upstream schema migration could be part of this change, instead of being a follow-up change. I believe this change followed the example of the MigrateLabelConfigToCopyCondition migration were this was split in 2 changes. In that case I\u0027ve split this in 2 changes because we were waiting for another migration (persist copied votes) to be done in the latest stable branch, and we had to avoid a clash between the schema versions, hence the migration in master could only be submitted after the other migration landed in the stable branch and was merged into master (note that in the end persisting copied votes had been implemented as a pgm program and not as a schema migration, so in retrospect this was not necessary).",
      "parentUuid": "bb5da239_fc91deff",
      "range": {
        "startLine": 28,
        "startChar": 37,
        "endLine": 29,
        "endChar": 15
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01c9aab9_13e50178",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-29T18:26:16Z",
      "side": 1,
      "message": "I\u0027m fine with adding the schema migration to this change if it doesn\u0027t move to stable-3.6 and become a pgm. Otherwise I think you\u0027d add the schema bump on master after merging from stable-3.6.",
      "parentUuid": "4ae4514d_b74883fa",
      "range": {
        "startLine": 28,
        "startChar": 37,
        "endLine": 29,
        "endChar": 15
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68c48759_807c16df",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-23T16:00:38Z",
      "side": 1,
      "message": "Assuming this does become a pgm someone can run, it should be mentioned in the release notes.",
      "range": {
        "startLine": 31,
        "startChar": 15,
        "endLine": 31,
        "endChar": 19
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b8c9af8_16cb6445",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-30T14:16:59Z",
      "side": 1,
      "message": "Also, assuming this becomes a schema migration, that should be mention in the release notes.",
      "parentUuid": "68c48759_807c16df",
      "range": {
        "startLine": 31,
        "startChar": 15,
        "endLine": 31,
        "endChar": 19
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8be3767_88507a0d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-13T16:12:38Z",
      "side": 1,
      "message": "I misused the word \"pgm\" here. I probably only meant \"some logic to do the migration\". That would ideally run with the next schema migration to do the upgrades for next gerrit releases.\n\nI don\u0027t think that should become a pgm. This migration should be executed only once on server upgrades only.",
      "parentUuid": "68c48759_807c16df",
      "range": {
        "startLine": 31,
        "startChar": 15,
        "endLine": 31,
        "endChar": 19
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d2d0a0a_7e285511",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-27T13:30:16Z",
      "side": 1,
      "message": "Didn\u0027t review the code yet.",
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "372cab04_1c7ca560",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-06-30T07:58:02Z",
      "side": 1,
      "message": "FYI, I will take over implementing this migration from Youssef, since Youssef is overbooked with other, more important, topics.\n\nI still didn\u0027t look at the implementation, but I plan to pickup reworking this change somewhen next week.",
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c55dedd_ab834a09",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-30T14:16:59Z",
      "side": 1,
      "message": "Thanks for the heads up! I\u0027ll try to keep up with reviews.",
      "parentUuid": "372cab04_1c7ca560",
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39d1b7a1_671bdf29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-07-14T08:21:46Z",
      "side": 1,
      "message": "FYI, this plan has changed and Youssef is now continuing with these changes.",
      "parentUuid": "0c55dedd_ab834a09",
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5b810ff_81cd0320",
        "filename": "java/com/google/gerrit/server/schema/MigrateLabelFunctionsToSubmitRequirement.java",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-23T16:00:38Z",
      "side": 1,
      "message": "I think we only call things programs if they live in com.google.gerrit.pgm?",
      "range": {
        "startLine": 38,
        "startChar": 3,
        "endLine": 38,
        "endChar": 8
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02b8e2cb_1ed562f0",
        "filename": "java/com/google/gerrit/server/schema/MigrateLabelFunctionsToSubmitRequirement.java",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-13T16:12:38Z",
      "side": 1,
      "message": "Right. I misused the word \"pgm\" here. That should not become a pgm, but rather should only run with a schema upgrade.\n\nI removed \"pgm\".",
      "parentUuid": "c5b810ff_81cd0320",
      "range": {
        "startLine": 38,
        "startChar": 3,
        "endLine": 38,
        "endChar": 8
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c16e89f0_47b996f4",
        "filename": "java/com/google/gerrit/server/schema/MigrateLabelFunctionsToSubmitRequirement.java",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-23T16:00:38Z",
      "side": 1,
      "message": "nit: inline the single-use variable\n\n if (anyProjectHasProlog(allProjects)) {",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 76,
        "endChar": 17
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94db974d_c006f86d",
        "filename": "java/com/google/gerrit/server/schema/MigrateLabelFunctionsToSubmitRequirement.java",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-13T16:12:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c16e89f0_47b996f4",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 76,
        "endChar": 17
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "865726ff_ed272855",
        "filename": "java/com/google/gerrit/server/schema/MigrateLabelFunctionsToSubmitRequirement.java",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-23T16:00:38Z",
      "side": 1,
      "message": "nit: you can be more specific about the criteria, \"at least one project\"",
      "range": {
        "startLine": 78,
        "startChar": 42,
        "endLine": 78,
        "endChar": 66
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "423b21ec_a255c0d2",
        "filename": "java/com/google/gerrit/server/schema/MigrateLabelFunctionsToSubmitRequirement.java",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-13T16:12:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "865726ff_ed272855",
      "range": {
        "startLine": 78,
        "startChar": 42,
        "endLine": 78,
        "endChar": 66
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4c48eac_b3135b1a",
        "filename": "java/com/google/gerrit/server/schema/MigrateLabelFunctionsToSubmitRequirement.java",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-23T16:00:38Z",
      "side": 1,
      "message": "nit: inline the single-use variable\n\n for (Project.NameKey project : sortProjectsWithInheritance(allProjects)) {",
      "range": {
        "startLine": 82,
        "startChar": 35,
        "endLine": 82,
        "endChar": 49
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2590d787_6eaac8d1",
        "filename": "java/com/google/gerrit/server/schema/MigrateLabelFunctionsToSubmitRequirement.java",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-13T16:12:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d4c48eac_b3135b1a",
      "range": {
        "startLine": 82,
        "startChar": 35,
        "endLine": 82,
        "endChar": 49
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61fdc282_a9a29f0c",
        "filename": "java/com/google/gerrit/server/schema/MigrateLabelFunctionsToSubmitRequirement.java",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2022-06-23T16:00:38Z",
      "side": 1,
      "message": "Since you\u0027re not catching the exceptions here, this will stop and block on the first project with any problems always. Is that the behavior you want?",
      "range": {
        "startLine": 83,
        "startChar": 6,
        "endLine": 83,
        "endChar": 32
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f2f9330_a3af88b3",
        "filename": "java/com/google/gerrit/server/schema/MigrateLabelFunctionsToSubmitRequirement.java",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-07-13T16:12:38Z",
      "side": 1,
      "message": "Oh, that was not intended. Thanks for catching.\n\nDone.",
      "parentUuid": "61fdc282_a9a29f0c",
      "range": {
        "startLine": 83,
        "startChar": 6,
        "endLine": 83,
        "endChar": 32
      },
      "revId": "bb2c4e7d256c289775034f3548ec04c881aa8acc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}