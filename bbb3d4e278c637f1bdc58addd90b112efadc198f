{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "eaebbb78_926c6a65",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-11-28T00:37:17Z",
      "side": 1,
      "message": "So... this is probably an unusual workflow, but when we were maintaining a fork branch we would commonly push commits with these prefixes for review and merge them that way. The logic was that if we in the future wanted to upstream commits from our fork or rebase our fork onto a new version, we would then use those prefixes to help create \"clean\" commits. So while those commits were \"temp\", they were a very long lived kind of temp.\n\nCould this instead be supported via a git config like the `gerrit.createChangeId` one that already exists? Maybe `gerrit.commit-msg.skipPrefix`?",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8425f752_994aad28",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1010516
      },
      "writtenOn": "2023-11-28T14:10:41Z",
      "side": 1,
      "message": "Do you mean squash/fixup/amend prefixes, or something else?\n\nHow does it work for you with squash and the existing hook?",
      "parentUuid": "eaebbb78_926c6a65",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c1f8099_1cbbd58e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-11-28T00:37:17Z",
      "side": 1,
      "message": "If you want to add an explicit `nopush!` as a default, I think that would be fine.",
      "range": {
        "startLine": 20,
        "startChar": 37,
        "endLine": 20,
        "endChar": 41
      },
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91e7229e_10eb464f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1010516
      },
      "writtenOn": "2023-11-28T14:10:41Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7c1f8099_1cbbd58e",
      "range": {
        "startLine": 20,
        "startChar": 37,
        "endLine": 20,
        "endChar": 41
      },
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77546480_47052a2e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-11-29T11:06:17Z",
      "side": 1,
      "message": "not sure why this is being sent to the stable-3.7 branch.  pretty sure this should be sent to the master branch, and then only cherry-picked back to stable branches if really desired.",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa9e6d2f_ff0881fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2023-11-29T12:00:04Z",
      "side": 1,
      "message": "that doesn\u0027t appear to be gerrit\u0027s policy.\nin fact, there doesn\u0027t appear to be a policy at all - it\u0027s a complete mess of cherry-picks and merges.",
      "parentUuid": "77546480_47052a2e",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89fe489b_ccba0869",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-11-29T12:10:13Z",
      "side": 1,
      "message": "Actually we have a guideline at:\nhttps://gerrit-review.googlesource.com/Documentation/dev-crafting-changes.html#branch\n\nHTH",
      "parentUuid": "aa9e6d2f_ff0881fa",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8996b90d_e4428a1e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-11-29T12:24:45Z",
      "side": 1,
      "message": "pretty sure Gerrit doesn\u0027t merge old stable branches into master.  so you landing this into stable-3.7 means it isn\u0027t going anywhere.  also fairly certain \"latest development\" happens in the master branch.  although if any development happens in a \"stable\" branch, it\u0027s going to be the latest (3.9), not 3.7.\n\nso this doesn\u0027t belong in 3.7.",
      "parentUuid": "aa9e6d2f_ff0881fa",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ec69fb6_ca65b9c0",
        "filename": "resources/com/google/gerrit/server/commit-msg_test.sh",
        "patchSetId": 6
      },
      "lineNbr": 126,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-11-29T11:06:17Z",
      "side": 1,
      "message": "add a comment like \"test for standard git prefixes\", and then note that the last one is a custom name that some people like to use, but git itself doesn\u0027t check",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89436d8e_c6001442",
        "filename": "resources/com/google/gerrit/server/tools/root/hooks/commit-msg",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-11-29T11:06:17Z",
      "side": 1,
      "message": "```suggestion\nif head -n1 \"$1\" | LC_ALL\u003dC grep -q \u0027^[a-z][a-z]*! \u0027; then\n```\n\nthese ranges are sensitive to the current locale, and might match uppercase characters, and might not even match all 26 latin letters.\n\nif you want this to be exactly the 26 lower case latin letters, then the easiest thing is to force the locale.",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7e29c99_2b74345e",
        "filename": "resources/com/google/gerrit/server/tools/root/hooks/commit-msg",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2023-11-29T12:00:04Z",
      "side": 1,
      "message": "this is only half-true: while extra characters may be included (which is clearly not intended here, but arguably not a big deal), uppercase will NOT be included (this is different from `sort`, or explicitly specifying a collating element with `[\u003da-z\u003d]`).\nand afaik, the latin characters not being included can only happen when the charset is ebcdic, which is of no material concern.\n\nanyway, i wouldn\u0027t mind the change being made for clarity.",
      "parentUuid": "89436d8e_c6001442",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "385b7e10_e9f064d4",
        "filename": "resources/com/google/gerrit/server/tools/root/hooks/commit-msg",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-11-29T12:24:45Z",
      "side": 1,
      "message": "i think the world\u0027s languages are more varied than you give them credit.  both scenarios i describe are possible.  this is not an encoding issue e.g. ebcdic vs ASCII vs UTF-8 vs ...\n\nmultiple locales do not match the 26 latin lowercase letters when using `[a-z]`. here is just one example.\n```\n$ echo \"abcdefghijklmnopqrstuvwxyz\" | LC_ALL\u003daz_AZ.UTF8 grep -E \"^[a-z]+$\"\n$ echo $?\n1\n```\n\nmultiple locales match *some* latin uppercase letters when using `[a-z]`.  i just picked `E` as an example, but pretty sure there are others.\n```\n$ echo E | LC_ALL\u003dth_TH.UTF8 grep -E \"^[a-z]+$\"\nE\n```\n\nand multiple locales will match more than just the 26 latin uppercase letters.  but you agreed that\u0027s possible, so i won\u0027t include an example.",
      "parentUuid": "b7e29c99_2b74345e",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}