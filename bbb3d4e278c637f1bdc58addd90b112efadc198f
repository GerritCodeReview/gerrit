{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "eaebbb78_926c6a65",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-11-28T00:37:17Z",
      "side": 1,
      "message": "So... this is probably an unusual workflow, but when we were maintaining a fork branch we would commonly push commits with these prefixes for review and merge them that way. The logic was that if we in the future wanted to upstream commits from our fork or rebase our fork onto a new version, we would then use those prefixes to help create \"clean\" commits. So while those commits were \"temp\", they were a very long lived kind of temp.\n\nCould this instead be supported via a git config like the `gerrit.createChangeId` one that already exists? Maybe `gerrit.commit-msg.skipPrefix`?",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8425f752_994aad28",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1010516
      },
      "writtenOn": "2023-11-28T14:10:41Z",
      "side": 1,
      "message": "Do you mean squash/fixup/amend prefixes, or something else?\n\nHow does it work for you with squash and the existing hook?",
      "parentUuid": "eaebbb78_926c6a65",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb908e53_395c389e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-11-29T15:43:45Z",
      "side": 1,
      "message": "\u003e Do you mean squash/fixup/amend prefixes, or something else?\n\nYes, those. We most often use `!fixup`.\n\n\u003e \n\u003e How does it work for you with squash and the existing hook?\n\nWe only recently upgraded to Gerrit 3.5 and the hook has only been updated with the squash exception since 3.7, so we haven\u0027t been affected by that change yet.\n\nYour solution of `gerrit.createChangeId\u003dalways` works for me. Thanks!",
      "parentUuid": "8425f752_994aad28",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf030080_769aa0ca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1010516
      },
      "writtenOn": "2023-11-29T15:47:12Z",
      "side": 1,
      "message": "squash has been excluded since ever.",
      "parentUuid": "cb908e53_395c389e",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c1f8099_1cbbd58e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-11-28T00:37:17Z",
      "side": 1,
      "message": "If you want to add an explicit `nopush!` as a default, I think that would be fine.",
      "range": {
        "startLine": 20,
        "startChar": 37,
        "endLine": 20,
        "endChar": 41
      },
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91e7229e_10eb464f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1010516
      },
      "writtenOn": "2023-11-28T14:10:41Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7c1f8099_1cbbd58e",
      "range": {
        "startLine": 20,
        "startChar": 37,
        "endLine": 20,
        "endChar": 41
      },
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77546480_47052a2e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-11-29T11:06:17Z",
      "side": 1,
      "message": "not sure why this is being sent to the stable-3.7 branch.  pretty sure this should be sent to the master branch, and then only cherry-picked back to stable branches if really desired.",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa9e6d2f_ff0881fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2023-11-29T12:00:04Z",
      "side": 1,
      "message": "that doesn\u0027t appear to be gerrit\u0027s policy.\nin fact, there doesn\u0027t appear to be a policy at all - it\u0027s a complete mess of cherry-picks and merges.",
      "parentUuid": "77546480_47052a2e",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89fe489b_ccba0869",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-11-29T12:10:13Z",
      "side": 1,
      "message": "Actually we have a guideline at:\nhttps://gerrit-review.googlesource.com/Documentation/dev-crafting-changes.html#branch\n\nHTH",
      "parentUuid": "aa9e6d2f_ff0881fa",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8996b90d_e4428a1e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-11-29T12:24:45Z",
      "side": 1,
      "message": "pretty sure Gerrit doesn\u0027t merge old stable branches into master.  so you landing this into stable-3.7 means it isn\u0027t going anywhere.  also fairly certain \"latest development\" happens in the master branch.  although if any development happens in a \"stable\" branch, it\u0027s going to be the latest (3.9), not 3.7.\n\nso this doesn\u0027t belong in 3.7.",
      "parentUuid": "aa9e6d2f_ff0881fa",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "835e28cd_7ef27238",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-11-29T12:27:21Z",
      "side": 1,
      "message": "ah Edwin found better refs.  since this is a trivial script to test in isolation, landing in master first is trivial.  if you want it in older branches, it should be cherry-picked from there.  although that would really only make sense for active branches.",
      "parentUuid": "8996b90d_e4428a1e",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f544bbe1_f10166d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1010516
      },
      "writtenOn": "2023-11-29T12:32:36Z",
      "side": 1,
      "message": "Branches are merged all the time. https://gerrit-review.googlesource.com/q/project:gerrit+is:merge",
      "parentUuid": "8996b90d_e4428a1e",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "022ef8e4_bd90cda8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2023-11-29T12:51:29Z",
      "side": 1,
      "message": "edwin wrote:\n\u003e Actually we have a guideline \n\nyeah, a guideline - not a policy. and it shows - good luck making sense of `gitk --all` in the gerrit repo.\n\ni\u0027d say that it\u0027s obvious that the stable-first model just doesn\u0027t work in this project, and that\u0027s even before the 3.9 release debacle. the logical consequence would be to officially switch to a cherry-pick-only (NO merges!) master-first model. the qt project did that (for qt itself, while qt creator sticks with a forward-merging model). to avoid that fixes for stable get lost, there is some automation; my request https://issues.gerritcodereview.com/issues/40013177 relates to that.\n\nanyway, edwin\u0027s link does show that this change follows the current guidelines, as i expected.",
      "parentUuid": "89fe489b_ccba0869",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1f61f6f_c004ceaf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-11-29T14:37:26Z",
      "side": 1,
      "message": "that merge history is insanity.  that said, i disagree you\u0027re following the guidance.  the doc says to default to master, especially for feature work (which this CL clearly is -- no bug fixing here).  it provides an exception for stable branches if you have issues running/testing on newer/master, but that also doesn\u0027t apply here -- this is a standalone shell script that isn\u0027t integrated into the java stack, and thus is trivial to test completely in isolation, which i suspect is exactly what you\u0027re doing.",
      "parentUuid": "022ef8e4_bd90cda8",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a49e17c5_d4de5361",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2023-11-29T15:01:18Z",
      "side": 1,
      "message": "\u003e no bug fixing here\n\nhuh? this patch absolutely *is* a bugfix - the omission of amend! is clearly a bug. covering fixup! is a minor fix (see previous discussion). the coverage of other keywords is indeed a feature, but it\u0027s so minor that the drive-by is ok imo.",
      "parentUuid": "b1f61f6f_c004ceaf",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d551d901_b2aeb87e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1010516
      },
      "writtenOn": "2023-11-29T15:01:36Z",
      "side": 1,
      "message": "I\u0027ll move it to master.",
      "parentUuid": "b1f61f6f_c004ceaf",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c8fda2f_35b6dcee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1010516
      },
      "writtenOn": "2023-11-29T15:19:12Z",
      "side": 1,
      "message": "I\u0027ll wait for other opinions then 😊\n\nWe can have a minor fix that only adds fixup/amend in 3.7, and do the rest in master (although I\u0027m still unsure about @nasser.grainawi@linaro.org\u0027s use-case).",
      "parentUuid": "d551d901_b2aeb87e",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1098afe6_b7acc003",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-11-29T15:43:45Z",
      "side": 1,
      "message": "\u003e I\u0027ll wait for other opinions then 😊\n\nI prefer stable first 😊\n\n\u003e \n\u003e We can have a minor fix that only adds fixup/amend in 3.7, and do the rest in master (although I\u0027m still unsure about @nasser.grainawi@linaro.org\u0027s use-case).\n\nEven if we call this a feature, this is minor enough that I\u0027m good with it as-is in stable-3.7.",
      "parentUuid": "3c8fda2f_35b6dcee",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "651653e9_c452e84d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2023-11-29T16:12:21Z",
      "side": 1,
      "message": "actually, i must contradict myself: amend! commits inherently discard the previous change-id, so they must already include a copy of it (which they typically will, if created with `commit --fixup\u003damend:\u003csha1\u003e`). \nthis puts them into the same category as fixup!, so it\u0027s debatable whether it qualifies as an important enough bugfix. i don\u0027t really care either way.",
      "parentUuid": "3c8fda2f_35b6dcee",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ec69fb6_ca65b9c0",
        "filename": "resources/com/google/gerrit/server/commit-msg_test.sh",
        "patchSetId": 6
      },
      "lineNbr": 126,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-11-29T11:06:17Z",
      "side": 1,
      "message": "add a comment like \"test for standard git prefixes\", and then note that the last one is a custom name that some people like to use, but git itself doesn\u0027t check",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3365ab5_5b90db2c",
        "filename": "resources/com/google/gerrit/server/commit-msg_test.sh",
        "patchSetId": 6
      },
      "lineNbr": 126,
      "author": {
        "id": 1010516
      },
      "writtenOn": "2023-11-29T15:19:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ec69fb6_ca65b9c0",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89436d8e_c6001442",
        "filename": "resources/com/google/gerrit/server/tools/root/hooks/commit-msg",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-11-29T11:06:17Z",
      "side": 1,
      "message": "```suggestion\nif head -n1 \"$1\" | LC_ALL\u003dC grep -q \u0027^[a-z][a-z]*! \u0027; then\n```\n\nthese ranges are sensitive to the current locale, and might match uppercase characters, and might not even match all 26 latin letters.\n\nif you want this to be exactly the 26 lower case latin letters, then the easiest thing is to force the locale.",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7e29c99_2b74345e",
        "filename": "resources/com/google/gerrit/server/tools/root/hooks/commit-msg",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2023-11-29T12:00:04Z",
      "side": 1,
      "message": "this is only half-true: while extra characters may be included (which is clearly not intended here, but arguably not a big deal), uppercase will NOT be included (this is different from `sort`, or explicitly specifying a collating element with `[\u003da-z\u003d]`).\nand afaik, the latin characters not being included can only happen when the charset is ebcdic, which is of no material concern.\n\nanyway, i wouldn\u0027t mind the change being made for clarity.",
      "parentUuid": "89436d8e_c6001442",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "385b7e10_e9f064d4",
        "filename": "resources/com/google/gerrit/server/tools/root/hooks/commit-msg",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-11-29T12:24:45Z",
      "side": 1,
      "message": "i think the world\u0027s languages are more varied than you give them credit.  both scenarios i describe are possible.  this is not an encoding issue e.g. ebcdic vs ASCII vs UTF-8 vs ...\n\nmultiple locales do not match the 26 latin lowercase letters when using `[a-z]`. here is just one example.\n```\n$ echo \"abcdefghijklmnopqrstuvwxyz\" | LC_ALL\u003daz_AZ.UTF8 grep -E \"^[a-z]+$\"\n$ echo $?\n1\n```\n\nmultiple locales match *some* latin uppercase letters when using `[a-z]`.  i just picked `E` as an example, but pretty sure there are others.\n```\n$ echo E | LC_ALL\u003dth_TH.UTF8 grep -E \"^[a-z]+$\"\nE\n```\n\nand multiple locales will match more than just the 26 latin uppercase letters.  but you agreed that\u0027s possible, so i won\u0027t include an example.",
      "parentUuid": "b7e29c99_2b74345e",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75da985b_b767174f",
        "filename": "resources/com/google/gerrit/server/tools/root/hooks/commit-msg",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-11-29T12:27:21Z",
      "side": 1,
      "message": "\u003e and multiple locales will match more than just the 26 latin uppercase letters. but you agreed that\u0027s possible, so i won\u0027t include an example.\n\ni meant lowercase here, not that it changes the general point",
      "parentUuid": "385b7e10_e9f064d4",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94bc80bb_7835e132",
        "filename": "resources/com/google/gerrit/server/tools/root/hooks/commit-msg",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2023-11-29T12:51:29Z",
      "side": 1,
      "message": "this isn\u0027t really about the language diversity (which i\u0027m well aware of), but rather about some committee making inimical decisions for political or historical reasons (there is no good reason to treat [a-z] as [[:lower:]] or even [[:alpha:]], and even less so inconsistently across locales). or just implementation bugs.\n\nanyway, you\u0027re empirically clearly right, so i rest my case.",
      "parentUuid": "75da985b_b767174f",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b7468e4_acfa1558",
        "filename": "resources/com/google/gerrit/server/tools/root/hooks/commit-msg",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1007145
      },
      "writtenOn": "2023-11-29T14:37:26Z",
      "side": 1,
      "message": "having `[:lower:]` and `[:alpha:]` classes match a language\u0027s definition of \"lower\" and \"alphanumeric\" is perfectly reasonable.  claiming everyone should be restricted to an ASCII view of the world and unable to process their own non-English languages makes no sense.  `a-z` is a harder case to make, but there isn\u0027t a great answer there in general.\n\ncertainly forcing an incompatible encoding in order to use something like `a-z` is terrible.  but the historical OS standards have always conflated encoding \u0026 language \u0026 locale settings into a single knob.  i wish at least GNU would take a lead on cleaning this up.\n\nwhich i guess really only leaves writing out the exact characters one wants to match.  or inventing yet more character classes like `[:ascii-lower:]` in a concession to how prevalent ASCII is when it comes to processing.  although `[:ascii-lower:]` takes 15 bytes and writing out all 26 latin lowercase letters takes 26 bytes ... so it just gains you semantic intention/clarity for the reader.",
      "parentUuid": "94bc80bb_7835e132",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0b3c695_a50cfe10",
        "filename": "resources/com/google/gerrit/server/tools/root/hooks/commit-msg",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2023-11-29T15:01:18Z",
      "side": 1,
      "message": "[a-z] was the subject, and it makes no sense to reinterpret it to mean something for which perfectly good classes already exist. collating non-ascii characters into the range makes sense only for latin-based languages, and these all have case distinction as well (afaik). deviating from that might be a misguided attempt to workaround unportable regexes - with obviously disastrous effects.",
      "parentUuid": "5b7468e4_acfa1558",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5dfbb509_cc877c69",
        "filename": "resources/com/google/gerrit/server/tools/root/hooks/commit-msg",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1010516
      },
      "writtenOn": "2023-11-29T15:01:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b7468e4_acfa1558",
      "revId": "bbb3d4e278c637f1bdc58addd90b112efadc198f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}