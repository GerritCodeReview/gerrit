{
  "comments": [
    {
      "key": {
        "uuid": "d9b13c19_955e5d38",
        "filename": "java/com/google/gerrit/pgm/init/InitAdminUser.java",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-11-28T18:09:58Z",
      "side": 1,
      "message": "This code is only executed during the first initialization. If the group can\u0027t be retrieved, we will simply print the exception on the command line and stop the init. Logging the inconsistency doesn\u0027t make sense here.",
      "range": {
        "startLine": 163,
        "startChar": 12,
        "endLine": 171,
        "endChar": 0
      },
      "revId": "bc17de3bc74f5f485bbc8083f07a953929a8eaf2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da305490_bb0895a5",
        "filename": "java/com/google/gerrit/pgm/init/InitAdminUser.java",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-11-29T12:28:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9b13c19_955e5d38",
      "range": {
        "startLine": 163,
        "startChar": 12,
        "endLine": 171,
        "endChar": 0
      },
      "revId": "bc17de3bc74f5f485bbc8083f07a953929a8eaf2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ac0ea71_b2ab0c6d",
        "filename": "java/com/google/gerrit/server/group/ListGroups.java",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-11-28T18:09:58Z",
      "side": 1,
      "message": "I don\u0027t think this is the correct place for this check. It should be in InternalGroupBackend.",
      "range": {
        "startLine": 348,
        "startChar": 8,
        "endLine": 354,
        "endChar": 7
      },
      "revId": "bc17de3bc74f5f485bbc8083f07a953929a8eaf2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f478d24a_bb986f0c",
        "filename": "java/com/google/gerrit/server/group/ListGroups.java",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-11-29T12:28:16Z",
      "side": 1,
      "message": "I don\u0027t think we can move it there as there UUIDs may not come from GroupNameNotes.",
      "parentUuid": "2ac0ea71_b2ab0c6d",
      "range": {
        "startLine": 348,
        "startChar": 8,
        "endLine": 354,
        "endChar": 7
      },
      "revId": "bc17de3bc74f5f485bbc8083f07a953929a8eaf2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd65a915_38077ef8",
        "filename": "java/com/google/gerrit/server/group/ListGroups.java",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-12-07T14:56:05Z",
      "side": 1,
      "message": "Your answer confuses me. In InternalGroupBackend, we call Groups#getAllGroupReferences and map those GroupReferences (which are read originally from GroupNameNotes) to InternalGroups in InternalGroupBackend#isVisible. So, we could split up InternalGroupBackend#isVisible into a part which retrieves the group from the cache and another part which checks the visibility. All groups in InternalGroupBackend are internal groups. In which way can a GroupReference which is checked by InternalGroupBackend#isVisible not be read from the group name notes?",
      "parentUuid": "f478d24a_bb986f0c",
      "range": {
        "startLine": 348,
        "startChar": 8,
        "endLine": 354,
        "endChar": 7
      },
      "revId": "bc17de3bc74f5f485bbc8083f07a953929a8eaf2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e0661a8_8e5e79b5",
        "filename": "java/com/google/gerrit/server/group/ListGroups.java",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-12-07T15:34:59Z",
      "side": 1,
      "message": "Here group is read by calling \"groupBackend#get\" and the \"GroupReference\" here comes from \"groupBackend.suggest\". But we only care about \"InternalGroupBackend\" (UUIDs are read from GroupNameNotes) and that\u0027s why I do like this.\n\nAs for you comment, I considered to add a check in \"InternalGroupBackend#isVisible\" just as your suggestion. But that method is used as a filter for \"suggest\" and thus will be called for every group, which is not a good place from performance perspective. Therefore I chose to add here which only check for one group.",
      "parentUuid": "fd65a915_38077ef8",
      "range": {
        "startLine": 348,
        "startChar": 8,
        "endLine": 354,
        "endChar": 7
      },
      "revId": "bc17de3bc74f5f485bbc8083f07a953929a8eaf2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7702adb7_72848892",
        "filename": "java/com/google/gerrit/server/group/ListGroups.java",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-12-07T15:48:48Z",
      "side": 1,
      "message": "To my tastes, this code here is too far away from the original call to Groups#getAllGroupReferences. If the implementation of InternalGroupBackend#suggest changes, nobody will remember this log warning here.\n\nI don\u0027t understand why you\u0027re worried about the performance of InternalGroupBackend#suggest. The only additional call we would make (when the system is consistent) is Optional#isPresent and that should be very cheap. In addition, we really want to have this check for every group.",
      "parentUuid": "6e0661a8_8e5e79b5",
      "range": {
        "startLine": 348,
        "startChar": 8,
        "endLine": 354,
        "endChar": 7
      },
      "revId": "bc17de3bc74f5f485bbc8083f07a953929a8eaf2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c326fed_ca46c8e7",
        "filename": "java/com/google/gerrit/server/group/ListGroups.java",
        "patchSetId": 1
      },
      "lineNbr": 417,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-11-28T18:09:58Z",
      "side": 1,
      "message": "There\u0027s a code path in this file which calls this method but doesn\u0027t use Groups#getAllGroupReferences previously. Hence, simply adding the check here might produce false positives.",
      "range": {
        "startLine": 417,
        "startChar": 46,
        "endLine": 417,
        "endChar": 55
      },
      "revId": "bc17de3bc74f5f485bbc8083f07a953929a8eaf2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69a891fa_def8881f",
        "filename": "java/com/google/gerrit/server/group/ListGroups.java",
        "patchSetId": 1
      },
      "lineNbr": 417,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-11-29T12:28:16Z",
      "side": 1,
      "message": "Right. I move this check. But I\u0027m also fine to remove this check.",
      "parentUuid": "5c326fed_ca46c8e7",
      "range": {
        "startLine": 417,
        "startChar": 46,
        "endLine": 417,
        "endChar": 55
      },
      "revId": "bc17de3bc74f5f485bbc8083f07a953929a8eaf2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "411368db_25a8eea2",
        "filename": "java/com/google/gerrit/server/index/group/AllGroupsIndexer.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-11-28T18:09:58Z",
      "side": 1,
      "message": "If we have the exact same code in multiple places, could we maybe introduce a dedicated method in GroupsNoteDbConsistencyChecker which just has the UUID as parameter?",
      "range": {
        "startLine": 106,
        "startChar": 20,
        "endLine": 110,
        "endChar": 29
      },
      "revId": "bc17de3bc74f5f485bbc8083f07a953929a8eaf2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50f1aa03_32b0e1db",
        "filename": "java/com/google/gerrit/server/index/group/AllGroupsIndexer.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-11-29T12:28:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "411368db_25a8eea2",
      "range": {
        "startLine": 106,
        "startChar": 20,
        "endLine": 110,
        "endChar": 29
      },
      "revId": "bc17de3bc74f5f485bbc8083f07a953929a8eaf2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "145928ed_46848b85",
        "filename": "java/com/google/gerrit/server/index/group/AllGroupsIndexer.java",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-11-28T18:09:58Z",
      "side": 1,
      "message": "Actually, we should log the inconsistency here and not above. At this moment, the group is loaded directly from NoteDb as we evicted the cache in line 104. When retrieving the \u0027oldGroup\u0027, it can already be contained in the cache and hence the group isn\u0027t even read from NoteDb.",
      "range": {
        "startLine": 115,
        "startChar": 20,
        "endLine": 115,
        "endChar": 26
      },
      "revId": "bc17de3bc74f5f485bbc8083f07a953929a8eaf2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31855740_4c8b1db9",
        "filename": "java/com/google/gerrit/server/index/group/AllGroupsIndexer.java",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-11-29T12:28:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "145928ed_46848b85",
      "range": {
        "startLine": 115,
        "startChar": 20,
        "endLine": 115,
        "endChar": 26
      },
      "revId": "bc17de3bc74f5f485bbc8083f07a953929a8eaf2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}