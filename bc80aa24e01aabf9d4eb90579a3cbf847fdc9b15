{
  "comments": [
    {
      "key": {
        "uuid": "dd2425f5_87faa6f5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 2
      },
      "lineNbr": 548,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2013-05-30T04:45:48Z",
      "side": 1,
      "message": "This change should not require changing the create() call, can you add the repo parameter to it in the parent change instead?",
      "revId": "bc80aa24e01aabf9d4eb90579a3cbf847fdc9b15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d2b1dc4_09ca4995",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 2
      },
      "lineNbr": 548,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2013-05-30T04:53:42Z",
      "side": 1,
      "message": "It\u0027s not used by anything in the parent change.  Adding it there will cause unused variable compilation warnings.",
      "parentUuid": "dd2425f5_87faa6f5",
      "revId": "bc80aa24e01aabf9d4eb90579a3cbf847fdc9b15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd2425f5_c7049e26",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/MergeOp.java",
        "patchSetId": 2
      },
      "lineNbr": 548,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2013-05-30T06:05:19Z",
      "side": 1,
      "message": "Then this might point out a fundamental problem in the design?  Should   the project config validator be any more privy to change specific parameters (the repo) than other validators?  If another validator requires the repo, what will it do?   It seems like you would want all validators to be on equals footing, which means that either the constructing parameters should be part of the interface, or they should be non change related?  If the latter, then the repo parameter should to be passed in by the validating method, not the constructor.",
      "parentUuid": "1d2b1dc4_09ca4995",
      "revId": "bc80aa24e01aabf9d4eb90579a3cbf847fdc9b15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd2425f5_47f9ce03",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/validators/MergeValidators.java",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2013-05-30T04:45:48Z",
      "side": 1,
      "message": "I am inclined to feel like this validator is standalone enough to merrit its one file?  That would prevent this class from growing wildly.",
      "revId": "bc80aa24e01aabf9d4eb90579a3cbf847fdc9b15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d2b1dc4_69bf85eb",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/validators/MergeValidators.java",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2013-05-30T04:53:42Z",
      "side": 1,
      "message": "This is following the same pattern as the CommitValidationListener classes which are all included as static classes of the CommitValidators class.  I believe the rationale for doing it like that was to keep all the related functionality in one place.",
      "parentUuid": "dd2425f5_47f9ce03",
      "revId": "bc80aa24e01aabf9d4eb90579a3cbf847fdc9b15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd2425f5_07187685",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/validators/MergeValidators.java",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2013-05-30T06:14:25Z",
      "side": 1,
      "message": "I think the situation there is a bit different.  In the case of the commit validators it is important to be able to get a big picture view of how they interact together, and to be able to assemble the different pieces together in different ways for the different call paths (receive commits, commit message editing...).  I don\u0027t think that really applies here, we only likely will ever will have one caller (so no strange assembly problems), and I suspect that new validators will not likely interact with this one.\n\nEither way it isn\u0027t super important.  There is only one now and it can easily be moved later if we think it needs to.  I was just hoping to setup the pattern which we felt would most likely be valuable in the future for this case, since once started most people would be unlikely to change it.",
      "parentUuid": "1d2b1dc4_69bf85eb",
      "revId": "bc80aa24e01aabf9d4eb90579a3cbf847fdc9b15",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}