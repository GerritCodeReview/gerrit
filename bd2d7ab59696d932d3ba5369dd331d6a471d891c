{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6122167f_30303b84",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-02-10T11:11:11Z",
      "side": 1,
      "message": "Bringing to attention in case we might need to support the same for the rebase endpoint as well. This might also result in conflicts that will fail the code-owners validator, right?",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 8
      },
      "revId": "bd2d7ab59696d932d3ba5369dd331d6a471d891c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "faa32b3e_b4737d2b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2022-02-10T11:31:56Z",
      "side": 1,
      "message": "Thanks, good point. You are right that the rebase REST endpoint is another candidate to which we might want to add this option. At the moment I\u0027m not aware of anyone needing this, but if I find some free time I\u0027ll might add this with another change.",
      "parentUuid": "6122167f_30303b84",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 8
      },
      "revId": "bd2d7ab59696d932d3ba5369dd331d6a471d891c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3124dc03_426e3811",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-02-10T11:57:22Z",
      "side": 1,
      "message": "Sure. This can land in another change if needed. SGTM.",
      "parentUuid": "faa32b3e_b4737d2b",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 8
      },
      "revId": "bd2d7ab59696d932d3ba5369dd331d6a471d891c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "bd2d7ab59696d932d3ba5369dd331d6a471d891c",
      "legacy": {
        "value": false
      },
      "forced": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Style",
        "description": {
          "value": "Code has correct style and format"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Style\u003dMAX AND -label:Code-Style\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Style=MAX AND -label:Code-Style=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Style=MAX"],"failingAtoms":["label:Code-Style=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "bd2d7ab59696d932d3ba5369dd331d6a471d891c",
      "legacy": {
        "value": false
      },
      "forced": {}
    },
    {
      "submitRequirement": {
        "name": "Library-Compliance",
        "description": {
          "value": "Changes to specific library/metadata files require additional approval"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Library-Compliance\u003dMAX,user\u003dnon_uploader AND -label:Library-Compliance\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^lib/.*\"","file:\"^WORKSPACE$\"","file:\"^.gitmodule$\"","file:\"^tools/deps.bzl$\""]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "bd2d7ab59696d932d3ba5369dd331d6a471d891c",
      "legacy": {
        "value": false
      },
      "forced": {}
    },
    {
      "submitRequirement": {
        "name": "Release-Notes",
        "description": {
          "value": "Changes must include a \u0027Release-Notes\u0027 footer with a single sentence to mention in the release notes. Changes not worth mentioning in the release notes should put \u0027Release-Notes: skip\u0027"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Release-Notes\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Release-Notes\""},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["hasfooter:\"Release-Notes\""],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "bd2d7ab59696d932d3ba5369dd331d6a471d891c",
      "legacy": {
        "value": false
      },
      "forced": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "bd2d7ab59696d932d3ba5369dd331d6a471d891c",
      "legacy": {
        "value": false
      },
      "forced": {}
    }
  ]
}