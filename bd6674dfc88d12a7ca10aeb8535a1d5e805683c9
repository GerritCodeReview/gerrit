{
  "comments": [
    {
      "key": {
        "uuid": "8c70ac11_f0754ed2",
        "filename": "java/com/google/gerrit/index/IndexType.java",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-10-01T12:48:34Z",
      "side": 1,
      "message": "Could you also document the class?",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95b09e26_4a6cde63",
        "filename": "java/com/google/gerrit/index/IndexType.java",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-01T18:59:25Z",
      "side": 1,
      "message": "This can be done in a follow-up change; unrelated to this very one.",
      "parentUuid": "8c70ac11_f0754ed2",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "415a902d_2798a9d7",
        "filename": "java/com/google/gerrit/index/IndexType.java",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-03T23:31:22Z",
      "side": 1,
      "message": "\u003e This can be done in a follow-up change; unrelated to this very one.\n\nRelated in fact. Done.",
      "parentUuid": "95b09e26_4a6cde63",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9e24710_c8056ac4",
        "filename": "java/com/google/gerrit/index/IndexType.java",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-10-01T12:48:34Z",
      "side": 1,
      "message": "Would it make sense to remove this ctor to restrict the key literals to higher levels? I think this is only used in IndexConfig, where the \"index\" key is already used.",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60c5505c_c05abb10",
        "filename": "java/com/google/gerrit/index/IndexType.java",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-01T18:59:25Z",
      "side": 1,
      "message": "I think it does make sense, yes. Another follow-up change candidate; unrelated to this change.",
      "parentUuid": "c9e24710_c8056ac4",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48bba958_0784d546",
        "filename": "java/com/google/gerrit/index/IndexType.java",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-03T23:31:22Z",
      "side": 1,
      "message": "\u003e I think it does make sense, yes. Another follow-up change candidate; unrelated to this change.\n\n\u003d\u003e Ie59100c7.",
      "parentUuid": "60c5505c_c05abb10",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "242458f1_5a80ae7c",
        "filename": "java/com/google/gerrit/index/IndexType.java",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-10-01T12:48:34Z",
      "side": 1,
      "message": "Since this is part of the public API IMHO it\u0027s confusing if it returns these two types when you can also have a custom type. Maybe add javadoc to explain this?",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41697dc8_5270b7b8",
        "filename": "java/com/google/gerrit/index/IndexType.java",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-01T18:59:25Z",
      "side": 1,
      "message": "Yes; follow-up change needed.",
      "parentUuid": "242458f1_5a80ae7c",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bcebcc3_d4470032",
        "filename": "java/com/google/gerrit/index/IndexType.java",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-03T23:31:22Z",
      "side": 1,
      "message": "\u003e Yes; follow-up change needed.\n\nRelated, rather. Done as class-level javadoc (previous comment applied).",
      "parentUuid": "41697dc8_5270b7b8",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17afc68f_e751845f",
        "filename": "java/com/google/gerrit/index/IndexType.java",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-10-01T12:48:34Z",
      "side": 1,
      "message": "The ctor uses .toLowerCase(); should this happen here as well?",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50998bcd_f597a298",
        "filename": "java/com/google/gerrit/index/IndexType.java",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-01T18:59:25Z",
      "side": 1,
      "message": "Likely, yes; to follow-up.",
      "parentUuid": "17afc68f_e751845f",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebd09a40_783cb867",
        "filename": "java/com/google/gerrit/index/IndexType.java",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-03T23:31:22Z",
      "side": 1,
      "message": "\u003e Likely, yes; to follow-up.\n\n\u003d\u003e I99867c4f.",
      "parentUuid": "50998bcd_f597a298",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a4ad790_f413677e",
        "filename": "java/com/google/gerrit/pgm/Daemon.java",
        "patchSetId": 3
      },
      "lineNbr": 503,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-10-01T12:48:34Z",
      "side": 1,
      "message": "This will never be true.",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a476644a_da6fbc31",
        "filename": "java/com/google/gerrit/pgm/Daemon.java",
        "patchSetId": 3
      },
      "lineNbr": 503,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-01T18:59:25Z",
      "side": 1,
      "message": "Yes, if isCustom() changes implementation in the future. This is what I tried to explain in this change\u0027s commit message. Callers of isCustom() such as this line here should blindly assume that method\u0027s contract, without its implementation details. Here, we want to throw an exception if index type is unacceptable, however being custom is now acceptable (alongside lucene and elasticsearch).\n\nCustom only means that the index type has a String value that differs from both of the two explicitly known type values (\"lucene\" and \"elasticsearch\"). Google is likely configuring a specific index type String value, albeit undisclosed externally. This is treated here as a (the) \u0027custom\u0027 index type.",
      "parentUuid": "6a4ad790_f413677e",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ed8c987_bd5a4d38",
        "filename": "java/com/google/gerrit/pgm/Daemon.java",
        "patchSetId": 3
      },
      "lineNbr": 503,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-03T23:31:22Z",
      "side": 1,
      "message": "\u003e Custom only means that the index type has a String value that differs from both of the two explicitly known type values (\"lucene\" and \"elasticsearch\"). Google is likely configuring a specific index type String value, albeit undisclosed externally. This is treated here as a (the) \u0027custom\u0027 index type.\n\nI added this part to the commit message.",
      "parentUuid": "a476644a_da6fbc31",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2523a6e7_b6c21e09",
        "filename": "java/com/google/gerrit/testing/InMemoryModule.java",
        "patchSetId": 3
      },
      "lineNbr": 235,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-10-01T12:48:34Z",
      "side": 1,
      "message": "Can you explain again why this isn\u0027t an unconditional else? Currently this looks to me like \"if (a) else if (b) else if (!a \u0026\u0026 !b)\". Is there a situation where we wouldn\u0027t want to install any index module?",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e1610cf_812a11b3",
        "filename": "java/com/google/gerrit/testing/InMemoryModule.java",
        "patchSetId": 3
      },
      "lineNbr": 235,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-01T18:59:25Z",
      "side": 1,
      "message": "My sibling reply for the previous/other comment I think reiterates why. Let me know if still unclear.",
      "parentUuid": "2523a6e7_b6c21e09",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b844cff_4b91f8e7",
        "filename": "java/com/google/gerrit/testing/InMemoryModule.java",
        "patchSetId": 3
      },
      "lineNbr": 235,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-03T23:31:22Z",
      "side": 1,
      "message": "\u003e My sibling reply for the previous/other comment I think reiterates why. Let me know if still unclear.\n\nI added a hopefully clarifying sentence to the commit message.",
      "parentUuid": "3e1610cf_812a11b3",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0a20ab6_dfbfe228",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/CustomIndexIT.java",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-10-01T12:48:34Z",
      "side": 1,
      "message": "Could you add javadoc for this test case, e.g. link to the types/code it tests?",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "212ed2c2_5f188e5c",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/CustomIndexIT.java",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-01T18:59:25Z",
      "side": 1,
      "message": "This class matches its previously existing IndexIT and ElasticIndexIT siblings. I propose to do this consistently across these three classes (at least), through another change.",
      "parentUuid": "f0a20ab6_dfbfe228",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ade1bdaa_eb9412e6",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/CustomIndexIT.java",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-03T23:31:22Z",
      "side": 1,
      "message": "\u003e This class matches its previously existing IndexIT and ElasticIndexIT siblings. I propose to do this consistently across these three classes (at least), through another change.\n\n\u003d\u003e I19d4ac22.",
      "parentUuid": "212ed2c2_5f188e5c",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b00c3f1e_0586c8f1",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/CustomIndexIT.java",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2019-10-01T12:48:34Z",
      "side": 1,
      "message": "Not thrown.",
      "range": {
        "startLine": 31,
        "startChar": 55,
        "endLine": 31,
        "endChar": 64
      },
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d3c9a3a_54fbbf9d",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/CustomIndexIT.java",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-01T18:59:25Z",
      "side": 1,
      "message": "True. However this method overrides AbstractIndexTests\u0027s abstract method, which declares the throws. As above, this matches IndexIT and ElasticIndexIT, so would rather revisit this in a potential follow-up.",
      "parentUuid": "b00c3f1e_0586c8f1",
      "range": {
        "startLine": 31,
        "startChar": 55,
        "endLine": 31,
        "endChar": 64
      },
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0d51790_9da12bac",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/CustomIndexIT.java",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2019-10-03T23:31:22Z",
      "side": 1,
      "message": "\u003e True. However this method overrides AbstractIndexTests\u0027s abstract method, which declares the throws. As above, this matches IndexIT and ElasticIndexIT, so would rather revisit this in a potential follow-up.\n\n\u003d\u003e Ie0fc7838.",
      "parentUuid": "7d3c9a3a_54fbbf9d",
      "range": {
        "startLine": 31,
        "startChar": 55,
        "endLine": 31,
        "endChar": 64
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "bd6674dfc88d12a7ca10aeb8535a1d5e805683c9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}