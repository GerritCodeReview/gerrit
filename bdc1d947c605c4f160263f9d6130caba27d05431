{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "31f22f04_c522245a",
        "filename": "polygerrit-ui/app/elements/change/gr-message/gr-message.ts",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2021-01-11T15:46:31Z",
      "side": 1,
      "message": "Can this be changed to `PatchSetNum`? And then you can maybe avoid casting in lines 285 and 292?",
      "range": {
        "startLine": 277,
        "startChar": 18,
        "endLine": 277,
        "endChar": 24
      },
      "revId": "bdc1d947c605c4f160263f9d6130caba27d05431",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63641ed7_5444132d",
        "filename": "polygerrit-ui/app/elements/change/gr-message/gr-message.ts",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2021-01-11T15:50:43Z",
      "side": 1,
      "message": "I wanted to be stricter since we are doing \"patchNum - 1\".\nThe arithmetic operator can only be applied on number and not `PatchSetNum`, which means we would have to cast it into a number eventually.\nI thought this way was better since we are enforcing a stricter type.\nWDYT?",
      "parentUuid": "31f22f04_c522245a",
      "range": {
        "startLine": 277,
        "startChar": 18,
        "endLine": 277,
        "endChar": 24
      },
      "revId": "bdc1d947c605c4f160263f9d6130caba27d05431",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "082be023_15dc1891",
        "filename": "polygerrit-ui/app/elements/change/gr-message/gr-message.ts",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2021-01-12T10:53:04Z",
      "side": 1,
      "message": "Maybe move this code\n\n  (patchNum \u003d\u003d\u003d 1 ? \u0027PARENT\u0027 : patchNum - 1) as PatchSetNum\n\ninto a utility method?\n\n  export function getPredecessor(patchSetNum?: PatchSetNum): PatchSetNum | undefined {\n    if (!patchSetNum ||\n        patchSetNum \u003d\u003d\u003d ParentPatchSetNum ||\n        patchSetNum \u003d\u003d\u003d EditPatchSetNum) return undefined;\n    if (patchSetNum \u003d\u003d\u003d 1) return ParentPatchSetNum;\n    return patchSetNum - 1;\n  }",
      "parentUuid": "63641ed7_5444132d",
      "range": {
        "startLine": 277,
        "startChar": 18,
        "endLine": 277,
        "endChar": 24
      },
      "revId": "bdc1d947c605c4f160263f9d6130caba27d05431",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c14f9f3_aa751951",
        "filename": "polygerrit-ui/app/elements/change/gr-message/gr-message.ts",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2021-01-12T11:10:27Z",
      "side": 1,
      "message": "```return patchSetNum - 1;```\n\nwe still have the same problem of doing arithmetic on type PatchsetNum which is not allowed.\n\nAdded the util method.\nI think converting to a Number and then converting back to PatchsetNum is fine.\n`return (Number(patchset) - 1) as PatchSetNum;`",
      "parentUuid": "082be023_15dc1891",
      "range": {
        "startLine": 277,
        "startChar": 18,
        "endLine": 277,
        "endChar": 24
      },
      "revId": "bdc1d947c605c4f160263f9d6130caba27d05431",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}