{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "20eb2406_247f09bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-10-02T09:54:00Z",
      "side": 1,
      "message": "This needs to be guarded by an experiment.",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5759acb2_371262eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1083880
      },
      "writtenOn": "2020-10-09T08:11:19Z",
      "side": 1,
      "message": "Done. I did a lot of manual testing back and forth to ensure that styles don\u0027t bleed into each other and it looks fine, but to rule out any last minute bugs, it would give me more confidence if you also ran this locally.",
      "parentUuid": "20eb2406_247f09bd",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edaa1dc3_9a852d87",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-builder/gr-diff-builder-unified.ts",
        "patchSetId": 9
      },
      "lineNbr": 128,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-10-02T09:54:00Z",
      "side": 1,
      "message": "It would be great, if the context control row would become its own component. This gets a bit too much in terms of DOM creation by javascript.",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce600be5_01c1c5fd",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-builder/gr-diff-builder-unified.ts",
        "patchSetId": 9
      },
      "lineNbr": 128,
      "author": {
        "id": 1083880
      },
      "writtenOn": "2020-10-09T08:11:19Z",
      "side": 1,
      "message": "Noticed this comment very late, as I was busy figuring out how to put everything behind an experiment. I will take a stab at it, but I would be glad if you could already give me feedback on the other stuff, in case there are more adjustments I need to make. I guess a separate component might better encapsulate the old style vs new style switching, but I am also not familiar enough with Polymer to really judge.",
      "parentUuid": "edaa1dc3_9a852d87",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc09f9c8_92b3450f",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-builder/gr-diff-builder-unified.ts",
        "patchSetId": 9
      },
      "lineNbr": 128,
      "author": {
        "id": 1083880
      },
      "writtenOn": "2020-10-09T08:33:28Z",
      "side": 1,
      "message": "However, one problem I currently see with the separate component is that part of the new style controls needs knowledge of the surrounding table, like column count and the styles that need to be applied to the columns to make it look like the line gutter continues behind the buttons up to the dividing gap in the table. So either those details bleed into the shared component as parameters, or the unified and side-by-side diff builders continue to build these background rows themselves as they do now.\n\nAlso regarding the amount of DOM creation by Javascript, I am not sure if we will be able to significantly reduce that in favour of templates while keeping those readable, since there is very little content not living behind an if statement; above and below buttons are shown conditionally, as would be \"+Block\" buttons should we introduce those. I find reading through a mostly linear flow of button creation in Javascript clearer than switching back and forth between a template full of conditionals and the associated component properties to find out what is being shown when and which class. WDYT?",
      "parentUuid": "ce600be5_01c1c5fd",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecddca51_474c2cd4",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 231,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-10-02T09:54:00Z",
      "side": 1,
      "message": "We are trying to use var(--spacing-s) for paddings and spaces like these.",
      "range": {
        "startLine": 231,
        "startChar": 24,
        "endLine": 231,
        "endChar": 27
      },
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c24ad69_65970f0b",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 231,
      "author": {
        "id": 1083880
      },
      "writtenOn": "2020-10-09T08:11:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecddca51_474c2cd4",
      "range": {
        "startLine": 231,
        "startChar": 24,
        "endLine": 231,
        "endChar": 27
      },
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7fa473c_d2f4851a",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 241,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-10-02T09:54:00Z",
      "side": 1,
      "message": "We are trying to avoid ems. What are you trying to express here? Do you want to use a calc() maybe to approximate the absolutely positioned button height and add a spacing-s?",
      "range": {
        "startLine": 241,
        "startChar": 6,
        "endLine": 241,
        "endChar": 18
      },
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92908aef_652291e4",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 241,
      "author": {
        "id": 1083880
      },
      "writtenOn": "2020-10-09T08:11:19Z",
      "side": 1,
      "message": "Originally I tried to have one empty line of diff text in the background row, so essentially \"1lh\" (once that becomes available) or a calc() of line height times font size. However that looks slightly too cramped, as the button borders for the above and below buttons will start encroaching on the content above and below. I could change this too a calc of roughly 1.5 * line height * font size, but I thought ems were more concise and should do the right thing if we scale the text, unless I misunderstand how these work?",
      "parentUuid": "a7fa473c_d2f4851a",
      "range": {
        "startLine": 241,
        "startChar": 6,
        "endLine": 241,
        "endChar": 18
      },
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b05cc03_8980cc5c",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 246,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-10-02T09:54:00Z",
      "side": 1,
      "message": "I have never seen that magic. :-) Would \"position: relative\" also work?",
      "range": {
        "startLine": 245,
        "startChar": 2,
        "endLine": 246,
        "endChar": 33
      },
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9b4c410_fb9e1c1f",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 246,
      "author": {
        "id": 1083880
      },
      "writtenOn": "2020-10-09T08:11:19Z",
      "side": 1,
      "message": "No, at least when I tried it didn\u0027t work and according to the spec the effect of position: relative on table rows and cells is undefined: https://www.w3.org/TR/CSS21/visuren.html#propdef-position. I could not find mentions of transform working this way in the spec, so I went with what I found on CSS Tricks, but it seems to perform as advertised there.",
      "parentUuid": "6b05cc03_8980cc5c",
      "range": {
        "startLine": 245,
        "startChar": 2,
        "endLine": 246,
        "endChar": 33
      },
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b3f8a00_8fcd1e09",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 249,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-10-02T09:54:00Z",
      "side": 1,
      "message": "Maybe add a comment why this is not the usual \"display:none\".",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "748d5a11_947a8c0a",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 249,
      "author": {
        "id": 1083880
      },
      "writtenOn": "2020-10-09T08:11:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b3f8a00_8fcd1e09",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae6363cc_c773c6c9",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 256,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-10-02T09:54:00Z",
      "side": 1,
      "message": "Would it be possible to get away without absolute positioning?",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3f76667_1b623174",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 256,
      "author": {
        "id": 1083880
      },
      "writtenOn": "2020-10-09T08:11:19Z",
      "side": 1,
      "message": "When I remove absolute positioning and instead give the td a colspan\u003d\"4\", it seems to ignore that until I remove display: flex (which would complicate my horizontal centering). The current approach seemed the most simple, but maybe you have another idea.",
      "parentUuid": "ae6363cc_c773c6c9",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e26e9b3_927039b0",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 260,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-10-02T09:54:00Z",
      "side": 1,
      "message": "For Gerrit this would have to:\n\n  Roboto 14px 400 ALL CAPS\n\nCurrently it is 12px 500 NO CAPS.\n\nDoesn\u0027t \u003cgr-button\u003e have its defaults so you can leave the font css out?",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c244648_a536fab8",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 260,
      "author": {
        "id": 1083880
      },
      "writtenOn": "2020-10-09T08:11:19Z",
      "side": 1,
      "message": "When I tried without, it inherits the monospace font of the surrounding diff (same as the current context expansion buttons). I believe this might be because of how the @applys to --gr-button work, from what I see in the dev tools the \u0027font\u0027 property reverts to \u0027initial\u0027 unless it\u0027s explicitly specified.",
      "parentUuid": "7e26e9b3_927039b0",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "572d9308_b78c9c9f",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 261,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-10-02T09:54:00Z",
      "side": 1,
      "message": "Colors must strictly be based on css vars from app-theme.",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fc6720c_e7becc7f",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 261,
      "author": {
        "id": 1083880
      },
      "writtenOn": "2020-10-09T08:11:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "572d9308_b78c9c9f",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e325b07_0c9bf01b",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 290,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2020-10-02T09:54:00Z",
      "side": 1,
      "message": "spacing-m",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65bc629c_7d248f8e",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff_html.ts",
        "patchSetId": 9
      },
      "lineNbr": 290,
      "author": {
        "id": 1083880
      },
      "writtenOn": "2020-10-09T08:11:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e325b07_0c9bf01b",
      "revId": "be5c46621652d61ab8518993731206b7d466cbda",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}