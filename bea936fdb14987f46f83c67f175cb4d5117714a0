{
  "comments": [
    {
      "key": {
        "uuid": "e2a9e190_671202f4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 1051,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-02-14T12:50:59Z",
      "side": 1,
      "message": "Why \u0027or\u0027? Shouldn\u0027t this be \u0027and\u0027?\n\nIf I\u0027m searching for \"author:Foo \u003cfoo.bar@baz.com\u003e\" I don\u0027t want matches for changes where the author is \"Foo \u003cfoo.other@example.com\u003e\".",
      "range": {
        "startLine": 1051,
        "startChar": 21,
        "endLine": 1051,
        "endChar": 23
      },
      "revId": "bea936fdb14987f46f83c67f175cb4d5117714a0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38755f1d_7af200df",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 1051,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-02-14T12:55:07Z",
      "side": 1,
      "message": "I didn\u0027t create predicate with the full name, it\u0027s the original query.\n\nThe two queries are: \"author:Foo \u003cfoo.bar@baz.com\u003e\" and \"foo.bar@baz.com\". So we should union the result?",
      "parentUuid": "e2a9e190_671202f4",
      "range": {
        "startLine": 1051,
        "startChar": 21,
        "endLine": 1051,
        "endChar": 23
      },
      "revId": "bea936fdb14987f46f83c67f175cb4d5117714a0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb146c15_a7b2f84d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 1051,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-02-14T13:03:04Z",
      "side": 1,
      "message": "And also query by Fullname is not working. You can try like \"author: Changcheng Xiao\", you will get empty. I haven\u0027t found the reason for this fail yet.",
      "parentUuid": "e2a9e190_671202f4",
      "range": {
        "startLine": 1051,
        "startChar": 21,
        "endLine": 1051,
        "endChar": 23
      },
      "revId": "bea936fdb14987f46f83c67f175cb4d5117714a0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5873df4a_d447cdac",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 1051,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-02-14T13:08:11Z",
      "side": 1,
      "message": "Ah okay, I missed this. But then \"author:Foo \u003cfoo.bar@baz.com\u003e\" would match \"Other \u003cfoo.bar@baz.com\u003e\" (if 2 users would use the same email)?\n\nCould we use SchemaUtil.getNameParts(String, Iterable\u003cString\u003e) and then have an \u0027and\u0027 query with AuthorPredicates for all name parts?",
      "parentUuid": "38755f1d_7af200df",
      "range": {
        "startLine": 1051,
        "startChar": 21,
        "endLine": 1051,
        "endChar": 23
      },
      "revId": "bea936fdb14987f46f83c67f175cb4d5117714a0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88cceaa4_df90123c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 1051,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2017-02-14T15:53:19Z",
      "side": 1,
      "message": "Actually, I\u0027m not sure it\u0027s better to use AND here. If we use AND, then the results will be empty when querying by \u003cname\u003e or querying by \u003cemail\u003e is empty. \n\n\nThis action is different from what we have in \"owner:\", \"reviewer:\", etc. In these search operators, we first try to extract \u003cemail\u003e, \u003cusername\u003e or \u003cFull Name\u003e from the query text and use them to find possible accounts [2]. Then we use these accountIds to query and *UNION* the results [1].\n\n\nSo we can get the same results for query: \"owner:Chang \u003cxchangcheng@google.com\u003e\" and \"owner: Changcheng Xiao \u003cxchangcheng@google.com\u003e\".\n\n\nSo if we apply SchemaUtil.getNameParts(String, Iterable\u003cString\u003e) only on the FullName part, we may use AND to get the results. But we may still can\u0027t get the results user wants. e.g., \"author: Foo Bar\" will be split into: \"foo\", \"bar\". \"author: Bar Foo\" will be split into the same. So these two queries will get the same results. We don\u0027t like this, I guess. \n\n\nThe above is why I only extract and query by the email address as an additional query.\n\n\n\n[1] ChangeQueryBuilder::owner()\n[2] AccounntResolver::findAll()",
      "parentUuid": "5873df4a_d447cdac",
      "range": {
        "startLine": 1051,
        "startChar": 21,
        "endLine": 1051,
        "endChar": 23
      },
      "revId": "bea936fdb14987f46f83c67f175cb4d5117714a0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "279cd10e_7496771a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 1051,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-02-15T08:08:45Z",
      "side": 1,
      "message": "Okay, but then we still want to split the non-email part so the querying by full name also works?",
      "parentUuid": "88cceaa4_df90123c",
      "range": {
        "startLine": 1051,
        "startChar": 21,
        "endLine": 1051,
        "endChar": 23
      },
      "revId": "bea936fdb14987f46f83c67f175cb4d5117714a0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}