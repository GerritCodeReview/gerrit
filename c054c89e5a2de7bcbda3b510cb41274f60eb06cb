{
  "comments": [
    {
      "key": {
        "uuid": "b690bd0a_ff0b5f65",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/api/changes/ReviewInput.java",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-10-22T07:18:52Z",
      "side": 1,
      "message": "Unnecessary to assign false as false is the default for a boolean.",
      "range": {
        "startLine": 55,
        "startChar": 38,
        "endLine": 55,
        "endChar": 46
      },
      "revId": "c054c89e5a2de7bcbda3b510cb41274f60eb06cb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96973902_fe0b6165",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReview.java",
        "patchSetId": 2
      },
      "lineNbr": 380,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-10-22T07:18:52Z",
      "side": 1,
      "message": "If omitDuplicateComments is false we should avoid this database query and just the list to null.\n\nBut to avoid the O(N^2) duplicate check we should build a map with a helper method:\n\n  Set\u003cString\u003e existingIds \u003d in.omitDuplicateComments\n      ? readExistingComments(ctx.getChange().getId())\n      : Collections.\u003cString\u003eemptySet();\n  \n  private Set\u003cString\u003e readExistingComments(Change.Id id) {\n    Set\u003cString\u003e r \u003d new HashSet\u003c\u003e();\n    for (PatchLineComment c : plcUtil.publishedByChange(\n        ctx.getDb(), ctx.getChangeNotes())) {\n      r.add(c.getKey().get());\n    }\n    return r;\n  }\n\nThen in our loop just below we can say:\n\n  String cId \u003d Url.decode(c.id);\n  if (existingIds.contains(cId)) {\n    continue;\n  }",
      "revId": "c054c89e5a2de7bcbda3b510cb41274f60eb06cb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96973902_9e081d6b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReview.java",
        "patchSetId": 2
      },
      "lineNbr": 385,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-10-22T07:18:52Z",
      "side": 1,
      "message": "nit: we prefer to line break at higher level operators so break before \u0026\u0026 instead of after , in a method call.",
      "revId": "c054c89e5a2de7bcbda3b510cb41274f60eb06cb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b690bd0a_9f08136b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PostReview.java",
        "patchSetId": 2
      },
      "lineNbr": 446,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-10-22T07:18:52Z",
      "side": 1,
      "message": "Needs a Url.decode(c.id) here to match what is in the database, e.g. see line 390 above.",
      "range": {
        "startLine": 446,
        "startChar": 15,
        "endLine": 446,
        "endChar": 19
      },
      "revId": "c054c89e5a2de7bcbda3b510cb41274f60eb06cb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}