{
  "comments": [
    {
      "key": {
        "uuid": "b0db3b66_f377b309",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-09-01T15:29:58Z",
      "side": 1,
      "message": "We are in progress of moving away from from the term \"slave\" in favor of \"replica\" [1].\nSame below.\n\n[1] https://bugs.chromium.org/p/gerrit/issues/detail?id\u003d13012",
      "range": {
        "startLine": 7,
        "startChar": 51,
        "endLine": 7,
        "endChar": 58
      },
      "revId": "c231f055d112ec92ecd256273202f4ff8b13d93d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52ade8bd_5909c57d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-09-01T15:29:58Z",
      "side": 1,
      "message": "Upper case",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 1
      },
      "revId": "c231f055d112ec92ecd256273202f4ff8b13d93d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0e56f17_77a8efa3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1022657
      },
      "writtenOn": "2020-09-01T20:16:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b0db3b66_f377b309",
      "range": {
        "startLine": 7,
        "startChar": 51,
        "endLine": 7,
        "endChar": 58
      },
      "revId": "c231f055d112ec92ecd256273202f4ff8b13d93d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16fde9bb_53f9383c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1022657
      },
      "writtenOn": "2020-09-01T20:16:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "52ade8bd_5909c57d",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 1
      },
      "revId": "c231f055d112ec92ecd256273202f4ff8b13d93d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b31df341_727d9114",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-09-01T15:29:58Z",
      "side": 1,
      "message": "IMO this use-case could (should) be supported by ReceiveSlaveMode.\nIf this is the only (primary) use-case, I think it\u0027s a much easier way forward.\n\nFor reference see [1].\n\nInstead of just returning the message from ServiceNotEnabledException it shouldn\u0027t (IIUC) be a problem to return a static message like:\n\n    git-receive-pack is not available on replica servers\n\nIt should also be possible to provide a configurable alternative as response to the pushing user on command-line.\n\nFor tracking you could write an ERROR to the log in the lines of:\n\n    User $USER issued a receive-pack command when in replica-mode.\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/157212",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 18,
        "endChar": 7
      },
      "revId": "c231f055d112ec92ecd256273202f4ff8b13d93d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ef4a7a7_d6b7fcc7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1022657
      },
      "writtenOn": "2020-09-01T20:16:16Z",
      "side": 1,
      "message": "No the whole point was to be able to extend the functionality as required. What I suggested was just an example. For example for CI systems just printing something doesn\u0027t solve anything. Initially I considered removing the final and making the classes public, so that via SSH disabled we could replace the implementation with some intersects and then pass on execution.\n\nIf you are ok with making the classes non-final I can include that too now?",
      "parentUuid": "b31df341_727d9114",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 18,
        "endChar": 7
      },
      "revId": "c231f055d112ec92ecd256273202f4ff8b13d93d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "549578b8_fc8deff6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-09-02T07:00:35Z",
      "side": 1,
      "message": "\u003e No the whole point was to be able to extend the functionality as required. What I suggested was just an example. For example for CI systems just printing something doesn\u0027t solve anything.\n\nSort of of topic and should probably be discussed in the Issue, sorry for starting the discussion here. In short:\nI don\u0027t understand what you are trying to solve for CI systems.\nIn general if your CI job is pushing to Gerrit and it\u0027s trying to push to a replica it will never work, it should be apparent the first time you run your job (which I suggest should be done by a human that can interpret the output and solve the problem).\n\n\u003e Initially I considered removing the final and making the classes public, so that via SSH disabled we could replace the implementation with some intersects and then pass on execution.\n\u003e \n\u003e If you are ok with making the classes non-final I can include that too now?\n\nNo! You should strive for atomic commits.\nThis change will work on it\u0027s own regardless of what the end goal is.",
      "parentUuid": "4ef4a7a7_d6b7fcc7",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 18,
        "endChar": 7
      },
      "revId": "c231f055d112ec92ecd256273202f4ff8b13d93d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b9cb2d5_da9e63dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-08-31T19:42:50Z",
      "side": 1,
      "message": "It should be:\nBug: Issue 11906\n\nAlso, is the issue number correct? This looks more like a bug-fix, where we were still binding the Git/SSH commands even if the SSHD was disabled.",
      "revId": "c231f055d112ec92ecd256273202f4ff8b13d93d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d074dce_1987e9cf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1022657
      },
      "writtenOn": "2020-09-01T09:35:53Z",
      "side": 1,
      "message": "Luca, yes you are correct in that sense. However I believe this might be all that I need to be able to extend SSHD functionality via plugins, so that is why I picked that issue number. I am going to explore doing extension not by inheritance but by member instantiation instead (Upload/Receive).",
      "parentUuid": "6b9cb2d5_da9e63dd",
      "revId": "c231f055d112ec92ecd256273202f4ff8b13d93d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8797bd04_bc84216b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1022657
      },
      "writtenOn": "2020-09-01T09:37:45Z",
      "side": 1,
      "message": "It would be great if this change could be included in a 3.2.x release.",
      "revId": "c231f055d112ec92ecd256273202f4ff8b13d93d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9768369_1efc5e62",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-09-01T15:29:58Z",
      "side": 1,
      "message": "I consider this a bug-fix and wouldn\u0027t have any issues with moving it to stable-3.2.\nIf sshd isn\u0027t enabled it isn\u0027t enabled.\n\nIt shouldn\u0027t affect existing replicas. All of them should have sshd enabled since it doesn\u0027t make sense to have it disabled and on those instances where sshd is disabled I only see fringe corner-cases where the message from ServiceNotEnabledException is parsed to determine if it\u0027s a replica or not but that makes no sense to me to do it that way.",
      "revId": "c231f055d112ec92ecd256273202f4ff8b13d93d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a7ae81e_941e7392",
        "filename": "java/com/google/gerrit/sshd/commands/DefaultCommandModule.java",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-09-01T15:29:58Z",
      "side": 1,
      "message": "Move this inside the \"if (sshEnabled())\" block above (line 80).",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 103,
        "endChar": 7
      },
      "revId": "c231f055d112ec92ecd256273202f4ff8b13d93d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da8c8c5a_be95f755",
        "filename": "java/com/google/gerrit/sshd/commands/DefaultCommandModule.java",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1022657
      },
      "writtenOn": "2020-09-01T20:16:16Z",
      "side": 1,
      "message": "Note that this moves the test submit away from the others + I don\u0027t know whether the gerrit Receive.class should be where it is. I\u0027ve not fully understood the duplication there is in the SSHD command module between git and gerrit commands.",
      "parentUuid": "3a7ae81e_941e7392",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 103,
        "endChar": 7
      },
      "revId": "c231f055d112ec92ecd256273202f4ff8b13d93d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a18d381_fc0627a6",
        "filename": "java/com/google/gerrit/sshd/commands/DefaultCommandModule.java",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2020-09-02T07:00:35Z",
      "side": 1,
      "message": "\u003e Note that this moves the test submit away from the others + I don\u0027t know whether the gerrit Receive.class should be where it is. I\u0027ve not fully understood the duplication there is in the SSHD command module between git and gerrit commands.\n\nI\u0027m sorry I don\u0027t follow your reasoning.\nOne of the main purposes of code-review is that your code is reviewed by those who are (hopefully) more familiar with the code-base and/or the domain. Not trusting that others have at least have a decent understanding of what they are talking about sort of defeats the purpose.\nThe fact that you are uncertain of what this piece of code does doesn\u0027t mean that everyone is equally uncertain and is a perfect example of how code-review enables you to contribute to code-bases that you aren\u0027t fully familiar with, and hopefully expands your knowledge and understanding of said code-base in particular and software-development in general. At least this has been my experience.\nIf my review comment isn\u0027t valid you can bet that other reviewers will react and correct me with a reason why which in turn will  make my understanding grow. 😊\n\nMoving all ssh git-command bindings into a single if-ssh-enabled clause seems to me like an improvement.\nIf you follow the logic of this piece of code, what will change logically if you move this section into the block above?\nWhat is gained by having these two code segments in two separate if clauses?\nProximity of code doesn\u0027t matter for the outcome only order, and the order between the if clause and the clause on lines 105-107 doesn\u0027t change. Could you explain what your worry is exactly?",
      "parentUuid": "da8c8c5a_be95f755",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 103,
        "endChar": 7
      },
      "revId": "c231f055d112ec92ecd256273202f4ff8b13d93d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}