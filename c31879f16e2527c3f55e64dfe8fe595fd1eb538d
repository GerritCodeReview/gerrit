{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e705c6b5_16f9659d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-05-18T09:06:31Z",
      "side": 1,
      "message": "I am missing a DELETE and HEAD REST-API and then I should be done.\n\nP.S. This isn\u0027t for testing Gerrit APIs but rather how they interoperate with Python, which we had accidentally broken recently.",
      "revId": "c31879f16e2527c3f55e64dfe8fe595fd1eb538d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e97b631e_120e2580",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-05-18T09:16:56Z",
      "side": 1,
      "message": "One idea: we could add the execution of these simple smoke-tests are part of change-validation, as the last step after the packaging of the .war file. WDYT?",
      "revId": "c31879f16e2527c3f55e64dfe8fe595fd1eb538d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "95a986f2_d03ce3dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-05-18T09:21:38Z",
      "side": 1,
      "message": "We could do it as a python test and have a dependency on gerrit.war. We have it already for prolog tests and plugin-manager plugin. But, probably a less intrusive approach would be to back port this test to Java test. We could simulate Cookie-Management with regular Java client (httpclient), can\u0027t we?\n\nAlso, starting from yesterday 3.1 is EOL, move it to stable-3.2?",
      "parentUuid": "e97b631e_120e2580",
      "revId": "c31879f16e2527c3f55e64dfe8fe595fd1eb538d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}