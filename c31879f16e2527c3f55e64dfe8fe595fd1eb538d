{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e705c6b5_16f9659d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-05-18T09:06:31Z",
      "side": 1,
      "message": "I am missing a DELETE and HEAD REST-API and then I should be done.\n\nP.S. This isn\u0027t for testing Gerrit APIs but rather how they interoperate with Python, which we had accidentally broken recently.",
      "revId": "c31879f16e2527c3f55e64dfe8fe595fd1eb538d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e97b631e_120e2580",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-05-18T09:16:56Z",
      "side": 1,
      "message": "One idea: we could add the execution of these simple smoke-tests are part of change-validation, as the last step after the packaging of the .war file. WDYT?",
      "revId": "c31879f16e2527c3f55e64dfe8fe595fd1eb538d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "95a986f2_d03ce3dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-05-18T09:21:38Z",
      "side": 1,
      "message": "We could do it as a python test and have a dependency on gerrit.war. We have it already for prolog tests and plugin-manager plugin. But, probably a less intrusive approach would be to back port this test to Java test. We could simulate Cookie-Management with regular Java client (httpclient), can\u0027t we?\n\nAlso, starting from yesterday 3.1 is EOL, move it to stable-3.2?",
      "parentUuid": "e97b631e_120e2580",
      "revId": "c31879f16e2527c3f55e64dfe8fe595fd1eb538d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a0a6653_9677c24f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-05-18T09:24:35Z",
      "side": 1,
      "message": "\u003e We could do it as a python test and have a dependency on gerrit.war. We have it already for prolog tests and plugin-manager plugin. But, probably a less intrusive \napproach would be to back port this test to Java test.\n\nWe already have a Java test covering that scenario: here the point is having a real E2E test that validates that Gerrit API can be called by Python.\n\n\u003e We could simulate Cookie-Management with regular Java client (httpclient), can\u0027t we?\n\nThat won\u0027t be E2E though.\n\n\u003e Also, starting from yesterday 3.1 is EOL, move it to stable-3.2?\n\n+1",
      "parentUuid": "95a986f2_d03ce3dc",
      "revId": "c31879f16e2527c3f55e64dfe8fe595fd1eb538d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8c9bbe1_637c04bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2021-05-21T21:10:58Z",
      "side": 1,
      "message": "Some ideas below; interesting change! :)",
      "revId": "c31879f16e2527c3f55e64dfe8fe595fd1eb538d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9e1b722_385ede38",
        "filename": "contrib/smoke-test.py",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2021-05-21T21:10:58Z",
      "side": 1,
      "message": "env python3",
      "range": {
        "startLine": 1,
        "startChar": 11,
        "endLine": 1,
        "endChar": 17
      },
      "revId": "c31879f16e2527c3f55e64dfe8fe595fd1eb538d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9536936_a719f855",
        "filename": "contrib/smoke-test.py",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2021-05-21T21:10:58Z",
      "side": 1,
      "message": "Maybe move this file to a ./smoke-test directory, to then put some dev-env files in it as well. See ./reindex as a potential example. The latter has some dev-env files in it already, which help in formatting the sibling python code, as well as resolving dependencies locally. You likely encountered that tooling already.\n\nAdding a Makefile or an executable README alongside usually helps on the usage too. This could replace the comment lines 17-21 further above, depending. Overall, putting this initial work in a directory would help support further expansion of such test code. But as you say already, as far as the scope here doesn\u0027t overlap too much with the existing test code elsewhere in Gerrit.\n\nSpeaking of formatting, the ../.editorconfig root file might require tweaking for python files underneath. -Depends of course on how the local IDE or editor considers it from its own project setup perspective. I\u0027m thinking of indent_size which should be 4 for python indeed.\n\nFor flake8, I usually use extend-ignore over \u0027ignore\u0027 which overwrites default ignores it seems. Ignoring E203 used to suffice for me so far, but this depends on the actual python code of course. And \u0027black\u0027 showed to be a needful complement beside flake8; one reformats and the other fixes the style further.",
      "revId": "c31879f16e2527c3f55e64dfe8fe595fd1eb538d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01fb4bb7_bd46f1ac",
        "filename": "contrib/smoke-test.py",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-05-24T19:35:03Z",
      "side": 1,
      "message": "\u003e Maybe move this file to a ./smoke-test directory, to then put some dev-env files in it as well. See ./reindex as a potential example. The latter has some dev-env files in it already, which help in formatting the sibling python code, as well as resolving dependencies locally. You likely encountered that tooling already.\n\nSure, but the purpose of this script is to stay quite basic: I would not plan to expand it a lot from what it is today.\n\n\u003e Adding a Makefile or an executable README alongside usually helps on the usage too.\n\nThat sounds a very good idea, possibly worth then having a ./smoke-test directory as you suggested above.\n\n\u003e This could replace the comment lines 17-21 further above, depending. Overall, putting this initial work in a directory would help support further expansion of such test code. \n\nAs mentioned, that isn\u0027t the intention. We have already a comprehensive E2E tests suite and I wouldn\u0027t create a duplicate.\n\n\u003e But as you say already, as far as the scope here doesn\u0027t overlap too much with the existing test code elsewhere in Gerrit.\n\n+1\n\n\u003e Speaking of formatting, the ../.editorconfig root file might require tweaking for python files underneath. -Depends of course on how the local IDE or editor considers it from its own project setup perspective. I\u0027m thinking of indent_size which should be 4 for python indeed.\n\nI just used \u0027vi\u0027 for editing, let me have a look at the .editorconfig preferences.\n\n\u003e For flake8, I usually use extend-ignore over \u0027ignore\u0027 which overwrites default ignores it seems. Ignoring E203 used to suffice for me so far, but this depends on the actual python code of course. And \u0027black\u0027 showed to be a needful complement beside flake8; one reformats and the other fixes the style further.\n\nCan you upload a PS with the styling fixes?",
      "parentUuid": "d9536936_a719f855",
      "revId": "c31879f16e2527c3f55e64dfe8fe595fd1eb538d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}