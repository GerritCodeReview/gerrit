{
  "comments": [
    {
      "key": {
        "uuid": "9f605ce6_2a1f7fcf",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2016-10-06T00:06:08Z",
      "side": 1,
      "message": "Just FYI - this is fifth DiffViewMode declaration in PolyGerrit.",
      "revId": "c3795aa49deac3b73dfc8d8a7e10dae726277b7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f5bf040_a7096a90",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-06T00:58:57Z",
      "side": 1,
      "message": "Yeah -- we still haven\u0027t fully resolved the issue of shared constants.\n\nWould a gr-diff-view-behavior be appropriate in this situation?",
      "parentUuid": "9f605ce6_2a1f7fcf",
      "revId": "c3795aa49deac3b73dfc8d8a7e10dae726277b7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fac249b_3876892e",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2016-10-06T17:11:47Z",
      "side": 1,
      "message": "No action needed here - this just a known issue, and it\u0027s getting more hairy over time.\nMaybe this will be solved with ES6 migration, in whatever form that happens.\nOr singleton global constants.js, maybe? Would have to import it everywhere, so that would likely benefit from automation..",
      "parentUuid": "3f5bf040_a7096a90",
      "revId": "c3795aa49deac3b73dfc8d8a7e10dae726277b7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fac249b_b8da9908",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-06T18:26:42Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "5fac249b_3876892e",
      "revId": "c3795aa49deac3b73dfc8d8a7e10dae726277b7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f605ce6_ea2847f2",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2016-10-06T00:06:08Z",
      "side": 1,
      "message": "I wonder if this one could be combined with diffViewMode, because the difference between those two is not obvious.",
      "revId": "c3795aa49deac3b73dfc8d8a7e10dae726277b7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f5bf040_8706667c",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-06T00:58:57Z",
      "side": 1,
      "message": "This exists to ensure that _getDiffViewMode gets called any time either diffViewMode or _userPrefs is changed. It\u0027s a weird pattern, but it\u0027s identical to the one followed in gr-diff-view. For continuity\u0027s sake, I think we should either follow this convention, or reimplement it in both views to one that\u0027s more explicit for non Polymer-minded people.",
      "parentUuid": "9f605ce6_ea2847f2",
      "revId": "c3795aa49deac3b73dfc8d8a7e10dae726277b7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fac249b_788001fd",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2016-10-06T17:11:47Z",
      "side": 1,
      "message": "I\u0027m not sure how _diffMode is different from diffViewMode in the first place and when each one should be used.\nAfter reading the code, maybe diffViewMode is the override for the default one, which is populated from user preferences?\nMaybe rename those accordingly?",
      "parentUuid": "3f5bf040_8706667c",
      "revId": "c3795aa49deac3b73dfc8d8a7e10dae726277b7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fbba8d1_d9091390",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list.js",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-06T18:26:42Z",
      "side": 1,
      "message": "_diffMode is never used anywhere -- it seemingly exists only to cause a call to _getDiffViewMode any time either diffViewMode or _userPrefs is changed. This pattern is identical to the pattern in gr-diff-view, which performs the exact same functionality. \n\nhttps://gerrit.googlesource.com/gerrit/+/master/polygerrit-ui/app/elements/diff/gr-diff-view/gr-diff-view.js#82\n\nI believe strongly that I should either follow that pattern as-is or come up with something new for both places in the code.",
      "parentUuid": "5fac249b_788001fd",
      "revId": "c3795aa49deac3b73dfc8d8a7e10dae726277b7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f605ce6_0a24bb1b",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list_test.html",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2016-10-06T00:06:08Z",
      "side": 1,
      "message": "Please s/sinon.(stub|spy)/sandbox.(stub|spy)/g in this file, thanks!",
      "revId": "c3795aa49deac3b73dfc8d8a7e10dae726277b7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f605ce6_4a019369",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list_test.html",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-06T00:58:57Z",
      "side": 1,
      "message": "The sandbox doesn\u0027t work everywhere a normal stub/spy will... For instance, when stubbing the rest api prototype methods in the below line. Should I opt to just not use the sandbox at all for continuity\u0027s sake?",
      "parentUuid": "9f605ce6_0a24bb1b",
      "revId": "c3795aa49deac3b73dfc8d8a7e10dae726277b7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fbba8d1_597b4315",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list_test.html",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2016-10-06T17:11:47Z",
      "side": 1,
      "message": "\u003e The sandbox doesn\u0027t work everywhere a normal stub/spy will.\nFalse. sandbox.stub is interchangeable with sinon.stub usage-wise, same goes for spies.\n\nI believe stub() is the cause of confusion here - but it\u0027s provided by Polymer, and has nothing to do with Sinon:\nhttps://github.com/Polymer/web-component-tester/blob/master/browser/mocha/stub.js",
      "parentUuid": "9f605ce6_4a019369",
      "revId": "c3795aa49deac3b73dfc8d8a7e10dae726277b7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fbba8d1_b9253f19",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list_test.html",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-06T18:26:42Z",
      "side": 1,
      "message": "Okay, I didn\u0027t know that -- good to know! So should I swap all instances of this stub function with an equivalent call to sandbox.stub on the prototype? It feels like that\u0027s a much messier way of doing things.\n\nAlso, it looks like I run into an issue when trying to stub diffs() with sandbox.\n\nsandbox.stub(element, \u0027diffs\u0027, {get: function() {\n  return [{toggleLeftDiff: toggleLeftDiffStub}];\n}});\n\nyields err: \"Cannot stub non-existent own property diffs\"\n\nwhereas this works fine:\nsinon.stub(element, \u0027diffs\u0027, {get: function() {\n  return [{toggleLeftDiff: toggleLeftDiffStub}];\n}});",
      "parentUuid": "7fbba8d1_597b4315",
      "revId": "c3795aa49deac3b73dfc8d8a7e10dae726277b7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fac249b_1867054e",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list_test.html",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-10-06T22:08:15Z",
      "side": 1,
      "message": "Looks like this might be a bug in Sinon [1]. Maybe we can just use `sinon.stub` and restore it explicitly in the teardown (with some kind of explanatory comment).\n\n[1] https://github.com/sinonjs/sinon/issues/781",
      "parentUuid": "7fbba8d1_b9253f19",
      "revId": "c3795aa49deac3b73dfc8d8a7e10dae726277b7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff74f80c_25902efc",
        "filename": "polygerrit-ui/app/elements/change/gr-file-list/gr-file-list_test.html",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2016-10-07T21:08:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5fac249b_1867054e",
      "revId": "c3795aa49deac3b73dfc8d8a7e10dae726277b7f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}