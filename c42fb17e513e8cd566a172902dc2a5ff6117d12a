{
  "comments": [
    {
      "key": {
        "uuid": "AAAA+3//9gQ\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "I have to say, the commit message is *not* clear about what you are trying to do here.  The best explanation I got was by reading the project-setup.txt documentation section you added.  I wish a lot more of that text was replicated in the commit message, to make the rationale for the change easier to understand.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9eI\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "Ok, I\u0027ll try to copy some or all of that text into the commit message and updated it accordingly.",
      "parentUuid": "AAAA+3//9gQ\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8sE\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAA+3//9eI\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9eg\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:49:03Z",
      "side": 1,
      "message": "I still don\u0027t get why these footer messages are required.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9Zw\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "These footers are put in whenever a new subtree commit is merged into the super project.  This is done for a couple of reasons:\n\n- By explicitly identifying if a commit parent is a subtree or mainline commit we can avoid making new Gerrit changes for subtree commits.\n- The subtree split logic needs to associate subtrees in super project commits with the subtree commits they originated from.  For instance, consider the case that the Tree pointed to by the subtree commit doesn\u0027t match the Tree pointed to be the subtree dir in the superproject commit.  In this case, a new commit needs to be made for the subtree lineage to capture the change to the subtree.  The super project commit is then \"rewritten\" to pull in the new subtree commit.\n\nIt may be possible to be the subtree commit information directly in the .gitsubtree file so the commit message is cleaner.  However, the advantage of putting this information in the commit message is that I don\u0027t have to worry about conflicts when merging two super project commits.  A custom merge driver may help here.\n\nOne disadvantage of the footers is that right now only *changes* to subtree\u0027s are listed in the footers.  This is to keep the client side tools simple and so we don\u0027t have to have 100+ footers on every commit on large projects.  Because of this, we have to walk the entire history of a super-project commit to determine the subtree commits that each subtree came from.\n\nHope that makes sense.. this is certainly where some of the \"voodoo\" lives.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8Ss\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-17T22:39:32Z",
      "side": 1,
      "message": "Thinking about (and prototyping) this some more, I think it may be possible to detect which subtree a parent commit belongs to (if any at all).  This should be possible with a simple heuristic to determine which subtree a given parent is the least different to.\n\nWith this heuristic, it would not be necessary to explicitly declare subtrees in footer messages.  Doing the analysis will be slower, but the results can be cached in a git-note so it would only need to be done once.\n\nThis may lead to other problems.  For instance, what if you wanted to merge in a sub project into multiple locations in the super project?  Or, what if two sub projects are very similar?  However, these cases are probably pretty rare.  If it ever did fail, though, it may be pretty confusing to the user.",
      "parentUuid": "AAAA+3//9Zw\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9gM\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "In general, if something belongs in JGit, it should go there first, before being added to Gerrit.  I\u0027ve made some mistakes by not putting code in JGit right away and I\u0027m trying to fix that.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9eM\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "Ok, I\u0027ll see about moving the SplitCommand stuff into JGit then.  It was easier to get started with modifying only Gerrit.",
      "parentUuid": "AAAA+3//9gM\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8sA\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Still need to do this...",
      "parentUuid": "AAAA+3//9eM\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9gY\u003d",
        "filename": "Documentation/project-setup.txt",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "s/is a$/as a/",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8r8\u003d",
        "filename": "Documentation/project-setup.txt",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAA+3//9gY\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9gU\u003d",
        "filename": "Documentation/project-setup.txt",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "This is uh, wow, some serious magic voodoo.\n\nWhy can\u0027t the developer who creates I be responsible for merging F with H first?  And instead of making Gerrit construct J, make Gerrit require that F be contained in I (and thus that the developer constructed J).",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9ek\u003d",
        "filename": "Documentation/project-setup.txt",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:49:03Z",
      "side": 1,
      "message": "After thinking about this further during breakfast, I realize why you are generating J here.  You already have the tree for J within I, so its trivial to extract and construct J for the developer, and he was able to easily construct commit I using the stock `git merge -s subtree` command.  Making him build J and then I by hand is just make-work.",
      "parentUuid": "AAAA+3//9gU\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9eE\u003d",
        "filename": "Documentation/project-setup.txt",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "Exactly.  None of the new subtree logic is actually doing any merging at all - it always uses existing tree objects.\n\nThe real voodoo is determining whether or not a new subtree commit needs to be created and then setting the parents correctly.  There is also some voodoo in determining what the parents of I\u0027 should be.  For example, H should not be a parent on I\u0027 anymore because it is already reachable from J.",
      "parentUuid": "AAAA+3//9ek\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9gI\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "Please include an AOSP copyright header after the #!/bin/bash line above.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9MA\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "AAAA+3//9gI\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8r0\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAA+3//9MA\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9f0\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "If you call OPTS_SPEC OPTIONS_SPEC, loading git-sh-setup will process the options for you.  Which means this line isn\u0027t necessary.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9Lg\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "Ok, I\u0027ll try that.",
      "parentUuid": "AAAA+3//9f0\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8rw\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAA+3//9f0\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9f8\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "Why can\u0027t this be git rev-parse --show-cdup?  As in:\n\n  up\u003d`git rev-parse --show-cdup`\n  [ -n \"$up\" ] \u0026\u0026 cd \"$up\"\n\nIf you need to return, you can do:\n\n  up\u003d`git rev-parse --show-cdup`\n  cw\u003d`git rev-parse --show-prefix`\n  [ -n \"$up\" ] \u0026\u0026 cd \"$up\"\n  $(git --exec-path)/git-sh-setup\n  [ -n \"$cw\" ] \u0026\u0026 cd \"$cw\"\n\nBut shouldn\u0027t git-sh-setup work without all of that cd\u0027ing?\n\n  . $(git --exec-path)/git-sh-setup\n\nShould be sufficient on its own.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9MI\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "I see this error when just running git-sh-setup without cd\u0027ing:\n\n  You need to run this command from the toplevel of the working tree.\n\nI didn\u0027t know about those options on rev-parse (or much about it in general).  That looks much better, I\u0027ll update the script.",
      "parentUuid": "AAAA+3//9f8\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8rs\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAA+3//9MI\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9fw\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "This shouldn\u0027t be necessary.  Setting OPTIONS_SPEC should cause variables prefix and name to be defined for you when git-sh-setup is sourced.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//87g\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "I\u0027m not seeing any environment variables getting set after calling git-sh-setup.  I also poked around at some of the scripts in git and see that they\u0027re also parsing options \"manually\".  For example git-repack.sh, git-am.sh.",
      "parentUuid": "AAAA+3//9fw\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9fs\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "Why isn\u0027t this just git rev-parse?",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9L8\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "I\u0027ll try that.",
      "parentUuid": "AAAA+3//9fs\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//874\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "It looks like git rev-parse doesn\u0027t resolve tag\u0027s to the actual commit objects they point to (which is needed).",
      "parentUuid": "AAAA+3//9L8\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9fo\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "Instead of TOP_DIR, use --show-cdup:\n\n  TOP_DIR\u003d$(git rev-parse --show-cdup)\n\nAnd then here you can say:\n\n  git config --file ${TOP_DIR}.gitsubtree",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9ME\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "AAAA+3//9fo\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8ro\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAA+3//9ME\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9fg\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "You may be able to simplify this a bit and avoid the use of awk:\n\n  function get_dir_subtree_id {\n    local key, path\n    local p\u003d$(git rev-parse --show-prefix)\n    p\u003d${p%/}\n\n    git config --file\u003d${TOP_DIR}.gitsubtree \\\n      --get-regexp \u0027subtree\\..*\\.path\u0027 \"^$p\" |\n    while read key path; do\n      if [ \"$p\" \u003d \"$path\" ]; then\n        key\u003d${key#subtree.}\n        echo \"${key/.path$/}\"\n    done\n  }",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9L4\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "I\u0027ll try that.",
      "parentUuid": "AAAA+3//9fg\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8rk\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAA+3//9L4\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9fc\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "Use git rev-parse --show-prefix instead.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9Lk\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "AAAA+3//9fc\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8rc\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAA+3//9Lk\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9fM\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "Is this left over debugging?",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9L0\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "Yes, I\u0027ll remove (or wrap in a debug if)",
      "parentUuid": "AAAA+3//9fM\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8rY\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAA+3//9L0\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9fI\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "Why does merge amend the prior commit?",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9Lo\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "To set the commit message.  It shouldn\u0027t be ammending, however, it should just set the commit message directly when calling git merge.",
      "parentUuid": "AAAA+3//9fI\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8rU\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAA+3//9Lo\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9fY\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "See above about how to parse out the name from the key.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8rQ\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAA+3//9fY\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9fU\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "See above about how to parse out the name from the key.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8rM\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAA+3//9fU\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9fE\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "What is the purpose of this command?\n\nIf its to tell you the last merged SHA-1 of a subtree, why not use a path filter based on the paths in .gitsubtree file?\n\n  git config --file\u003d${TOP_DIR}.gitsubtree --get-regexp \u0027subtree\\..*\\.path\u0027 |\n  while read subtree path; do\n    git log -n 1 --pretty\u003dformat:%P -- \"$path\" |\n    while read parent subtree; do\n      echo $subtree\n    done\n  done\n\nDoing a log call per subtree sort of sucks.  You could instead build a list of all subtree paths and do git log over that entire path list, but then you need to drop the -n 1 limiter and read the entire history of the parent project, and emit all of the subtree revisions that have ever been merged, rather than simply the most recent.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9Ls\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "The purpose is to list all subtree SHA-1\u0027s, not just the latest one.  Because a subtree\u0027s path can technically change, the subtree\u0027s name would need to be used as it shouldn\u0027t change.  However, using the current .gitsubtree config is still problematic because subtrees may be removed during the history of the project and those should still be filtered out.",
      "parentUuid": "AAAA+3//9fE\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9fQ\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "Why pushd/popd?  Why can\u0027t you just cd_to_toplevel?",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9Lw\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "AAAA+3//9fQ\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8rI\u003d",
        "filename": "contrib/git-subtree.sh",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAA+3//9Lw\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9fA\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SplitCommand.java",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "This is big enough to be its own top-level class.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9eU\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SplitCommand.java",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "AAAA+3//9fA\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//8q8\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SplitCommand.java",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-13T23:50:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "AAAA+3//9eU\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9e4\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SplitCommand.java",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "I think RevWalk promises the body to always be parsed when the RevFilter is invoked.  Indeed, the Javadoc for include says:\n\n\t * @param cmit\n\t *            the commit currently being tested. The commit has been parsed\n\t *            and its body is available for inspection.\n\nSo this isn\u0027t necessary.  If it is, its a bug in RevWalk that should be fixed in JGit, not patched up by adding it to the filter.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9eY\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SplitCommand.java",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "If I remember correctly, I was running into an issue with the body not being parsed.  It seems that this could occur when the RevWalk is being reused after a reset.\n\nI\u0027ll see how this could be fixed in JGit.",
      "parentUuid": "AAAA+3//9e4\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9es\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SplitCommand.java",
        "patchSetId": 1
      },
      "lineNbr": 411,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2011-01-10T16:07:07Z",
      "side": 1,
      "message": "forPath() doesn\u0027t work for tree objects because it sets recursive true, which causes TreeWalk to avoid tree entries altogether.\n\nThis should be a new utility method on TreeWalk... and it should do it without needing to use StringTokenizer to break up the path components.",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA+3//9eQ\u003d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SplitCommand.java",
        "patchSetId": 1
      },
      "lineNbr": 411,
      "author": {
        "id": 1000673
      },
      "writtenOn": "2011-01-11T17:51:18Z",
      "side": 1,
      "message": "I\u0027ll add it to TreeWalk.\n\nRegarding StringTokenizer, would String.split() be an acceptable alternative?  Or is the concern with the GC overhead of making separate String objects for each of the path components.  In which case I should perhaps look at using AbstractTreeIterator.path directory and doing comparisons manually?",
      "parentUuid": "AAAA+3//9es\u003d",
      "revId": "c42fb17e513e8cd566a172902dc2a5ff6117d12a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}