{
  "comments": [
    {
      "key": {
        "uuid": "e1f22d16_feeaa122",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 7,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-10-09T11:55:00Z",
      "side": 1,
      "message": "s/Owner/Owners\n\nin your code it is the plural everywhere",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ef16050_60e59253",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 7,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2013-10-11T06:48:32Z",
      "side": 1,
      "message": "I think the code is wrong, rather than the commit message.\n\nThere can only be one owner of a change.",
      "parentUuid": "e1f22d16_feeaa122",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e3598d0_922c5ca2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 7,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-10-17T14:44:36Z",
      "side": 1,
      "message": "\u003e There can only be one owner of a change\n\nI was aware of that and was thinking that the usage of the plural form was like telling: maybe in the future it will be possible to have multiple owners of a change.\n\nI am also fine with the singular form as long as the code and commit message are consistent.",
      "parentUuid": "1ef16050_60e59253",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1f22d16_deefe530",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 9,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-10-09T11:55:00Z",
      "side": 1,
      "message": "s/CHANGE_OWNER/CHANGE_OWNERS\n\n\ns/virtual/system\n\nWe name such groups as system groups.",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1efe930_ddefeb30",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 13,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-10-09T11:55:00Z",
      "side": 1,
      "message": "s/Owner/Owners",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1f22d16_3ef529fe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 17,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-10-09T11:55:00Z",
      "side": 1,
      "message": "s/configurations/configuration ?",
      "range": {
        "startLine": 17,
        "startChar": 15,
        "endLine": 17,
        "endChar": 29
      },
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1efe930_3df52ffe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 19,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-10-09T11:55:00Z",
      "side": 1,
      "message": "s/Change_OWNER/CHANGE_OWNERS",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1efe930_1df2f315",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 20,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-10-09T11:55:00Z",
      "side": 1,
      "message": "What does it mean that it will be applied to these permissions on the All-Projects?\n\nI think you wanted to say that: By default, the following permissions will be assigned to the CHANGE_OWNERS group in the All-Projects...",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44ea27f0_71f6180f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 13
      },
      "lineNbr": 219,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-09-26T22:45:13Z",
      "side": 1,
      "message": "Just to make sure i understand why you forward isOwner() from here to RefControl and from there to ProjectControl, and then search in access section if that line is still present, that you wrote there in Schema_85\n\n [access \"refs/heads/*\"]\n  abandon \u003d group Change Owners\n\nand wasn\u0027t removed, right? OTOH why to add all those lines at all (in Schema_85 for abandon and other friends that you have listed in the commit message)?\n\nCan\u0027t we do it by convention over configuration paradigm? Like in the line 217? Project owner can abandon. Change owner can abandon too. So the code here would be much simpler (nothing to route any more):\n\n return getRefControl().isOwner() // branch owner can abandon\n      || getProjectControl().isOwner() // project owner can abandon \n      || getCurrentUser().getCapabilities().canAdministrateServer() // site administers are god\n      || isOwner()\n      || getRefControl().canAbandon()\n\nNot to mention the changes in Schema_85.",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "847b3f36_cbe17548",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 13
      },
      "lineNbr": 219,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2013-09-27T17:15:45Z",
      "side": 1,
      "message": "I proposed to do it by convention on patch sets 2 thru 11, the Change Owner group would only apply to the label permission.  However the feedback was that it would be too confusing to users when setting up ACLs (patch set 2 \u0026 9).  The request was to make the CHANGE OWNER group apply to all permissions that have a change context.",
      "parentUuid": "44ea27f0_71f6180f",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c44377e0_7d3b57ac",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 13
      },
      "lineNbr": 219,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-09-27T17:57:05Z",
      "side": 1,
      "message": "No, you didn\u0027t. In ps 2 you didn\u0027t touch canAbandon() on line 215 in this patch.\n\nSo again, what i propose is to remove\n\n abandon \u003d group Change Owners\n\nand friends from `project.config` i. e. the corresponding code from Schema_85 and to extend canAbandon() and friends here to be:\n\n [...]\n return getRefControl().isOwner() // branch owner can abandon\n      || getProjectControl().isOwner() // project owner is roject god\n      || getCurrentUser().getCapabilities().canAdministrateServer() // site administers are site god\n      || isOwner() // change owner is change god\n      || getRefControl().canAbandon();",
      "parentUuid": "847b3f36_cbe17548",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "847b3f36_ebe6b15d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 13
      },
      "lineNbr": 219,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2013-09-27T18:17:47Z",
      "side": 1,
      "message": "Sorry, i don\u0027t understand.  I think what you are proposing is exactly what I have in patch set 9.  Could you please take a look?",
      "parentUuid": "c44377e0_7d3b57ac",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1efe930_7dffb7dd",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 13
      },
      "lineNbr": 219,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-10-09T11:55:00Z",
      "side": 1,
      "message": "@David: I don\u0027t see any difference between the code snippet you proposed and the code in the Base version (except the changed order of conditions).\n\nIn general I tend to agree with David on this change. The change owner(s) should be able to abandon own changes by default. We shouldn\u0027t be required to have \"abandon \u003d group Change Owners\" into the All-Projects.",
      "parentUuid": "c44377e0_7d3b57ac",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e3598d0_7209f842",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/ChangeControl.java",
        "patchSetId": 13
      },
      "lineNbr": 219,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-10-11T06:40:07Z",
      "side": 1,
      "message": "@Sa≈°a: ah, right, apparently i mixed the Base version and the version in ps 13.",
      "parentUuid": "c1efe930_7dffb7dd",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4d87b6d_8ef03b13",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/Schema_85.java",
        "patchSetId": 13
      },
      "lineNbr": 122,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-09-26T22:45:13Z",
      "side": 1,
      "message": "Why to do it? We don\u0027t do it for Project Owners, right?. So why not to behave the same way with the new group?",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "241613dd_b851f9e3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/Schema_85.java",
        "patchSetId": 13
      },
      "lineNbr": 122,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2013-09-27T18:21:00Z",
      "side": 1,
      "message": "I don\u0027t understand your question David.  I think the idea here is to not change the Gerrit\u0027s default policies, but yet to allow them to be customised.  In other words, change owners have always been able to abandon changes.  And after this change, they will still be able to abandon changes, unless an admin comes along and modifies the ACLs to remove these default rules.\n\nAre you asking why we can\u0027t also remove the ability for Project Owners to abandon things?  Perhaps that is something that should also be considered at some point, but I don\u0027t know that it should be considered for this change.  It might be nice if almost all the default rules were expressed as ACLs instead of hard coded into the Control Objects?  That would mean the All-Projects would come with a bunch of default rules and they would be easy to screw up, but it would give lots of good flexibility.  I almost think it would be nice if we had some way of defining default rules in Gerrit that show up in the ACLs, and if someone deletes them, that they would somehow then be highlighted in the ACL UI as overridden!  That would make it obvious that something was changed from the default, and what it takes to get back to that default behavior.",
      "parentUuid": "e4d87b6d_8ef03b13",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a45043a5_bc3801b2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/Schema_85.java",
        "patchSetId": 13
      },
      "lineNbr": 122,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-09-27T18:41:14Z",
      "side": 1,
      "message": "Martin, i see your point, and I disagree with that approach ;-)\n\nIt is not following the principle of least surprise. With that change in place in that form you could prevent change owners from abandoning his own changes by manipulating project.config. But you can\u0027t achieve that for Project Owners or Administrators.\n\nNot to mention:\n\n*  how that complicate the code.\n* how verbose All-Projects is with that change.\n* that it *not* following the YAGNI principle: in fact nobody need and missed that option to prevent change owner from abandon his change (well may be one day one would, but let\u0027s add that then).\n\nIt\u0027s like you would introduce the configuration option that prevents Administrator to create an user.\n\nIt just doesn\u0027t make any sense for me. For Labels yes, for Abandon and friends no.",
      "parentUuid": "241613dd_b851f9e3",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1efe930_5dfc7be7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/Schema_85.java",
        "patchSetId": 13
      },
      "lineNbr": 122,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-10-09T11:55:00Z",
      "side": 1,
      "message": "As said in another comment I tend to agree with Davids opinion here. Being able to prevent a change owner from abandoning own change(s) looks like we are solving a problem we don\u0027t have.",
      "parentUuid": "a45043a5_bc3801b2",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ebaf89c_eac5c74c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/Schema_85.java",
        "patchSetId": 13
      },
      "lineNbr": 122,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-10-17T14:08:52Z",
      "side": 1,
      "message": "I\u0027m not having a strong opinion about this, but here are my 2 cents on\nthis discussion.\n\n1. At the moment certain access rights are hard-coded for\nAdministrators, Project Owners and Change Owners.\n\n2. We already have groups for Administrators and Project Owners that\nmake it possible to assign additional access rights to them.\n\n\u003d\u003e Having a Change Owners group that allows to assign additional access\nrights to change owners makes sense to me.\n\n\u003d\u003e Since we have hard-coded access rights for Administrators and\nProject Owners I can\u0027t find anything wrong with keeping hard-coded\naccess rights for Change Owners too.\n\n\u003d\u003e Martin\u0027s idea of expressing all currently hard-coded access rights\nas ACLs is cool and provides a lot of additional flexibility. However\nI\u0027m not seeing this as a precondition for this change. The\nintroduction of a Change Owners group which is in design similar to the\nexisting Project Owners and Adminstrator groups makes sense to me on\nits own and it is not preventing to implement a solution which\nprovides more flexibility in the future.\n\n\u003d\u003e I\u0027m always liking to move forward in small steps which provide\nvalue and I\u0027m happy with a small change which addressed a current\nrequirement.\n\n\u003d\u003e If there are good use cases where more flexibility is required we\nshould come back to Martin\u0027s proposal and implement this in an own\nchange. I\u0027m a bit sharing David\u0027s concern about additional complexity\nin the All-Project project configuration, but on the other side only\nadministrators have to deal with this and nobody is forced to change\nthe default configuration. This can probably be solved by a good UI as\nMartin already pointed out.",
      "parentUuid": "c1efe930_5dfc7be7",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ecb3c3d_8bc68d36",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/schema/Schema_85.java",
        "patchSetId": 13
      },
      "lineNbr": 122,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-10-17T14:44:36Z",
      "side": 1,
      "message": "+1\nI agree with Edwin.",
      "parentUuid": "5ebaf89c_eac5c74c",
      "revId": "c57233fbd9906c01c79c4af7516d0980cc8ae4b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}