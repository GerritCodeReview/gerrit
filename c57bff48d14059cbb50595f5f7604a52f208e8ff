{
  "comments": [
    {
      "key": {
        "uuid": "Uf8MFlsk",
        "filename": "lib/DEFS",
        "patchSetId": 21
      },
      "lineNbr": 66,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-05-08T15:25:11Z",
      "side": 1,
      "message": "Thank you, I think this was the single most confusing rule you defined :)",
      "revId": "c57bff48d14059cbb50595f5f7604a52f208e8ff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Uf.MCkr4",
        "filename": "lib/download_jar.py",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-05-08T15:25:11Z",
      "side": 1,
      "message": "I think we may want to support a local m2 repository cache eventually. Right now, how do we handle a locally-built version of e.g. JGit? Just change your BUCK files to point to file://path/to/jgit.jar? And the performance gain from not hitting the network (particularly if it\u0027s slow) may be significant. Since we\u0027re checking the SHA-1 of the file it won\u0027t affect correctness.\n\nYes, it\u0027s easy to poison your cache if someone forgets to bump a version number in an upstream pom.xml, but that\u0027s why we\u0027re checking the SHA-1. We could even make it so that if the cache is corrupted (cached a false negative or has the wrong SHA-1) it silently tries again on the network.",
      "revId": "c57bff48d14059cbb50595f5f7604a52f208e8ff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Ue0cSjhc",
        "filename": "lib/download_jar.py",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-05-08T16:25:06Z",
      "side": 1,
      "message": "\"I think we may want to support a local m2 repository cache\"\n\n+1\n\ni would go even further and would suggest to differentiate between two different targets: \n :clean and \n :distclean\n\n clean removes everything but not the maven artifacts.\n distclean blows everything away.\n\nSomeone mentioned, that buck doesn\u0027t suck here, like other build systems do, but...",
      "parentUuid": "Uf.MCkr4",
      "revId": "c57bff48d14059cbb50595f5f7604a52f208e8ff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UbxNgzOA",
        "filename": "lib/download_jar.py",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-05-08T17:36:54Z",
      "side": 1,
      "message": "In git distclean is spelled as:\n\n  git clean -fdX\n\nUnfortunately there is a Git bug in 1.8.2.1 that does not clean buck-out with this command. Fortunately buck clean does.\n\nI added a local cache in buck-cache/, as a sibling of buck-out/.",
      "parentUuid": "Ue0cSjhc",
      "revId": "c57bff48d14059cbb50595f5f7604a52f208e8ff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Ue0f7bq8",
        "filename": "lib/download_jar.py",
        "patchSetId": 21
      },
      "lineNbr": 73,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-05-08T15:25:11Z",
      "side": 1,
      "message": "except..as is 2.6+, I forget what version we decided we wanted to target.",
      "revId": "c57bff48d14059cbb50595f5f7604a52f208e8ff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "UgWH89vM",
        "filename": "lib/download_jar.py",
        "patchSetId": 21
      },
      "lineNbr": 73,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-05-08T17:36:54Z",
      "side": 1,
      "message": "Buck claims it needs Python 2.7. I think we are OK if our macros and helper binaries run on 2.6.",
      "parentUuid": "Ue0f7bq8",
      "revId": "c57bff48d14059cbb50595f5f7604a52f208e8ff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}