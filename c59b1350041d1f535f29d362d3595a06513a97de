{
  "comments": [
    {
      "key": {
        "uuid": "f50d42c1_38cb0a10",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T14:32:18Z",
      "side": 1,
      "message": "One advantage of (mis)using labels for failure reasons is that you can query by them, e.g. you can find all changes that need a Code-Review approval from a non-author by \"label:Non-Author-Code-Review\u003dneed\" [1]. I think we shouldn\u0027t lose that queriy possibilities. This means if failure reasons are now stored differently in the change index, we probably need new query operators for this.\n\n[1] https://gerrit-review.googlesource.com/Documentation/user-search.html#labels",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 29
      },
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e412bbc9_59faa3f1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:38:37Z",
      "side": 1,
      "message": "Closed in favor of the discussion in ChangeField.java",
      "parentUuid": "f50d42c1_38cb0a10",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 29
      },
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4ca0357_4c3e686b",
        "filename": "java/com/google/gerrit/common/data/SubmitRecord.java",
        "patchSetId": 10
      },
      "lineNbr": 47,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T14:32:18Z",
      "side": 1,
      "message": "Unrelated to this change, but these enums don\u0027t make much sense for the plugin extension point, should they be removed?",
      "range": {
        "startLine": 42,
        "startChar": 4,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a048a07_b60b80ba",
        "filename": "java/com/google/gerrit/common/data/SubmitRecord.java",
        "patchSetId": 10
      },
      "lineNbr": 47,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T14:45:32Z",
      "side": 1,
      "message": "In your examples you actually use \"OK\" and \"NOT_OK\" as possible value (e.g. https://gerrit-review.googlesource.com/c/gerrit/+/162993/10). This makes me think that for the extension point we probably rather want an enum with OK, NOT_OK, RULE_ERROR?",
      "parentUuid": "b4ca0357_4c3e686b",
      "range": {
        "startLine": 42,
        "startChar": 4,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4a53097_fc2aa7af",
        "filename": "java/com/google/gerrit/common/data/SubmitRecord.java",
        "patchSetId": 10
      },
      "lineNbr": 47,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:38:37Z",
      "side": 1,
      "message": "I\u0027ve adjusted the commit message.\nDo you think we can safely remove these 2 enum values? I don\u0027t see why plugins would use them either, and plugins are most likely not called in these two cases anyway.\n\nThe json.txt file only mentions OK, NOT_READY and RULE_ERROR",
      "parentUuid": "3a048a07_b60b80ba",
      "range": {
        "startLine": 42,
        "startChar": 4,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66c7a925_b026aa56",
        "filename": "java/com/google/gerrit/common/data/SubmitRecord.java",
        "patchSetId": 10
      },
      "lineNbr": 47,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-07T10:57:37Z",
      "side": 1,
      "message": "I think that we should try to keep the extension point for the plugins clean and not allow them to set a status that makes no sense from a plugin perspective.\n\nCLOSED and FORCED are currently in use and we need to keep the functionality that depends on these states. However we are free to refactor this code. E.g. instead of CLOSED we could say NOT_READY and use the new SubmitRequirement to provide the reason \"change is closed\".\nI\u0027m not sure if we can easily get rid of FORCED, maybe it\u0027s not too bad to keep it.\n\nI also wonder if NOT_READY is a good name. For me it implies that we still must do something and then the change becomes submittable. I wonder if there are cases where submit is impossible and hence NOT_READY would be inaccurate. This makes me think that maybe NOT_OK could be a better name for this status. What do you think?\n\nIn any case this is unrelated to this change and should be addressed in a separate change.",
      "parentUuid": "b4a53097_fc2aa7af",
      "range": {
        "startLine": 42,
        "startChar": 4,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f72f5b1_1a011a3c",
        "filename": "java/com/google/gerrit/common/data/SubmitRecord.java",
        "patchSetId": 10
      },
      "lineNbr": 47,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-07T19:28:46Z",
      "side": 1,
      "message": "I like to think that a change is either ready or not, so I am perfectly fine with \"NOT_READY\" to be submitted.\nI just thought about something: Prolog only uses 3 statuses: OK, RULE_ERROR and NOT_READY.\n\n----\n      if (\"ok\".equals(submitRecord.name())) {\n        rec.status \u003d SubmitRecord.Status.OK;\n\n      } else if (\"not_ready\".equals(submitRecord.name())) {\n        rec.status \u003d SubmitRecord.Status.NOT_READY;\n\n      } else {\n        return invalidResult(submitRule, submitRecord);\n      }\n----\n\nPut an other way, if we remove CLOSED and FORCED and it breaks, it means someone somewhere uses them in a custom pre-submit rules evaluator.\nI would really like to think this is not the case.",
      "parentUuid": "66c7a925_b026aa56",
      "range": {
        "startLine": 42,
        "startChar": 4,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a6a79b5_2e0b1115",
        "filename": "java/com/google/gerrit/common/data/SubmitRecord.java",
        "patchSetId": 10
      },
      "lineNbr": 162,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T14:32:18Z",
      "side": 1,
      "message": "Should these methods be adapted to take the new requirements field into consideration?",
      "range": {
        "startLine": 148,
        "startChar": 2,
        "endLine": 162,
        "endChar": 3
      },
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb1c91c3_c2391085",
        "filename": "java/com/google/gerrit/common/data/SubmitRecord.java",
        "patchSetId": 10
      },
      "lineNbr": 162,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:38:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a6a79b5_2e0b1115",
      "range": {
        "startLine": 148,
        "startChar": 2,
        "endLine": 162,
        "endChar": 3
      },
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "587d9d1b_79aa18ca",
        "filename": "java/com/google/gerrit/common/data/SubmitRequirement.java",
        "patchSetId": 10
      },
      "lineNbr": 49,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T14:32:18Z",
      "side": 1,
      "message": "better use Optional\u003cString\u003e ?",
      "range": {
        "startLine": 49,
        "startChar": 9,
        "endLine": 49,
        "endChar": 25
      },
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0440a12_4c2cc6f1",
        "filename": "java/com/google/gerrit/common/data/SubmitRequirement.java",
        "patchSetId": 10
      },
      "lineNbr": 49,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:38:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "587d9d1b_79aa18ca",
      "range": {
        "startLine": 49,
        "startChar": 9,
        "endLine": 49,
        "endChar": 25
      },
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "572eca1b_291ae4f8",
        "filename": "java/com/google/gerrit/server/data/SubmitLabelAttribute.java",
        "patchSetId": 10
      },
      "lineNbr": 21,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T14:32:18Z",
      "side": 1,
      "message": "Are the *Attribute classes really used for indexing? I thought they were only used for the events.",
      "range": {
        "startLine": 20,
        "startChar": 96,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef6d7169_8155a3c6",
        "filename": "java/com/google/gerrit/server/data/SubmitLabelAttribute.java",
        "patchSetId": 10
      },
      "lineNbr": 21,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:38:37Z",
      "side": 1,
      "message": "Done, I think you\u0027re right.",
      "parentUuid": "572eca1b_291ae4f8",
      "range": {
        "startLine": 20,
        "startChar": 96,
        "endLine": 21,
        "endChar": 10
      },
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5900064_afef1bfc",
        "filename": "java/com/google/gerrit/server/data/SubmitRecordAttribute.java",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T14:32:18Z",
      "side": 1,
      "message": "Document this new field in json.txt",
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37c650aa_56165f6c",
        "filename": "java/com/google/gerrit/server/data/SubmitRecordAttribute.java",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:38:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f5900064_afef1bfc",
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1e28eed_50042136",
        "filename": "java/com/google/gerrit/server/data/SubmitRequirementAttribute.java",
        "patchSetId": 10
      },
      "lineNbr": 23,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T14:32:18Z",
      "side": 1,
      "message": "Document this attribute in json.txt",
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df592441_e34fc163",
        "filename": "java/com/google/gerrit/server/data/SubmitRequirementAttribute.java",
        "patchSetId": 10
      },
      "lineNbr": 23,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:38:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1e28eed_50042136",
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e20af359_972378d8",
        "filename": "java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 10
      },
      "lineNbr": 662,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T14:32:18Z",
      "side": 1,
      "message": "As soon as this gets used, we need to define a new change schema index version in ChangeSchemaDefinitions, so that all changes get reindexed. Otherwise the existing documents in the index will miss this data.",
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f78af48c_f58a50af",
        "filename": "java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 10
      },
      "lineNbr": 662,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2018-03-05T14:39:24Z",
      "side": 1,
      "message": "I don\u0027t think we have to do this as submit records are stored as JSON and we don\u0027t populate StoreRequirement for now?\n\nI general, I think we will need to think about what to do when the project owner adds/removes a plugin that contributes stored requirements. Basically, we would need to reindex all changes from this project then (or set up staleness detection so that this gets picked up).",
      "parentUuid": "e20af359_972378d8",
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8e67dd2_26123417",
        "filename": "java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 10
      },
      "lineNbr": 662,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T14:45:32Z",
      "side": 1,
      "message": "Instead of changing how existing fields in the index are computed (STORED_SUBMIT_RECORD_STRICT, STORED_SUBMIT_RECORD_LENIENT) it\u0027s maybe better to add new fields that replace the old fields.",
      "parentUuid": "f78af48c_f58a50af",
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c829f89_68a5e04f",
        "filename": "java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 10
      },
      "lineNbr": 662,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:38:37Z",
      "side": 1,
      "message": "(I don\u0027t totally understand this discussion \u0026 the index for now, so I won\u0027t answer. I\u0027ll do changes once we settle on something, if this is acceptable)",
      "parentUuid": "e8e67dd2_26123417",
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e329512_d4de4fc6",
        "filename": "java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 10
      },
      "lineNbr": 662,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-07T10:57:37Z",
      "side": 1,
      "message": "If I understand it correctly now, the Prolog plugin will not make use of SubmitRequirement, right?\n\nIn this case I think we are fine for now because moving the handling of the existing submit rules won\u0027t change the StoredSubmitRecord data. Hence no new index schema will be needed.",
      "parentUuid": "1c829f89_68a5e04f",
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82727d5b_285eda94",
        "filename": "java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 10
      },
      "lineNbr": 662,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-07T19:28:46Z",
      "side": 1,
      "message": "Ack\nThe Prolog plugin won\u0027t use the SubmitRequirement(s)",
      "parentUuid": "4e329512_d4de4fc6",
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10d65b3e_29e286e5",
        "filename": "java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 10
      },
      "lineNbr": 770,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-05T14:45:32Z",
      "side": 1,
      "message": "Does this method need to know about rec.requirements?",
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "138054a9_afdc82cc",
        "filename": "java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 10
      },
      "lineNbr": 770,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-05T15:38:37Z",
      "side": 1,
      "message": "(You said earlier):\n\u003e One advantage of (mis)using labels for failure reasons is that you can query by them, e.g. you can find all changes that need a Code-Review approval from a non-author by \"label:Non-Author-Code-Review\u003dneed\" [1]. I think we shouldn\u0027t lose that queriy possibilities. This means if failure reasons are now stored differently in the change index, we probably need new query operators for this.\n\u003e [1] https://gerrit-review.googlesource.com/Documentation/user-search.html#labels\n\nIf I understand correctly, adding the requirements here would allow them to be indexed and search-able, answering your comment on the commit message. I need to\n do tests, but does this seem like an acceptable compromise between labels and requirements?",
      "parentUuid": "10d65b3e_29e286e5",
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc338025_c3ffd03c",
        "filename": "java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 10
      },
      "lineNbr": 770,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-07T10:57:37Z",
      "side": 1,
      "message": "Yes, it can be this index field or a new index field. I do think that being able to search for changes where condition X prevents submit is something that we want to keep. If we now have SubmitRequirement for this we should think about how to store this in the index and how it can be queried. It\u0027s not needed that this change implements this, but it would be nice to follow-up on this later.",
      "parentUuid": "138054a9_afdc82cc",
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ce76f10_5608c922",
        "filename": "java/com/google/gerrit/server/index/change/ChangeField.java",
        "patchSetId": 10
      },
      "lineNbr": 770,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-03-07T19:28:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dc338025_c3ffd03c",
      "revId": "c59b1350041d1f535f29d362d3595a06513a97de",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}