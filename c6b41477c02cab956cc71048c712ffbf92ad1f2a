{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c5cb5b29_416d2769",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2022-12-13T13:23:52Z",
      "side": 1,
      "message": "I am not familiar with Oauth in Gerrit and thus can also not say much. @david.ostrovsky@gmail.com might know more about it.\n\nHowever, I am not sure whether doing what you suggest would be safe. There are no guarantees that the usernames in LDAP and OAuth map to the same person. If that is not the case, somebody could get access to somebody else\u0027s account. At the very least, we should compare the emails, which are more unique identifiers and also used as the \"primary keys\" for accounts in Gerrit. Since emails are also used by git to identify authors and committers, this would be the most important identifier. I.e. do not only check whether the username already exists, but also whether the primary email matches as well. This still requires us to assume that the OAuth provider verifies the emails of users, but that should be acceptable I guess.",
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d16b9b6a_5a749f17",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1153585
      },
      "writtenOn": "2022-12-13T14:30:35Z",
      "side": 1,
      "message": "SO the main issue here is that when a user is signed up with LDAP the have the email on thei LDAP account. When we go to sign in through OAuth it will then error as the e-mail will be used. Now we can always delete this e-mail no problem, but then we will get another error as it will try to receate the `username:\u003cuser\u003e` external ID.\n\nWhat this code does is it still requirese the user to manually delete the LDAP email associated, but it will then allow the user to login by resuing their username:\u003cuser\u003e external ID. If we did not do it this way then when we are transitioned for LDAP to OAUTH all user history is deleted which does not seem desirable.\n\nSo going back to what you said, you are suggesting is that when signing in, we check if the e-mail is already associatd with another externa-ID and if so we reuse that account ID and delete that e-mail for that other external ID?",
      "parentUuid": "c5cb5b29_416d2769",
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fb94bdb_ee61d523",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1154890
      },
      "writtenOn": "2022-12-14T01:50:40Z",
      "side": 1,
      "message": "I suspect I might be the wrong David. I\u0027m not familiar with this code, sorry.",
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d19c609_70debbab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1153585
      },
      "writtenOn": "2022-12-15T16:36:43Z",
      "side": 1,
      "message": "Thomas I have changed this to the following, if it is an OAuth login the check if there is an external ID with that e-mail present. If so remove the e-mail from that other external ID and add it to the new one. If it does not then it will create a new external ID with that e-mail. Does that satisfy your security concerns. There is no need to check username at this point as the e-mail is the account we want to link to.",
      "parentUuid": "d16b9b6a_5a749f17",
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f4ccb7e_4964c376",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2022-12-16T12:17:02Z",
      "side": 1,
      "message": "Ok. I understand your issue a little bit better now. And I certainly agree that we should enable this scenario.\n\nSince I am not familiar with the OAuth implementation, I have a small knowledge gap here. Maybe you can help me with that. According to your description, username and email are the same for each user in both identity providers. Thus, both systems should be able to directly map the users to Gerrit. Some time ago we migrated from LDAP to SAL and this just worked (except that we had to make usernames case insensitive). Users were just able to keep their accounts. Thus, I ask myself why this is not working for you? Could you provide me with examples of sets of external IDs, one of a LDAP account and one of an OAuth account?\nI would expect that the `username:` and `mailto:` external IDs are the same and that their are additional ones related to the IDP, e.g. `gerrit:` for LDAP. Am I correct?",
      "parentUuid": "3d19c609_70debbab",
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "954f964f_2a362b90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1153585
      },
      "writtenOn": "2022-12-16T16:05:32Z",
      "side": 1,
      "message": "Here is an example output from my live database which uses LDAP.\n```\n[externalId \"username:ronan\"]\n\taccountId \u003d 910\n\t\n[externalId \"gerrit:ronan\"]\n\taccountId \u003d 910\n\temail \u003d ronan@arista.com\n```\n\nCurrently to have OAUTH login we need to remove `email` from gerrit: and completely remove username:ronan\n\nwhen we try to login through OAuth we will get an external ID as follows\n```\n[externalId \"google-oauth:0000000\"]\n    accountId \u003d \u003cID\u003e\n    email \u003d ronan@arista.com\n```\n\nAs per your security concern, in this case we would try to find if an existing external ID matches the e-mail. If it does we will use that accountID and delete the e-mail from the referenced external ID, this will leave us with final external ID\u0027s as follows\n\n```\n[externalId \"username:ronan\"]\n\taccountId \u003d 910\n\t\n[externalId \"gerrit:ronan\"]\n\taccountId \u003d 910\n\n[externalId \"google-oauth:0000000\"]\n    accountId \u003d 910\n    email \u003d ronan@arista.com\n\n```\n\nWith this approach the user has a seamless transition from LDAP to OAUTH without losing any history as the accountID will be the same.",
      "parentUuid": "0f4ccb7e_4964c376",
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a49a965_ce80578d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2022-12-19T08:54:39Z",
      "side": 1,
      "message": "Ok, got it.\nYes, checking whether some other externalId of the account with the same username has the same email-address that has been used in the AuthRequest would be a good way to do it, I think. Note, however, that there might be issues for users that don\u0027t use Gerrit frequently and that change their email address between the migration from LDAP to OAuth and their first login.\n\nBtw, you should not need to remove the email from the `gerrit:` ExternalId or you might even completely remove this ExternalID, since AFAIK it is only used for LDAP.",
      "parentUuid": "954f964f_2a362b90",
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48c11852_6393ffc4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1153585
      },
      "writtenOn": "2022-12-19T21:33:55Z",
      "side": 1,
      "message": "code has been updated to reflect this with additional test case added. \n\n\u003e Note, however, that there might be issues for users that don\u0027t use Gerrit frequently and that change their email address between the migration from LDAP to OAuth and their first login.\n\nThere is nothing we can do to protect against this. The gerrit administrator can tweak the noteDB themselves to make it work, or accept getting a new account ID.",
      "parentUuid": "8a49a965_ce80578d",
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c8d49c3_8cda88b9",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 291,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2022-12-13T13:23:52Z",
      "side": 1,
      "message": "Can we get rid of the lambda expression by unpacking the Optional before getting the externalId to correctly handle the IOException?",
      "range": {
        "startLine": 283,
        "startChar": 4,
        "endLine": 291,
        "endChar": 15
      },
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81be5ee9_d75addad",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 291,
      "author": {
        "id": 1153585
      },
      "writtenOn": "2022-12-19T21:33:55Z",
      "side": 1,
      "message": "i\u0027m not sure I follow here, the IOException is thrown by externalIDs.get.",
      "parentUuid": "8c8d49c3_8cda88b9",
      "range": {
        "startLine": 283,
        "startChar": 4,
        "endLine": 291,
        "endChar": 15
      },
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8502e19_63457702",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 291,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-12-20T08:53:53Z",
      "side": 1,
      "message": "I\u0027m guessing something like:\n\n```\nOptional\u003cExternalId\u003e usernameExtId \u003d Optional.empty();\nif (name.isPresent) {\n  try {\n    userNameExtId \u003d externalIds.get(externalIdKeyFactory.create(SCHEME_USERNAME, n));\n  catch (IOException e) {\n     // proper logging of failure.\n  }\n}\n```",
      "parentUuid": "81be5ee9_d75addad",
      "range": {
        "startLine": 283,
        "startChar": 4,
        "endLine": 291,
        "endChar": 15
      },
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "165bc449_1ed1b523",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 294,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-12-13T11:56:29Z",
      "side": 1,
      "message": "I don\u0027t think this should be a warning, it\u0027s the norm that a new Account.Id is created.\nThis log event would be issued regardless of whether a new Account.Id is created or not.\nI would log that a username-external-id was found above.\n\n```\n    if (externalId.exists()) {\n      logger.atInfo().log(\"Found an existing username external id for %s, name.get());\n    } \n```\nDon\u0027t know if ifPresent(...) works here:\n```\nexternalId.ifPresent(e -\u003e logger.atInfo().log(\"Found an existing username external id for %s, e));\n```",
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5b4ed95_40b90ddd",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 294,
      "author": {
        "id": 1153585
      },
      "writtenOn": "2022-12-19T21:33:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "165bc449_1ed1b523",
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80b2ae40_c4ef72f7",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 297,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-12-13T11:56:29Z",
      "side": 1,
      "message": "If we found am existing username-external-id then userNameExtId is null?\nShouldn\u0027t it be something like:\n\n```\nexternalId.orElse(name.isPresent() ? createUsername(accountId, name.get()) : null);\n```",
      "range": {
        "startLine": 297,
        "startChar": 8,
        "endLine": 297,
        "endChar": 95
      },
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca3eb59f_7eb49902",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 297,
      "author": {
        "id": 1153585
      },
      "writtenOn": "2022-12-19T21:33:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80b2ae40_c4ef72f7",
      "range": {
        "startLine": 297,
        "startChar": 8,
        "endLine": 297,
        "endChar": 95
      },
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db943700_26049337",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 300,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2022-12-13T11:56:29Z",
      "side": 1,
      "message": "Not a warning, at the most info, probably fine.",
      "range": {
        "startLine": 300,
        "startChar": 4,
        "endLine": 300,
        "endChar": 65
      },
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f429bb8_f7684d08",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 300,
      "author": {
        "id": 1153585
      },
      "writtenOn": "2022-12-19T21:33:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db943700_26049337",
      "range": {
        "startLine": 300,
        "startChar": 4,
        "endLine": 300,
        "endChar": 65
      },
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6537868b_4196d046",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 301,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2022-12-13T13:23:52Z",
      "side": 1,
      "message": "What happens here, if the user requests an account that already existed in LDAP with OAuth and the email is the same in both cases, wouldn\u0027t it fail at this point then?",
      "range": {
        "startLine": 301,
        "startChar": 4,
        "endLine": 301,
        "endChar": 45
      },
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4264f2d_36680085",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 301,
      "author": {
        "id": 1153585
      },
      "writtenOn": "2022-12-13T14:30:35Z",
      "side": 1,
      "message": "yes, e-mail is a primary key so this cannot be done. The NoteDB info will have to be changed to make this work",
      "parentUuid": "6537868b_4196d046",
      "range": {
        "startLine": 301,
        "startChar": 4,
        "endLine": 301,
        "endChar": 45
      },
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25c24c65_eadd846d",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 301,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2022-12-19T08:54:39Z",
      "side": 1,
      "message": "Just checked, if the accountId is the same for all externalIds containing this email address, this will succeed. So this should work.",
      "parentUuid": "a4264f2d_36680085",
      "range": {
        "startLine": 301,
        "startChar": 4,
        "endLine": 301,
        "endChar": 45
      },
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb7d71c5_66318055",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 307,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2022-12-13T13:23:52Z",
      "side": 1,
      "message": "`externalId.isPresent()` is more straightforward and since we don\u0027t support Java 8 on master we can use it.",
      "range": {
        "startLine": 307,
        "startChar": 10,
        "endLine": 307,
        "endChar": 31
      },
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd482407_331a95ff",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 307,
      "author": {
        "id": 1153585
      },
      "writtenOn": "2022-12-19T21:33:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb7d71c5_66318055",
      "range": {
        "startLine": 307,
        "startChar": 10,
        "endLine": 307,
        "endChar": 31
      },
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49c69242_f22bdf1b",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 373,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2022-12-13T13:23:52Z",
      "side": 1,
      "message": "What if the Optional is empty?",
      "range": {
        "startLine": 373,
        "startChar": 43,
        "endLine": 373,
        "endChar": 49
      },
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31b8680e_0cc63927",
        "filename": "java/com/google/gerrit/server/account/AccountManager.java",
        "patchSetId": 8
      },
      "lineNbr": 373,
      "author": {
        "id": 1153585
      },
      "writtenOn": "2022-12-19T21:33:55Z",
      "side": 1,
      "message": "I have removed the optional to show this cannot happen",
      "parentUuid": "49c69242_f22bdf1b",
      "range": {
        "startLine": 373,
        "startChar": 43,
        "endLine": 373,
        "endChar": 49
      },
      "revId": "c6b41477c02cab956cc71048c712ffbf92ad1f2a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}