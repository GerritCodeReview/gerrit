{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "02e2b858_79e228ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2021-11-17T17:59:01Z",
      "side": 1,
      "message": "Dmitrii: Can I get a +2 if you agree with this change?",
      "revId": "c6e880b66ecf7a200ae16b0b0d9f5724054498c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14123632_5e08be5b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2021-11-18T07:42:35Z",
      "side": 1,
      "message": "After some inspection, it seems that \n1) The embeddable part of gr-diff does not actually depend on AppContext.\n2) The changes in polygerrit-ui/app/embed/gr-diff-app-context-init.ts which set the context do not change the API, so this should still work for downstream tools.",
      "revId": "c6e880b66ecf7a200ae16b0b0d9f5724054498c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cac0788_c92466a4",
        "filename": "polygerrit-ui/app/services/app-context-init.ts",
        "patchSetId": 9
      },
      "lineNbr": 55,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2021-11-17T16:00:02Z",
      "side": 1,
      "message": "Typically this ! is not required, but I guess here it is, because `eventEmitter` is a getter. If you want, then you could rewrite as\n\n      const eventEmitter \u003d ctx.eventEmitter;\n      assertIsDefined(eventEmitter, \u0027eventEmitter\u0027);\n      return new Auth(eventEmitter);\n      \nThen it should work without the !.",
      "range": {
        "startLine": 55,
        "startChar": 38,
        "endLine": 55,
        "endChar": 39
      },
      "revId": "c6e880b66ecf7a200ae16b0b0d9f5724054498c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05fdb399_38fd4e91",
        "filename": "polygerrit-ui/app/services/app-context-init.ts",
        "patchSetId": 9
      },
      "lineNbr": 55,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2021-11-17T16:43:30Z",
      "side": 1,
      "message": "Will do this as a follow-up",
      "parentUuid": "2cac0788_c92466a4",
      "range": {
        "startLine": 55,
        "startChar": 38,
        "endLine": 55,
        "endChar": 39
      },
      "revId": "c6e880b66ecf7a200ae16b0b0d9f5724054498c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac0bd1f3_9260bc1d",
        "filename": "polygerrit-ui/app/services/app-context-init.ts",
        "patchSetId": 9
      },
      "lineNbr": 55,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2021-11-18T06:44:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "05fdb399_38fd4e91",
      "range": {
        "startLine": 55,
        "startChar": 38,
        "endLine": 55,
        "endChar": 39
      },
      "revId": "c6e880b66ecf7a200ae16b0b0d9f5724054498c5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "expression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "status": "PASS",
        "errorMessage": {},
        "passingAtoms": [
          "label:Code-Review\u003dMAX,user\u003dnon_uploader"
        ],
        "failingAtoms": [
          "label:Code-Review\u003dMIN"
        ]
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c6e880b66ecf7a200ae16b0b0d9f5724054498c5",
      "legacy": {
        "value": false
      }
    },
    {
      "submitRequirement": {
        "name": "Code-Style",
        "description": {
          "value": "Code has correct style and format"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Style\u003dMAX AND -label:Code-Style\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {
          "expression": {
            "expressionString": "-branch:refs/meta/config"
          },
          "status": "PASS",
          "errorMessage": {},
          "passingAtoms": [],
          "failingAtoms": [
            "branch:refs/meta/config"
          ]
        }
      },
      "submittabilityExpressionResult": {
        "expression": {
          "expressionString": "label:Code-Style\u003dMAX AND -label:Code-Style\u003dMIN"
        },
        "status": "PASS",
        "errorMessage": {},
        "passingAtoms": [
          "label:Code-Style\u003dMAX"
        ],
        "failingAtoms": [
          "label:Code-Style\u003dMIN"
        ]
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c6e880b66ecf7a200ae16b0b0d9f5724054498c5",
      "legacy": {
        "value": false
      }
    },
    {
      "submitRequirement": {
        "name": "Library-Compliance",
        "description": {
          "value": "Changes to specific library/metadata files require additional approval"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^lib/\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Library-Compliance\u003dMAX,user\u003dnon_uploader AND -label:Library-Compliance\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {
          "expression": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^lib/\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"
          },
          "status": "FAIL",
          "errorMessage": {},
          "passingAtoms": [],
          "failingAtoms": [
            "branch:refs/meta/config",
            "file:\"^lib/\"",
            "file:\"^WORKSPACE$\"",
            "file:\"^.gitmodule$\"",
            "file:\"^tools/deps.bzl$\""
          ]
        }
      },
      "submittabilityExpressionResult": {
        "expression": {
          "expressionString": "label:Library-Compliance\u003dMAX,user\u003dnon_uploader AND -label:Library-Compliance\u003dMIN"
        },
        "status": "FAIL",
        "errorMessage": {},
        "passingAtoms": [],
        "failingAtoms": [
          "label:Library-Compliance\u003dMAX,user\u003dnon_uploader",
          "label:Library-Compliance\u003dMIN"
        ]
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c6e880b66ecf7a200ae16b0b0d9f5724054498c5",
      "legacy": {
        "value": false
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {
          "expression": {
            "expressionString": "-branch:refs/meta/config"
          },
          "status": "PASS",
          "errorMessage": {},
          "passingAtoms": [],
          "failingAtoms": [
            "branch:refs/meta/config"
          ]
        }
      },
      "submittabilityExpressionResult": {
        "expression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "status": "PASS",
        "errorMessage": {},
        "passingAtoms": [
          "label:Verified\u003dMAX"
        ],
        "failingAtoms": [
          "label:Verified\u003dMIN"
        ]
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c6e880b66ecf7a200ae16b0b0d9f5724054498c5",
      "legacy": {
        "value": false
      }
    }
  ]
}