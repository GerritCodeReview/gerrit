{
  "comments": [
    {
      "key": {
        "uuid": "25ae4c1a_8220b5dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2018-02-28T01:34:37Z",
      "side": 1,
      "message": "This is not true, PatchListLoader also call patchListCache on stable-2.14.\n\nI am starting to wonder if the same issue could happen on stable-2.14 and I was just lucky so far. We definitely do not have a test going into an infinite loop on stable-2.14 but that does not mean the problem could not happen.\n\nAccording to Caffeine documentation, the loader must NOT attempt to update any mappings of its cache directly. In PatchListLoader, we call patchListCache.get which will cause an update to the cache if value is not present in the cache.",
      "range": {
        "startLine": 12,
        "startChar": 35,
        "endLine": 12,
        "endChar": 75
      },
      "revId": "c6facdb695cd03b79f8ba721d26c7bd4541143db",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0089e39f_85d205ed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2018-02-28T01:50:34Z",
      "side": 1,
      "message": "Removing this circular dependency is not easy. When we are loading a patchset, to exclude the files that changed because of rebase, we need to retrieve other patchset from the cache.\n\nI see no simple way to remove that circular dependency. I hate to say that but maybe Caffeine is not such a good idea after all...\n\nShould I do the revert on stable-2.14 instead. The last thing I want is to introduce a regression trying to fix a bug it seems I am the only to face.",
      "parentUuid": "25ae4c1a_8220b5dd",
      "range": {
        "startLine": 12,
        "startChar": 35,
        "endLine": 12,
        "endChar": 75
      },
      "revId": "c6facdb695cd03b79f8ba721d26c7bd4541143db",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffbc319e_9f232a87",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2018-02-28T07:34:19Z",
      "side": 1,
      "message": "We had similar problem after rebasing over caffeinated caches but in our case circular dependency was removed by using Suppliers.memoize ;)\nAs you have written, there is no that easy way to solve it, but what I can see is that we could have 2 caches:\n1. RawPatchListCache that is responsible for loading raw data related to patch (mostly patchListEntries ;))\n2. PatchListLoader refers to RawPatchListCache in order to get old/new keys data and processes it further to get relevantDiffEntries\nis this sth that you have already tried and it looked like maintenance disaster? ;)\n\nAnyone else willing to share opinion on how to remove circular dependency?",
      "parentUuid": "0089e39f_85d205ed",
      "range": {
        "startLine": 12,
        "startChar": 35,
        "endLine": 12,
        "endChar": 75
      },
      "revId": "c6facdb695cd03b79f8ba721d26c7bd4541143db",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fec542d4_fe6d9230",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-02-28T14:29:29Z",
      "side": 1,
      "message": "Sorry, I had momentarily forgotten about this circular dependency. It\u0027s something we need for the \"edits due to rebase\" feature (part of releases \u003e\u003d 2.15). Prior to 2.15, we needed it to filter out modified files of other changes which otherwise showed up after a rebase. I have never been happy with this recursive use of the PatchList cache. For this reason, I envisioned a whole new structure for the diff caches which doesn\u0027t contain any circular dependencies and has other advantages. It\u0027s implementation is something which is on my personal backlog and which I unfortunately needed to push back due to other more important matters like the migration of groups to NoteDb.\n\nPlease don\u0027t start to rearrange the diff caches. I\u0027ll try to find some time for it in the future but I can\u0027t make any promises regarding the \u0027when\u0027.",
      "parentUuid": "ffbc319e_9f232a87",
      "range": {
        "startLine": 12,
        "startChar": 35,
        "endLine": 12,
        "endChar": 75
      },
      "revId": "c6facdb695cd03b79f8ba721d26c7bd4541143db",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10498ccf_ebae02fe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2018-02-28T15:13:52Z",
      "side": 1,
      "message": "Thanks for letting us know about you plans. I will let you rearrange the caches and focus on finding the root cause of the lock, most likely a OS/kernel issue.",
      "parentUuid": "fec542d4_fe6d9230",
      "range": {
        "startLine": 12,
        "startChar": 35,
        "endLine": 12,
        "endChar": 75
      },
      "revId": "c6facdb695cd03b79f8ba721d26c7bd4541143db",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}