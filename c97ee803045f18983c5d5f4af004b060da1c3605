{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "31e4bbf5_9d6baa96",
        "filename": "resources/com/google/gerrit/sshd/NoShell_test.sh",
        "patchSetId": 15
      },
      "lineNbr": 33,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2021-03-31T19:09:48Z",
      "side": 1,
      "message": "1. If I run this script locally without gerrit running, I end up getting this trace -about a successful test. This negative yet likely case should be handled differently by the script logic or flow.\n\n2. If I then run it again using a running gerrit pid, I get this same successful feedback, even if I get ssh host key verification failures locally. To handle differently as well.\n\n3. Once I run [1] then this script again, I then get many [2]\u0027s, ending with this successful message. This script should mute those [2]\u0027s by default, and support a posix-standard verbose option to show them all if wanted.\n\n4. I\u0027m also getting [3] (down below) -which sounds confusing. If I force the negative case in the \u0027else\u0027 at lines 35-36, I get 0 as FD counts, which likely relates to [3]. I\u0027m running this test on macOS, which likely differs in FD root path or so. This script should maybe detect the proper, local path, without hardcoding or assuming it too much.\n\n[1] ssh-keyscan -t rsa -p 29418 localhost \u003e ~/.ssh/known_hosts\n-which this script could briefly document about.\n\n[2] Connection to localhost closed.\n\n  ****    Welcome to Gerrit Code Review    ****\n\n  Hi Administrator, you have successfully connected over SSH.\n\n  Unfortunately, interactive shells are disabled.\n  To clone a hosted Git repository, use:\n\n  git clone ssh://admin@localhost:29418/REPOSITORY_NAME.git\n\n[3] find: /proc/87420/fd: No such file or directory",
      "revId": "c97ee803045f18983c5d5f4af004b060da1c3605",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b323df5_704cf199",
        "filename": "resources/com/google/gerrit/sshd/NoShell_test.sh",
        "patchSetId": 15
      },
      "lineNbr": 33,
      "author": {
        "id": 1122032
      },
      "writtenOn": "2021-04-01T18:03:26Z",
      "side": 1,
      "message": "For 1), the solution proposed in the next patch set is to check that the PID provided relates to a Gerrit instance. This can be done by checking the command related to the provided PID.\nFor 2), the solution can be to run a command outside the for loop and to check that the message received contains the welcome message. This way ensures that the connection is well established.\nFor 3), I modified the command a little to include flags instead of relating on the order of inputs. This way there is more flexibility to the order of the parameters/flags. The only downside is that the command looks bigger. The example provided in the generalMessage is updated to reflect this change.\n\nFor 4), according to [4] the command lsof works for macOS, when tested in linux its works as well.\n[4] https://stackoverflow.com/questions/20974438/get-list-of-open-files-descriptors-in-os-x",
      "parentUuid": "31e4bbf5_9d6baa96",
      "revId": "c97ee803045f18983c5d5f4af004b060da1c3605",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8cbce56_91f46535",
        "filename": "resources/com/google/gerrit/sshd/NoShell_test.sh",
        "patchSetId": 15
      },
      "lineNbr": 33,
      "author": {
        "id": 1122032
      },
      "writtenOn": "2021-04-01T18:04:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b323df5_704cf199",
      "revId": "c97ee803045f18983c5d5f4af004b060da1c3605",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}