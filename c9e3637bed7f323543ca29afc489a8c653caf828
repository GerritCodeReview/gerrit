{
  "comments": [
    {
      "key": {
        "uuid": "AAABEn//+m4\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/ChangeLabel.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-08-04T04:09:56Z",
      "side": 1,
      "message": "2008?",
      "revId": "c9e3637bed7f323543ca29afc489a8c653caf828",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8Q0\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/ChangeLabel.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-08-04T04:09:56Z",
      "side": 1,
      "message": "I would look at the implementation of equals in StringKey.  It deals with some cases which are not dealt with here, such as nulls.\nBut, I am not sure you want to allow capitals at all?  Does gwtorm use equals() to determine uniqueness in keys?",
      "revId": "c9e3637bed7f323543ca29afc489a8c653caf828",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEn//+fs\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/ChangeLabel.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-08-04T12:54:11Z",
      "side": 1,
      "message": "The reason I implemented equals is to be sure the comparison would not be case sensitive. I mean a label called \"ThisLabel\" should be equals to one called \"thislabel\". Considering this, would you agree having equals implemented?",
      "parentUuid": "AAABEX//8Q0\u003d",
      "revId": "c9e3637bed7f323543ca29afc489a8c653caf828",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEn//9AU\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/ChangeLabel.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-08-09T22:20:16Z",
      "side": 1,
      "message": "But, does gwtorm use equals when comparing keys to see if there are unique key violations (I don\u0027t know)?  If not, this will not prevent conflicting case entries.\n\nI am also concerned with this from a user perspective.  If I first enter thisLabel and decide I want it to now be ThisLabel, is that possible?  What if someone else on another change likes thisLabel, if I can change it, will it change for them?\n\nYou only need to look at windows filenames to see why making things case insensitive but case aware is usually problematic.  I am questioning the sanity of this approach and whether it would just be better to force labels to be all lowercase?",
      "parentUuid": "AAABEn//+fs\u003d",
      "revId": "c9e3637bed7f323543ca29afc489a8c653caf828",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEn//8xE\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/ChangeLabel.java",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-08-10T12:24:15Z",
      "side": 1,
      "message": "About gwtorm, I am not sure, could not find any document saying it, but it seems key comparison is based on equals (Key interface defines equals).\n\nThe way we implemented this feature, if one associates a label to a change, it will insert a new row in ChangeTable, associating the label and the change id. It is \"compound key\". Let\u0027s assume we have changes \u0027a\u0027, \u0027b\u0027, and \u0027c\u0027. To \u0027a\u0027 one adds label \u0027ThisLabel\u0027. To \u0027b\u0027 one also adds \u0027ThisLabel\u0027. To \u0027c\u0027 one adds \u0027thislabel\u0027. There will be 3 rows inserted in table. If one searches using query label:\"thislabel\", it will return changes \u0027a\u0027, \u0027b\u0027, and \u0027c\u0027, since equals is overridden to be case insensitve (and hashCode in the code we internally fixed). \n\nIf you enter \"thisLabel\" to a change and decide to change it to \"ThisLabel\": it would be required to remove \u0027thisLabel\u0027 and then add \u0027ThisLabel\u0027.\n\nWe have overridden equals to centralize label name comparison to help when querying for labels, avoid one to add same label to a change if not considering case sensitive.\n\nConsidering all these points, what do you mean is to consider two options: labels to be case sensitive (a query to \u0027thislabel\u0027 would not retrieve changes having \u0027ThisLabel\u0027) or labels to not accept capital letters? Is that what you meant?",
      "parentUuid": "AAABEn//9AU\u003d",
      "revId": "c9e3637bed7f323543ca29afc489a8c653caf828",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8Qw\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/ChangeLabel.java",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-08-04T04:09:56Z",
      "side": 1,
      "message": "I think this is supposed to include the changeid?",
      "revId": "c9e3637bed7f323543ca29afc489a8c653caf828",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEn//+fk\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/ChangeLabel.java",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1003770
      },
      "writtenOn": "2011-08-04T12:54:11Z",
      "side": 1,
      "message": "Martin, I believe the members should return in its array all the fields except the parent key (changeId one). There is an example of it in PatchSetApproval.",
      "parentUuid": "AAABEX//8Qw\u003d",
      "revId": "c9e3637bed7f323543ca29afc489a8c653caf828",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEn//9AI\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/ChangeLabel.java",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-08-09T22:20:16Z",
      "side": 1,
      "message": "Yup, my bad, looks good.",
      "parentUuid": "AAABEn//+fk\u003d",
      "revId": "c9e3637bed7f323543ca29afc489a8c653caf828",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8Qo\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/ChangeLabel.java",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-08-04T04:09:56Z",
      "side": 1,
      "message": "No null checks.",
      "revId": "c9e3637bed7f323543ca29afc489a8c653caf828",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEX//8Qs\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/ChangeLabel.java",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-08-04T04:09:56Z",
      "side": 1,
      "message": "Nit: a few unneeded \"this\"es above.",
      "revId": "c9e3637bed7f323543ca29afc489a8c653caf828",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAABEn//+mw\u003d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/ChangeLabelAccess.java",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2011-08-04T04:09:56Z",
      "side": 1,
      "message": "2008?",
      "revId": "c9e3637bed7f323543ca29afc489a8c653caf828",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}