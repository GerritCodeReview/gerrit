{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a536052d_c627ea56",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-06-13T10:12:20Z",
      "side": 1,
      "message": "Thanks a lot for trying to solve this here!",
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc3b1b66_fd56ccf6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1161385
      },
      "writtenOn": "2023-06-13T19:08:33Z",
      "side": 1,
      "message": "Comment removed by: Edwin Kempin; Reason: spam",
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7110fab1_804ec405",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-06-13T17:47:46Z",
      "side": 1,
      "message": "Instead of keeping this in the same cache, maybe it makes sense to have a parallel Set for misses? Negative caches are tricky because you may want to cache misses less aggressively so that if a project is later created, you\u0027re not stuck with an incorrect cached value.",
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0784abd8_742102e8",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2023-06-14T10:10:10Z",
      "side": 1,
      "message": "I agree that it\u0027s tricky, but we have eviction in place when a project is created and it\u0027s evicted time-bound, too. So seems manageable to me.",
      "parentUuid": "7110fab1_804ec405",
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2663555c_fd220e2f",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-06-13T10:12:20Z",
      "side": 1,
      "message": "Can this be dropped now?",
      "range": {
        "startLine": 224,
        "startChar": 6,
        "endLine": 227,
        "endChar": 7
      },
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4db1507f_94643cf3",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2023-06-14T10:07:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2663555c_fd220e2f",
      "range": {
        "startLine": 224,
        "startChar": 6,
        "endLine": 227,
        "endChar": 7
      },
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad3eeff1_e3988ee1",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 430,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-06-13T10:12:20Z",
      "side": 1,
      "message": "Looking at our internal stacktrace what\u0027s triggering the loading of repo meta is opening the repository. IIUC we invoke reload() each time the missing repository is looked up from the project cache, so we would still load repo meta each time here. So not sure this is solving our problem.",
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01854e56_1af8d81f",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 430,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-06-13T17:47:46Z",
      "side": 1,
      "message": "Depending on what exactly was expensive for you, you could call `repoManager.getRepositoryStatus(key)` before you try to open the repo (both in `load()` and `reload()`). But as I note in my comment above, I think that would be a better check to have in the loader for a \"non_existent_projects\" cache. You could probably still put entries into that cache whenever you get a RepositoryNotFoundException loading an entry for the inMemoryProjectsCache.",
      "parentUuid": "ad3eeff1_e3988ee1",
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a949506c_5c6e0e8a",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 430,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2023-06-14T10:07:34Z",
      "side": 1,
      "message": "I think we should only refresh depending on the configured time interval?\n\nWe configure a refreshAfterWrite of 15 minutes, so I\u0027d expect the value to be refreshed only once per 15 minutes according to:\n\nhttps://github.com/google/guava/wiki/CachesExplained#refresh\n\nAm I holding this wrong?",
      "parentUuid": "ad3eeff1_e3988ee1",
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b07cb1c5_d007e4a5",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 430,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2023-06-14T10:10:10Z",
      "side": 1,
      "message": "Thanks Nasser, that would be similarly expensive, though as it requires reading metadata from the DB.",
      "parentUuid": "a949506c_5c6e0e8a",
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe5fbc86_dbef7680",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 430,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-06-14T10:21:38Z",
      "side": 1,
      "message": "\u003e We configure a refreshAfterWrite of 15 minutes,\n\u003e so I\u0027d expect the value to be refreshed only once per 15 minutes according to:\n\nAh, nice. That\u0027s what I missing!",
      "parentUuid": "b07cb1c5_d007e4a5",
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82740cee_a6635f35",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 433,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-06-13T10:12:20Z",
      "side": 1,
      "message": "If the repository was missing before, oldState may be empty and hence calling get() may fail here.",
      "range": {
        "startLine": 433,
        "startChar": 48,
        "endLine": 433,
        "endChar": 56
      },
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa04a2ae_9ba4f468",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 433,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2023-06-14T10:07:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82740cee_a6635f35",
      "range": {
        "startLine": 433,
        "startChar": 48,
        "endLine": 433,
        "endChar": 56
      },
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f73c3605_47720f3c",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 437,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-06-13T10:12:20Z",
      "side": 1,
      "message": "Should there be a case to prevent calling load if a project is still missing:\n\n```\nif (configRef \u003d\u003d null \u0026\u0026 oldState.isEmpty) {\n  refreshCounter.increment(CACHE_NAME, false);\n  return Futures.immediateFuture(oldState);\n}\n```\n\nOtherwise we would still load RepoMeta on each attempt to load a missing project.",
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22d05adc_8e76b9c9",
        "filename": "java/com/google/gerrit/server/project/ProjectCacheImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 437,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2023-06-14T10:07:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f73c3605_47720f3c",
      "revId": "ca764bb0eb4816dbcf93f0fec6eac1e2ed519990",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}