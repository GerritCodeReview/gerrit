{
  "comments": [
    {
      "key": {
        "uuid": "b2b40d8b_90965ed3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-05-14T15:06:50Z",
      "side": 1,
      "message": "Can we use a standard format (or, better, JKS storage) for keys? So that when a company has security policies on how keys should be managed and rotated, they can use them instead of using our \"custom-made\" key generation.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 20,
        "endChar": 10
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "989234bb_dbd6a93e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-05-14T17:53:23Z",
      "side": 1,
      "message": "I am not sure if I understand the requirement properly. We are using the same randomization while creating hashed passwords in HashedPasswords class. Forgive me for not knowing, if you could elaborate, I would be able to address the comment. Thanks.",
      "parentUuid": "b2b40d8b_90965ed3",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 20,
        "endChar": 10
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70c3c71c_91fbfd7d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-05-14T21:51:10Z",
      "side": 1,
      "message": "See for instance:\nhttps://dzone.com/articles/secret-key-import-java\n\nJava has already predefined mechanisms for generating and storing private keys securely.",
      "parentUuid": "989234bb_dbd6a93e",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 20,
        "endChar": 10
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b912b23_bae82e9c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-05-14T15:06:50Z",
      "side": 1,
      "message": "Still, default should be secure, i.e. \u003e\u003d 256-bit as Matthias pointed out.",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 3
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7b27594_83a00a03",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-05-14T17:53:23Z",
      "side": 1,
      "message": "I tried with 256 key size but the tests keep failing until I manually download the  \"JCE Unlimited Strength Jurisdiction Policy Files\" jar files \" [1]. I am using Java 8 and still I need to download them. IMO, it would not be appropriate to put 256 as key size until we get these \"Jurisdiction Policy Files\" bundled with JREs. \n\n@Matthias and Luca, please let me know your opinion on this and I will change it accordingly.",
      "parentUuid": "0b912b23_bae82e9c",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 3
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5d8c844_27aa72d0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-05-14T21:51:10Z",
      "side": 1,
      "message": "There were historically reasons why the USA did not want people to have longer keys in their secrets. However those times are gone and now there shouldn\u0027t be any problem in having AES-256 enabled by default.",
      "parentUuid": "a7b27594_83a00a03",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 3
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d2bb929_e357620f",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 4
      },
      "lineNbr": 5026,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-05-14T09:17:06Z",
      "side": 1,
      "message": "Replace with: The encryption algorithm is configurable.\n\nAvoid mentioning the number of configuration options here as this text becomes\nerror prone to maintain. Every time a new parameter is added, this paragraph needs\nto be changed at several places.",
      "range": {
        "startLine": 5024,
        "startChar": 12,
        "endLine": 5026,
        "endChar": 32
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52a87f51_5eaedb89",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 4
      },
      "lineNbr": 5026,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-05-14T17:53:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d2bb929_e357620f",
      "range": {
        "startLine": 5024,
        "startChar": 12,
        "endLine": 5026,
        "endChar": 32
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f45a878_8d8a4e69",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 4
      },
      "lineNbr": 5042,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-05-14T09:17:06Z",
      "side": 1,
      "message": "delete this prefix here and in all places below",
      "range": {
        "startLine": 5042,
        "startChar": 0,
        "endLine": 5042,
        "endChar": 19
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d7ef046_abbc0108",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 4
      },
      "lineNbr": 5042,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-05-14T17:53:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f45a878_8d8a4e69",
      "range": {
        "startLine": 5042,
        "startChar": 0,
        "endLine": 5042,
        "endChar": 19
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b1e98f6_1e1fe073",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 4
      },
      "lineNbr": 2756,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-05-14T09:17:06Z",
      "side": 1,
      "message": "nit: empty line below this line",
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa6a1a4a_880a65f5",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 4
      },
      "lineNbr": 2756,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-05-14T17:53:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b1e98f6_1e1fe073",
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4feffc8_9613a37d",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 4
      },
      "lineNbr": 2758,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-05-14T09:17:06Z",
      "side": 1,
      "message": "nit: wrong indentation level",
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecd840fa_34564ec9",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 4
      },
      "lineNbr": 2758,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-05-14T17:53:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4feffc8_9613a37d",
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fb4a745_365cdbd5",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 4
      },
      "lineNbr": 2763,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-05-14T09:17:06Z",
      "side": 1,
      "message": "missing closing }",
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c20cddf_85601a25",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 4
      },
      "lineNbr": 2763,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-05-14T17:53:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1fb4a745_365cdbd5",
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e9a755a_f2ef6021",
        "filename": "java/com/google/gerrit/server/api/config/EncryptionConfig.java",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-05-14T15:06:50Z",
      "side": 1,
      "message": "256",
      "range": {
        "startLine": 24,
        "startChar": 39,
        "endLine": 24,
        "endChar": 42
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40e11111_33b58a15",
        "filename": "java/com/google/gerrit/server/api/config/EncryptionConfig.java",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-05-14T17:53:23Z",
      "side": 1,
      "message": "I tried with 256 key size but the tests keep failing until I manually download the  \"JCE Unlimited Strength Jurisdiction Policy Files\" jar files \" [1]. I am using Java 8 and still I need to download them. IMO, it would not be appropriate to put 256 as key size until we get these \"Jurisdiction Policy Files\" bundled with JREs. Please let me know your opinion.",
      "parentUuid": "9e9a755a_f2ef6021",
      "range": {
        "startLine": 24,
        "startChar": 39,
        "endLine": 24,
        "endChar": 42
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e0bea31_599a483a",
        "filename": "java/com/google/gerrit/server/api/config/EncryptionConfig.java",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-05-14T21:51:10Z",
      "side": 1,
      "message": "See the comment about encryption keys size above.",
      "parentUuid": "40e11111_33b58a15",
      "range": {
        "startLine": 24,
        "startChar": 39,
        "endLine": 24,
        "endChar": 42
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0eb22ad7_f3f688e9",
        "filename": "java/com/google/gerrit/server/api/config/StringEncryptor.java",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-05-14T09:17:06Z",
      "side": 1,
      "message": "Instead of doing it here, maybe the createSecretKey method could do all of the encoding\nand return exactly the string we need here? Then the \"key\" variable could also be inlined\nhere.",
      "range": {
        "startLine": 85,
        "startChar": 44,
        "endLine": 85,
        "endChar": 74
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c591cd36_f71eb457",
        "filename": "java/com/google/gerrit/server/api/config/StringEncryptor.java",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-05-14T17:53:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0eb22ad7_f3f688e9",
      "range": {
        "startLine": 85,
        "startChar": 44,
        "endLine": 85,
        "endChar": 74
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d57b0b5_019f827a",
        "filename": "java/com/google/gerrit/server/api/config/StringEncryptor.java",
        "patchSetId": 4
      },
      "lineNbr": 119,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-05-14T09:17:06Z",
      "side": 1,
      "message": "1. it is enough to split the string once\n\n2. prefer using guava Splitter instead of String.split, see [1] for more details about\nthe reasons [1].\n\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/158710",
      "range": {
        "startLine": 118,
        "startChar": 0,
        "endLine": 119,
        "endChar": 49
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54e73817_19a979b7",
        "filename": "java/com/google/gerrit/server/api/config/StringEncryptor.java",
        "patchSetId": 4
      },
      "lineNbr": 119,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-05-14T17:53:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d57b0b5_019f827a",
      "range": {
        "startLine": 118,
        "startChar": 0,
        "endLine": 119,
        "endChar": 49
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a618b35c_d1ae10a9",
        "filename": "javatests/com/google/gerrit/acceptance/api/config/EncryptionConfigIT.java",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-05-14T09:17:06Z",
      "side": 1,
      "message": "Do we really need to start Gerrit daemon in order to test encryptor configuration?",
      "range": {
        "startLine": 38,
        "startChar": 32,
        "endLine": 38,
        "endChar": 59
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3397b32b_0cb6b6d0",
        "filename": "javatests/com/google/gerrit/acceptance/api/config/EncryptionConfigIT.java",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-05-14T17:53:23Z",
      "side": 1,
      "message": "Wrote unit tests instead. Done.",
      "parentUuid": "a618b35c_d1ae10a9",
      "range": {
        "startLine": 38,
        "startChar": 32,
        "endLine": 38,
        "endChar": 59
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e791d4e2_759256d4",
        "filename": "javatests/com/google/gerrit/acceptance/api/config/StringEncryptorIT.java",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-05-14T09:17:06Z",
      "side": 1,
      "message": "Why do we need to start Gerrit daemon in order to test StringEncyptor?",
      "range": {
        "startLine": 31,
        "startChar": 31,
        "endLine": 31,
        "endChar": 57
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b4f44cd_a8ecd5a4",
        "filename": "javatests/com/google/gerrit/acceptance/api/config/StringEncryptorIT.java",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-05-14T17:53:23Z",
      "side": 1,
      "message": "Since this class has a lot of dependencies, only creating the key part results in having 8-10 mocks. Due to complex and over mocked tests, I think it was better to test the functionality with an IT test.",
      "parentUuid": "e791d4e2_759256d4",
      "range": {
        "startLine": 31,
        "startChar": 31,
        "endLine": 31,
        "endChar": 57
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79084999_905bf3c7",
        "filename": "javatests/com/google/gerrit/acceptance/api/config/StringEncryptorIT.java",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-05-15T08:18:05Z",
      "side": 1,
      "message": "\u003e Since this class has a lot of dependencies\n\nAs I see, StringEncryptor has only two dependencies.\n\n\u003e only creating the key part results in having 8-10 mocks. Due to complex and over mocked tests, I think it was better to test the functionality with an IT test.\n\nThis may indicate that the StringEncryptor class has too many responsibilities.\nBesides its main responsibility to encrypt/decrypt strings, is also generates (secret) keys,\npersists them into secure store etc...\n\nIf it is not too much, I would prefer to have a StringEncryptor which can only\nencrypt/decrypt strings. All other aspects (generating keys, persisting keys, etc..)\nshould be moved out of the StringEncryptor.",
      "parentUuid": "4b4f44cd_a8ecd5a4",
      "range": {
        "startLine": 31,
        "startChar": 31,
        "endLine": 31,
        "endChar": 57
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "652a401a_d701bbb8",
        "filename": "javatests/com/google/gerrit/acceptance/api/config/StringEncryptorIT.java",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-05-14T09:17:06Z",
      "side": 1,
      "message": "please avoid dependencies between the test cases\n\nlet each test case create/initialize what it needs",
      "range": {
        "startLine": 46,
        "startChar": 21,
        "endLine": 46,
        "endChar": 30
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "338e8723_3d58cc1f",
        "filename": "javatests/com/google/gerrit/acceptance/api/config/StringEncryptorIT.java",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-05-14T17:53:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "652a401a_d701bbb8",
      "range": {
        "startLine": 46,
        "startChar": 21,
        "endLine": 46,
        "endChar": 30
      },
      "revId": "ccd07dc4bfbd56fb60af58a0df7e39cb0846247d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}