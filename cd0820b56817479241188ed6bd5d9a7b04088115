{
  "pushCert": "certificate version 0.1\npusher A0D0EF51 1521107581 +0100\nnonce APUGfEJDbenmC0YDUP4B1VVOXN0lWrEKjUvRnCZeKZuBxUwasvwA7SuKTouA0ARNHb9NbZIfn25H\n\n0000000000000000000000000000000000000000 e7abb18697633fef16cf3814247a0fc3fccae564 refs/for/master\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEjcOJ9ZBmQPrFqZA3UbX9l6DQ71EFAlqqQn0ACgkQUbX9l6DQ\n71HHRgf/ToyT76wkk06VdePXwIUYJMHZeOlnXceoN9VxF26XpcsXOJwtCwpZI41S\nta/5mdeZgXISdNipzaWel2LFLjae6m9DHZMJrcHNeiVQY6D4dbVvFv3b+jURpPKS\ncbxlJKoVp1qRw3fTJFci1EjONUt7PYPWzjan+Jt+G2k+cwCvm6nRMquWBR8EV64O\nQSHWkGa2T3gnaAdgrHEKAax9fb/w4RSRv4182FYH1vSYCPyeZNLEmaEYyd2Gu89C\n9ZvBYhLED3fxdtNLbpQBS5cgtTuJHU0pxLTeHA6+oTldLeamVTHg5tAa79NEt7aD\nByE9IIq+BbD7bTGOQs07CVfgs1O2Bg\u003d\u003d\n\u003dPOVI\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "bf31dd81_340ab71d",
        "filename": "java/com/google/gerrit/server/account/externalids/ExternalIdNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 642,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-03-16T08:22:12Z",
      "side": 1,
      "message": "Previously, if accountCache was null and there was not eviction, there was also no reindexing. But now it could be a justified code path, no cache eviction, but reindexing. Why would it make to sense to support something like that? The reindexing would not be visible to AccountCache consumer, because no eviction. I\u0027m probably missing something, but I think this would make more sense:\n\n  if (accountCache !\u003d null) {\n    accountCache.evict(accountId);\n    if (accountIndexer !\u003d null) {\n      accountIndexer.index(accountId);\n    }\n  }",
      "revId": "cd0820b56817479241188ed6bd5d9a7b04088115",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfda9a8a_43471684",
        "filename": "java/com/google/gerrit/server/account/externalids/ExternalIdNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 642,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-16T09:17:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf31dd81_340ab71d",
      "revId": "cd0820b56817479241188ed6bd5d9a7b04088115",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c99f4a8f_77b19ae9",
        "filename": "java/com/google/gerrit/server/account/externalids/ExternalIdNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 642,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-03-16T09:24:09Z",
      "side": 1,
      "message": "Not for this change, but I wonder, if it would make sense, to swap the logic, and instead doing reindex during eviction operation (that is undone in this change), swap it and do cache eviction during reindex? That way we make sure, that we never leave stale cache behind.",
      "parentUuid": "dfda9a8a_43471684",
      "revId": "cd0820b56817479241188ed6bd5d9a7b04088115",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22866b1b_e0593771",
        "filename": "java/com/google/gerrit/server/account/externalids/ExternalIdNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 642,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-16T10:00:52Z",
      "side": 1,
      "message": "This may makes sense for the account indexer. However for groups there are multiple caches and the group indexer currently only evicts one of these caches. So if we do something like this we should make sure that the behavior for indexing accounts and groups stays consistent.",
      "parentUuid": "c99f4a8f_77b19ae9",
      "revId": "cd0820b56817479241188ed6bd5d9a7b04088115",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78e48466_383b9b2f",
        "filename": "java/com/google/gerrit/server/account/externalids/ExternalIdNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 642,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-03-16T10:02:18Z",
      "side": 1,
      "message": "Agreed.",
      "parentUuid": "22866b1b_e0593771",
      "revId": "cd0820b56817479241188ed6bd5d9a7b04088115",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "402e3ab5_0ef233bd",
        "filename": "java/com/google/gerrit/server/account/externalids/ExternalIdNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 642,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-03-16T12:32:18Z",
      "side": 1,
      "message": "Please see my other comments for the discussion you started here.\n\nRegarding the code change which was initiated by the first comment here:\nI prefer the code the way it is in patch set 2. Of course it changes the logic compared to before this change but without knowing the previous state, treating accountCache and accountIndexer as equally ranking is much clearer in my opinion. It follows the new contract I explained in another comment, which is that cache evictions and reindexing can be done independently from each other and both still work correctly.\n\nIdeally, we would find a better way to use this class with and without indexing / cache evictions, which doesn\u0027t including having two objects which are both defined or both null. The strategy pattern or rather the use of a functional interface (like a Consumer) could help for this. However, that\u0027s beyond the scope of this change and just an idea for future improvements.",
      "parentUuid": "78e48466_383b9b2f",
      "revId": "cd0820b56817479241188ed6bd5d9a7b04088115",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9afbcc7e_7a138f39",
        "filename": "java/com/google/gerrit/server/index/account/AccountIndexerImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-03-16T08:22:12Z",
      "side": 1,
      "message": "Why is this necessary? The contract is:\n\n  accountCache.evict(accountId);\n  accountIndexer.index(accountId);\n\nWhy manually ensure the contract? Is that necessary precaution measure? I went ahead and removed this line and ran the tests and see tests failures: [1].\n\n* [1] http://paste.openstack.org/show/702931",
      "range": {
        "startLine": 93,
        "startChar": 6,
        "endLine": 94,
        "endChar": 26
      },
      "revId": "cd0820b56817479241188ed6bd5d9a7b04088115",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdcd2260_8324186a",
        "filename": "java/com/google/gerrit/server/index/account/AccountIndexerImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-16T09:17:02Z",
      "side": 1,
      "message": "As the comment says this is a precaution to make sure that get an up-to-date value from the cache below. This makes sure that this class works correctly even if some other class forgets to do the eviction before calling the index method. We do the same for groups in GroupIndexerImpl.",
      "parentUuid": "9afbcc7e_7a138f39",
      "range": {
        "startLine": 93,
        "startChar": 6,
        "endLine": 94,
        "endChar": 26
      },
      "revId": "cd0820b56817479241188ed6bd5d9a7b04088115",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b23e3174_ea73f95d",
        "filename": "java/com/google/gerrit/server/index/account/AccountIndexerImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-03-16T09:24:09Z",
      "side": 1,
      "message": "Without this line, the tests are failing. I don\u0027t understand why this wasn\u0027t necessary before this change.",
      "parentUuid": "bdcd2260_8324186a",
      "range": {
        "startLine": 93,
        "startChar": 6,
        "endLine": 94,
        "endChar": 26
      },
      "revId": "cd0820b56817479241188ed6bd5d9a7b04088115",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db4d0e1a_18156325",
        "filename": "java/com/google/gerrit/server/index/account/AccountIndexerImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2018-03-16T09:57:12Z",
      "side": 1,
      "message": "Thanks for trying this.\n\nThe tests that are failing without this line are:\n\n- AccountIndexerTest:\n  these tests are expected to fail because they verify that\n  AccountIndexerImpl isn\u0027t affected by a stale account cache\n\n- AbstractQueryAccountsTest#reindex:\n  This test did an account update without indexing to create a stale index.\n  While the indexing was done on cache eviction this code couldn\u0027t evict the\n  account from the cache, but now as indexing is separate it can do the cache\n  eviction. I fixed this and now this test passes if this line is commented out.\n\nDone.",
      "parentUuid": "b23e3174_ea73f95d",
      "range": {
        "startLine": 93,
        "startChar": 6,
        "endLine": 94,
        "endChar": 26
      },
      "revId": "cd0820b56817479241188ed6bd5d9a7b04088115",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2894e7a_cc435548",
        "filename": "java/com/google/gerrit/server/index/account/AccountIndexerImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-03-16T12:32:18Z",
      "side": 1,
      "message": "@David: This line is the main point of this change. As the commit message indicates, not ensuring up-to-date values here can have inconvenient consequences. The new contract is rather: do cache eviction when you care about cache eviction; do a reindex when you care about the index. Theoretically, reindexing now also updates the cache but that\u0027s implicit knowledge of this implementation class. Other parts of the code which modify accounts should rather explicitly declare what they need and that is cache eviction + reindex in most cases. Thus, a reader of that other code immediately sees what happens even without additional knowledge.",
      "parentUuid": "db4d0e1a_18156325",
      "range": {
        "startLine": 93,
        "startChar": 6,
        "endLine": 94,
        "endChar": 26
      },
      "revId": "cd0820b56817479241188ed6bd5d9a7b04088115",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}