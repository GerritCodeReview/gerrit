{
  "comments": [
    {
      "key": {
        "uuid": "ce6be468_ca02c32f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 21,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-04-07T13:13:46Z",
      "side": 1,
      "message": "There is a mismatch in the current approach: your input doesn\u0027t match the data. In both: REST API and SSH command. There are 3 different inputs:\n\n* change message\n* patch line comment\n* label approval data\n\nYou\u0027ve only extended your input with one single tag string, and claim that the same tag should be applied to all three different kinds of data? To me it sounds that you\u0027ve only implemented tagging of change messages, wich is good enough. But why extend and touch patch_set_commens and patch_set_approval at all? This can be done later (if at all, as discussed in person during the hackathon I don\u0027t see any real life use case to tag the label votes).\n\nBut if you would like to tag label votes and patch line comments in addition to change messages, then you should find the way to accept the corresponding input. Obviously.\n\nIOW, the user should be able to provide in one single SSH command or REST endpoint different tags f√ºr different target data:\n\n* 1. change message\u003d\"foo\" change-message-tag: \"foo-tag\" (change message can be provided only once, so the cardinality is here always\u003d1)\n* 2. Label-Verified\u003d-1, Label-Verified-Tag\u003dbar, Label-CodeReview\u003d+1, Label-CodeReview-Tag\u003dbaz, ... (cardinality is n, where n is the number of labels configured on specific projects)\n* 3. patch line comment_1\u003d\"this line is not covered\" patch line comment_1-tag: \"Coverity\",  patch line comment_2\u003d\"Not Used\" patch_lins_commet_2-tag\u003d\"FindBugs\" Cardinality\u003dn, ... (cardinality is k depending on how many patch line comment send with this command).\n\nAs you can see from the above, the current approach claims the target cardinality 1+n+k (1 change message + n label votes + k patch line comments) is covered by this change but only provides one single input tag with cardinality 1. Obviously, 1 !\u003d 1 + n + k.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 21,
        "endChar": 67
      },
      "revId": "ce5e98f49de7da80e767f08cf820a8915fea9fa9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e71e053_cd08a980",
        "filename": "Documentation/cmd-review.txt",
        "patchSetId": 17
      },
      "lineNbr": 143,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-04-07T13:19:33Z",
      "side": 1,
      "message": "How about slightly reworded:\n\n\"Apply a \u0027TAG\u0027 to the change message, votes, and inline comments. The \u0027TAG\u0027 can represent an external system like CI that does automated verification of the change. Comments with specific \u0027TAG\u0027 values can be filtered out in the web UI.\"",
      "range": {
        "startLine": 140,
        "startChar": 2,
        "endLine": 143,
        "endChar": 32
      },
      "revId": "ce5e98f49de7da80e767f08cf820a8915fea9fa9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee7a6832_ebdeb1fa",
        "filename": "Documentation/cmd-review.txt",
        "patchSetId": 17
      },
      "lineNbr": 143,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2016-04-07T13:38:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e71e053_cd08a980",
      "range": {
        "startLine": 140,
        "startChar": 2,
        "endLine": 143,
        "endChar": 32
      },
      "revId": "ce5e98f49de7da80e767f08cf820a8915fea9fa9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e71e053_0ddeb126",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 17
      },
      "lineNbr": 129,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-04-07T13:19:33Z",
      "side": 1,
      "message": "I\u0027m not a huge fan of abusing Map.Entry in this way. However I think it will take some careful thought to come up with a data structure for the approvals map that is not so ugly. I think at this point it can be cleaned up in a separate change.",
      "revId": "ce5e98f49de7da80e767f08cf820a8915fea9fa9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce6be468_aa018f29",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 17
      },
      "lineNbr": 129,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2016-04-07T13:38:18Z",
      "side": 1,
      "message": "Yes, this not perfect. I was strangling with this as well, my fist idea was to add a new class for this purpose but didn\u0027t want to extend this patch even more. Second idea was some kind of python-like tuple but didn\u0027t found something like this in Guava... therefore ended up using Map.Entry, which is battle proved and well tested ;)\n\nI can add follow up patch that changes Map.Entry to something like PatchSetApprovalKey",
      "parentUuid": "2e71e053_0ddeb126",
      "revId": "ce5e98f49de7da80e767f08cf820a8915fea9fa9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e71e053_2ddb6d37",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 17
      },
      "lineNbr": 422,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-04-07T13:19:33Z",
      "side": 1,
      "message": "Optional: expectedOneFooter",
      "range": {
        "startLine": 422,
        "startChar": 12,
        "endLine": 422,
        "endChar": 25
      },
      "revId": "ce5e98f49de7da80e767f08cf820a8915fea9fa9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce6be468_8afccb56",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 17
      },
      "lineNbr": 422,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2016-04-07T13:38:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e71e053_2ddb6d37",
      "range": {
        "startLine": 422,
        "startChar": 12,
        "endLine": 422,
        "endChar": 25
      },
      "revId": "ce5e98f49de7da80e767f08cf820a8915fea9fa9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}