{
  "comments": [
    {
      "key": {
        "uuid": "7b3efc94_e3ec6e70",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-12-12T17:47:25Z",
      "side": 1,
      "message": "That is really good :-) One of the red-flag of security is always \"passwords in clear text in application logs\"",
      "range": {
        "startLine": 12,
        "startChar": 27,
        "endLine": 12,
        "endChar": 48
      },
      "revId": "ced3a8829efffe735555de3dc15026e33b8671b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19c1ca08_7f086edf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-12-12T17:47:25Z",
      "side": 1,
      "message": "Depending on how you manage the audit-trail, you may want to keep credentials there.\nAudits storage is pluggable and one could off-load to a secure storage and keep it for audit-trail purposes.\n\nCan we make it configurable? By default keeps it \u0027as-is\u0027 otherwise it will mask it.",
      "range": {
        "startLine": 12,
        "startChar": 53,
        "endLine": 12,
        "endChar": 58
      },
      "revId": "ced3a8829efffe735555de3dc15026e33b8671b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04eac4f6_347f9c54",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1032595
      },
      "writtenOn": "2017-12-22T16:26:23Z",
      "side": 1,
      "message": "Done, added audit.maskSensitiveData \u003dtrue with default to false.",
      "parentUuid": "19c1ca08_7f086edf",
      "range": {
        "startLine": 12,
        "startChar": 53,
        "endLine": 12,
        "endChar": 58
      },
      "revId": "ced3a8829efffe735555de3dc15026e33b8671b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05895ac0_69a3b3ed",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/BaseCommand.java",
        "patchSetId": 5
      },
      "lineNbr": 387,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-12-05T23:30:10Z",
      "side": 1,
      "message": "Parameters",
      "range": {
        "startLine": 387,
        "startChar": 26,
        "endLine": 387,
        "endChar": 36
      },
      "revId": "ced3a8829efffe735555de3dc15026e33b8671b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "515ee785_9cf3ca9e",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/BaseCommand.java",
        "patchSetId": 5
      },
      "lineNbr": 391,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-12-05T23:30:10Z",
      "side": 1,
      "message": "Parameters",
      "range": {
        "startLine": 391,
        "startChar": 33,
        "endLine": 391,
        "endChar": 42
      },
      "revId": "ced3a8829efffe735555de3dc15026e33b8671b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b9aea6d_d3bf6ef8",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/DispatchCommand.java",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-12-12T17:47:25Z",
      "side": 1,
      "message": "Are we going to use reflection for every single invocation?\nCan we do it an initial discovery at startup only?",
      "range": {
        "startLine": 122,
        "startChar": 23,
        "endLine": 122,
        "endChar": 57
      },
      "revId": "ced3a8829efffe735555de3dc15026e33b8671b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21b2ba22_695da0d9",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/DispatchCommand.java",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2017-12-19T00:02:31Z",
      "side": 1,
      "message": "This needs to be done every time because it could be for any command, including those provided by plugins that can be loaded dynamically while gerrit is running.",
      "parentUuid": "2b9aea6d_d3bf6ef8",
      "range": {
        "startLine": 122,
        "startChar": 23,
        "endLine": 122,
        "endChar": 57
      },
      "revId": "ced3a8829efffe735555de3dc15026e33b8671b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "412fda67_8a635d04",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/DispatchCommand.java",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-12-19T07:25:04Z",
      "side": 1,
      "message": "Sure, but at least we can avoid doing it multiple times for the same class. The number of possible different classes is still less than 100s while the number of events generated could be 100,000s or more for heavy loaded systems.",
      "parentUuid": "21b2ba22_695da0d9",
      "range": {
        "startLine": 122,
        "startChar": 23,
        "endLine": 122,
        "endChar": 57
      },
      "revId": "ced3a8829efffe735555de3dc15026e33b8671b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "069d1551_b3db3ed2",
        "filename": "gerrit-sshd/src/main/java/com/google/gerrit/sshd/DispatchCommand.java",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1032595
      },
      "writtenOn": "2017-12-22T16:26:23Z",
      "side": 1,
      "message": "Done, added cache and evicts it at any plugin reload or start.",
      "parentUuid": "412fda67_8a635d04",
      "range": {
        "startLine": 122,
        "startChar": 23,
        "endLine": 122,
        "endChar": 57
      },
      "revId": "ced3a8829efffe735555de3dc15026e33b8671b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}