{
  "comments": [
    {
      "key": {
        "uuid": "Rv6Nj.u8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RenameProject.java",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-03-15T11:50:22Z",
      "side": 1,
      "message": "What I find interesting about this class is that it is the central place for executing the project rename\nbut, looking at its source code, I have no idea which tasks and in which order will be executed.\n\nThe core part of this class is executing the project rename (sub)tasks registered \"somewhere\".\nThat core part could also have been named TaskExecutor or something like that and moved into own class.\n\nHowever, IMHO a purpose of this class should be to define which rename (sub)tasks, and in which order, are getting executed because the order of tasks is a critical part of making project rename robust.",
      "revId": "cf60ef9270eaa7a5e84d131a5766ad9c52ecc3da",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Rw7-tt0c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RenameProject.java",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1012155
      },
      "writtenOn": "2013-03-15T18:56:58Z",
      "side": 1,
      "message": "The boon and bane of dependency injection / inversion of control :-/\n\nIt\u0027s the same construction that we also use to register SshCommands or RestViews. \nThey themselves do not know how they can be accessed. They get bound to some name at runtime.\n\nHowever, it allows for easier testing and better reuse.\n\nIn gerrit, binding typically happens in classes ending in Module. For example MasterCommandModule, UrlModule, etc. Sticking to this scheme, we bind Tasks in TaskModule.",
      "parentUuid": "Rv6Nj.u8",
      "revId": "cf60ef9270eaa7a5e84d131a5766ad9c52ecc3da",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "R3CYrdpA",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RenameProject.java",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-03-18T14:40:28Z",
      "side": 1,
      "message": "I don\u0027t think the comparison with the SshCommands (or RestViews) is fair. For SSH commands we have a simple lookup by command name and it is all that matters.\n\nFor project rename tasks it may be (and probably is) critical in which order the steps are executed. It is not just a set of tasks that can be done in any order. For a critical command\nas project rename the order of tasks execution should be explicit. At least it has to be documented. Right now, one has to look in the TaskModule, then in the DynamicSet and find out that, internally, it stores its items in a list which means that the iterator() will iterate in the order of the elements as they are in this list. And this is not even documented/guaranteed behavior of the DynamicSet.",
      "parentUuid": "Rw7-tt0c",
      "revId": "cf60ef9270eaa7a5e84d131a5766ad9c52ecc3da",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Rv.OO0nQ",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RenameProject.java",
        "patchSetId": 6
      },
      "lineNbr": 141,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-03-15T15:44:03Z",
      "side": 1,
      "message": "The carriedOutTasks wil not contain the task which threw this exception and rollback() will not be called for it. The javadoc of Task.carryOut says that rollback is not called automatically when the carryOut throws an exception.\n\nWhen carryOut throws an exception who is responsible for rolling back the effect of that carryOut?",
      "revId": "cf60ef9270eaa7a5e84d131a5766ad9c52ecc3da",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Rw5-ycyc",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/RenameProject.java",
        "patchSetId": 6
      },
      "lineNbr": 141,
      "author": {
        "id": 1012155
      },
      "writtenOn": "2013-03-15T18:56:58Z",
      "side": 1,
      "message": "carryOut.\n\ncarryOut could throw that exception anytime while it\u0027s running. At the beginning, at the end or somewhere in between. In the worst case, carryOut performed some operations, but not all.\n\nFrom the outside, we cannot tell how much or what we should rollback. So it\u0027s either carryOut\u0027s or rollback\u0027s responsibility. If rollback was responsible even for partial rollbacks, carryOut would need to bring the status of the partially successful carryOut over to rollback. \n\nThis is possible but tedious.\n\nHowever, from within carryOut, it\u0027s much simpler, as it\u0027s just a matter of wrapping the correct part in a try/catch block.\n\nAnd if for some TaskA its rollback is capable of doing the partial rollback, TaskA\u0027s carryOut may call its rollback directly. That does not hurt the contract exposed by Task.",
      "parentUuid": "Rv.OO0nQ",
      "revId": "cf60ef9270eaa7a5e84d131a5766ad9c52ecc3da",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvwNT7hw",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/renaming/RenameParentsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-03-15T15:44:03Z",
      "side": 1,
      "message": "The class name may indicate that this task in renaming parent projects (of a project). In fact this task changes the parent property of all child projects of the project being renamed. It re-parents the child projects. I propose to name it something like:\n\n  public class ReparentChildProjectsTask",
      "revId": "cf60ef9270eaa7a5e84d131a5766ad9c52ecc3da",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Rw--3PxU",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/renaming/RenameParentsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1012155
      },
      "writtenOn": "2013-03-15T18:56:58Z",
      "side": 1,
      "message": "Done.\n\nYes, that\u0027s a /much/ better name. Thanks :-)",
      "parentUuid": "RvwNT7hw",
      "revId": "cf60ef9270eaa7a5e84d131a5766ad9c52ecc3da",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Rv8OJVm8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/renaming/RenameParentsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-03-15T15:44:03Z",
      "side": 1,
      "message": "In newer Gerrit code we use:\n\n  Sets.newHashSet();\n\nas it is shorter and doesn\u0027t require repeating the generic type.\nThe Sets is from com.google.common.collect.",
      "revId": "cf60ef9270eaa7a5e84d131a5766ad9c52ecc3da",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Rw9-8.-o",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/renaming/RenameParentsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1012155
      },
      "writtenOn": "2013-03-15T18:56:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "Rv8OJVm8",
      "revId": "cf60ef9270eaa7a5e84d131a5766ad9c52ecc3da",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvyNQag0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/renaming/RenameParentsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-03-15T15:44:03Z",
      "side": 1,
      "message": "The javadoc of the carryOut method indicates that if this method throws an error the rollback is not called automatically for this step.",
      "revId": "cf60ef9270eaa7a5e84d131a5766ad9c52ecc3da",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Rwz8CRxg",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/renaming/RenameParentsTask.java",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 1012155
      },
      "writtenOn": "2013-03-15T18:56:58Z",
      "side": 1,
      "message": "I suppose you mean the doclet within Task.\nYes, that\u0027s the contract with the caller.\n\nBut internally we of course can call it whenever we need to. And indeed if some problem occurs during reparenting the children, the calling code will not call rollback (That\u0027s the contract exposed through Task). However, we still have to undo the reparentings that have already happened. That\u0027s carryOut\u0027s responsibility. Manually calling rollback from within carryOut does just that. This class\u0027 rollback can do both partial and full rollback. So it\u0027s a good match and avoids duplication.\n\nNote that this does not contradict the contract exposed by Task, as we call rollback from within. In the same class. Not from outside through the Task contract.\n\nI tried to clarify the Task doclet in Patch Set 7",
      "parentUuid": "RvyNQag0",
      "revId": "cf60ef9270eaa7a5e84d131a5766ad9c52ecc3da",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Rv4OTXp8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/renaming/RenameWatchesTask.java",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2013-03-15T15:44:03Z",
      "side": 1,
      "message": "nit: space after \"for\" and space before \":\"",
      "revId": "cf60ef9270eaa7a5e84d131a5766ad9c52ecc3da",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Rwx--g.w",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/renaming/RenameWatchesTask.java",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1012155
      },
      "writtenOn": "2013-03-15T18:56:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "Rv4OTXp8",
      "revId": "cf60ef9270eaa7a5e84d131a5766ad9c52ecc3da",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}