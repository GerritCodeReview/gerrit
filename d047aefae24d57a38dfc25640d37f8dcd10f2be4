{
  "comments": [
    {
      "key": {
        "uuid": "e55a9f56_72bcc4f7",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.html",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-24T23:48:27Z",
      "side": 1,
      "message": "Why do you remove the outline?",
      "range": {
        "startLine": 47,
        "startChar": 6,
        "endLine": 49,
        "endChar": 7
      },
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17b97808_a182a26e",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.html",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-01-25T00:07:25Z",
      "side": 1,
      "message": "We already have our own indicator for the selected element, a change in background color noted by the .selected class, from before when we didn\u0027t utilize focus.",
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78833796_f805d651",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.html",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-24T23:48:27Z",
      "side": 1,
      "message": "This is typically used to remove an element from the a11y tree. At the same time you add ARIA attributes. Is this intended?",
      "range": {
        "startLine": 72,
        "startChar": 14,
        "endLine": 72,
        "endChar": 27
      },
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48180257_9a02506f",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.html",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-01-25T00:07:25Z",
      "side": 1,
      "message": "From the docs that I read, tabindex\u003d-1 means that the element is still focusable, but navigable to via keyboard (1). This is intended in this case, as we have our own keydown handlers to navigate between the autocomplete options.\n\n(1) https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex",
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20478efd_b71e39b3",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.js",
        "patchSetId": 3
      },
      "lineNbr": 227,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-24T23:48:27Z",
      "side": 1,
      "message": "Does this work with modifier keys? e.g. if I type Ctrl+Right to switch OSX workspaces, would this move focus to the input on Ctrl?",
      "range": {
        "startLine": 226,
        "startChar": 8,
        "endLine": 227,
        "endChar": 31
      },
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4106df1_7bb75aa3",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.js",
        "patchSetId": 3
      },
      "lineNbr": 227,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-01-25T00:07:25Z",
      "side": 1,
      "message": "It doesn\u0027t seem to have any unintended consequences (likely because there\u0027s no call to preventDefault) but I\u0027m not entirely sure how to definitively test this. Any suggestions?",
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9da6dbaf_6daba85b",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.js",
        "patchSetId": 3
      },
      "lineNbr": 227,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-28T00:13:34Z",
      "side": 1,
      "message": "What is this focus call useful for? It may benefit from a comment. It\u0027s hard for me to evaluate because it looks a little suspicious, and it\u0027s not clear what user interaction this takes care of.",
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81a8b358_41d0b0e4",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.js",
        "patchSetId": 3
      },
      "lineNbr": 227,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-01-28T00:35:05Z",
      "side": 1,
      "message": "This function was renamed _handleKeydown from _handleInputKeydown because it\u0027s now used to handle keydown on both the options of the autocomplete and the input. \n\nThe focus call ensures that, even when the user is toggling between the autocomplete options, keypresses are registered as input to the autocomplete. I\u0027ll add a comment to describe this in the following patchset if you agree that this is a sane approach.",
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13481136_6703b92e",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.js",
        "patchSetId": 3
      },
      "lineNbr": 227,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-30T18:34:19Z",
      "side": 1,
      "message": "Ah, I see what you mean. Yeah, I think a just adding a comment that explains this would be plenty.\n\nI just tend to be wary of calls to focus (after doing JS performance tuning), so having a comment that makes it stand out and makes it clear why it\u0027s there is great.",
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b72b4639_23fe7f75",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.js",
        "patchSetId": 3
      },
      "lineNbr": 227,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-01-30T19:15:50Z",
      "side": 1,
      "message": "Done",
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b43debe_de35311e",
        "filename": "polygerrit-ui/app/elements/shared/gr-cursor-manager/gr-cursor-manager.js",
        "patchSetId": 3
      },
      "lineNbr": 150,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-24T23:48:27Z",
      "side": 1,
      "message": "Shouldn\u0027t this be an option on the cursor manager? That way we only enable it when we\u0027re setting up the cursor with focusable stops.",
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfb12b5f_721cc5cc",
        "filename": "polygerrit-ui/app/elements/shared/gr-cursor-manager/gr-cursor-manager.js",
        "patchSetId": 3
      },
      "lineNbr": 150,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-01-25T00:07:25Z",
      "side": 1,
      "message": "I can make that happen, but I would argue that instead we should make the cursor manager function with focus everywhere.\n\nWe use it in three places:\n- To manage the selected option in gr-autocomplete\n- To manage the selected file in gr-file-list\n- To manage the selected line in gr-diff\n\nAll three of these examples should *probably* be focusable for the very same a11y reasons that this change exists. Thoughts?",
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00a9601e_eda7bc8d",
        "filename": "polygerrit-ui/app/elements/shared/gr-cursor-manager/gr-cursor-manager.js",
        "patchSetId": 3
      },
      "lineNbr": 150,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-01-28T00:13:34Z",
      "side": 1,
      "message": "I disagree, I think this fits really well as a feature of the cursor manager, but should still be an option that\u0027s off by default. For the autocomplete, it makes eminent sense to enable it there.\n\nFor the file list and diffs, they don\u0027t line up well with browser focus. Consider that for expanded inline diffs, there are *two* overlapping cursor managers, potentially competing for what should be focused.\n\nConsider also that in the diff view, when interacting with a comment, focus should be on the textarea the user types into, or the buttons below. At the same time, the diff line cursor manager would be positioned on the line number itself (or even a completely different line number). How does it work in those cases?\n\nAlso keep in mind that for HTML elements that are traditionally focusable, the action of setting browser focus can be expensive. For some of the very large diffs we have worked on, I worry that setting focus every time the cursor moves could make things quite slow.",
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2828e64f_2be23c3d",
        "filename": "polygerrit-ui/app/elements/shared/gr-cursor-manager/gr-cursor-manager.js",
        "patchSetId": 3
      },
      "lineNbr": 150,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-01-28T00:35:05Z",
      "side": 1,
      "message": "Well, to be fair, I don\u0027t think there will be some sort of race condition for focus because the user has no way of moving both the cursors at the same time.\n\nThat being said, it\u0027s pretty trivial to just make this a togglable property, so I\u0027ll do that.",
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ce45e18_1611e2f2",
        "filename": "polygerrit-ui/app/elements/shared/gr-cursor-manager/gr-cursor-manager.js",
        "patchSetId": 3
      },
      "lineNbr": 150,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-01-30T19:15:50Z",
      "side": 1,
      "message": "Done",
      "revId": "d047aefae24d57a38dfc25640d37f8dcd10f2be4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}