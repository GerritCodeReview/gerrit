{
  "comments": [
    {
      "key": {
        "uuid": "69069e27_c34f88ee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2018-08-27T23:12:11Z",
      "side": 1,
      "message": "This reads strangely. Should this be \"when prefs are not set and no rendering happened\"?",
      "range": {
        "startLine": 14,
        "startChar": 26,
        "endLine": 14,
        "endChar": 63
      },
      "revId": "d0854c2a6e478f00500b8029ccd013348673430c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d4ead19_76a5f27d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2018-08-28T07:37:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69069e27_c34f88ee",
      "range": {
        "startLine": 14,
        "startChar": 26,
        "endLine": 14,
        "endChar": 63
      },
      "revId": "d0854c2a6e478f00500b8029ccd013348673430c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42ad8bcc_9326ed5a",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff.js",
        "patchSetId": 4
      },
      "lineNbr": 274,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2018-08-27T23:12:11Z",
      "side": 1,
      "message": "I didn\u0027t anticipate how the short-circuits in `_renderDiffTable` would mean that a \"render\" event isn\u0027t always fired every time a `_reload` promise resolves.\n\nWhen there are no prefs, or the safety catch engages, there is a sense in which a \"render\" didn\u0027t take place, so I wonder if adding these new dispatches would dilute the meaning of that event.\n\nWhat if we instead created a new event with a 1:1 correspondence to the `reload` promise, and dispatch it from this `.finally` clause?\n\n}).finally(() \u003d\u003e {\n  this._loading \u003d false;\n  this.dispatchEvent(new CustomEvent(\u0027reloaded\u0027, {bubbles: true}));\n});",
      "revId": "d0854c2a6e478f00500b8029ccd013348673430c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1078a050_a16fdab3",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff.js",
        "patchSetId": 4
      },
      "lineNbr": 274,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2018-08-28T07:30:06Z",
      "side": 1,
      "message": "The problem is that in the next change, reload moves to gr-diff-host, and this event is meant to be the way gr-diff informs gr-diff-host that the rendering was done. This is why \"reloaded\" is not the ideal name (the gr-diff element that will emit it knows nothing about reloading - it got a new diff and renders it) and why we cannot move it to (that) finally (which will move to gr-diff-host). \n\nWe can of course make a separate event, but it will be slightly hard to name. Something like gr-diff-render to distinguish it from the (gr-diff-builder-)render? I am really not sure it is worth it though given that only the tests care about this \u0027render\u0027 event in the first place - all production code uses the promise, in which we have the new proposed meaning of render.\n\nWhat do you think?",
      "parentUuid": "42ad8bcc_9326ed5a",
      "revId": "d0854c2a6e478f00500b8029ccd013348673430c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81192554_6e5616a4",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff/gr-diff.js",
        "patchSetId": 4
      },
      "lineNbr": 274,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2018-08-28T22:11:22Z",
      "side": 1,
      "message": "Aha, I lost track of that aspect. Thanks for the explanation.",
      "parentUuid": "1078a050_a16fdab3",
      "revId": "d0854c2a6e478f00500b8029ccd013348673430c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}