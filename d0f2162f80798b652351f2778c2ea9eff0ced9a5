{
  "comments": [
    {
      "key": {
        "uuid": "3daa413f_05de6c5f",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.js",
        "patchSetId": 2
      },
      "lineNbr": 278,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2019-12-06T11:17:36Z",
      "side": 1,
      "message": "What is the use case for showing suggestions when the input is *not* focused?",
      "revId": "d0f2162f80798b652351f2778c2ea9eff0ced9a5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e449d727_06c0afcb",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.js",
        "patchSetId": 2
      },
      "lineNbr": 278,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2019-12-06T14:20:52Z",
      "side": 1,
      "message": "not entirely sure, i added this as a boolean and set default to false for backward compatibility. I am not sure if there are use cases that we want to have the dropdown while not input is not focused. If none, I can remove this boolean or set it to true by default.",
      "parentUuid": "3daa413f_05de6c5f",
      "revId": "d0f2162f80798b652351f2778c2ea9eff0ced9a5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0afa3a6_1adaf547",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete.js",
        "patchSetId": 2
      },
      "lineNbr": 278,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2019-12-06T14:28:23Z",
      "side": 1,
      "message": "If you want to play it safe, then I fine with the approach, but then please follow-up. I would rather prefer to quickly check where gr-autocomplete is used and just never retrieve suggestions without focus. Otherwise you just add complexity that we will have to deal with in the coming years at some point.",
      "parentUuid": "e449d727_06c0afcb",
      "revId": "d0f2162f80798b652351f2778c2ea9eff0ced9a5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fa6c95b_3b8e778d",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete_test.html",
        "patchSetId": 2
      },
      "lineNbr": 285,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2019-12-06T10:56:59Z",
      "side": 1,
      "message": "can be simplified to assert.equal(queryStub.called, True)?",
      "revId": "d0f2162f80798b652351f2778c2ea9eff0ced9a5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6aeee69f_c54be245",
        "filename": "polygerrit-ui/app/elements/shared/gr-autocomplete/gr-autocomplete_test.html",
        "patchSetId": 2
      },
      "lineNbr": 285,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2019-12-06T11:17:10Z",
      "side": 1,
      "message": "hah ya, as `notCalled` is also available, let\u0027s give it a chance to shine\n\nalso it needs to be `true`, and can be shorter to `assert.isTrue` or `assert.isFalse` actually. But I always prefer `equal` as the error message will give more info (expected value and wrong value).",
      "parentUuid": "6fa6c95b_3b8e778d",
      "revId": "d0f2162f80798b652351f2778c2ea9eff0ced9a5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}