{
  "comments": [
    {
      "key": {
        "uuid": "d609b2de_9a18cdc5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Move.java",
        "patchSetId": 7
      },
      "lineNbr": 103,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2015-11-11T13:31:57Z",
      "side": 1,
      "message": "this is a bit of a corner case, but i actually make use of the ability to move changes to a non-existing branch: when somebody re-pushes to the new branch instead of requesting a move, but the old change has a history which should not be torn apart, i move the new change to the branch \"orcus\" (which obviously does not exist) and then move the original one.\n\npermitting this is also sort of consistent with the fact that changes continue to exist for branches which have been deleted since. of course, *open* changes prevent the deletion of branches, and you don\u0027t want to permit moving closed changes, so it\u0027s sort of consistent again.\n\nanyway, my case can be also served by simply nuking the new change altogether.",
      "revId": "d162656951d328e838f82d8410a99685b92bf712",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16feeae5_8287bef3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Move.java",
        "patchSetId": 7
      },
      "lineNbr": 103,
      "author": {
        "id": 1006432
      },
      "writtenOn": "2015-11-11T17:19:19Z",
      "side": 1,
      "message": "I don\u0027t know that I can really help you with that case. I think a REST API for moving changes would be pretty broken if it didn\u0027t fail when you tried to move to a branch that doesn\u0027t exist. Just imagine the problems with typos.\n\nIs this going to be a big issue for you or something you can work around with new change nuking?",
      "parentUuid": "d609b2de_9a18cdc5",
      "revId": "d162656951d328e838f82d8410a99685b92bf712",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b203791_95e6a403",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Move.java",
        "patchSetId": 7
      },
      "lineNbr": 103,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2015-11-11T19:22:54Z",
      "side": 1,
      "message": "Maybe you can just create a new \u0027graveyard\u0027 branch and move the new change which you don\u0027t want there?\n\nAlternatively, you could enhance the move concept to allow patchsets to be moved to other changes.  Then you could move the new patchset which is now likely rebased properly for the new branch to the old change as a new patchset!",
      "parentUuid": "d609b2de_9a18cdc5",
      "revId": "d162656951d328e838f82d8410a99685b92bf712",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b404344_304a4859",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Move.java",
        "patchSetId": 7
      },
      "lineNbr": 103,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2015-11-13T11:40:29Z",
      "side": 1,
      "message": "i wouldn\u0027t want to create an actual branch for trash.\n\nthe idea of transplanting patchsets is actually kinda neat, though i suspect it might be a bit more effort.\n\nanyway, this isn\u0027t critical. if everything else fails, i can still hack the database.",
      "parentUuid": "3b203791_95e6a403",
      "revId": "d162656951d328e838f82d8410a99685b92bf712",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d609b2de_fa0d8981",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Move.java",
        "patchSetId": 7
      },
      "lineNbr": 118,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2015-11-11T13:31:57Z",
      "side": 1,
      "message": "you must do this within the transaction, as otherwise there is a race condition with creating new changes.\n\nif we\u0027re pedantic, the check for the existence of the target branch should be also within the transaction, but then, there are no actually atomic transactions between git and the database anyway.",
      "revId": "d162656951d328e838f82d8410a99685b92bf712",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6f876fc_6156f252",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/Move.java",
        "patchSetId": 7
      },
      "lineNbr": 118,
      "author": {
        "id": 1006432
      },
      "writtenOn": "2015-11-11T17:19:19Z",
      "side": 1,
      "message": "Yeah, I\u0027m going to convert this to use a BatchUpdate. That should handle both those cases.",
      "parentUuid": "d609b2de_fa0d8981",
      "revId": "d162656951d328e838f82d8410a99685b92bf712",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}