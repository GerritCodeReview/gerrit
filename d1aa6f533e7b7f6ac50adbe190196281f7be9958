{
  "comments": [
    {
      "key": {
        "uuid": "RpL5x2as",
        "filename": "Documentation/rest-api-projects.txt",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-03-13T19:38:08Z",
      "side": 1,
      "message": "I think this should be /HEAD",
      "revId": "d1aa6f533e7b7f6ac50adbe190196281f7be9958",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RpD6lye8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/GetHead.java",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-03-13T19:38:08Z",
      "side": 1,
      "message": "If HEAD is not a symbolic reference (aka its detached) you want to return its SHA-1. So really:\n\n  Ref head \u003d repo.getRef(Constants.HEAD);\n  if (head \u003d\u003d null) {\n    throw new ResourceNotFoundException(\"HEAD\");\n  } else if (head.isSymbolic()) {\n    String n \u003d head.getTarget().getName();\n    if (rsrc.getControl().controlForRef(n).isVisible()) {\n      return n;\n    }\n    throw new AuthException();\n  } else if (head.getObjectId() !\u003d null) {\n    if (rsrc.getControl().isOwner()) {\n      return head.getObjectId().name();\n    }\n    throw new AuthException();\n  }\n  throw new ResourceNotFoundException(\"HEAD\");",
      "revId": "d1aa6f533e7b7f6ac50adbe190196281f7be9958",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RpB6oDcc",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/Module.java",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-03-13T19:38:08Z",
      "side": 1,
      "message": "I think this should be HEAD like it is to Git and the filesystem and the network protocol and... :-)",
      "revId": "d1aa6f533e7b7f6ac50adbe190196281f7be9958",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RpN5ypbE",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/SetHead.java",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-03-13T19:38:08Z",
      "side": 1,
      "message": "Use ref here in the error message in case we mangled their input in some strange way, at least the user can now see what the server really balked on.",
      "revId": "d1aa6f533e7b7f6ac50adbe190196281f7be9958",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RpP53YZ4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/SetHead.java",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-03-13T19:38:08Z",
      "side": 1,
      "message": "This should be logged. We should supply the user\u0027s reflog identity here.",
      "revId": "d1aa6f533e7b7f6ac50adbe190196281f7be9958",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RpJ5sHdE",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/project/SetHead.java",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-03-13T19:38:08Z",
      "side": 1,
      "message": "NEW is also a valid result according to the implementation of JGit.",
      "revId": "d1aa6f533e7b7f6ac50adbe190196281f7be9958",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}