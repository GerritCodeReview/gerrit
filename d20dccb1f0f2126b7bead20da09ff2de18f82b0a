{
  "comments": [
    {
      "key": {
        "uuid": "3b203791_b552c0e5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/metrics/Description.java",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-11-12T14:49:51Z",
      "side": 1,
      "message": "Increase this to 5?",
      "range": {
        "startLine": 70,
        "startChar": 56,
        "endLine": 70,
        "endChar": 57
      },
      "revId": "d20dccb1f0f2126b7bead20da09ff2de18f82b0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b203791_55ddac91",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/metrics/Description.java",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-11-12T17:14:36Z",
      "side": 1,
      "message": "Most metrics have only 2 or 3 things in the annotations:\n\n  description\n  unit\n  gauge or rate or constant or cumulative\n\nSo 4 is still an accurate enough estimate.",
      "parentUuid": "3b203791_b552c0e5",
      "range": {
        "startLine": 70,
        "startChar": 56,
        "endLine": 70,
        "endChar": 57
      },
      "revId": "d20dccb1f0f2126b7bead20da09ff2de18f82b0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b203791_954fc43b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/metrics/MetricMaker.java",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-11-12T14:49:51Z",
      "side": 1,
      "message": "Nit: blank line between methods in class.",
      "revId": "d20dccb1f0f2126b7bead20da09ff2de18f82b0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b203791_f5cb98c8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/metrics/MetricMaker.java",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-11-12T17:14:36Z",
      "side": 1,
      "message": "Not in this case, we have a lot of methods that are identical except for an extra parameter. To keep it concise I have tried to keep them crammed together here since the class is mostly abstract.",
      "parentUuid": "3b203791_954fc43b",
      "revId": "d20dccb1f0f2126b7bead20da09ff2de18f82b0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb6267ec_699ea57a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/metrics/dropwizard/CallbackMetricGlue.java",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-11-12T14:49:51Z",
      "side": 1,
      "message": "Nit: unneeded blank line.",
      "revId": "d20dccb1f0f2126b7bead20da09ff2de18f82b0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b203791_d5c89cce",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/metrics/dropwizard/CallbackMetricGlue.java",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-11-12T17:14:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb6267ec_699ea57a",
      "revId": "d20dccb1f0f2126b7bead20da09ff2de18f82b0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b203791_558feca1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-11-12T14:49:51Z",
      "side": 1,
      "message": "Would it be easy to create unit test, that retrieves this  constant metric and verifies that it equals to Version.getVersion()? That way the whole Metric machinery could be tested.",
      "range": {
        "startLine": 53,
        "startChar": 8,
        "endLine": 53,
        "endChar": 22
      },
      "revId": "d20dccb1f0f2126b7bead20da09ff2de18f82b0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b203791_359470b6",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-11-12T14:49:51Z",
      "side": 1,
      "message": "Nit: too long line.",
      "revId": "d20dccb1f0f2126b7bead20da09ff2de18f82b0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb6267ec_89ff9981",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-11-12T17:14:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b203791_359470b6",
      "revId": "d20dccb1f0f2126b7bead20da09ff2de18f82b0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb6267ec_e9b17509",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-11-12T14:49:51Z",
      "side": 1,
      "message": "Shouldn\u0027t this be !\u003d 0? When only one from number of GarbageCollectorMXBean in JVM:[1] is filled with values then real values are overriden. I ran it on my laptop, and got two beans, with values: count_1 \u003d 3, time_1 \u003d 46 and count_2 \u003d 0 and time_2 \u003d 0. Second default values override the real values.\n\n* [1] According to Javadoc: \"The Java virtual machine may have one or more GarbageCollectorMXBean objects. It may add or remove GarbageCollectorMXBean during execution.\"",
      "range": {
        "startLine": 198,
        "startChar": 14,
        "endLine": 198,
        "endChar": 25
      },
      "revId": "d20dccb1f0f2126b7bead20da09ff2de18f82b0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb6267ec_493f6108",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-11-12T17:14:36Z",
      "side": 1,
      "message": "No -1 is the correct test here.\n\n-1 indicates the JVM is not reporting metrics from this bean. So we should not report metrics from this bean.\n\n0 indicates the JVM *is* reporting metrics, but the current value is 0. That means this GC algorithm is configured and running but has not yet done any work. That is useful to know.",
      "parentUuid": "bb6267ec_e9b17509",
      "range": {
        "startLine": 198,
        "startChar": 14,
        "endLine": 198,
        "endChar": 25
      },
      "revId": "d20dccb1f0f2126b7bead20da09ff2de18f82b0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb6267ec_892d59d1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-11-12T17:25:46Z",
      "side": 1,
      "message": "Thanks. I missed that this metric is cumulative, so we are not overriding values. I wonder if exposing method add() in the API in addition to set() would make the intent more clear  here:\n\n  gcCount.add(gc.getName(), count);",
      "parentUuid": "bb6267ec_493f6108",
      "range": {
        "startLine": 198,
        "startChar": 14,
        "endLine": 198,
        "endChar": 25
      },
      "revId": "d20dccb1f0f2126b7bead20da09ff2de18f82b0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb6267ec_c9aeb1a5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2015-11-12T14:49:51Z",
      "side": 1,
      "message": "Those names are often obfuscated. In my case: \"PS Scavenge\". Max be prefix it with \"GC type: \", or just \"GC \"?",
      "range": {
        "startLine": 199,
        "startChar": 24,
        "endLine": 199,
        "endChar": 36
      },
      "revId": "d20dccb1f0f2126b7bead20da09ff2de18f82b0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b203791_b5d52069",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/metrics/proc/ProcMetricModule.java",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-11-12T17:14:36Z",
      "side": 1,
      "message": "No these names are scoped within the metric name of proc/jvm/gc/time with the field gc_name so it should be obvious from context what it is.",
      "parentUuid": "bb6267ec_c9aeb1a5",
      "range": {
        "startLine": 199,
        "startChar": 24,
        "endLine": 199,
        "endChar": 36
      },
      "revId": "d20dccb1f0f2126b7bead20da09ff2de18f82b0a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}