{
  "comments": [
    {
      "key": {
        "uuid": "3b203791_95134442",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/RequestContextFilter.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2015-11-12T00:36:32Z",
      "side": 1,
      "message": "Would it make sense for this to be a top-level class? Then it would look like\n\n @Singleton\n public class RequestMetrics {\n   public final Counter1\u003cString\u003e failures;\n\n   /** HTTP request attribute for storing metrics. */\n   public static final String ATTRIBUTE_METRICS \u003d\n        RequestMetrics.class.getName() + \"/Metrics\";\n\n   public static RequestMetrics forRequest(ServletRequest req) {\n     return (RequestMetrics) checkNonNull(req.getAttribute(ATTRIBUTE_METRICS));\n   }\n\n   public void attachToRequest(ServletRequest req) {\n     req.setAttribute(ATTRIBUTE_METRICS, this);\n   }\n }\n\nIn doFilter, the RequestContextFilter could do\n\n  metrics.attachToRequest(req)\n\nCallers wanting to update a metric could use RequestMetrics.forRequest(req).\n\nSo the ugliness would be relatively contained.",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 38
      },
      "revId": "d2145560785d9f0c26053d84f3d9f41bfda72b66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b1ff356_542ecc82",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/RequestContextFilter.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-11-12T00:53:01Z",
      "side": 1,
      "message": "Done in the next patch set.",
      "parentUuid": "3b203791_95134442",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 38
      },
      "revId": "d2145560785d9f0c26053d84f3d9f41bfda72b66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b1ff356_d4309ce5",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/RequestContextFilter.java",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-11-12T00:44:09Z",
      "side": 1,
      "message": "final",
      "revId": "d2145560785d9f0c26053d84f3d9f41bfda72b66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b1ff356_7429c878",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/RequestContextFilter.java",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-11-12T00:53:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b1ff356_d4309ce5",
      "revId": "d2145560785d9f0c26053d84f3d9f41bfda72b66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b1ff356_144f3469",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/RequestContextFilter.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-11-12T00:44:09Z",
      "side": 1,
      "message": "ofInteger",
      "range": {
        "startLine": 67,
        "startChar": 42,
        "endLine": 67,
        "endChar": 50
      },
      "revId": "d2145560785d9f0c26053d84f3d9f41bfda72b66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b1ff356_f43398ef",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/RequestContextFilter.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-11-12T00:44:09Z",
      "side": 1,
      "message": "This is the only use of Field in the class that I could find, maybe we can import the Field type?",
      "range": {
        "startLine": 67,
        "startChar": 10,
        "endLine": 67,
        "endChar": 41
      },
      "revId": "d2145560785d9f0c26053d84f3d9f41bfda72b66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b203791_55f36c5c",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/RequestContextFilter.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-11-12T00:53:01Z",
      "side": 1,
      "message": "Copy paste from when I was doing this in another file that already imports a Field from a different package.\n\nDone",
      "parentUuid": "1b1ff356_f43398ef",
      "range": {
        "startLine": 67,
        "startChar": 10,
        "endLine": 67,
        "endChar": 41
      },
      "revId": "d2145560785d9f0c26053d84f3d9f41bfda72b66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b203791_75ee6874",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 1
      },
      "lineNbr": 1011,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-11-12T00:44:09Z",
      "side": 1,
      "message": "Cleaner approach may be to just use an HttpServletResponseWrapper in the RequestContextFilter to wrap the incoming request, capture the status code, and increment the counter if its \u003e\u003d 400.",
      "range": {
        "startLine": 1009,
        "startChar": 0,
        "endLine": 1011,
        "endChar": 55
      },
      "revId": "d2145560785d9f0c26053d84f3d9f41bfda72b66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b1ff356_3423509b",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 1
      },
      "lineNbr": 1011,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-11-12T00:53:01Z",
      "side": 1,
      "message": "Didn\u0027t see this until I\u0027d already reworked according to Jonathan\u0027s suggestion.\n\nWill upload the next PS anyway and then look into this alternative.",
      "parentUuid": "3b203791_75ee6874",
      "range": {
        "startLine": 1009,
        "startChar": 0,
        "endLine": 1011,
        "endChar": 55
      },
      "revId": "d2145560785d9f0c26053d84f3d9f41bfda72b66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b1ff356_94134442",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 1
      },
      "lineNbr": 1011,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-11-12T01:28:49Z",
      "side": 1,
      "message": "Done.  Much cleaner now.  Thanks.",
      "parentUuid": "1b1ff356_3423509b",
      "range": {
        "startLine": 1009,
        "startChar": 0,
        "endLine": 1011,
        "endChar": 55
      },
      "revId": "d2145560785d9f0c26053d84f3d9f41bfda72b66",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}