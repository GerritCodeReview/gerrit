{
  "comments": [
    {
      "key": {
        "uuid": "d6fa5f81_acd1830a",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/RestSession.java",
        "patchSetId": 34
      },
      "lineNbr": 95,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-08-08T17:20:29Z",
      "side": 1,
      "message": "StandardCharsets.UTF_8",
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b3bbfb_37d058df",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/RestSession.java",
        "patchSetId": 34
      },
      "lineNbr": 95,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-08-11T09:05:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6fa5f81_acd1830a",
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "762b73c3_89d8f93b",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/edit/ChangeEditIT.java",
        "patchSetId": 34
      },
      "lineNbr": 282,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-08-08T17:20:29Z",
      "side": 1,
      "message": "amend\n\n(bad rebase?)",
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b3bbfb_77cad02c",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/edit/ChangeEditIT.java",
        "patchSetId": 34
      },
      "lineNbr": 282,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-08-11T09:05:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "762b73c3_89d8f93b",
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6fa5f81_8cce4764",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/edit/ChangeEditIT.java",
        "patchSetId": 34
      },
      "lineNbr": 312,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-08-08T17:20:29Z",
      "side": 1,
      "message": "Sorry, I forget what 204 is, use an HttpStatus constant?",
      "range": {
        "startLine": 312,
        "startChar": 17,
        "endLine": 312,
        "endChar": 20
      },
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b3bbfb_57c5cc1b",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/edit/ChangeEditIT.java",
        "patchSetId": 34
      },
      "lineNbr": 312,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-08-11T09:05:48Z",
      "side": 1,
      "message": "204 No Content\nDone",
      "parentUuid": "d6fa5f81_8cce4764",
      "range": {
        "startLine": 312,
        "startChar": 17,
        "endLine": 312,
        "endChar": 20
      },
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b3bbfb_97de84ef",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/edit/ChangeEditIT.java",
        "patchSetId": 34
      },
      "lineNbr": 318,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-08-11T09:05:48Z",
      "side": 1,
      "message": "Done",
      "range": {
        "startLine": 318,
        "startChar": 17,
        "endLine": 318,
        "endChar": 20
      },
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6fa5f81_ecdb8b24",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/edit/ChangeEditIT.java",
        "patchSetId": 34
      },
      "lineNbr": 423,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-08-08T17:20:29Z",
      "side": 1,
      "message": "I don\u0027t think the distinction here is between GET and PUT, it\u0027s between the edit and a file within the edit. Eventually we support multiple methods on each URL.",
      "range": {
        "startLine": 423,
        "startChar": 17,
        "endLine": 423,
        "endChar": 23
      },
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d66fbf39_a4e26234",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/edit/ChangeEditIT.java",
        "patchSetId": 34
      },
      "lineNbr": 423,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-08-11T09:05:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6fa5f81_ecdb8b24",
      "range": {
        "startLine": 423,
        "startChar": 17,
        "endLine": 423,
        "endChar": 23
      },
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6fa5f81_ccd84f2b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeEditResource.java",
        "patchSetId": 34
      },
      "lineNbr": 34,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-08-08T17:20:29Z",
      "side": 1,
      "message": "This resource is really two kinds of resources:\n\n* The edit itself\n* A path within the edit\n\ndistinguished by whether path is null or not. I think this is sufficiently subtle that it should be documented.\n\n(Of course they should really be two classes but I understand the RestCollection stuff doesn\u0027t let us do this.)",
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56ae6f94_985955c2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeEditResource.java",
        "patchSetId": 34
      },
      "lineNbr": 34,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-08-11T09:05:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6fa5f81_ccd84f2b",
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6fa5f81_2ca753ad",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/CreateOrModifyChangeEdit.java",
        "patchSetId": 34
      },
      "lineNbr": 69,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-08-08T17:20:29Z",
      "side": 1,
      "message": "@Override",
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b3bbfb_b7db88fe",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/CreateOrModifyChangeEdit.java",
        "patchSetId": 34
      },
      "lineNbr": 69,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-08-11T09:05:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6fa5f81_2ca753ad",
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "762b73c3_690b05f9",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/CreateOrModifyChangeEdit.java",
        "patchSetId": 34
      },
      "lineNbr": 79,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-08-08T17:20:29Z",
      "side": 1,
      "message": "Let me see if I understand. If you\n\n PUT /changes/X/edit/path\n\nand the edit does not previously exist, it creates the edit against the latest patch set, then applies your contents to path.\n\nThe problem is the race condition when the latest patch set advanced before your PUT happened. Then the contents of path may not have been what you expected, and you just overwrite them.\n\nI think requiring this to be split into two requests, one to POST /changes/X/edit to create the edit, one to PUT the path, would be fine.\n\n(This is distinct from a race between two PUTs to the same path when the edit already exists. We can solve that with ETags but I\u0027m fine punting on that for now.)",
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b3bbfb_d7d8fc03",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/CreateOrModifyChangeEdit.java",
        "patchSetId": 34
      },
      "lineNbr": 79,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-08-11T09:05:48Z",
      "side": 1,
      "message": "| The problem is the race condition when the latest patch set advanced before your PUT happened.\n\nYou have just said more or less what i\u0027ve said in this comment [1] at 09:52 PM.\n\n| I think requiring this to be split into two requests, one to POST /changes/X/edit\n\nThere is an usability issue with this approach: from the file table of regular patch set on CS2 user would like to select a file to modify/restore/delete and push on save button, done. That worked in previous implementation, as i used revision based URLs. With latest approach where we are using last/current patch set as base for the edit we cannot reliable garantee that the edit is going to be created on the patch set the user is currently browsing unless we pass the patch set number as parameter to the change edit create endpoint, what we could do in case of PUT, in fact we are passing already restore flag. But we cannot passt base patch set number on DELETE, while some load balancers don\u0027t support passing request body on DELETE. For one the probability, that someone else creates new revision in same moment ls very low, and for another do re really care when this is happened? With current approach, change edit cannot be published and must be rebased first, resolving conflicts, etc. This is even not different from the fact when new patch set is created after change edit was created against right base revision: It must be rebased before it can be published. \n\nHaving said that, i suggest to stay with allowing to create change edits directly by PUT or DELETE on non-existing edit collection resource. This is how this is  implemented in latest version of this series. So the user can now very easy conduct change edit with multiple modifications:\n\nSuppose a revision has different modifications in 10 files: 3 deleted, 3 added and 4 modified. User would like to restore 2 files form 3, delete 2 from 3 and modify 2 from 4:\n\n* open latest revision, say 7 (no change edit exists so far for this change)\n* switch to edit mode in file table\n* click on restore icon or delete icon or modify icon and change content. New edit is created.\n* CS2 is refreshed and edit is opened (because it is based on latest patch set)\n* switch to revision 7 again, switch file table to edit mode, perform desired modification\n* repeat these steps for all files\n\nI think this can be even optimized by providing a \"Multiply modifications\" - checkbox on file table header  (?) to stay on the revision and not to reload change edit. Similar concept is used in Atlasian\u0027s JRA create issue dialog, having: \"Create another\" - checkbox, Create and Cancel buttons.\n\n [1] https://gerrit-review.googlesource.com/#/c/56417/23/\n    gerritserver/src/main/java/com/google/gerrit/server/\n    edit/ChangeEditModifier.java",
      "parentUuid": "762b73c3_690b05f9",
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b66c0b49_830e3e55",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/CreateOrModifyChangeEdit.java",
        "patchSetId": 34
      },
      "lineNbr": 79,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-08-11T11:42:03Z",
      "side": 1,
      "message": "The reason for usability problem while populating the edit is the recently made design change/simplification to have only one edit for a change. Because it is not revision specific any more the second decision was made to not reflect the patch set number the edit is based on in edit reference. But we still need to know the base revision of change edit and that why third decision was made to use patch set\u0027s revision itself and not its parent as base revision for change edit (and squash change edit while publishing into its parent).\n\nSo now, after creation of edit (empty or only with one modification), the list of files in edit is empty or equals one and not the same list of file that was contained in original patch set the edit was created on.\n\nWe can let it as is and i can think of awkward work arounds, like one described above, jumping all the time between original patch set and edit, or even worse, extend CS2/file table with pop-up browser dialog providing the list of files in the original patch set to select from for modification in change edit, or we can revisit the new design and change it as following:\n\n* Only one change edit is allowed to exist for change (still)\n* Change edit parent is the parent revision of patch set it is based on (and not the patch set itself)\n* No need to squash the edit during publishing\n* Patch set number the change edit is based on is reflected in the change edit reference: e. g. for user 1000042, change 56414 and base patch set 7 we could use:\n\n  refs/users/42/1000042/edit-56414/7",
      "parentUuid": "36b3bbfb_d7d8fc03",
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6dfab55_2b37f9f8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/CreateOrModifyChangeEdit.java",
        "patchSetId": 34
      },
      "lineNbr": 79,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-08-12T18:20:49Z",
      "side": 1,
      "message": "\u003e select a file to modify/restore/delete and push on save button, done. That worked in previous implementation, as i used revision based URLs.\n\nIt was well defined, but I wouldn\u0027t say \"done\", because they would still have to rebase the edit for it to be published.\n\n\u003e unless we pass the patch set number as parameter to the change edit create endpoint\n\nDoesn\u0027t need to be a parameter, we can use an If-Match header, as long as we construct an appropriate ETag. Then the client code handles the 409 Conflict response appropriately.\n\nI think actually for the delete/restore case, it\u0027s fine to make the request without an ETag and just delete/restore from the latest patch set if one was created behind our back.\n\nI\u0027m fine with leaving this race in on the PUT in until we do so later.\n\n\u003e switch to edit mode in file table\n\nCan we create the edit (and refresh CS2 to latest patch set) as soon as the user does this action? That seems like it would cut down on the frequency of races.",
      "parentUuid": "36b3bbfb_d7d8fc03",
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6509fa6_fc2449cf",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/CreateOrModifyChangeEdit.java",
        "patchSetId": 34
      },
      "lineNbr": 79,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-08-12T20:21:19Z",
      "side": 1,
      "message": "Yes, this is how it is currently implemented:\n\n* open a change without edit, last ps is opened\n* switch to edit mode in file table\n* when file is restored ot deleted, this is only click is needed to create change edit on top of latest patch set. When file is modified, file content is loaded, popup dialog with file content is opened. After modification, click save button changed it created\n* immediately after first request, CS2 is refreshed and change edit is loaded, then and only then, when the change edit was created on top of latest patch set. Otherwise latest path set os loaded per defait (current revisionb is not overriden in this case). To select edit to continue with modification on other files user must select edit from patch sets drop down and continue.\n\nBut this workflow has seriously flaw, as described above, because of wrong parent: no files that were modified in original patch set are visible in changed edit after it as created (after very fist modification). They are gone. For file modification they can be add manually, by writing them down in edit dialog, or switched to the patch set and modiy it there and the content would be written in the change edit.\n\nI think we should made another change in design and make patch set\u0027s parent the parent of change edit and store base patch set in ref as described in my previous comment.",
      "parentUuid": "b6dfab55_2b37f9f8",
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "762b73c3_0916c924",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PutContent.java",
        "patchSetId": 34
      },
      "lineNbr": 32,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-08-08T17:20:29Z",
      "side": 1,
      "message": "I would be explicit and call this PutEditContent",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 23
      },
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b3bbfb_f7d500cb",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/PutContent.java",
        "patchSetId": 34
      },
      "lineNbr": 32,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-08-11T09:05:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "762b73c3_0916c924",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 23
      },
      "revId": "d2cf8c3c419f61cfcf2a9182021274407919ff63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}