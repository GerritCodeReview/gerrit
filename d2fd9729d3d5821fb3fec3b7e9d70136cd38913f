{
  "comments": [
    {
      "key": {
        "uuid": "d38ee191_6646f758",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 42,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "I don\u0027t want to bikeshed but I think that this name is a bit confusing. Reading \"DiffCalculator\", I would think that this class is responsible for computing diffs inside of Gerrit, kind of like the core of the diff computation. In reality, it\u0027s not. It\u0027s just a formatter which processes the already available details and diff results and fills them into a DiffInfo. Could we please go away from \"calculator\"? I would suggest something like \"DiffInfoFormatter\". If we want to follow in the steps of other Gerrit naming patterns (which are not always ideal), we could also go for \"DiffJson\" (analogous to ChangeJson, ChangeEditJson, GroupJson, ...).",
      "range": {
        "startLine": 42,
        "startChar": 13,
        "endLine": 42,
        "endChar": 27
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "683bb35c_f51f3aae",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 42,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "Agree. What about DiffInfoCreator? Formatter sounds like it should do some text processing, but it doesn\u0027t.",
      "parentUuid": "d38ee191_6646f758",
      "range": {
        "startLine": 42,
        "startChar": 13,
        "endLine": 42,
        "endChar": 27
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a8f26a4_eb92867c",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 42,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-06T15:59:32Z",
      "side": 1,
      "message": "True. DiffInfoCreator sounds very good to me.",
      "parentUuid": "683bb35c_f51f3aae",
      "range": {
        "startLine": 42,
        "startChar": 13,
        "endLine": 42,
        "endChar": 27
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5528e97_7e834325",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 42,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-08T18:08:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a8f26a4_eb92867c",
      "range": {
        "startLine": 42,
        "startChar": 13,
        "endLine": 42,
        "endChar": 27
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3c67b1f_bc3445ce",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 57,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "Should be \"private final\".",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 57,
        "endChar": 21
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fd652c1_783c30f8",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 57,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3c67b1f_bc3445ce",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 57,
        "endChar": 21
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef2a69c3_e4d4597b",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 99,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "Optional: To increase readability, I would extract this code to a separate method.",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 99,
        "endChar": 18
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a04688b6_95f87a68",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 99,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "I\u0027ve changed method a little bit. Does it make sense extract code to a separate method now?",
      "parentUuid": "ef2a69c3_e4d4597b",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 99,
        "endChar": 18
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6307fabd_4a4ffc93",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 99,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-06T15:59:32Z",
      "side": 1,
      "message": "I agree that with the adjustments, it\u0027s better to not extract the code.",
      "parentUuid": "a04688b6_95f87a68",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 99,
        "endChar": 18
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da0b004a_aef6fa85",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 102,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "Should be private. Could additionally be static. (We use \u0027static\u0027 for methods whenever possible.)",
      "range": {
        "startLine": 102,
        "startChar": 2,
        "endLine": 102,
        "endChar": 8
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b40f21a_113cddd5",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 102,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da0b004a_aef6fa85",
      "range": {
        "startLine": 102,
        "startChar": 2,
        "endLine": 102,
        "endChar": 8
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36a5d914_7811eed0",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 143,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "The official recommendation for Java code is to try to avoid returning null in new code.\nAlternatives here:\n1) We could check the condition before calling this method.\n2) We could return an Optional. The calling code could still use optional.orElse(null) but then this would be much more explicit.",
      "range": {
        "startLine": 143,
        "startChar": 6,
        "endLine": 143,
        "endChar": 18
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32814bee_fdda3ae6",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 143,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "Wow, didn\u0027t know about Optional.\nI think in this case Optional is better, because it allows to write condition in one place (inside createFileMeta method).\nChanged to Optional.",
      "parentUuid": "36a5d914_7811eed0",
      "range": {
        "startLine": 143,
        "startChar": 6,
        "endLine": 143,
        "endChar": 18
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e66509f6_b5c3a2fb",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 143,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:14:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32814bee_fdda3ae6",
      "range": {
        "startLine": 143,
        "startChar": 6,
        "endLine": 143,
        "endChar": 18
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c292fab_62e8fc38",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 156,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "Optional (as this class was copied): The fields should be private.",
      "range": {
        "startLine": 156,
        "startChar": 23,
        "endLine": 156,
        "endChar": 39
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4f81d9c_c9a8afe7",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 156,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c292fab_62e8fc38",
      "range": {
        "startLine": 156,
        "startChar": 23,
        "endLine": 156,
        "endChar": 39
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ba7aa39_a25cc0ce",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 257,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "Will this class get additional fields or methods in a follow-up change? If not, I think we should rather use List\u003cContentEntry\u003e in all places to avoid unnecessary boilerplate code. If this class will get additional fields, can we make it an AutoValue class?",
      "range": {
        "startLine": 257,
        "startChar": 23,
        "endLine": 257,
        "endChar": 30
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbdbd18b_94f2a953",
        "filename": "java/com/google/gerrit/server/diff/DiffCalculator.java",
        "patchSetId": 15
      },
      "lineNbr": 257,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "Removed",
      "parentUuid": "6ba7aa39_a25cc0ce",
      "range": {
        "startLine": 257,
        "startChar": 23,
        "endLine": 257,
        "endChar": 30
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef3b5a5e_b2420761",
        "filename": "java/com/google/gerrit/server/diff/DiffSide.java",
        "patchSetId": 15
      },
      "lineNbr": 19,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "Ideally, this should be an AutoValue class.",
      "range": {
        "startLine": 19,
        "startChar": 13,
        "endLine": 19,
        "endChar": 21
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b27de943_f2006536",
        "filename": "java/com/google/gerrit/server/diff/DiffSide.java",
        "patchSetId": 15
      },
      "lineNbr": 19,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "I am not sure. AutoValue in java is a way to create some \"value\" type.\nBut DiffSide itself doesn\u0027t look like a \"value\". For example, it doesn\u0027t make sense to compare 2 DiffSide.\nAlso, it doesn\u0027t make code shorter in this case.",
      "parentUuid": "ef3b5a5e_b2420761",
      "range": {
        "startLine": 19,
        "startChar": 13,
        "endLine": 19,
        "endChar": 21
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b1ec0e0_597eb27a",
        "filename": "java/com/google/gerrit/server/diff/DiffSide.java",
        "patchSetId": 15
      },
      "lineNbr": 19,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-06T15:59:32Z",
      "side": 1,
      "message": "I took this class as a value type at first glance. If this class isn\u0027t a value type, what is it?\n\nFor me, it would also make sense to have e.g. an equals() or toString() method on a DiffSide. We currently don\u0027t have it but it would be useful if we ever end up adding unit tests. A proper toString() method would also be helpful for debugging purposes.\n\nBy the way, using AutoValue is not just about making the code shorter. There are quite some resources which mention the benefits of using it. I can point you to them if you want.\n\nInside of Gerrit, we are definitely pushing for AutoValue. We\u0027ve been converting old classes to AutoValue over the last years and directly used AutoValue for new ones.\n\nI currently only see one obstacle for making this class an AutoValue: PatchScriptFileInfo is not deeply immutable, which it actually should be as sharing mutable classes is discouraged. We sometimes do this inside of Gerrit but that\u0027s because of legacy reasons. Honestly, PatchScriptFileInfo should also have been an AutoValue. Do you think that\u0027s possible to change?",
      "parentUuid": "b27de943_f2006536",
      "range": {
        "startLine": 19,
        "startChar": 13,
        "endLine": 19,
        "endChar": 21
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faa660bc_024c70d2",
        "filename": "java/com/google/gerrit/server/diff/DiffSide.java",
        "patchSetId": 15
      },
      "lineNbr": 19,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-08T18:08:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b1ec0e0_597eb27a",
      "range": {
        "startLine": 19,
        "startChar": 13,
        "endLine": 19,
        "endChar": 21
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69bfb99d_4756cd6b",
        "filename": "java/com/google/gerrit/server/diff/DiffSide.java",
        "patchSetId": 15
      },
      "lineNbr": 29,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "Thought for future: It\u0027s a bit strange that DiffSide refers to something called \"PatchScriptFileInfo\", as 1) \"DiffSide\" is a very clear and nice name whereas \"PatchScriptFileInfo\" is rather meaningless to most developers, and 2) the xxxInfo objects are typically the ones sent as return types from the REST API, which doesn\u0027t seem to be true for PatchScriptFileInfo. In addition, it\u0027s non-obvious that DiffSide is in the server.diff package and PatchScriptFileInfo is somewhere totally different. I guess we just need to do some additional cleanups after these nice refactorings of this chain of changes.",
      "range": {
        "startLine": 29,
        "startChar": 18,
        "endLine": 29,
        "endChar": 37
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80f6b29d_3fe4f216",
        "filename": "java/com/google/gerrit/server/diff/DiffSide.java",
        "patchSetId": 15
      },
      "lineNbr": 29,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "Yes. If you don\u0027t mind, I can do it after submit ApplyFix",
      "parentUuid": "69bfb99d_4756cd6b",
      "range": {
        "startLine": 29,
        "startChar": 18,
        "endLine": 29,
        "endChar": 37
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab41f519_e804b706",
        "filename": "java/com/google/gerrit/server/diff/DiffWebLinksProvider.java",
        "patchSetId": 15
      },
      "lineNbr": 21,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "Please add Javadoc descriptions to all new classes/interfaces, at least the public ones.",
      "range": {
        "startLine": 21,
        "startChar": 17,
        "endLine": 21,
        "endChar": 37
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e324718_b869e9d4",
        "filename": "java/com/google/gerrit/server/diff/DiffWebLinksProvider.java",
        "patchSetId": 15
      },
      "lineNbr": 21,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:45:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab41f519_e804b706",
      "range": {
        "startLine": 21,
        "startChar": 17,
        "endLine": 21,
        "endChar": 37
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ef50f27_1350b68a",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 140,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "It\u0027s nice that we have this exact code in just one place now. :-)",
      "range": {
        "startLine": 140,
        "startChar": 14,
        "endLine": 140,
        "endChar": 71
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04810d69_be47a0d9",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 143,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "Nit: It\u0027s recommended to use DiffWebLinksProvider here. (Effective Java 3rd edition, item 64: \"Refer to objects by their interfaces\")",
      "range": {
        "startLine": 143,
        "startChar": 6,
        "endLine": 143,
        "endChar": 30
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "700a5f0d_3315ef98",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 143,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04810d69_be47a0d9",
      "range": {
        "startLine": 143,
        "startChar": 6,
        "endLine": 143,
        "endChar": 30
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51f64234_c0ca6739",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 160,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "I like the idea of extracting this part of the code. The current version has some bits which are not as elegant as I would wish them to be. For instance, sideA and sideB or both stored within this class. This works fine for getDiffLinks(). On the other hand, getFileWebLinks() needs to get the DiffSide.Type passed in upon which an if-condition is necessary even though the calling code of getFileWebLinks() has an own instance of DiffSide. I think we could improve the code even further with some small additional adjustments. (I hope those don\u0027t conflict with your follow-up changes.)\n\nSuggestions:\nAdd the String revA/revB as field to DiffSide. Thus, getFileWebLinks() could take DiffSide as argument from which all necessary details can be retrieved (-\u003e no if-condition). As additional benefit, we could remove the enum DiffSide.Type. Furthermore, getDiffLinks could take \"DiffSide sideA, DiffSide sideB\" as argument. Thus, it wouldn\u0027t be confusing that getFileWebLinks() takes in a DiffSide but getDiffLinks() uses the internal fields.",
      "range": {
        "startLine": 160,
        "startChar": 23,
        "endLine": 160,
        "endChar": 79
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9190a4b2_329bf5f0",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 160,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "\u003e Suggestions:\n\u003e Add the String revA/revB as field to DiffSide. Thus, getFileWebLinks() could take DiffSide as argument from which all necessary details can be retrieved (-\u003e no if-condition). As additional benefit, we could remove the enum DiffSide.Type. Furthermore, getDiffLinks could take \"DiffSide sideA, DiffSide sideB\" as argument. Thus, it wouldn\u0027t be confusing that getFileWebLinks() takes in a DiffSide but getDiffLinks() uses the internal fields.\n\nI agree, that this code looks ugly, but I tried something similar to what you describe here and result was much worse. Unfortunately, I forgot what was the problem.\nI will try to work on this comment separately.",
      "parentUuid": "51f64234_c0ca6739",
      "range": {
        "startLine": 160,
        "startChar": 23,
        "endLine": 160,
        "endChar": 79
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c52edbb5_9409608a",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 160,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:35:32Z",
      "side": 1,
      "message": "Tried to do it and I remembered what was the problem.\nIn case of robot suggestions, there are no revision for a side. I.e. revA/revB make sense only for diff between 2 commits.\nI decided to localize this knowledge here, so nobody can use rev property with robot suggestions.",
      "parentUuid": "9190a4b2_329bf5f0",
      "range": {
        "startLine": 160,
        "startChar": 23,
        "endLine": 160,
        "endChar": 79
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0a2b5a4_244d4ea7",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 160,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-06T15:59:32Z",
      "side": 1,
      "message": "I see. Let\u0027s get your other changes in first and then we can revisit whether there\u0027s a chance to separate the code in a better way.",
      "parentUuid": "c52edbb5_9409608a",
      "range": {
        "startLine": 160,
        "startChar": 23,
        "endLine": 160,
        "endChar": 79
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6ba1097_0105419f",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 163,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "This could just be Project.NameKey. It would also be nice, if the below code in getDiffLinks() and in getFileWebLinks() would use the same method to get the String version of the project name.",
      "range": {
        "startLine": 163,
        "startChar": 18,
        "endLine": 163,
        "endChar": 36
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50a1c0e1_3fbec39c",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 163,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:35:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b6ba1097_0105419f",
      "range": {
        "startLine": 163,
        "startChar": 18,
        "endLine": 163,
        "endChar": 36
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c33501a_d97d42e0",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 169,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "This should be marked as nullable here and in the constructor.",
      "range": {
        "startLine": 169,
        "startChar": 4,
        "endLine": 169,
        "endChar": 40
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "500e9fb6_4467696f",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 169,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "If revA/revB are moved out of this class, we should consider to use more specific types for these fields (e.g. just PatchSet.Id for both of them).",
      "range": {
        "startLine": 168,
        "startChar": 4,
        "endLine": 169,
        "endChar": 40
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12b807ab_9da0bb36",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 169,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "Probably, I need some help with it. It is not clear for me how to use PatchSet.Id instead of refName",
      "parentUuid": "500e9fb6_4467696f",
      "range": {
        "startLine": 168,
        "startChar": 4,
        "endLine": 169,
        "endChar": 40
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0df8fe49_699cf4bd",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 169,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c33501a_d97d42e0",
      "range": {
        "startLine": 169,
        "startChar": 4,
        "endLine": 169,
        "endChar": 40
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd9858f4_b1bba00f",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 169,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-06T15:59:32Z",
      "side": 1,
      "message": "I was referring to the other suggestions I left in the comment above. Without them, changing these fields to PatchSet.Id is not possible as you noticed. Marking as resolved now as revA/revB will remain in this class.",
      "parentUuid": "12b807ab_9da0bb36",
      "range": {
        "startLine": 168,
        "startChar": 4,
        "endLine": 169,
        "endChar": 40
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e3773fa_12cd06ab",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 189,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "Optional: I saw that this was copied and hence I\u0027m marking it as optional. This code block could be rewritten with Optional#map and Optional#orElseGet, which is recommended instead of explicitly calling Optional#isPresent.",
      "range": {
        "startLine": 187,
        "startChar": 10,
        "endLine": 189,
        "endChar": 63
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6c8b90e_3b7b8809",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 189,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e3773fa_12cd06ab",
      "range": {
        "startLine": 187,
        "startChar": 10,
        "endLine": 189,
        "endChar": 63
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a822334f_f9598ae6",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 220,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-11-05T15:20:36Z",
      "side": 1,
      "message": "This class seems to be currently unused and should be removed. If you need it in a follow-up change, please add it in that change.",
      "range": {
        "startLine": 220,
        "startChar": 23,
        "endLine": 220,
        "endChar": 35
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a30bbe9_25a7d74c",
        "filename": "java/com/google/gerrit/server/restapi/change/GetDiff.java",
        "patchSetId": 15
      },
      "lineNbr": 220,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2019-11-05T18:13:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a822334f_f9598ae6",
      "range": {
        "startLine": 220,
        "startChar": 23,
        "endLine": 220,
        "endChar": 35
      },
      "revId": "d2fd9729d3d5821fb3fec3b7e9d70136cd38913f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}