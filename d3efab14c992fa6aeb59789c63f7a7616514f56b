{
  "comments": [
    {
      "key": {
        "uuid": "7a920fd0_df13fdb9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2019-10-30T14:03:57Z",
      "side": 1,
      "message": "Awesome! just a few questions:\n1. will this be merged to master ? if not, seems there will be a diverge between this branch and the master\n2. we are using `gr-formatted-text` in quite a few places, potentially not limited to comments and message texts, but adding a plugin endpoint to replace it will affect all of them, we may need to think twice on that :) if you only target on messages and comments, maybe add endpoints there instead ? its like you can control how you format message texts and comments, a bit more specific ?",
      "revId": "d3efab14c992fa6aeb59789c63f7a7616514f56b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f123a77e_0ed8588a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2019-10-30T14:29:16Z",
      "side": 1,
      "message": "Thanks for looking at this :-)\n\n1. Sure, if we want to add this change, we should merge it up to master, let alone to allow plugins using this endpoint to work in all future versions.\n2. That is a valid point. I only checked for stable-2.16:\n\n  \u003e git grep \"\u003cgr-formatted-text\"\n  polygerrit-ui/app/elements/change/gr-comment-list/gr-comment-list.html:          \u003cgr-formatted-text\npolygerrit-ui/app/elements/change/gr-message/gr-message.html:            \u003cgr-formatted-text\npolygerrit-ui/app/elements/change/gr-reply-dialog/gr-reply-dialog.html:        \u003cgr-formatted-text\npolygerrit-ui/app/elements/diff/gr-diff-comment/gr-diff-comment.html:        \u003cgr-formatted-text class\u003d\"message\"\npolygerrit-ui/app/elements/shared/gr-formatted-text/gr-formatted-text_test.html:    \u003cgr-formatted-text\u003e\u003c/gr-formatted-text\u003e\n\nAll these occurrences are either messages or comments, thus I assumed it would be OK to just use it, since it would be the smallest effort/change. Also since comments and messages are managed independently in all these places and potentially more in the future, it would be nice to not have to maintain this endpoint at all these places.\nLet me check on master as well, whether this element is used there for other things as well.\n\nHowever, as I mentioned in my earlier message my biggest concern with this change is actually that changes made to the formatting by Gerrit core and the plugins are not at all synchronized and can easily interfere with each other, especially if more than one plugin is involved. It would be nice to have this pluggable in a different way. Ideally the method that does the formatting in Gerrit core would just call the methods provided by plugins one after the other after it itself finished formatting the text. I have however no idea how to do something like that. Do you have any ideas?",
      "parentUuid": "7a920fd0_df13fdb9",
      "revId": "d3efab14c992fa6aeb59789c63f7a7616514f56b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a10b92b6_742fa94f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2019-10-30T15:11:59Z",
      "side": 1,
      "message": "I checked on the master-branch as well. `gr-formatted-text` is used in the same locations as in stable-2.16. So just for messages and comments. The name of the element is thus probably at least for now suggesting a bigger scope than necessary.",
      "parentUuid": "f123a77e_0ed8588a",
      "revId": "d3efab14c992fa6aeb59789c63f7a7616514f56b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00459d47_bfc45ad9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1086906
      },
      "writtenOn": "2019-10-31T10:56:57Z",
      "side": 1,
      "message": "Yup, the name of this component is pretty generic. I won\u0027t limit it to only for messages and comments.\n\nRegarding to the order of Gerrit core and plugin loading issue, we are actually working on something to see if we can support config certain plugins to load before others, some even before main Gerrit (preloaders). But that will be an ongoing work without a defined date to support yet.\n\nRegarding multiple plugins issues, can you elaborate it a bit more ? is it for multiple plugins that may register into the same endpoint ?",
      "parentUuid": "f123a77e_0ed8588a",
      "revId": "d3efab14c992fa6aeb59789c63f7a7616514f56b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "448f5c66_f3e69d0a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2019-11-06T14:16:54Z",
      "side": 1,
      "message": "\u003e Yup, the name of this component is pretty generic. I won\u0027t limit it to only for messages and comments.\n\nOk, I will try to make the endpoint more specific and push a new patchset asap.\n\n\u003e Regarding to the order of Gerrit core and plugin loading issue, we are actually working on something to see if we can support config certain plugins to load before others, some even before main Gerrit (preloaders). But that will be an ongoing work without a defined date to support yet.\n\nSounds great!\n\n\u003e Regarding multiple plugins issues, can you elaborate it a bit more ? is it for multiple plugins that may register into the same endpoint ?\n\nI meant specifically this endpoint. If you look at `gr-formatted-text.js` the component will check, whether the content of `div#container`-content changes and will then format the contents. I noticed that this did not always happen after the hook to this endpoint is attached, but sometimes did. I solved this issue from the plugin site by adding a mutation observer that also checks for changes in the div\u0027s content and does the formatting afterwards. This causes a some unnecessary checks on the content, but works, although this might get out of hand with multiple plugins doing the same thing. Since it would also not set, which plugin hooks first, the output would be unpredictable if two plugins check for the same pattern to decide on formatting; Or if a plugin tries to overwrite core formatting. Having thought a little bit more about that and trying to come up with sensible examples however, I think this might anyway out of scope and could just be not supported.",
      "parentUuid": "00459d47_bfc45ad9",
      "revId": "d3efab14c992fa6aeb59789c63f7a7616514f56b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaa87ecb_d840aaf4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2019-11-07T08:38:43Z",
      "side": 1,
      "message": "On the other hand, what contradicts to use this endpoint to not only let plugins format other texts than comments and messages, i.e. leaving the endpoint as is and just changing the commit message accordingly?",
      "parentUuid": "448f5c66_f3e69d0a",
      "revId": "d3efab14c992fa6aeb59789c63f7a7616514f56b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}