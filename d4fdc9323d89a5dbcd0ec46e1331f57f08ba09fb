{
  "pushCert": "certificate version 0.1\npusher Dave Borowitz \u003cdborowitz@google.com\u003e 1542650508 -0800\nnonce AGLkUnBb6T3to9YJHZxE2efmYI8+5MP8mge0s57mEJWHz0jSGKyBKcUUK0QZ9xE62yylm7d0xj4P\n\n0000000000000000000000000000000000000000 d4fdc9323d89a5dbcd0ec46e1331f57f08ba09fb refs/for/master\n-----BEGIN PGP SIGNATURE-----\n\niQJJBAABCgAzFiEEpPm/sOxWgSqG5grhX9fFmpoSiIwFAlvy+owVHGRib3Jvd2l0\nekBnb29nbGUuY29tAAoJEF/XxZqaEoiMn+0P/RNAN1Mbk8NoXCg2tWnszk/QCBpr\nmGtk/clSjNmnhyR1nbZii8S7HtzzrKIe/FEIYSUNDbyvmkG2+bZ6D9h9V9De8IIk\nsjmbOHnyfRSsfEusKCdpi9Tt5U/12mEyZmvIiiXVN/Lihs3FVC1guSGzjhZq3bDF\noAAI4oSZRD5Kw7aRRnbvvR3KvlolOWPNtJHkzPBrvvPvgTcPRaqW1T5CL/Eq4rn+\nITTTJs3l2CzerKg+lxX5BMjwQ3KaoqU4aAJjcJGh+P0LfeSWPSc5KCvC5i0d4XdO\n9tf3AmaYy7DW8B07GWpI/r/hIwDZAMhoRHOb0GnOf5yxEpY+UgWd6D+7rwIPj5Ff\nEhq8qhDMfEoXUINMWULQS5JMYZ61poG8BVxulfwrGFAZKC/4r+pdetnwYfVYxfT9\nQSPne+SJ3imrBnWCpTxooFsEwsHFQf34inrGCGrTnAITgoXQ3xpa/+p2cTm3USbu\nLDJwaNIniAQjK7VPKYN1TxIJh7P3HhJjdqoIW7ObLPhiE0LejbkL0VpOSsW0SpDw\nodOh9QpsR/ETx9dzcWI5WykNzrX9OuRIez5B/FTp4Nk11X7jLuSZHKiO1VBjuzZt\nd56Z3GbslNHloGj1Ap3j8GpwJ1DWNUS6HNs2SUJNKZw/4QSY2LCYToe7ru+nFUx4\nzPuEj+P4vPV2qRT0\n\u003dag9E\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "9bd3818f_cc944dee",
        "filename": "javatests/com/google/gerrit/server/project/ProjectConfigTest.java",
        "patchSetId": 5
      },
      "lineNbr": 642,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2019-01-22T10:08:05Z",
      "side": 1,
      "message": "When we read ProjectConfig of a project, it contains the default configs from the \"BaseConfig\". IIUC, this could introduce two problems:\n\n1- When saving the loaded ProjectConfig in the current project, it will overlay the \"BaseConfig\" because we didn\u0027t implement a strategy to tell if a config coming from the \"BaseConfig\" or not. And this saving action will break the inheritance once it happens.\n2- Potential confusing behaviors. Assume we have projects and a config like below.\n\n    A     -\u003e   B       -\u003e All-Projects -\u003e BaseConfig\n[inherit] -\u003e [inherit] -\u003e   [false]    -\u003e [true]\n\nIf we went through ProjectState to get the config value for A, B and All-Projects, all should be **false** because the value was overlayed in All-Projects.\n\nIf we went through ProjectConfig to get the config value for A, B and All-Projects, values will be **true, true, false** because they inherit from BaseConfig directly. So the relation graph looks like:\n\n    A    -\u003e    B   -\u003e  All-Projects [false]\n       \\       |       /\n        \\      |      /\n         \\     |     /\n           BaseConfig [true]\n\nMy question here wil be why do we need the second inheritance behavior? Should the first one good enough for our usecases?",
      "range": {
        "startLine": 641,
        "startChar": 21,
        "endLine": 642,
        "endChar": 39
      },
      "revId": "d4fdc9323d89a5dbcd0ec46e1331f57f08ba09fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f099c260_94e304a0",
        "filename": "javatests/com/google/gerrit/server/project/ProjectConfigTest.java",
        "patchSetId": 5
      },
      "lineNbr": 642,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2019-01-22T13:32:42Z",
      "side": 1,
      "message": "Hmm. It seems I misread something. The \"BaseConfig\" is only effective for All-Projects (as expect), which means the graph is just\nA    -\u003e    B   -\u003e  All-Projects [false]\n                      /\n           BaseConfig [true]\n\nThis looks good to me. \n\nBut there is still a problem here. When we load configs for All-Projects, we load \"BaseConfig\" first and then append configs from the All-Projects repo. This read action works fine. But saving back may result in overlays for configs of \"BaseConfig\" in the All-Projects repo. Looking at the fix and related tests.",
      "parentUuid": "9bd3818f_cc944dee",
      "range": {
        "startLine": 641,
        "startChar": 21,
        "endLine": 642,
        "endChar": 39
      },
      "revId": "d4fdc9323d89a5dbcd0ec46e1331f57f08ba09fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}