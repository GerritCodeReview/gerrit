{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c435687c_242fc43b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-12-06T17:32:26Z",
      "side": 1,
      "message": "I don\u0027t understand this. What \"external storage\" would want to reference a specific Gerrit PatchSetApproval? Or does this just mean NoteDb? If it\u0027s NoteDb, I\u0027m not clear on the added value of a UUID. We already reference PSAs from notedb, correct?",
      "revId": "d5283204e6077ca8e68c0b03fd3f65e1848287c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b95db98c_2d74176a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2021-12-06T18:39:53Z",
      "side": 1,
      "message": "The external storage keeps some additional information about the author of the approval at the moment of the approval. Patch set UUID adds a way to reference this information when we access the vote In ChangeData/ChangeNotes. In this case, UUID works as a key to join NoteDB and external storage.",
      "parentUuid": "c435687c_242fc43b",
      "revId": "d5283204e6077ca8e68c0b03fd3f65e1848287c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "569e7b54_0252ae9d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-12-06T19:01:46Z",
      "side": 1,
      "message": "That\u0027s a little clearer, but I\u0027m still confused. Is Gerrit using this \"additional information\"? Can you be specific about what the information is?",
      "parentUuid": "b95db98c_2d74176a",
      "revId": "d5283204e6077ca8e68c0b03fd3f65e1848287c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3dcd819_d305719a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2021-12-06T20:09:13Z",
      "side": 1,
      "message": "More specifically, this is the information about credentials, used to issue the vote update. The exacts depend on the authentication implementation. We have the \u0027Realm\u0027 binding, that provides a way for custom authentication implementations.",
      "parentUuid": "569e7b54_0252ae9d",
      "revId": "d5283204e6077ca8e68c0b03fd3f65e1848287c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c89db837_ffaf5e10",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-12-06T21:39:43Z",
      "side": 1,
      "message": "Ok, if I\u0027m understanding correctly so far, it sounds like there\u0027s a desired mapping of PSAs to the voting user\u0027s (Google internal?) credentials?\n\nSorry, I\u0027m still not really understanding the overall intent here. I would think you could map from the Gerrit external id to those same credentials. Are you worried that external-id -\u003e credential mapping will change over time?\n\nIs this part of some bigger initiative to map point-in-time account actions to UUIDs?",
      "parentUuid": "f3dcd819_d305719a",
      "revId": "d5283204e6077ca8e68c0b03fd3f65e1848287c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65550d20_c3a05bd4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-12-06T21:41:46Z",
      "side": 1,
      "message": "A thought just occurred to me, is to this support the Verified History [1] requirement of SLSA?\n\nhttps://slsa.dev/requirements#verified-history",
      "parentUuid": "c89db837_ffaf5e10",
      "revId": "d5283204e6077ca8e68c0b03fd3f65e1848287c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff448950_1c49b55a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-12-09T16:06:16Z",
      "side": 1,
      "message": "\u003e Ok, if I\u0027m understanding correctly so far, it sounds like there\u0027s a desired mapping of PSAs to the voting user\u0027s (Google internal?) credentials?\n\nThat\u0027s right. Giving PSAs a UUID will make them referenceable (for anyone and for different use cases). For example: You can reference the UUID in reflog entry that was written when it was granted. That will survive forced rewrites such as NoteDb upgrades where the SHA1 changes.\n\n\u003e A thought just occurred to me, is to this support the Verified History [1] requirement of SLSA?\n\nThis generally supports SLSAs. For SLSAs, you could trust your installation that it would only ever authenticate users with the right set of credentials and privileges. As additional security measure, you can also check things once more before a change gets submitted. To do that, you\u0027d want to link the PSA to some record of the credentials that were used to grant the PSA. That\u0027s where UUIDs help.\n\nThey also help with copied and persisted votes to show where/when the vote was granted originally (SHA1s could be used, but complicate things when the NoteDb branch gets rewritten).",
      "parentUuid": "65550d20_c3a05bd4",
      "revId": "d5283204e6077ca8e68c0b03fd3f65e1848287c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05eacf1d_5b1dadb1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2021-12-10T09:11:29Z",
      "side": 1,
      "message": "Than you Patrick for the detailed comment!",
      "parentUuid": "ff448950_1c49b55a",
      "revId": "d5283204e6077ca8e68c0b03fd3f65e1848287c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "382149c5_7dc611c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-12-13T13:03:40Z",
      "side": 1,
      "message": "\u003e the Verified History [1] requirement of SLSA?\n\nYes. At first sight, the meta SHA-1 revision would work, except that we support deleting comments; this causes the meta SHA-1 to not be stable.",
      "parentUuid": "05eacf1d_5b1dadb1",
      "revId": "d5283204e6077ca8e68c0b03fd3f65e1848287c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5fefc33_3886c5d4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-12-13T21:31:56Z",
      "side": 1,
      "message": "Ack. Thanks!",
      "parentUuid": "382149c5_7dc611c9",
      "revId": "d5283204e6077ca8e68c0b03fd3f65e1848287c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2d5568a_008518b0",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 10
      },
      "lineNbr": 884,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-12-09T16:06:16Z",
      "side": 1,
      "message": "it seems we use , as separator. shall we do that for the UUID as well? if it would make parsing easier maybe we could even prefix the UUID with \"UUID: \".",
      "range": {
        "startLine": 884,
        "startChar": 57,
        "endLine": 884,
        "endChar": 58
      },
      "revId": "d5283204e6077ca8e68c0b03fd3f65e1848287c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4dd3a8b0_0b125a0f",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 10
      },
      "lineNbr": 884,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2021-12-10T09:11:29Z",
      "side": 1,
      "message": "With the current string format, I would keep it with \u0027 \u0027 delimiter for identities. This saves us from having different code path for present/missing UUIDs.\n\nI agree the parsing gets more complicated, if we extend it any further, this should definitely be migrated to json.",
      "parentUuid": "d2d5568a_008518b0",
      "range": {
        "startLine": 884,
        "startChar": 57,
        "endLine": 884,
        "endChar": 58
      },
      "revId": "d5283204e6077ca8e68c0b03fd3f65e1848287c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}