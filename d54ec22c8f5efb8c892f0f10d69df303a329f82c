{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "73588cbe_b0519d09",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-03T23:12:53Z",
      "side": 1,
      "message": "\"Cache All-Users object ids by ref\" ?",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a632b007_fca1849b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73588cbe_b0519d09",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ae0cd98_896b3f5a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-08-31T15:29:37Z",
      "side": 1,
      "message": "nit: of",
      "range": {
        "startLine": 11,
        "startChar": 8,
        "endLine": 11,
        "endChar": 11
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50a0284c_72aa3c1e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ae0cd98_896b3f5a",
      "range": {
        "startLine": 11,
        "startChar": 8,
        "endLine": 11,
        "endChar": 11
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ede7b902_950709cc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-08-31T15:29:37Z",
      "side": 1,
      "message": "nit: cheap?",
      "range": {
        "startLine": 12,
        "startChar": 30,
        "endLine": 12,
        "endChar": 34
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3438246_6acb500e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ede7b902_950709cc",
      "range": {
        "startLine": 12,
        "startChar": 30,
        "endLine": 12,
        "endChar": 34
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fdbdf07_0158a8ff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-08-31T15:29:37Z",
      "side": 1,
      "message": "I know this is RFC, so maybe you already planned to address this. If so, thank you ðŸ˜Š\n\nWe don\u0027t typically consider it sufficient to point to a bug for these kinds of details. The commit message should be self-contained enough that it justifies the change without a reference to an external bug. The bug reference is great as additional context and info, but it doesn\u0027t replace the justification in the message.\n\nPlease describe here how it becomes a bottleneck.\n\nI did read through the bug and it sounds like Luca and Patrick both think this approach at a high level makes sense. My only concern is with getting the evict* calls right (I commented inline elsewhere on it).",
      "range": {
        "startLine": 14,
        "startChar": 11,
        "endLine": 14,
        "endChar": 51
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3798e9d_123376b4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-03T22:26:02Z",
      "side": 1,
      "message": "I\u0027m going to append to my concerns after re-reading this. Caching what object-id a ref resolves to seems like a fundamentally risky choice. This will always break in multi-primary deployments. Won\u0027t that be a problem when users update a preference and don\u0027t see it updated when they land on a different node (or does ha-plugin already handle this somehow?)?\n\nI\u0027d prefer we spend more time looking at the problem and see if we can solve the underlying issue.",
      "parentUuid": "4fdbdf07_0158a8ff",
      "range": {
        "startLine": 14,
        "startChar": 11,
        "endLine": 14,
        "endChar": 51
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ead97493_fb4c69a6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-03T22:30:41Z",
      "side": 1,
      "message": "\u003e I\u0027m going to append to my concerns after re-reading this. Caching what object-id a ref resolves to seems like a fundamentally risky choice. This will always break in multi-primary deployments. Won\u0027t that be a problem when users update a preference and don\u0027t see it updated when they land on a different node (or does ha-plugin already handle this somehow?)?\n\nYes, the HA plugin was already managing this use-case successfully: as a matter of fact there was the eviction method in Gerrit v3.1 and it was removed in v3.2.\n\n\u003e I\u0027d prefer we spend more time looking at the problem and see if we can solve the underlying issue.\n\nWhat is the underlying issue? Speeding up a ref-to-sha1 lookup into a large repository over a slow storage something 3600x faster?",
      "parentUuid": "d3798e9d_123376b4",
      "range": {
        "startLine": 14,
        "startChar": 11,
        "endLine": 14,
        "endChar": 51
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02616fca_37d249e1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-03T22:40:42Z",
      "side": 1,
      "message": "\u003e \u003e I\u0027m going to append to my concerns after re-reading this. Caching what object-id a ref resolves to seems like a fundamentally risky choice. This will always break in multi-primary deployments. Won\u0027t that be a problem when users update a preference and don\u0027t see it updated when they land on a different node (or does ha-plugin already handle this somehow?)?\n\u003e \n\u003e Yes, the HA plugin was already managing this use-case successfully: as a matter of fact there was the eviction method in Gerrit v3.1 and it was removed in v3.2.\n\nWas? Will it again with this code as proposed?\n\n\u003e \n\u003e \u003e I\u0027d prefer we spend more time looking at the problem and see if we can solve the underlying issue.\n\u003e \n\u003e What is the underlying issue? Speeding up a ref-to-sha1 lookup into a large repository over a slow storage something 3600x faster?\n\nMaybe? Why not? ðŸ˜Š We do some pretty incredible things sometimes, especially when we understand a problem well enough.\n\nTo that point, do we understand why it\u0027s so much slower? Is it something that can be seen/tested with simple fs tests (not git/jgit)? How would I check this on a filesystem I have?",
      "parentUuid": "ead97493_fb4c69a6",
      "range": {
        "startLine": 14,
        "startChar": 11,
        "endLine": 14,
        "endChar": 51
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8334cace_47bbadf4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-03T22:45:17Z",
      "side": 1,
      "message": "[...]\n\u003e \u003e Yes, the HA plugin was already managing this use-case successfully: as a matter of fact there was the eviction method in Gerrit v3.1 and it was removed in v3.2.\n\u003e \n\u003e Was? Will it again with this code as proposed?\n\nYes.\n\n\u003e \u003e What is the underlying issue? Speeding up a ref-to-sha1 lookup into a large repository over a slow storage something 3600x faster?\n\u003e \n\u003e Maybe? Why not? ðŸ˜Š We do some pretty incredible things sometimes, especially when we understand a problem well enough.\n\nWould you manage to get an NFS filesystem to open a file, read MBs of data and close it, all in nano-seconds, without any caching?\n\n\u003e To that point, do we understand why it\u0027s so much slower?\n\nYes, because the SHA1 of the user\u0027s ref has been put into the account cache key. It wasn\u0027t in v3.1.\n\n\u003e Is it something that can be seen/tested with simple fs tests (not git/jgit)? How would I check this on a filesystem I have?\n\nSee above: you won\u0027t be able to do a network roundtrip in nano-seconds.\nIn v3.1 it did not require any ref-lookup, but in v3.2 it does.",
      "parentUuid": "02616fca_37d249e1",
      "range": {
        "startLine": 14,
        "startChar": 11,
        "endLine": 14,
        "endChar": 51
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfa7b204_d24e3111",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-03T22:53:01Z",
      "side": 1,
      "message": "P.S. The expectation from a class that is called \u0027Cache\u0027 is that the information is cached and not re-read from the filesystem every time that a method is called. I won\u0027t generally cache *any* access to refs/sha1 lookups, for the concerns raised by Nasser.\n\nThe problem is that all code in Gerrit (and plugins) that used AccountCache before v3.2 assumed that the call was cheap because the data was cached, which was only partially true, as the v3.2 introduces roundtrip to the repository on disk.",
      "parentUuid": "8334cace_47bbadf4",
      "range": {
        "startLine": 14,
        "startChar": 11,
        "endLine": 14,
        "endChar": 51
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "faf70f69_b96111ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-03T23:12:53Z",
      "side": 1,
      "message": "\u003e [...]\n\u003e \u003e \u003e Yes, the HA plugin was already managing this use-case successfully: as a matter of fact there was the eviction method in Gerrit v3.1 and it was removed in v3.2.\n\u003e \u003e \n\u003e \u003e Was? Will it again with this code as proposed?\n\u003e \n\u003e Yes.\n\nOk, so this change is reinstating the account.id-\u003euser-ref-SHA1 (and global preferences-\u003eref-SHA1) lookup cache that was there in 3.1 and the eviction that worked in 3.1 will again be applied (presumably with a change in the ha plugin?) to keep MP setups happy. Did I get that right?\n\n\u003e \n\u003e \u003e \u003e What is the underlying issue? Speeding up a ref-to-sha1 lookup into a large repository over a slow storage something 3600x faster?\n\u003e \u003e \n\u003e \u003e Maybe? Why not? ðŸ˜Š We do some pretty incredible things sometimes, especially when we understand a problem well enough.\n\u003e \n\u003e Would you manage to get an NFS filesystem to open a file, read MBs of data and close it, all in nano-seconds, without any caching?\n\nAdmittedly unlikely. I\u0027ll let you know if I figure it out though and you can pay me a few millions for it. ðŸ˜„\n\n\u003e \n\u003e \u003e To that point, do we understand why it\u0027s so much slower?\n\u003e \n\u003e Yes, because the SHA1 of the user\u0027s ref has been put into the account cache key. It wasn\u0027t in v3.1.\n\nSo as you explain below, this is work we didn\u0027t have to do before (and reading in the commit message from [1], it was assumed to be fast by the implementor).\n\n\u003e \n\u003e \u003e Is it something that can be seen/tested with simple fs tests (not git/jgit)? How would I check this on a filesystem I have?\n\u003e \n\u003e See above: you won\u0027t be able to do a network roundtrip in nano-seconds.\n\u003e In v3.1 it did not require any ref-lookup, but in v3.2 it does.\n\nOk. Can we get this summary into an updated commit message please?\n\nIt also seems like the \"in parallel\" bit that\u0027s currently in the commit message is unrelated? This sounds like it would be a problem for sequential access with a sufficiently slow filesystem.",
      "parentUuid": "8334cace_47bbadf4",
      "range": {
        "startLine": 14,
        "startChar": 11,
        "endLine": 14,
        "endChar": 51
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3819d830_55de5130",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-09-05T01:19:10Z",
      "side": 1,
      "message": "I think that it would be good to include an actual use case that is impacted by this. It is tempting to do all sorts of caching things that would allow certain operation to get sped up by multiple orders of magnitude. However the speed of many low level operations are not impactful if they are being executed along with other operations that take longer anyway. For example, no user would notice a 10ns impact of a single low level call when performing a Rest API call to another continent. It would make this change much more interesting it the commit message gave data about a user facing performance impact of this approach.",
      "parentUuid": "faf70f69_b96111ad",
      "range": {
        "startLine": 14,
        "startChar": 11,
        "endLine": 14,
        "endChar": 51
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5e44297_aa94b170",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T11:01:44Z",
      "side": 1,
      "message": "I hope that it got answered - feel free to raise it again it the motivation is still not clear ;)",
      "parentUuid": "3819d830_55de5130",
      "range": {
        "startLine": 14,
        "startChar": 11,
        "endLine": 14,
        "endChar": 51
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2601772_2d585ced",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-09-05T01:19:10Z",
      "side": 1,
      "message": "Can you add some before and after statistics here?",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44efb424_5a4fe169",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2601772_2d585ced",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "866b5920_7f47e324",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-08-31T15:29:37Z",
      "side": 1,
      "message": "Nit: Put this line just above or below the Change-Id: footer",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c406b0a3_ff5af4c5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "866b5920_7f47e324",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b36a5bfd_d5d9e31b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-02T02:50:17Z",
      "side": 1,
      "message": "The cache needs also to be used when reading the refs/meta/external-ids form All-users.git in ExternalIdReader.java.\n\nThe current status of this change provides a 2x performance improvement already.\nBy using the cache also in ExternalIdReader.java, you\u0027ll achieve a 200x performance improvement.\n\nWe are still far to recover the v3.1 performance, because of the overhead of creating collections for a single lookup. We could address this second concern in a follow-up change though.",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67b06603_a9a012cb",
        "filename": "java/com/google/gerrit/server/account/AccountCacheImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-01T19:49:48Z",
      "side": 1,
      "message": "java11 specific - change to\n\n  !object.isPresent()\n\nso that java8 source compatibility is preserved",
      "range": {
        "startLine": 116,
        "startChar": 21,
        "endLine": 116,
        "endChar": 30
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78a1ddca_e3f95861",
        "filename": "java/com/google/gerrit/server/account/AccountCacheImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-02T02:50:17Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "67b06603_a9a012cb",
      "range": {
        "startLine": 116,
        "startChar": 21,
        "endLine": 116,
        "endChar": 30
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "240e6aff_0264cd8e",
        "filename": "java/com/google/gerrit/server/account/AccountCacheImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78a1ddca_e3f95861",
      "range": {
        "startLine": 116,
        "startChar": 21,
        "endLine": 116,
        "endChar": 30
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "587ff56d_1345581c",
        "filename": "java/com/google/gerrit/server/account/AccountCacheImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-02T02:50:17Z",
      "side": 1,
      "message": "This call is actually opening *again* the All-Users.git repository to read the external-ids ref.\n\nWe must also use the AllUsersRefToObjectIdCache in ExternalIdReader.readRevision() in order to avoid the extra read from the physical repository.",
      "range": {
        "startLine": 122,
        "startChar": 25,
        "endLine": 122,
        "endChar": 41
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1010a55_75c64214",
        "filename": "java/com/google/gerrit/server/account/AccountCacheImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "587ff56d_1345581c",
      "range": {
        "startLine": 122,
        "startChar": 25,
        "endLine": 122,
        "endChar": 41
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10a58b7b_8ae89b37",
        "filename": "java/com/google/gerrit/server/account/AllUsersRefToObjectIdCache.java",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-03T23:12:53Z",
      "side": 1,
      "message": "We usually name maps (and therefore caches) as ValueByKey: AllUsersObjectIdByRefCache",
      "range": {
        "startLine": 37,
        "startChar": 13,
        "endLine": 37,
        "endChar": 39
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d31cd096_751b0312",
        "filename": "java/com/google/gerrit/server/account/AllUsersRefToObjectIdCache.java",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-09-05T01:19:10Z",
      "side": 1,
      "message": "This name is probably too specific, i.e. the cache may want to provide different methods with different parameters to get a users info, and this name implies a single way to look things up.",
      "range": {
        "startLine": 37,
        "startChar": 13,
        "endLine": 37,
        "endChar": 40
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fcc8ccb7_b7b9212a",
        "filename": "java/com/google/gerrit/server/account/AllUsersRefToObjectIdCache.java",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "There is only one method to get object id - get by ref (string)",
      "parentUuid": "d31cd096_751b0312",
      "range": {
        "startLine": 37,
        "startChar": 13,
        "endLine": 37,
        "endChar": 40
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66f3a636_ce410805",
        "filename": "java/com/google/gerrit/server/account/AllUsersRefToObjectIdCache.java",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10a58b7b_8ae89b37",
      "range": {
        "startLine": 37,
        "startChar": 13,
        "endLine": 37,
        "endChar": 39
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17f95f85_21a12d18",
        "filename": "java/com/google/gerrit/server/account/AllUsersRefToObjectIdCache.java",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-08-31T15:29:37Z",
      "side": 1,
      "message": "object_ids?",
      "range": {
        "startLine": 38,
        "startChar": 49,
        "endLine": 38,
        "endChar": 56
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d123f31a_09dfe4e6",
        "filename": "java/com/google/gerrit/server/account/AllUsersRefToObjectIdCache.java",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-02T02:50:17Z",
      "side": 1,
      "message": "I believe that all_users_refs would be best: it contains the refs-sha1 entries.",
      "parentUuid": "17f95f85_21a12d18",
      "range": {
        "startLine": 38,
        "startChar": 49,
        "endLine": 38,
        "endChar": 56
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4d52399_60a2b249",
        "filename": "java/com/google/gerrit/server/account/AllUsersRefToObjectIdCache.java",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-03T23:12:53Z",
      "side": 1,
      "message": "We\u0027re not billed per-character, so let\u0027s use a long name? all_users_object_id_byref\n\nIt can match the class name then too.",
      "parentUuid": "d123f31a_09dfe4e6",
      "range": {
        "startLine": 38,
        "startChar": 49,
        "endLine": 38,
        "endChar": 56
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ce07cd9_7ac631bc",
        "filename": "java/com/google/gerrit/server/account/AllUsersRefToObjectIdCache.java",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d123f31a_09dfe4e6",
      "range": {
        "startLine": 38,
        "startChar": 49,
        "endLine": 38,
        "endChar": 56
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b3c9d65_d11ccfb9",
        "filename": "java/com/google/gerrit/server/account/AllUsersRefToObjectIdCache.java",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-03T23:12:53Z",
      "side": 1,
      "message": "ObjectIdByRef (\"Cache\" is unnecessary since we know the type)",
      "range": {
        "startLine": 51,
        "startChar": 57,
        "endLine": 51,
        "endChar": 71
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a30f2f5b_5fe625d8",
        "filename": "java/com/google/gerrit/server/account/AllUsersRefToObjectIdCache.java",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b3c9d65_d11ccfb9",
      "range": {
        "startLine": 51,
        "startChar": 57,
        "endLine": 51,
        "endChar": 71
      },
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c686e70b_05bf6f29",
        "filename": "java/com/google/gerrit/server/account/AllUsersRefToObjectIdCache.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-09-05T01:19:10Z",
      "side": 1,
      "message": "This cache is a bit confusing, what is the API, is this method intended to be the primary way to get the objectiId?",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34b9531f_86ef8bd3",
        "filename": "java/com/google/gerrit/server/account/AllUsersRefToObjectIdCache.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "Yes it is. Can you elaborate, I\u0027m not sure if I follow what you meant, sorry :/",
      "parentUuid": "c686e70b_05bf6f29",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0b03372_63d2b102",
        "filename": "java/com/google/gerrit/server/account/AllUsersRefToObjectIdCache.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-09-05T01:19:10Z",
      "side": 1,
      "message": "Maybe it makes sense to call a",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76056f60_65dfb666",
        "filename": "java/com/google/gerrit/server/account/AllUsersRefToObjectIdCache.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "It looks like the unfinished sentence to me - Can you add more details? Thanks in advance.",
      "parentUuid": "f0b03372_63d2b102",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d4c1268_4a536924",
        "filename": "java/com/google/gerrit/server/index/account/AccountIndexerImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-08-31T15:29:37Z",
      "side": 1,
      "message": "I\u0027m not excited about having to \"get it right\" with these evict* calls. Can we push these to a lower level somehow so that implementers are less likely to miss it?",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d594118a_47195431",
        "filename": "java/com/google/gerrit/server/index/account/AccountIndexerImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-01T08:58:44Z",
      "side": 1,
      "message": "We already evict the account SHA1 cache on AllUsersRefToObjectIdCache.java:68. I am not convinced we also need this one.",
      "parentUuid": "1d4c1268_4a536924",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "092d76bb_de29eb36",
        "filename": "java/com/google/gerrit/server/index/account/AccountIndexerImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-01T19:49:48Z",
      "side": 1,
      "message": "LuceneQueryAccountsTest (AbstractQueryAccountsTest.java:801 to be more precise) fails without explicit cache eviction - the problem is that account modification performed there doesn\u0027t result in the event being faired - maybe we should make sure that event is always fired, WDYT?",
      "parentUuid": "d594118a_47195431",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29947ce2_e2402f8a",
        "filename": "java/com/google/gerrit/server/index/account/AccountIndexerImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-01T20:26:30Z",
      "side": 1,
      "message": "Answering myself - the test in question is the only place where it actually happens (on purpose so that index is not automatically called) - I will get rid of cache eviction.",
      "parentUuid": "092d76bb_de29eb36",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abce3722_aa3c1ec4",
        "filename": "java/com/google/gerrit/server/index/account/AllAccountsIndexer.java",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-01T08:58:44Z",
      "side": 1,
      "message": "We already evict the account SHA1 cache on AllUsersRefToObjectIdCache.java:68. I am not convinced we also need this one.",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e992d56f_49bf97c6",
        "filename": "java/com/google/gerrit/server/index/account/AllAccountsIndexer.java",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "abce3722_aa3c1ec4",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "147da9f2_8927f803",
        "filename": "java/com/google/gerrit/server/restapi/config/SetDiffPreferences.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-01T08:58:44Z",
      "side": 1,
      "message": "We already evict the account SHA1 cache on AllUsersRefToObjectIdCache.java:68. I am not convinced we also need this one.",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4a14df1_3cde44ec",
        "filename": "java/com/google/gerrit/server/restapi/config/SetDiffPreferences.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-01T20:00:58Z",
      "side": 1,
      "message": "I have followed the code that was there prior [1] but it may actually make sense to see of it is still needed in all *Preferences cases here and below\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/260992",
      "parentUuid": "147da9f2_8927f803",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98a585dc_726b385a",
        "filename": "java/com/google/gerrit/server/restapi/config/SetDiffPreferences.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-01T20:26:30Z",
      "side": 1,
      "message": "Confirmed that this is not needed.",
      "parentUuid": "c4a14df1_3cde44ec",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a00f9c1e_e75bf5e2",
        "filename": "java/com/google/gerrit/server/restapi/config/SetEditPreferences.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-01T08:58:44Z",
      "side": 1,
      "message": "We already evict the account SHA1 cache on AllUsersRefToObjectIdCache.java:68. I am not convinced we also need this one.",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bca5943_07fd9f57",
        "filename": "java/com/google/gerrit/server/restapi/config/SetEditPreferences.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a00f9c1e_e75bf5e2",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50b792dd_2a9eb94b",
        "filename": "java/com/google/gerrit/server/restapi/config/SetPreferences.java",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-01T08:58:44Z",
      "side": 1,
      "message": "We already evict the account SHA1 cache on AllUsersRefToObjectIdCache.java:68. I am not convinced we also need this one.",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c84abaf_131d7d5e",
        "filename": "java/com/google/gerrit/server/restapi/config/SetPreferences.java",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-09-09T10:44:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50b792dd_2a9eb94b",
      "revId": "d54ec22c8f5efb8c892f0f10d69df303a329f82c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}