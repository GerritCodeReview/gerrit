{
  "comments": [
    {
      "key": {
        "uuid": "aa3b8523_bfab8cfa",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 4
      },
      "lineNbr": 689,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2017-03-28T00:07:55Z",
      "side": 1,
      "message": "Reader.skip isn\u0027t guaranteed to read that many characters --- it\u0027s allowed to return early. Does BufferedReader provide a stronger guarantee?",
      "revId": "d768510f02198f209cf40cd401651df0fc372421",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "920578f3_588c6753",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 4
      },
      "lineNbr": 689,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2017-03-28T00:10:15Z",
      "side": 1,
      "message": "The implementation of BufferedReader seems to do the right thing *phew*",
      "parentUuid": "aa3b8523_bfab8cfa",
      "revId": "d768510f02198f209cf40cd401651df0fc372421",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "793a2adb_63485e5e",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 4
      },
      "lineNbr": 689,
      "author": {
        "id": 1027112
      },
      "writtenOn": "2017-03-28T00:21:25Z",
      "side": 1,
      "message": "Ugh. \u003e This method will block until **some** characters are available\n\nAre you OK with depending on the specific JRE\u0027s implementation?",
      "parentUuid": "920578f3_588c6753",
      "revId": "d768510f02198f209cf40cd401651df0fc372421",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5824e87_c580b27a",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 4
      },
      "lineNbr": 689,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2017-03-28T00:30:41Z",
      "side": 1,
      "message": "I\u0027m comfortable with it.",
      "parentUuid": "793a2adb_63485e5e",
      "revId": "d768510f02198f209cf40cd401651df0fc372421",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd7d0c8e_56f1227c",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 4
      },
      "lineNbr": 720,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2017-03-28T00:07:55Z",
      "side": 1,
      "message": "I don\u0027t think we want to discard this exception. Instead, it should affect the response code.\n\nOtherwise, if you hit an I/O error while trying to read the response, you can end up sending 200 OK early without intending to.",
      "revId": "d768510f02198f209cf40cd401651df0fc372421",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05108c66_977a902c",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 4
      },
      "lineNbr": 720,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2017-03-28T00:11:42Z",
      "side": 1,
      "message": "I realize that\u0027s theoretical and not practically useful because consumeRequestBody is not allowed to throw an exception.\n\nBut it will help once jgit gets an alternative to consumeRequestBody that throws. And it\u0027s a good habit.",
      "parentUuid": "cd7d0c8e_56f1227c",
      "revId": "d768510f02198f209cf40cd401651df0fc372421",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0383108f_43bfcd05",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 4
      },
      "lineNbr": 720,
      "author": {
        "id": 1027112
      },
      "writtenOn": "2017-03-28T00:21:25Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "05108c66_977a902c",
      "revId": "d768510f02198f209cf40cd401651df0fc372421",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdc818c7_04efbb28",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 4
      },
      "lineNbr": 720,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2017-03-28T00:30:41Z",
      "side": 1,
      "message": "I think this is a server error, not client error (since there is nothing the client can do to trigger it). Letting the caller catch it would produce SC_INTERNAL_SERVER_ERROR, right? I think that\u0027s the right status code.",
      "parentUuid": "0383108f_43bfcd05",
      "revId": "d768510f02198f209cf40cd401651df0fc372421",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a5bab0d_5d87f820",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/restapi/RestApiServlet.java",
        "patchSetId": 4
      },
      "lineNbr": 720,
      "author": {
        "id": 1027112
      },
      "writtenOn": "2017-03-28T00:39:06Z",
      "side": 1,
      "message": "We cannot tell if it\u0027s client\u0027s or server\u0027s fault. The Servlet API just says it\u0027s thrown \"if an input or output exception occurred\". It may be caused by client\u0027s going away or an internal error in the Servlet container. Anyway, I don\u0027t care. It wouldn\u0027t happen frequently.",
      "parentUuid": "bdc818c7_04efbb28",
      "revId": "d768510f02198f209cf40cd401651df0fc372421",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}