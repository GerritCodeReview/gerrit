{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fce5f8f1_fe121231",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-05-03T15:10:20Z",
      "side": 1,
      "message": "Doesn\u0027t this mean that ported comments would not work for renamed files? (Is that acceptable?)",
      "revId": "d7f0db84a0fc7e261056d88f97c3ac67ded141e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdfd9fe2_f1f2eae9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1083225
      },
      "writtenOn": "2021-05-05T05:50:42Z",
      "side": 1,
      "message": "I\u0027m also interested in the details.\n\nThe change [1] has a renamed file but the comments posted on the old file name are automatically mapped to the new file name.\nSo if I am just requesting a subset of the API response(containing the new file name), I would assume that use case would still work?\n\n[1] https://gerrit-review.staging-git.corp.google.com/c/gerrit/+/23240/21/Documentation/config-cla_renamed.txt",
      "parentUuid": "fce5f8f1_fe121231",
      "revId": "d7f0db84a0fc7e261056d88f97c3ac67ded141e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5246ecaa_8c15980e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-05-05T12:26:16Z",
      "side": 1,
      "message": "I think that\u0027s a tradeoff we will have to make here.\n\nThe current ported comments endpoint (that works for all files) works as follows:\n1) It loads all the comments for previous patchsets from NoteDb.\n2) For each comment (or bunch of comments grouped by previous patchsets), we compute the diff of that file (where comments were written) against the latest patchset. \n\nAfter the diff is computed, we can get the mapping of {old, new} file paths along with the range mapping (which lines this comment should be ported to). \n\nIn this change, we are requesting ported comments for a specific file path (using the new file name at the latest patchset). We do that by:\n1) Loading all comments for previous patchsets from NoteDb.\n2) Filter only comments that were written for that specific file path.\n3) Compute the diff of all patchsets that have comments against the latest patchset.\n\nFor any comment that has a different file name on a previous patchset, we will not be able to know if that file was renamed to the file we are looking for (at the latest patchset) because this comment will be filtered by step #2. We don\u0027t know the mapping of {old, new} file name until we request the diff (with step #3). If we want to support this, we\u0027ll end up looking for all diffs for all comments to detect a probable rename, which is what we are trying to avoid.\n\nI\u0027m happy to explain that in chat/gvc if my comment is still unclear.",
      "parentUuid": "bdfd9fe2_f1f2eae9",
      "revId": "d7f0db84a0fc7e261056d88f97c3ac67ded141e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d1f5d3c_18d9806b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-05-06T08:31:08Z",
      "side": 1,
      "message": "I think the algorithm and context are clear, but the question is whether it is suitable. How did you conclude that it\u0027s OK for it to not work on renamed files? How often would this occur? ISTM missing a comment is a problem because it undermines the purpose of the review. What if that comment is \"Oh, no, don\u0027t rename this file!\"? I feel that users need to be able to rely on Gerrit always showing all comments.\n\nSome ideas:\n- Can we store filenames with rename information etc. for each change? I realize this extends the scope quite a bit, but from a 10.000 ft perspective it seems odd that we have to jump through hoops to determine the list of affected files/edit types. This is one case in point, limit enforcement (cf. recent performance issues) is another. (Maybe this calls for another cache?)\n- Can we do the rename detection asynchronously and hide that latency while the user is viewing the change?\n- Can we somehow make use of having done this computation for the change overview page?",
      "parentUuid": "5246ecaa_8c15980e",
      "revId": "d7f0db84a0fc7e261056d88f97c3ac67ded141e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc3e7ee6_91c4d523",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 5300,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-05-03T15:10:20Z",
      "side": 1,
      "message": "Which other revisions?",
      "revId": "d7f0db84a0fc7e261056d88f97c3ac67ded141e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9ec465b_79f2556e",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 5300,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-05-05T12:26:16Z",
      "side": 1,
      "message": "Other revisions here mean other patchset commits of the same change. The notation is the same to what we use in the URL: \u0027GET /changes/{change-id}/revisions/{revision-id}/ported_comments\u0027.\n\nI\u0027m reusing the description that we already have for the existing ported comments endpoint [1]. Please note that I renamed the existing endpoint (which ports all comments of a change) from \"Get ported comments\" to \"List ported comments\". This is done in change [2] in this series. I did that to re-use \"Get ported comments\" in this change for porting comments for a single file.\n\n[1] https://gerrit-review.googlesource.com/Documentation/rest-api-changes.html#get-ported-comments\n\n[2] https://gerrit-review.googlesource.com/c/gerrit/+/304590/1",
      "parentUuid": "fc3e7ee6_91c4d523",
      "revId": "d7f0db84a0fc7e261056d88f97c3ac67ded141e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "255a604d_b7115dc3",
        "filename": "Documentation/rest-api-changes.txt",
        "patchSetId": 3
      },
      "lineNbr": 5300,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-05-06T08:31:08Z",
      "side": 1,
      "message": "Wouldn\u0027t it be more accurate to say \"Ports comments of a revision A of this PS to the requested revision B\u003eA\"? Or \"... of a previous revision ... to the requested revision\"? I think that would make the comment more helpful.",
      "parentUuid": "b9ec465b_79f2556e",
      "revId": "d7f0db84a0fc7e261056d88f97c3ac67ded141e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "583a7b66_43785e76",
        "filename": "java/com/google/gerrit/extensions/api/changes/FileApi.java",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-05-03T15:10:20Z",
      "side": 1,
      "message": "Add javadoc.",
      "revId": "d7f0db84a0fc7e261056d88f97c3ac67ded141e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e88e204b_6cd0600a",
        "filename": "java/com/google/gerrit/extensions/api/changes/FileApi.java",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-05-05T12:26:16Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "583a7b66_43785e76",
      "revId": "d7f0db84a0fc7e261056d88f97c3ac67ded141e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32f74e7c_f3bba445",
        "filename": "java/com/google/gerrit/server/restapi/change/GetPortedComments.java",
        "patchSetId": 3
      },
      "lineNbr": 59,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-05-03T15:10:20Z",
      "side": 1,
      "message": "At this point it\u0027s no longer allComments. Maybe introduce a second variable fileComments?\n\nOn second thought, WDYT about making this a filter in CommentPorter where it already does filtering anyway? That way all of this logic would be in one place.",
      "revId": "d7f0db84a0fc7e261056d88f97c3ac67ded141e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2dbb23d9_49fbc306",
        "filename": "java/com/google/gerrit/server/restapi/change/GetPortedComments.java",
        "patchSetId": 3
      },
      "lineNbr": 59,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-05-05T12:26:16Z",
      "side": 1,
      "message": "Done. CommentsPorter actually supports filters. I passed a file path filter to do the job.\n\nAddendum: I also changed the API to return a List\u003cCommentInfo\u003e instead of a Map\u003cString, List\u003cCommentInfo\u003e\u003e. The map was actually meant to support multiple file paths (as map keys), but we don\u0027t need this for the new endpoint since we are returning comments for a single file path.",
      "parentUuid": "32f74e7c_f3bba445",
      "revId": "d7f0db84a0fc7e261056d88f97c3ac67ded141e0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}