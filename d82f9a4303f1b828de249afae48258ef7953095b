{
  "comments": [
    {
      "key": {
        "uuid": "2864a22d_f79cfa4b",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/GitOverHttpModule.java",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-23T10:31:29Z",
      "side": 1,
      "message": "This regex is already quite complex and we should avoid having to maintain two copies of it. Why do we need the LFS URL regex on two places? Why not reuse the existing one (and fix it by adding the non-capturing group operators)?\n\nTaking the GitOverHttpServlet.URL_REGEX as an example, we also have only one copy of it... so it seems possible?",
      "revId": "d82f9a4303f1b828de249afae48258ef7953095b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "486b96ff_98cdf93f",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/GitOverHttpModule.java",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2017-01-23T12:42:05Z",
      "side": 1,
      "message": "this is based on LFS regex, but it is not the same in a sense that it comes into play only in case there is LFS endpoint meant but there is no /a/ prefix in the URL as /a/ prefixed URLs are handled by auth-filter anyway see 64",
      "revId": "d82f9a4303f1b828de249afae48258ef7953095b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "486b96ff_d8c7711b",
        "filename": "gerrit-httpd/src/main/java/com/google/gerrit/httpd/GitOverHttpModule.java",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2017-01-23T12:50:08Z",
      "side": 1,
      "message": "IMHO: /p/ is not needed neither here nor in Git LFS servlet but I have kept it as it was in source REGEX.",
      "revId": "d82f9a4303f1b828de249afae48258ef7953095b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}