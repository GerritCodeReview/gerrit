{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bff7600a_dbdfd556",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-02-07T14:53:40Z",
      "side": 1,
      "message": "Bug: Issue 16529",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 12
      },
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10b0cbc8_fd6a2e51",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-08T21:16:39Z",
      "side": 1,
      "message": "Why, what\u0027s wrong with this? Gerrit seems to parse it and create the link correctly.",
      "parentUuid": "bff7600a_dbdfd556",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 12
      },
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f169482_2754ed8b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-09T09:58:06Z",
      "side": 1,
      "message": "This is because Gerrit doesn\u0027t index footers starting with `Issue:` but it does those that start with `Bug:`.",
      "parentUuid": "10b0cbc8_fd6a2e51",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 12
      },
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e0350c3_6e83bb0b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-02-07T14:53:40Z",
      "side": 1,
      "message": "Missing `Release-Notes` footer",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34cd2d61_5931df1b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-08T21:16:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e0350c3_6e83bb0b",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3744275a_a486e5ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-07T13:40:52Z",
      "side": 1,
      "message": "We may need some additional work (either as part of this or another change) to fix copy labels too.",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1488108c_ad61bbde",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-07T22:01:24Z",
      "side": 1,
      "message": "Just unresolving for visilibity.",
      "parentUuid": "3744275a_a486e5ca",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a800094_953bf5ea",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 906,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-07T13:40:52Z",
      "side": 1,
      "message": "I changed this to be a single char `,` instead of the string `, `. No test failures, but I\"m not sure why it wasn\u0027t written like that to begin with.",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1ce6a86_a9e08dc4",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 906,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-02-07T14:53:40Z",
      "side": 1,
      "message": "Is that relevant to the fix?\nPreviously it was maching the `, ` (with the extra space) but now it matches only the `,`. Was that causing any trouble?",
      "parentUuid": "6a800094_953bf5ea",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72fd7613_77e31063",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 906,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-02-07T21:09:13Z",
      "side": 1,
      "message": "It is written in the comment above\n\u003e // Footer has the following format in this case: Label: \u003cLABEL\u003e\u003dVOTE, \u003cUUID\u003e \u003cGerrit Account\u003e\n\nIOW the `, ` is expected as a part of the formatted vote on label... IOW so that one could probably distinguish between these two cases?",
      "parentUuid": "a1ce6a86_a9e08dc4",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "decad468_7d113a66",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 906,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-07T22:01:24Z",
      "side": 1,
      "message": "As far as I can tell the trailing space doesn\u0027t affect its functionality - and no failing tests if I remove it.\n\nI wonder if it was just added because we then do a add 2 to `reviewStart`, so we wanted to match on two characters (just a guess)? It does match a smaller use-case, but I think it wouldn\u0027t matter as we can\u0027t have a comma before the one separating `VOTE` and `UUID`.\n\nRemoving the space does make the naming of the `int` simpler and more meaningful, and as far as I can tell doesn\u0027t break anything.\n\nI thought the comma separated `VOTE` and `UUID` - do you mean it\u0027s part of the vote? But either way the `,` and `, ` (trailing space) should be equivalent as long as we add 2 to when we set `reviewerStart`, because we can\u0027t have a comma before that one.",
      "parentUuid": "72fd7613_77e31063",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dedffdbd_6f4ed9db",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 906,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-02-08T09:22:37Z",
      "side": 1,
      "message": "Lets consider the following example:\n`Label: Label1\u003d0, 577fb248e474018276351785930358ec0450e9f7 Gerrit User 2 \u003c2@gerrit\u003e,Other Account \u003c2@Gerrit\u003e`\n\n1. is this a valid example?\n2. if it is valid then `, ` would cleanly indicate UUID vs accounts delimiter\n\nRegarding the `hasUuid` and its relation to `+ 2` AFAIU the reason for `+ 2` is actually due to the following space. From the readability perspective IMHO it is cleaner to search for 2 chars and take those 2 chars into consideration. Actually I would extract `, ` into a variable and use its length instead of `2` in this `+ 2` part so that the relation is even more explicit...\n\nHaving said that as long as these/any relations are clearly reflected whatever you propose will be fine ðŸ˜„ WDYT?",
      "parentUuid": "decad468_7d113a66",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65603d3f_946452e4",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 906,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-08T19:45:13Z",
      "side": 1,
      "message": "1. Yes, I believe it is\n2. Does it? I thought it separates the label and its vote from the UUID, no? Or do you mean the second comma in the example? Subsequent commas are why we need to check if the first space or first comma comes earlier, as it\u0027s not safe to assume there\u0027s only one comma in the line.\n\nI tend to prefer to name abstractions as what they are rather than what they do, but I do like your suggestion of abstracting the delimiter and adding its length (this also removes a magic number). I just need to think of a decent name for it (`commaAndSpace` isn\u0027t great I think). Thanks for your thoughts ðŸ˜Š",
      "parentUuid": "dedffdbd_6f4ed9db",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c8d2bc0_37ef0dcb",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 906,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-08T19:48:50Z",
      "side": 1,
      "message": "I should clarify - what they do or are, as opposed to what they are used for. And maybe in this case it doesn\u0027t matter that much as reusability is not a concern anyway.",
      "parentUuid": "65603d3f_946452e4",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0037d93a_14c2ef9f",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 906,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-08T21:16:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c8d2bc0_37ef0dcb",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dac8bf9f_536b3933",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 909,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-02-07T14:53:40Z",
      "side": 1,
      "message": "Can you add some examples here in the comment?\nThe code below is a bit complex to __guess__ what it is trying to do.",
      "range": {
        "startLine": 908,
        "startChar": 0,
        "endLine": 909,
        "endChar": 32
      },
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8302bc47_53b37c30",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 909,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-07T22:01:24Z",
      "side": 1,
      "message": "Yes this needs fleshing out.",
      "parentUuid": "dac8bf9f_536b3933",
      "range": {
        "startLine": 908,
        "startChar": 0,
        "endLine": 909,
        "endChar": 32
      },
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf39871f_5b27e208",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 909,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-08T21:16:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8302bc47_53b37c30",
      "range": {
        "startLine": 908,
        "startChar": 0,
        "endLine": 909,
        "endChar": 32
      },
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a36b0fe_0edc4995",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 911,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-07T13:40:52Z",
      "side": 1,
      "message": "This fixes the issue but seems a little fragile. I also considered regexes to match the different label types, but that seems like a bigger change and I\u0027m not sure why it was implemented like that in the first place - maybe performance considerations?",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82e8a937_a1e7c654",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 911,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-02-07T14:53:40Z",
      "side": 1,
      "message": "Yeah, I believe so. Regex evaluation is slow.",
      "parentUuid": "2a36b0fe_0edc4995",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a73d70e_1184f9c6",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 911,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-02-07T21:09:13Z",
      "side": 1,
      "message": "What if label is called `Code Review`? Wouldn\u0027t that be recognised as a `firstSpace`? The test example shows the following line:\n`Label: Code-Review\u003d+1 User Name (company_name, department) \u003c2@gerrit\u003e`\nI wonder what is the value of the `firstSpace` as IMHO it looks like the one after `Label:`...",
      "parentUuid": "82e8a937_a1e7c654",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b5876f4_6c733173",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 911,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-07T22:01:24Z",
      "side": 1,
      "message": "The docs are clear on the allowed characters [1] for the label, only alphanumeric characters and `-` are allowed. So unless I\u0027m misunderstanding it shouldn\u0027t be a problem.\n\n`Label: ` (with a trailing space) appears to be stripped out of the line passed to the method, so we wouldn\u0027t match on that.\n\n[1] https://gerrit-review.googlesource.com/Documentation/config-labels.html#label_name",
      "parentUuid": "8a73d70e_1184f9c6",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44e59d98_33ad44ac",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 911,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-02-08T09:22:37Z",
      "side": 1,
      "message": "Good point! Thanks for explanation.",
      "parentUuid": "8b5876f4_6c733173",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9aa412c_fe7d8b5e",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 1
      },
      "lineNbr": 911,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-02-08T19:45:13Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "44e59d98_33ad44ac",
      "revId": "d919b370960195c44606e6dfce149c617f3d10fb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}