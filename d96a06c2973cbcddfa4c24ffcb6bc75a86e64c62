{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1c911b7d_8f87f423",
        "filename": "java/com/google/gerrit/server/change/AbandonUtil.java",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-01T11:23:36Z",
      "side": 1,
      "message": "```suggestion\n  private final Supplier\u003cChangeQueryBuilder\u003e queryBuilderProvider;\n```",
      "range": {
        "startLine": 43,
        "startChar": 16,
        "endLine": 43,
        "endChar": 24
      },
      "revId": "d96a06c2973cbcddfa4c24ffcb6bc75a86e64c62",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c75b1571_c307dc4d",
        "filename": "java/com/google/gerrit/server/change/AbandonUtil.java",
        "patchSetId": 6
      },
      "lineNbr": 56,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-01T11:23:36Z",
      "side": 1,
      "message": "```suggestion\n  Supplier\u003cChangeQueryBuilder\u003e memoizedQueryBuilder \u003d Suppliers.memoize(\n    queryBuilderProvider::get);\n```",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 53
      },
      "revId": "d96a06c2973cbcddfa4c24ffcb6bc75a86e64c62",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57582a6c_c2ae9e3e",
        "filename": "java/com/google/gerrit/server/change/AbandonUtil.java",
        "patchSetId": 6
      },
      "lineNbr": 77,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-01T11:23:36Z",
      "side": 1,
      "message": "Compared to the version before this change, `queryBuilder` was reused across all calls to `abandonInactiveOpenChanges()` whilst now it creates a brand-new instance every call, and then left to the GC to destroy.\n\nHaving said that, maybe that\u0027s the right thing to do because having a `queryBuilder` that doesn\u0027t have an search index, well that\u0027s not useful at all isn\u0027t it?\n\nIf you use a `Suppliers.memoize()` then it will work as before, but with more chances that the index will be there.",
      "range": {
        "startLine": 77,
        "startChar": 21,
        "endLine": 77,
        "endChar": 47
      },
      "revId": "d96a06c2973cbcddfa4c24ffcb6bc75a86e64c62",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}