{
  "comments": [
    {
      "key": {
        "uuid": "aa8551d4_551a102b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-04-13T09:40:55Z",
      "side": 1,
      "message": "\"were\" or \"would have been\"",
      "range": {
        "startLine": 25,
        "startChar": 12,
        "endLine": 25,
        "endChar": 21
      },
      "revId": "d9e14bafe9c0117844a864402f1ce16e48cdf2dd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76078c56_38d03669",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-04-13T09:43:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa8551d4_551a102b",
      "range": {
        "startLine": 25,
        "startChar": 12,
        "endLine": 25,
        "endChar": 21
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "d9e14bafe9c0117844a864402f1ce16e48cdf2dd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c68e5b6b_a2cc7793",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-04-13T09:50:30Z",
      "side": 1,
      "message": "Thanks.",
      "parentUuid": "76078c56_38d03669",
      "range": {
        "startLine": 25,
        "startChar": 12,
        "endLine": 25,
        "endChar": 21
      },
      "revId": "d9e14bafe9c0117844a864402f1ce16e48cdf2dd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de5b09a3_d4ce100f",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/api/revision/RevisionDiffIT.java",
        "patchSetId": 1
      },
      "lineNbr": 1444,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-04-13T10:03:24Z",
      "side": 1,
      "message": "By the way, I had to deliberately use \u0027!\u0027 here to make this test work when the test closeRebaseAndNonRebaseHunksAreNotCombinedForIntralineOptimizations() was run before this test. If that other test runs before this one, we surprisingly get a cache hit for this test (at least on my local machine) and then get a wrong result. It\u0027s expected that we share state among the tests of this class and I know we sneak in additional parameters to the intraline diff computation (which we actually shouldn\u0027t do) but that\u0027s still a bit alarming. I will look into that on another day.",
      "range": {
        "startLine": 1444,
        "startChar": 71,
        "endLine": 1444,
        "endChar": 72
      },
      "revId": "d9e14bafe9c0117844a864402f1ce16e48cdf2dd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "259fd3dd_919dda74",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/IntraLineLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 274,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-04-13T09:40:55Z",
      "side": 1,
      "message": "Optional: Do you think this bug would have been less likely to be introduced if j++ went in the for loop header, and there was j-- in the combined case at line 297?",
      "revId": "d9e14bafe9c0117844a864402f1ce16e48cdf2dd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc0ce114_90ff286c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/IntraLineLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 274,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-04-13T09:50:30Z",
      "side": 1,
      "message": "I would rather say: If this whole computation was different and less \u0027hacky\u0027 (e.g. generating a new list instead of modifying the existing one), this issue would have been less likely to be introduced.",
      "parentUuid": "259fd3dd_919dda74",
      "revId": "d9e14bafe9c0117844a864402f1ce16e48cdf2dd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}