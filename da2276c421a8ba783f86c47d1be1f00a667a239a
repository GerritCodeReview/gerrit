{
  "pushCert": "certificate version 0.1\npusher 9A12888C 1490381256 -0700\nnonce AIcUUg8tMNq+NNKX7JiEQ8Bzas8GOAndGKqMxQtA0+tTlyT0qUSKm5ivGGO3VIi6WoNBCw8X2P7R\n\n0000000000000000000000000000000000000000 15da50864106bd1fc71f4f4c295da165000fd33f refs/for/master%topic\u003dnotedb-fusion,r\u003dekempin,r\u003daliceks\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJY1WnLAAoJEF/XxZqaEoiMAX0QAIgFClUmiUE3//5Ohjz3TAld\novw75ra5n++JJeudzd6LYqnhtmz/+9HUifK08seomf/rfqKPBoGiXYcb7EV6cynx\nfydNz64oxgxlJWqBZVaNOVnyn6yg1UEJgY/u8PXMdJRqJzpsk3jeJ8PlDejMLhBb\nLDlYRL+ArK2QfzlI6wmpVLTPbGMPcHrW197dMPtPNJkWYbuZDu1fhZouGoGYRJvQ\n82wwNlyoQP8qus0+g3AKjiEv02gfBmfvaNiqtwwEhpIlBvkziIZi0URWWuewRq2N\nEZX/6i2YfRcOcKZ4MC3BvXsWVV7NpkqKKMl7+hlfB7rRnZBwCzlPpH4D56ZWIBI5\nK5BaLv5mLHYzkxgvAL5/QXf8uqZu8YHF+gcUdhbvRJ+SSaOfXXbcG+POI04gnccc\nkfNNA85QizTYD0tW4t7a3tF4mBhBs+xkuSdMPLVvOCZ/gheAO3bfmkADiwV+3a27\n2X9W4itcBOK5xl6VaRX1zopG5NHqF3YbqoA2GyvcGT5vlAAqTLGqFSr7eDpZHLTp\ny/fKYv4fDfG6zFsdttq8NnCdemigEhtIIR+Vb8Gl+XILKMQK9LR2JdPTzuXvnPdP\nThBwu1a7489yfShm+5EgK67YhIB8SyqohKOmPc/yfnl8Pl8KWrxosG5ZYnT5o5VW\nxgfrt0SjG4QqJaRsydi4\n\u003dAzxU\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "79fdada5_1619bdb7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-03-27T15:49:33Z",
      "side": 1,
      "message": "optional: Include those fields in toString(), equals() and hashCode().",
      "range": {
        "startLine": 69,
        "startChar": 18,
        "endLine": 70,
        "endChar": 45
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d303201_033b9b2d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-30T19:58:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "79fdada5_1619bdb7",
      "range": {
        "startLine": 69,
        "startChar": 18,
        "endLine": 70,
        "endChar": 45
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2fd08cf_361e33dc",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-03-28T08:06:53Z",
      "side": 1,
      "message": "If I understand it correctly, calling newObjectInserter() on a ReadOnlyRepository doesn\u0027t throw an UnsupportedOperationException anymore because of this overridden method. Maybe we shouldn\u0027t override methods which delegate to ObjectDatabase or RefDatabase.",
      "range": {
        "startLine": 122,
        "startChar": 2,
        "endLine": 125,
        "endChar": 3
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8047f1ea_ce1958d8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-30T19:58:33Z",
      "side": 1,
      "message": "Great catch. Clearly this demonstrates the need for a test for ReadOnlyRepository.\n\nA good first pass would be to do as you suggest, look at Repository.java and don\u0027t override any method that calls get{Object,Ref}Database in its body.\n\nUnfortunately this doesn\u0027t work in the general case though. For example, we would have to not override #resolve(String), which eventually calls getRefDatabase via resolveSimple. But it is not hard to imagine an implementation of Repository providing a custom version of #resolve(String), so by not calling delegate.resolve(revstr), you\u0027re missing out on that.\n\nI was going to say maybe we don\u0027t need to worry about that happening, but I just looked at our subclass of DfsRepository, and we have custom code in Repository#updateRef that is not just delegating to getRepository(). So not calling delegate.updateRef would produce incorrect results.\n\nIt seems like what we really want is delegate to have *its* getRefDatabase return a ReadOnlyRefDatabase, but that\u0027s obviously impossible.\n\nHonestly, at this point I am not at all sure we can properly implement a read-only Repository wrapper. The options I can see at this point are:\n\n* Don\u0027t try too hard to make it read-only; take away some of the ways that implementations of updateRepo can shoot themselves in the foot, but leave some known holes.\n* Don\u0027t expose Repository to updateRepo, only RepoView. I tried this last week, but IIRC there is some caller that really wants to call #resolve or something else difficult to emulate.\n\nI\u0027m open to other suggestions.",
      "parentUuid": "f2fd08cf_361e33dc",
      "range": {
        "startLine": 122,
        "startChar": 2,
        "endLine": 125,
        "endChar": 3
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "386924d6_c84c734e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-30T20:18:04Z",
      "side": 1,
      "message": "\u003e * Don\u0027t expose Repository to updateRepo, only RepoView. I tried this last week, but IIRC there is some caller that really wants to call #resolve or something else difficult to emulate.\n\nThe other thing (which I remembered as soon as I opened the next change in this series) is that Merger really wants a Repository as well. It needs more than a reader/inserter: in the non-bare case it needs to be able to write intermediate stages out to disk (like what you get when \"git merge\" reports conflicts). It might not be completely impossible to support an in-core merger that only takes reader/inserter and not a full repo, but it\u0027ll require a JGit change.",
      "parentUuid": "8047f1ea_ce1958d8",
      "range": {
        "startLine": 122,
        "startChar": 2,
        "endLine": 125,
        "endChar": 3
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff2ae5a5_a3cef874",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-03-27T15:49:33Z",
      "side": 1,
      "message": "optional: Unnecessary as MissingObjectException is an IOException.",
      "range": {
        "startLine": 153,
        "startChar": 56,
        "endLine": 153,
        "endChar": 78
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fb616f2_b58576b7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-30T19:58:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff2ae5a5_a3cef874",
      "range": {
        "startLine": 153,
        "startChar": 56,
        "endLine": 153,
        "endChar": 78
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c7f4891_aca3364e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-03-27T15:49:33Z",
      "side": 1,
      "message": "optional: Unnecessary as MissingObjectException and IncorrectObjectTypeException are IOExceptions.",
      "range": {
        "startLine": 159,
        "startChar": 13,
        "endLine": 159,
        "endChar": 65
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eff98e07_ac30e44e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-30T19:58:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c7f4891_aca3364e",
      "range": {
        "startLine": 159,
        "startChar": 13,
        "endLine": 159,
        "endChar": 65
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de2eca47_59211ac4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-03-27T15:49:33Z",
      "side": 1,
      "message": "optional: Unnecessary as AmbiguousObjectException and IncorrectObjectTypeException are IOExceptions.",
      "range": {
        "startLine": 180,
        "startChar": 13,
        "endLine": 180,
        "endChar": 67
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "548d8074_fe5f7ff8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-30T19:58:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de2eca47_59211ac4",
      "range": {
        "startLine": 180,
        "startChar": 13,
        "endLine": 180,
        "endChar": 67
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4a9d871_bee0ace9",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-03-27T15:49:33Z",
      "side": 1,
      "message": "optional: Unnecessary as AmbiguousObjectException is an IOException.",
      "range": {
        "startLine": 186,
        "startChar": 47,
        "endLine": 186,
        "endChar": 71
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56f63af8_f4925e79",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-30T19:58:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4a9d871_bee0ace9",
      "range": {
        "startLine": 186,
        "startChar": 47,
        "endLine": 186,
        "endChar": 71
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac7bcf57_e959d2d1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-03-27T15:49:33Z",
      "side": 1,
      "message": "optional: (\"delegate\", delegate)",
      "range": {
        "startLine": 202,
        "startChar": 52,
        "endLine": 202,
        "endChar": 62
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fbd188f_e25c05b7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-30T19:58:33Z",
      "side": 1,
      "message": "I don\u0027t see the benefit, personally.",
      "parentUuid": "ac7bcf57_e959d2d1",
      "range": {
        "startLine": 202,
        "startChar": 52,
        "endLine": 202,
        "endChar": 62
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac456698_ce93f268",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 262,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-03-27T15:49:33Z",
      "side": 1,
      "message": "optional: Unnecessary as CorruptObjectException is an IOException.",
      "range": {
        "startLine": 262,
        "startChar": 61,
        "endLine": 262,
        "endChar": 83
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b01303d_b6422c26",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 262,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-30T19:58:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac456698_ce93f268",
      "range": {
        "startLine": 262,
        "startChar": 61,
        "endLine": 262,
        "endChar": 83
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0aa86b1e_589841ea",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-03-27T15:49:33Z",
      "side": 1,
      "message": "optional: Unnecessary as CorruptObjectException is an IOException.",
      "range": {
        "startLine": 267,
        "startChar": 61,
        "endLine": 267,
        "endChar": 83
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "991212c2_0e6ba895",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-30T19:58:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0aa86b1e_589841ea",
      "range": {
        "startLine": 267,
        "startChar": 61,
        "endLine": 267,
        "endChar": 83
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef9beaf4_8a6f39fa",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 522,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-03-27T15:49:33Z",
      "side": 1,
      "message": "optional: (\"delegate\", delegate)",
      "range": {
        "startLine": 522,
        "startChar": 54,
        "endLine": 522,
        "endChar": 64
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "251e3610_8d66f359",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 522,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-30T19:58:33Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ef9beaf4_8a6f39fa",
      "range": {
        "startLine": 522,
        "startChar": 54,
        "endLine": 522,
        "endChar": 64
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc39e860_91908935",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 570,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-03-27T15:49:33Z",
      "side": 1,
      "message": "optional: Unnecessary as MissingObjectException and IncorrectObjectTypeException are IOExceptions.",
      "range": {
        "startLine": 570,
        "startChar": 15,
        "endLine": 570,
        "endChar": 67
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdbd6e51_1e3ee2f3",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 570,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-30T19:58:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc39e860_91908935",
      "range": {
        "startLine": 570,
        "startChar": 15,
        "endLine": 570,
        "endChar": 67
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68e18629_a7358f28",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 586,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-03-27T15:49:33Z",
      "side": 1,
      "message": "optional: Is there a reason why you switch between \u0027getClass() \u003d\u003d o.getClass()\u0027 and \u0027getClass().equals(o.getClass())\u0027 within equals() implementations?",
      "range": {
        "startLine": 586,
        "startChar": 13,
        "endLine": 586,
        "endChar": 39
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e96ac7d7_184bd819",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/RepositoryWrapper.java",
        "patchSetId": 1
      },
      "lineNbr": 586,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-03-30T19:58:33Z",
      "side": 1,
      "message": "Ironically, a place where I *should* have copied and pasted but didn\u0027t. Fixed.",
      "parentUuid": "68e18629_a7358f28",
      "range": {
        "startLine": 586,
        "startChar": 13,
        "endLine": 586,
        "endChar": 39
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf6f01ae_d88da31a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/update/ReadOnlyRepository.java",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-03-27T15:49:33Z",
      "side": 1,
      "message": "optional: Add @Deprecated.",
      "range": {
        "startLine": 45,
        "startChar": 14,
        "endLine": 45,
        "endChar": 20
      },
      "revId": "da2276c421a8ba783f86c47d1be1f00a667a239a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}