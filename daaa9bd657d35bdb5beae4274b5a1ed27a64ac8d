{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3cef40d1_8f2dda39",
        "filename": "polygerrit-ui/app/services/app-context-init.ts",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2021-11-16T09:26:12Z",
      "side": 1,
      "message": "Maybe use\n\n  assertIsDefined(ctx.flagsService, \u0027flagsService\u0027);\n  \nor create a similar utility function.",
      "range": {
        "startLine": 48,
        "startChar": 6,
        "endLine": 49,
        "endChar": 69
      },
      "revId": "daaa9bd657d35bdb5beae4274b5a1ed27a64ac8d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1f655a3_ee10291d",
        "filename": "polygerrit-ui/app/services/app-context.ts",
        "patchSetId": 7
      },
      "lineNbr": 50,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2021-11-16T09:29:18Z",
      "side": 1,
      "message": "Please update the comment - appContext is not a singleton now",
      "range": {
        "startLine": 50,
        "startChar": 3,
        "endLine": 50,
        "endChar": 64
      },
      "revId": "daaa9bd657d35bdb5beae4274b5a1ed27a64ac8d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b967c7ad_6e823c0c",
        "filename": "polygerrit-ui/app/services/app-context.ts",
        "patchSetId": 7
      },
      "lineNbr": 58,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2021-11-16T09:29:18Z",
      "side": 1,
      "message": "mutable exports are not allowed by TS style guide (go/tsstyle#mutable-exports).\nPossible solution: remove \"export\" and add get method.",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 53
      },
      "revId": "daaa9bd657d35bdb5beae4274b5a1ed27a64ac8d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de1d31b5_95e09664",
        "filename": "polygerrit-ui/app/services/registry.ts",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2021-11-16T09:29:18Z",
      "side": 1,
      "message": "nit: I would prefer the TContext to make it clear that this is a type argument (same for other places in the file)",
      "range": {
        "startLine": 22,
        "startChar": 23,
        "endLine": 22,
        "endChar": 30
      },
      "revId": "daaa9bd657d35bdb5beae4274b5a1ed27a64ac8d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3267e848_7d96f103",
        "filename": "polygerrit-ui/app/services/registry.ts",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2021-11-16T10:40:10Z",
      "side": 1,
      "message": "What is the use-case for this parameter?\nIIUC, initializedServices in app-context-init.ts file can be removed (it is not used anywhere). I am not sure how this cache can be reused between different calls to the create\u003cContext\u003e.\nAs I wrote in other comment, the registry must always have all properties from the Context and the return value always contains all properties from the context. In this case sharing cache between different calls to create doesn\u0027t make sense - the second call to create (with the same cache) will do nothing",
      "range": {
        "startLine": 25,
        "startChar": 2,
        "endLine": 25,
        "endChar": 33
      },
      "revId": "daaa9bd657d35bdb5beae4274b5a1ed27a64ac8d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b33efa71_c61d43cb",
        "filename": "polygerrit-ui/app/services/registry.ts",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2021-11-16T10:40:10Z",
      "side": 1,
      "message": "Why this is Partial\u003cContext\u003e ?\nRegistry\u003cContext\u003e contains all keys from Context. IIUC, the output will always have the same properties(i.e. keys) as Registry\u003cContext\u003e \u003d\u003e the return value have all properties from the Context.",
      "range": {
        "startLine": 26,
        "startChar": 3,
        "endLine": 26,
        "endChar": 19
      },
      "revId": "daaa9bd657d35bdb5beae4274b5a1ed27a64ac8d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46cd7e39_393b0e4e",
        "filename": "polygerrit-ui/app/services/registry.ts",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2021-11-16T09:26:12Z",
      "side": 1,
      "message": "Since we are not dealing with non-enumerable properties, I would prefer to just use Objects.keys() in our app.",
      "range": {
        "startLine": 33,
        "startChar": 28,
        "endLine": 33,
        "endChar": 47
      },
      "revId": "daaa9bd657d35bdb5beae4274b5a1ed27a64ac8d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3597298d_f571226e",
        "filename": "polygerrit-ui/app/services/registry.ts",
        "patchSetId": 7
      },
      "lineNbr": 38,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2021-11-16T09:26:12Z",
      "side": 1,
      "message": "Can you just call `defineProperty` here instead of collecting all properties?\n\nThen you could change to a simple for-of loop instead of using reduce().",
      "revId": "daaa9bd657d35bdb5beae4274b5a1ed27a64ac8d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3e19879_6ec87184",
        "filename": "polygerrit-ui/app/services/registry.ts",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2021-11-16T09:26:12Z",
      "side": 1,
      "message": "This handling of the `initializing` variable seems to `factory(context)` can somehow call `create\u003cContext\u003e()`. Can that happen?\n\nOr are factories async functions?\n\nOh wait, this is a getter. Maybe add a comment then, so future readers have an easier time to understand this.",
      "range": {
        "startLine": 42,
        "startChar": 12,
        "endLine": 45,
        "endChar": 33
      },
      "revId": "daaa9bd657d35bdb5beae4274b5a1ed27a64ac8d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b371339_56a8fabb",
        "filename": "polygerrit-ui/app/services/registry.ts",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 1085901
      },
      "writtenOn": "2021-11-16T10:40:10Z",
      "side": 1,
      "message": "Wrap it in try-finally (otherwise, exceptions in factory can lead to a wrong exception about circular dependencies)\ntry {\n  initialized.set(...)\n} finally {\n  initializing \u003d false;\n}",
      "range": {
        "startLine": 44,
        "startChar": 12,
        "endLine": 45,
        "endChar": 33
      },
      "revId": "daaa9bd657d35bdb5beae4274b5a1ed27a64ac8d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}