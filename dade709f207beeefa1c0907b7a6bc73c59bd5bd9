{
  "comments": [
    {
      "key": {
        "uuid": "e8e9aa6a_82665a92",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/SubmitByRebaseAlwaysIT.java",
        "patchSetId": 9
      },
      "lineNbr": 135,
      "author": {
        "id": 1022949
      },
      "writtenOn": "2017-01-18T16:45:40Z",
      "side": 1,
      "message": "I\u0027ll refactor this test to be shared among all strategies once we agree on approach.",
      "range": {
        "startLine": 135,
        "startChar": 14,
        "endLine": 135,
        "endChar": 39
      },
      "revId": "dade709f207beeefa1c0907b7a6bc73c59bd5bd9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "031b415c_6382a2ed",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/SubmitByRebaseAlwaysIT.java",
        "patchSetId": 9
      },
      "lineNbr": 149,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-18T17:18:23Z",
      "side": 1,
      "message": "I would expect this line to fail given the issue I mentioned with createRevWalk. If it doesn\u0027t, maybe I\u0027m missing something (InMemoryRepository auto-flushes perhaps?), but I still think my comment is correct.",
      "revId": "dade709f207beeefa1c0907b7a6bc73c59bd5bd9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "031b415c_a36bba59",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/BatchUpdate.java",
        "patchSetId": 9
      },
      "lineNbr": 704,
      "author": {
        "id": 1022949
      },
      "writtenOn": "2017-01-18T16:45:40Z",
      "side": 1,
      "message": "doing verification before the flush, i think, is more efficient. Should I do that?",
      "range": {
        "startLine": 704,
        "startChar": 8,
        "endLine": 704,
        "endChar": 25
      },
      "revId": "dade709f207beeefa1c0907b7a6bc73c59bd5bd9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8e9aa6a_626b565a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/BatchUpdate.java",
        "patchSetId": 9
      },
      "lineNbr": 704,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-18T17:13:38Z",
      "side": 1,
      "message": "Yes, the ObjectReader you get back from the Context should know how to read back un-flushed objects. You\u0027d find out pretty quick if it didn\u0027t :)",
      "revId": "dade709f207beeefa1c0907b7a6bc73c59bd5bd9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "031b415c_4385a6f2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/validators/OnSubmitValidationListener.java",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-18T17:13:38Z",
      "side": 1,
      "message": "Nit: I would probably call this \"newRevWalk\" to be consistent with method names elsewhere in Gerrit.",
      "range": {
        "startLine": 60,
        "startChar": 19,
        "endLine": 60,
        "endChar": 32
      },
      "revId": "dade709f207beeefa1c0907b7a6bc73c59bd5bd9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8e9aa6a_42705246",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/validators/OnSubmitValidationListener.java",
        "patchSetId": 9
      },
      "lineNbr": 61,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-18T17:13:38Z",
      "side": 1,
      "message": "This RevWalk can\u0027t read back objects that were previously inserted but not flushed. You should pass an ObjectReader, specifically ctx.getRevWalk().getObjectReader(), into the Arguments constructor.",
      "revId": "dade709f207beeefa1c0907b7a6bc73c59bd5bd9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8e9aa6a_027a4a24",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/validators/OnSubmitValidationListener.java",
        "patchSetId": 9
      },
      "lineNbr": 82,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-18T17:13:38Z",
      "side": 1,
      "message": "I think this javadoc needs to be updated?",
      "revId": "dade709f207beeefa1c0907b7a6bc73c59bd5bd9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8e9aa6a_22754e36",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/validators/OnSubmitValidators.java",
        "patchSetId": 9
      },
      "lineNbr": 43,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-18T17:13:38Z",
      "side": 1,
      "message": "Hm, I\u0027m trying to think through why it would be better or worse to call each listener exactly once and passing the whole Map as an argument vs. once per branch. Both are reasonably easy semantics to explain, so I think that bar is met.\n\nThe main advantage of passing a map is that a listener gets a fuller picture of the situation. There might be multiple branches in the same repo that are being submitted as part of a single submit operation. If you call the listener once per branch, the listener has literally no way to know whether two updates to different branches are happening in the same atomic operation or not. That said, I\u0027m struggling to think of a use case where the listener needs to know about the whole batch at once, so maybe this is not a huge downside.\n\nThe downside of passing a map is that then the listener has to do the iteration themselves. This isn\u0027t a huge downside either IMO.\n\nSo I guess between the two alternatives, maybe we should just go with the one that you prefer, since you\u0027re the plugin author here? Do you have any other thoughts?",
      "revId": "dade709f207beeefa1c0907b7a6bc73c59bd5bd9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "031b415c_e375b235",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/validators/OnSubmitValidators.java",
        "patchSetId": 9
      },
      "lineNbr": 46,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-18T17:13:38Z",
      "side": 1,
      "message": "Braces and multi-line blocks are always required:\nhttps://google.github.io/styleguide/javaguide.html#s4.1.1-braces-always-used\n\n(aka don\u0027t goto fail)",
      "revId": "dade709f207beeefa1c0907b7a6bc73c59bd5bd9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "031b415c_037bae2a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/validators/OnSubmitValidators.java",
        "patchSetId": 9
      },
      "lineNbr": 50,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-18T17:13:38Z",
      "side": 1,
      "message": "Tiny corner case here: DynamicSets are dynamic. So due to plugin loading it\u0027s actually not impossible that you will iterate over a different set of listeners on each iteration of the outer loop.\n\nYou should make a defensive copy prior to the outer loop:\n\n  List\u003cOSVL\u003e listeners \u003d new ArrayList\u003c\u003e(this.listeners);",
      "revId": "dade709f207beeefa1c0907b7a6bc73c59bd5bd9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}