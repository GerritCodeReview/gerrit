{
  "comments": [
    {
      "key": {
        "uuid": "95d0d307_656b4ed5",
        "filename": "java/com/google/gerrit/server/group/db/GroupNameNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-11-10T16:01:11Z",
      "side": 1,
      "message": "I\u0027m a little bit leery of sets of GroupReferences, since GroupReference has the (IMHO) unexpected equals() behavior of comparing only the UUID.\n\nIf everything is working correctly, then this should be fine because the name \u003c-\u003e UUID mapping will be 1-to-1. But if we have a corrupt notes branch where there are multiple names for a single UUID, then this method will have the perhaps unexpected behavior of silently dropping one of the (name, UUID) pairs.\n\nI\u0027m honestly not sure what the best behavior of this method would be in that case, though. Some options (not necessarily exhaustive):\n\n* Include only one (name, UUID) pair for that UUID (the current behavior)\n* Return a list with possible duplicate UUIDs\n* Fail fast\n\n(It would be nice--maybe--if GroupReference included the group name in its equality check, but I strongly suspect that would break things in the permission editing.)",
      "range": {
        "startLine": 92,
        "startChar": 16,
        "endLine": 92,
        "endChar": 44
      },
      "revId": "daf6db986c35b89d0aeb36b2f22f9f4792ebbcf9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8a1101d_9733ee23",
        "filename": "java/com/google/gerrit/server/group/db/GroupNameNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-11-10T16:15:16Z",
      "side": 1,
      "message": "I think we do not want to fail fast. By the end of this series, this method will be called from GroupIncludeCache.AllExternalLoader, and that cache is used by IncludingGroupMembership#getKnownGroups, which is used to create change ETags. So failing to populate that cache will make the whole server essentially unusable until the corruption is fixed.\n\nHaving thought about it a bit more, I think my preferred fix would be to keep the current behavior but add a warning log if you detect duplicates.",
      "parentUuid": "95d0d307_656b4ed5",
      "range": {
        "startLine": 92,
        "startChar": 16,
        "endLine": 92,
        "endChar": 44
      },
      "revId": "daf6db986c35b89d0aeb36b2f22f9f4792ebbcf9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "678586fc_a022d317",
        "filename": "java/com/google/gerrit/server/group/db/GroupNameNotes.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-11-14T13:38:45Z",
      "side": 1,
      "message": "I expected that we would catch inconsistent states with the consistency checker. That\u0027s also the answer to the question you asked yesterday: Yes, I think we should implement the consistency checker soon.\n\nMaybe we think about different things when talking about a consistency checker. So, here are aspect which I would expect it to entail:\n* It ensures that the NoteMap for the group names and the group.config files are in sync. This includes:\n** Any existing ref for a group is represented by the group\u0027s (name, UUID) in the NoteMap.\n** Each UUID mentioned in the NoteMap occurs only once.\n** Each UUID mentioned in the NoteMap maps to an existing group ref which represents a group with the given UUID and name.\n* All parts of the checker are either automatically executed when they are appropriate (e.g. whenever a group is loaded from NoteDb, we check the group.config -\u003e NoteMap mapping for that group for correctness) or (alternatively?) admins can request to execute all checks.\n\nI wouldn\u0027t want to scatter various warnings in the code without having a way to ensure that all necessary checks are covered. For instance, adding a warning for duplicate UUIDs here wouldn\u0027t help us for (name, UUID) pairs which point to wrong UUIDs.\n\nMy suggestion would be to write a consistency checker which covers all aspects by various methods. We can call the one which ensures the NoteMap -\u003e group.configs mapping within this method or close to it provided we can afford the additional overhead.",
      "parentUuid": "a8a1101d_9733ee23",
      "range": {
        "startLine": 92,
        "startChar": 16,
        "endLine": 92,
        "endChar": 44
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "daf6db986c35b89d0aeb36b2f22f9f4792ebbcf9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffe25d4e_f95d16e4",
        "filename": "java/com/google/gerrit/server/group/db/Groups.java",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-11-10T16:01:11Z",
      "side": 1,
      "message": "Per my comment in loadAllGroupReferences, this has different behavior wrt duplicate UUIDs between NoteDb and ReviewDb.\n\nIf we decide we\u0027re ok with the Set behavior in NoteDb, you could make the ReviewDb behavior match by adding distinct() to the stream call below.",
      "revId": "daf6db986c35b89d0aeb36b2f22f9f4792ebbcf9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9196eab7_925d9a76",
        "filename": "java/com/google/gerrit/server/group/db/Groups.java",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-11-14T13:38:45Z",
      "side": 1,
      "message": "That sounds like comparing apples and oranges to me.\n\nNoteDb will always have unique UUIDs per design for groups. By iterating over the NoteMap of all names, we might miss some UUIDs of existing groups if the NoteMap was somehow screwed up.\n\nIn ReviewDb, we could possibly have several groups with the same UUID. As soon as we try to look them up, we get an exception, log a warning (previously in Groups#getGroupIfPossible, now in GroupCacheImpl#get(AccountGroup.UUID)), and otherwise silently ignore them. Adding distinct() to the stream below doesn\u0027t really change anything about the described behavior, though. I can add it if you think that would be better from the perspective of this method, but it would remove duplicates of a different sense.",
      "parentUuid": "ffe25d4e_f95d16e4",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "daf6db986c35b89d0aeb36b2f22f9f4792ebbcf9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}