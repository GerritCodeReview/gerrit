{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d7a90bb0_0f8ebc9f",
        "filename": "java/com/google/gerrit/index/query/PaginatingSource.java",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-03-18T15:15:17Z",
      "side": 1,
      "message": "Doesn\u0027t this comment apply to both paths of the if condition?",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 76,
        "endChar": 45
      },
      "revId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71948854_aeb0caa0",
        "filename": "java/com/google/gerrit/index/query/PaginatingSource.java",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-18T22:14:26Z",
      "side": 1,
      "message": "+1, it should be moved before L70",
      "parentUuid": "d7a90bb0_0f8ebc9f",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 76,
        "endChar": 45
      },
      "revId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85bca522_2b3552b2",
        "filename": "java/com/google/gerrit/index/query/PaginatingSource.java",
        "patchSetId": 9
      },
      "lineNbr": 102,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-03-18T15:15:17Z",
      "side": 1,
      "message": "Does this reintroduce the buggy code path that was fixed in https://gerrit-review.googlesource.com/c/gerrit/+/344695/3/java/com/google/gerrit/index/query/AndSource.java#107 ?",
      "revId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a36d23fd_0396007d",
        "filename": "java/com/google/gerrit/index/query/PaginatingSource.java",
        "patchSetId": 9
      },
      "lineNbr": 102,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-18T22:14:26Z",
      "side": 1,
      "message": "I checked I3143e69354e and I did not find:\n- Release notes\n- Reference to an issue\n- Test checking that the issue exist and the change fixes it\n\nThat\u0027s why I missed it :-(\n\nI need to read I3143e69354e more carefully and understand what was the buggy situation and how to reproduce it. Did you raised any issue but forgot to include it in the commit message?",
      "parentUuid": "85bca522_2b3552b2",
      "revId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c5406b9_b1c19887",
        "filename": "java/com/google/gerrit/index/query/PaginatingSource.java",
        "patchSetId": 9
      },
      "lineNbr": 102,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-18T22:31:52Z",
      "side": 1,
      "message": "I checked I3143e69354e and that refers to the code at L86-L100, which contains the fix. Hence I do not believe that this change reintroduces the bug.\n\nIf you have a test-case that shows the issue, happy to verify if the issue exists with this code or not.",
      "parentUuid": "a36d23fd_0396007d",
      "revId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "788e29a2_3d881b52",
        "filename": "java/com/google/gerrit/index/query/PaginatingSource.java",
        "patchSetId": 9
      },
      "lineNbr": 102,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-03-18T22:53:35Z",
      "side": 1,
      "message": "\u003e I checked I3143e69354e and I did not find:\n\u003e - Release notes\n\u003e - Reference to an issue\n\u003e - Test checking that the issue exist and the change fixes it\n\u003e \n\u003e That\u0027s why I missed it :-(\n\nOther than the test, why would those other things have made it more likely to find?\n\nThe code in this block is the same as what was in AndSource prior to change I3143e69354e, so I would normally do something like `git log --no-merges \u003ccommit used as reference for below code\u003e..stable-3.4 -- java/com/google/gerrit/index/query/AndSource.java` to find any relevant modifications to that code that need to be incorporated in this new change.\n\n\u003e \n\u003e I need to read I3143e69354e more carefully and understand what was the buggy situation and how to reproduce it.\n\u003e I checked I3143e69354e and that refers to the code at L86-L100, which contains the fix. Hence I do not believe that this change reintroduces the bug.\n\nL104-117 below are very similar in that they use a `skipped` boolean to determine when to query again and they don\u0027t use the `pageResultSize` to see how many results were retrieved. I think that still leads to the bug where an extra query is done when at least one result was skipped but the overall count of results is less than the limit.\n\n\u003e Did you raised any issue but forgot to include it in the commit message?\n\nI don\u0027t think there was an issue created for it. @kaushik.lingarkar@linaro.org do you recall?\n\nIt should be possible to create a test for it by setting the queryLimit lower than the default 500 (so that you don\u0027t have to create 500+ test changes).",
      "parentUuid": "a36d23fd_0396007d",
      "revId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c82048fd_9b462088",
        "filename": "java/com/google/gerrit/index/query/PaginatingSource.java",
        "patchSetId": 9
      },
      "lineNbr": 102,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-18T23:18:38Z",
      "side": 1,
      "message": "\u003e  I think that still leads to the bug where an extra query is done when at least one result was skipped but the overall count of results is less than the limit.\n\nI see, gotcha, let me check. Yes, it would be best to have a validation test, so that we can verify that it is covered and the same bug doesn\u0027t come back at a later stage.\n\n@diego.sessona@gmail.com can you add that validation test as a separate change? So that we make sure that it is failing without the fix, but it is passing with the fix.",
      "parentUuid": "788e29a2_3d881b52",
      "revId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca073cc2_7fd8d134",
        "filename": "java/com/google/gerrit/index/query/PaginatingSource.java",
        "patchSetId": 9
      },
      "lineNbr": 107,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-03-18T15:15:17Z",
      "side": 1,
      "message": "I think this reintroduce the exact issue that change 379354 (`PaginationType.NONE`) was created to fix? And it seems `PaginationType.NONE` is now incorrect since it does a backend pagination in this case.",
      "range": {
        "startLine": 107,
        "startChar": 38,
        "endLine": 107,
        "endChar": 45
      },
      "revId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fb692ca_27ad7ed7",
        "filename": "java/com/google/gerrit/index/query/PaginatingSource.java",
        "patchSetId": 9
      },
      "lineNbr": 107,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-18T22:14:26Z",
      "side": 1,
      "message": "\u003e I think this reintroduce the exact issue that change 379354 (`PaginationType.NONE`) was created to fix?\n\nThe issue did not exist in v3.4.0 where this code is coming from.\n\n\u003e And it seems `PaginationType.NONE` is now incorrect since it does a backend pagination in this case.\n\nPaginationType.NONE refers to the indexing pagination when the API doesn\u0027t ask for one, see how v3.4.0 behaves, that\u0027s the legacy behaviour that we want to keep and did not create any issues.",
      "parentUuid": "ca073cc2_7fd8d134",
      "range": {
        "startLine": 107,
        "startChar": 38,
        "endLine": 107,
        "endChar": 45
      },
      "revId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eafd2379_7468b195",
        "filename": "java/com/google/gerrit/index/query/PaginatingSource.java",
        "patchSetId": 9
      },
      "lineNbr": 107,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2024-03-18T22:53:35Z",
      "side": 1,
      "message": "\u003e \u003e I think this reintroduce the exact issue that change 379354 (`PaginationType.NONE`) was created to fix?\n\u003e \n\u003e The issue did not exist in v3.4.0 where this code is coming from.\n\nI don\u0027t think that\u0027s true. It was just less likely.\n\n\u003e \n\u003e \u003e And it seems `PaginationType.NONE` is now incorrect since it does a backend pagination in this case.\n\u003e \n\u003e PaginationType.NONE refers to the indexing pagination when the API doesn\u0027t ask for one, see how v3.4.0 behaves, that\u0027s the legacy behaviour that we want to keep and did not create any issues.\n\nBut calling `restart()` is doing a pagination (that\u0027s exactly what\u0027s said in the comment above that you agreed applies to both paths). I think you\u0027ll get the same \"duplicate results\" kind of issue in a well crafted scenario. All it would take is for a result that you\u0027ve already added to re-appear in the restarted backend query due to many newer results appearing first.",
      "parentUuid": "0fb692ca_27ad7ed7",
      "range": {
        "startLine": 107,
        "startChar": 38,
        "endLine": 107,
        "endChar": 45
      },
      "revId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcaa3089_ca41d8b8",
        "filename": "java/com/google/gerrit/index/query/PaginatingSource.java",
        "patchSetId": 9
      },
      "lineNbr": 107,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-18T23:18:38Z",
      "side": 1,
      "message": "The pagination issue did not existed in v3.4.0, where this code is coming from.",
      "parentUuid": "eafd2379_7468b195",
      "range": {
        "startLine": 107,
        "startChar": 38,
        "endLine": 107,
        "endChar": 45
      },
      "revId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Style",
        "description": {
          "value": "Code has correct style and format"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^~(polygerrit-ui/.*)$\" OR -branch:refs/heads/master)"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Style\u003dMAX AND -label:Code-Style\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^~(polygerrit-ui/.*)$\" OR -branch:refs/heads/master)"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["file:\"^~(polygerrit-ui/.*)$\""],"failingAtoms":["branch:refs/meta/config","branch:refs/heads/master"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Style=MAX AND -label:Code-Style=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Style=MAX"],"failingAtoms":["label:Code-Style=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Forward-Compatibility",
        "description": {
          "value": "Changes to NoteDb, data serialization in ChangeField, or the entities packages require careful consideration. Make sure your change is forward compatible and add the footer \u0027Forward-Compatible: checked\u0027 to your commit message"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\" OR file:\"^java/com/google/gerrit/entities/.*\\\\.java$\" OR file:\"^java/com/google/gerrit/server/index/.*Field\\\\.java\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Forward-Compatible\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\" OR file:\"^java/com/google/gerrit/entities/.*\\\\.java$\" OR file:\"^java/com/google/gerrit/server/index/.*Field\\\\.java\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^java/com/google/gerrit/server/notedb/.*\\\\.java$\"","file:\"^java/com/google/gerrit/entities/.*\\\\.java$\"","file:\"^java/com/google/gerrit/server/index/.*Field\\\\.java\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Forward-Compatible\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Frontend-Verified",
        "description": {
          "value": "Frontend compilation, tests, and linters pass"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "branch:refs/heads/master AND (file:\"^polygerrit-ui/.*\" OR is:merge)"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Frontend-Verified\u003dMAX AND -label:Frontend-Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"branch:refs/heads/master AND (file:\"^polygerrit-ui/.*\" OR is:merge)"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/heads/master","file:\"^polygerrit-ui/.*\"","is:merge"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Frontend-Verified=MAX AND -label:Frontend-Verified=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Library-Compliance",
        "description": {
          "value": "Changes to specific library/metadata files require additional approval"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Library-Compliance\u003dMAX AND -label:Library-Compliance\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^lib/.*\"","file:\"^WORKSPACE$\"","file:\"^.gitmodule$\"","file:\"^tools/deps.bzl$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Library-Compliance=MAX AND -label:Library-Compliance=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Release-Notes",
        "description": {
          "value": "Changes must include a \u0027Release-Notes\u0027 footer with a single sentence to mention in the release notes. Changes not worth mentioning in the release notes should put \u0027Release-Notes: skip\u0027"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND -hasfooter:\"Release-Notes\" AND -is:pure-revert"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Release-Notes\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND -hasfooter:\"Release-Notes\" AND -is:pure-revert"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["hasfooter:\"Release-Notes\""],"failingAtoms":["branch:refs/meta/config","is:pure-revert"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Release-Notes\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^~(polygerrit-ui/.*)$\" OR is:merge OR -branch:refs/heads/master)"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^~(polygerrit-ui/.*)$\" OR is:merge OR -branch:refs/heads/master)"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["file:\"^~(polygerrit-ui/.*)$\""],"failingAtoms":["branch:refs/meta/config","is:merge","branch:refs/heads/master"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "db911c50c6d87d92da8f0c78dcf9063974269a18",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}