{
  "comments": [
    {
      "key": {
        "uuid": "ee0eb1b4_4ab0f3fc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-01-09T15:54:11Z",
      "side": 1,
      "message": "Reading Shawn\u0027s comment [1] I think that, by design, we don\u0027t expect to see the same set of files when diffing patch sets a..b and b..a.\n\nI am sorry if this question comes a bit late but please explain what is incorrect in these two examples and what do you consider as the correct result in both cases.\n\nAlso see a related comment in the PatchListCacheIT.java\n\n[1] https://gerrit-review.googlesource.com/#/c/57086/4//COMMIT_MSG@10",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 30,
        "endChar": 69
      },
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ee06512_2b6259f7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1016722
      },
      "writtenOn": "2015-01-09T19:21:23Z",
      "side": 1,
      "message": "From our point of view it is incorrect that the file lists are not the same for the forward and reverse diffs.\n\n9..1 has the below entries.\n1..9 does not have the below entries.\n\ngerrit-server/src/main/java/com/google/gerrit/server/config/DownloadConfig.java\nplugins/download-commands\n\nThe correct result would be to have the same list of entries, but the status indicating add/delete.\nI think that the comment from Shawn makes sense because it concerns files with the modified status which is a different use case. I hope it answers your question.",
      "parentUuid": "ee0eb1b4_4ab0f3fc",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 30,
        "endChar": 69
      },
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee0eb1b4_2abdbfd4",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/change/PatchListCacheIT.java",
        "patchSetId": 7
      },
      "lineNbr": 154,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-01-09T15:54:11Z",
      "side": 1,
      "message": "Up to here we created the following:\n\n  +D\n  Base: D\n\n  +A +C -D\n  patch set a: A C\n\n  +B -C\n  patch set b: A B",
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce13adda_29feedc1",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/change/PatchListCacheIT.java",
        "patchSetId": 7
      },
      "lineNbr": 154,
      "author": {
        "id": 1016722
      },
      "writtenOn": "2015-01-09T19:21:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee0eb1b4_2abdbfd4",
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee0eb1b4_0abafbdc",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/change/PatchListCacheIT.java",
        "patchSetId": 7
      },
      "lineNbr": 159,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-01-09T15:54:11Z",
      "side": 1,
      "message": "This test case compares a..b and expects only +B. Is this correct for you? Should -C be a part of the diff or no?",
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce13adda_4901212e",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/change/PatchListCacheIT.java",
        "patchSetId": 7
      },
      "lineNbr": 159,
      "author": {
        "id": 1016722
      },
      "writtenOn": "2015-01-09T19:21:23Z",
      "side": 1,
      "message": "-C should be the part of the diff, however it is a different use case on which I am also working and it will be in a separate commit.",
      "parentUuid": "ee0eb1b4_0abafbdc",
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae0839ac_c8aaaf8c",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/change/PatchListCacheIT.java",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-01-09T15:54:11Z",
      "side": 1,
      "message": "This compares b..a and expects only -B. I cannot easily understand this expectation. Strictly comparing b..a we have\n\n  -B +C\n\nIf the set of interesting files, as Shawn suggested, is limited to those that differ between the Base and the second patch set in the comparison, then only file C would be interesting as B didn\u0027t exist in Base and A wasn\u0027t changed between b and a.\n\nIf we really want to have a \"symetric\" result when comparing a..b and b..a then, for the the expected results would be:\n\n  a..b: +B -C\n  b..a: -B +C\n\nWe must reach an agreement on the question(s) above before any useful review can be provided on this change.",
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ee06512_0bfb1dd2",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/change/PatchListCacheIT.java",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 1016722
      },
      "writtenOn": "2015-01-09T19:21:23Z",
      "side": 1,
      "message": "I agree with that and will do it in a separate commit unless you prefer to have all these use cases together.",
      "parentUuid": "ae0839ac_c8aaaf8c",
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce4e4d56_3101d02f",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/change/PatchListCacheIT.java",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-01-13T15:12:32Z",
      "side": 1,
      "message": "I don\u0027t see a value into this intermediate state. How would we explain the logic to our users? Why is C not in the result of b..a comparison?\n\nSo, yes I would like to see a complete solution without an intermediate state which is hard to explain.",
      "parentUuid": "0ee06512_0bfb1dd2",
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee0eb1b4_aac88f87",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/change/PatchListCacheIT.java",
        "patchSetId": 7
      },
      "lineNbr": 172,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-01-09T15:54:11Z",
      "side": 1,
      "message": "What is the purpose of this code?",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 172,
        "endChar": 5
      },
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce13adda_6904e53f",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/change/PatchListCacheIT.java",
        "patchSetId": 7
      },
      "lineNbr": 172,
      "author": {
        "id": 1016722
      },
      "writtenOn": "2015-01-09T19:21:23Z",
      "side": 1,
      "message": "You previously asked for the example of a test to reproduce the issue on the \"old\" code (without my change).\nThis is a demonstration of what the user considers the incorrect outcome.",
      "parentUuid": "ee0eb1b4_aac88f87",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 172,
        "endChar": 5
      },
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aeb7594b_50162c6c",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/change/PatchListCacheIT.java",
        "patchSetId": 7
      },
      "lineNbr": 172,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-01-13T15:08:44Z",
      "side": 1,
      "message": "What I meant was to have a test case which is red on the old code and green with the new code. I asked for that because all your new tests couldn\u0027t compile against the old code and, thus, we didn\u0027t have an easy way to see how to old code fails.\n\nIf is enough that the assertDeleted (line 166) fails on the old code and succeeds on the new code. Please remove this catch block.",
      "parentUuid": "ce13adda_6904e53f",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 172,
        "endChar": 5
      },
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae0839ac_28bdcbd4",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/change/PatchListCacheIT.java",
        "patchSetId": 7
      },
      "lineNbr": 254,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-01-09T15:54:11Z",
      "side": 1,
      "message": "What is this good for?",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 254,
        "endChar": 5
      },
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ee06512_2bfed9c1",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/change/PatchListCacheIT.java",
        "patchSetId": 7
      },
      "lineNbr": 254,
      "author": {
        "id": 1016722
      },
      "writtenOn": "2015-01-09T19:21:23Z",
      "side": 1,
      "message": "Another example of a test to reproduce the issue on the \"old\" code (without my change).",
      "parentUuid": "ae0839ac_28bdcbd4",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 254,
        "endChar": 5
      },
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee0eb1b4_0a5f9b31",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListKey.java",
        "patchSetId": 7
      },
      "lineNbr": 56,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-01-09T15:54:11Z",
      "side": 1,
      "message": "Nit: we don\u0027t use final for parameters any more, unless really necessary.",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 56,
        "endChar": 76
      },
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce13adda_a9e9bd10",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListKey.java",
        "patchSetId": 7
      },
      "lineNbr": 56,
      "author": {
        "id": 1016722
      },
      "writtenOn": "2015-01-09T19:21:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee0eb1b4_0a5f9b31",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 56,
        "endChar": 76
      },
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae0839ac_48659ffd",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListKey.java",
        "patchSetId": 7
      },
      "lineNbr": 127,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-01-09T15:54:11Z",
      "side": 1,
      "message": "If the first constructor is used then both oldSeqNum and newSeqNum are not explicitly initialized i.e. they are set to zero. Seeing \"0..0\" in the string representation of this object is less useful than seeing \"aPSID..bPSID\".\n\nInclude the IDs always in the toString and additionally include the old/newSeqNum if they are set?",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 127,
        "endChar": 24
      },
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce13adda_89eef914",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListKey.java",
        "patchSetId": 7
      },
      "lineNbr": 127,
      "author": {
        "id": 1016722
      },
      "writtenOn": "2015-01-09T19:21:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae0839ac_48659ffd",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 127,
        "endChar": 24
      },
      "revId": "dc3f82c62bb32d3bad27128568ab2bc9db81b44a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}