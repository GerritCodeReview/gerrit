{
  "comments": [
    {
      "key": {
        "uuid": "5e991882_f2fa68ea",
        "filename": "Documentation/cmd-plugin-install.txt",
        "patchSetId": 14
      },
      "lineNbr": 68,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-10-20T10:27:10Z",
      "side": 1,
      "message": "As pointed out in java file: we have backwards compatibility problem here.",
      "revId": "dd535be1fd1756ff6167b831de709110fa7e63ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83d09a10_61205685",
        "filename": "Documentation/cmd-plugin-install.txt",
        "patchSetId": 14
      },
      "lineNbr": 68,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2013-11-29T15:43:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e991882_f2fa68ea",
      "revId": "dd535be1fd1756ff6167b831de709110fa7e63ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e991882_921cbc7f",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-10-20T10:27:10Z",
      "side": 1,
      "message": "Can you please be more verbose on JA plugin? May be we should start its own documentation file dev-plugins-js.txt? Or may be extend JS-API.txt?\n\nI have still many questions:\n\n* How should i verify that cange? Can you upload or point to an example of such JS plugin? What can we do from it?\n* Can JS plugin access JS API? Can it send requests?\n* Can JS plugin retrieve its own name?\n* Can we communicate with such a plugin from UiAction? From JS-API?",
      "revId": "dd535be1fd1756ff6167b831de709110fa7e63ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3cbde64_e2c54676",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2013-11-29T15:43:02Z",
      "side": 1,
      "message": "IMO, being more verbose on JS plugins shouldn\u0027t be part of this commit. It is already big and quite old. Also it main purpose is to extend Gerrit deploy plugin mechanism to accept not only jar files but also plain text files.\n\nVerification is simple, just drop any file with \"js\" extension into $site/plugins directory with simple alert window (eg. alert(\u0027Greetings from standalone JS plugin\u0027);)\n\nRest of yours questions are related to JavaScript architecture and our JS-plugin architecture. They are not connected to this change. But since they was asked here I\u0027ll also answer them.\n\nIMO we shouldn\u0027t provide any sandbox environment for JS plugins (this would be really hard and IMO counterproductive for plugin architecture). When you are in JavaScript land you have access to all functions, classes and data that was loaded by given page. Therefore such plugin will be able to access JS API and send requests.\n\nGWT plugins are nothing more then compiled Java to JavaScript. Getting plugin name should be also working for JS plugins, if not it should be easy to implement this.\n\nAFAIK UiActions are server side extensions. If they can send JavaScript code to browser then they can also \"communicate\" git JS plugins (of course this should be manually implemented by developer). Also since JS plugin work on client side it can arbitrary modify any web page element, this means that it could also modify UiAction handler.",
      "parentUuid": "5e991882_921cbc7f",
      "revId": "dd535be1fd1756ff6167b831de709110fa7e63ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e991882_12e0cc43",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/JsPlugin.java",
        "patchSetId": 14
      },
      "lineNbr": 2,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-10-19T14:22:40Z",
      "side": 1,
      "message": "2013",
      "revId": "dd535be1fd1756ff6167b831de709110fa7e63ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e991882_d2fd64e5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/JsPlugin.java",
        "patchSetId": 14
      },
      "lineNbr": 2,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2013-10-19T18:08:37Z",
      "side": 1,
      "message": "This class was created in 2012, see first patch set.",
      "parentUuid": "5e991882_12e0cc43",
      "revId": "dd535be1fd1756ff6167b831de709110fa7e63ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e991882_52033423",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/PluginLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 149,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-10-20T10:27:10Z",
      "side": 1,
      "message": "This condition is always false now:\n\n originalName \u003d \"foo.jar\"\n\nAnd the name of plugin can be \"foo\" or \"bar\" if plugin defines its own name, but it is never \"foo.jar\".",
      "revId": "dd535be1fd1756ff6167b831de709110fa7e63ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3cbde64_a2bb3ef7",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/PluginLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 149,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2013-11-29T15:43:02Z",
      "side": 1,
      "message": "Done. I\u0027ve removed exception from line 143 therefore this condition will not always false",
      "parentUuid": "5e991882_52033423",
      "revId": "dd535be1fd1756ff6167b831de709110fa7e63ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e991882_7208383d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/PluginLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 160,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-10-20T10:27:10Z",
      "side": 1,
      "message": "Please, don\u0027t mix fileName and plugin name. Just preserve the old assignment to fileName. Because now you have possible corrupted the plugin name that was provided by plugin, bcause the old plugin may be was loaded under different file name. Consider the following example:\n\n* plugin foo.jar defines its own name in MANIFEST to be bar. So the file is still called foo.jar\n* plugin foo.jar deployed regularly per copy to $site/plugins/\n* administrator updates the plugin per SSH and pass bar as name\n* but the name is overriden now from bar to foo, because the old plugin file was called foo.jar\n\nIn generall plugin file name and plugin name can now be different. See this change for more information:\n\n https://gerrit-review.googlesource.com/#/c/49382",
      "revId": "dd535be1fd1756ff6167b831de709110fa7e63ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3cbde64_c2b842fd",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/PluginLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 160,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2013-11-29T15:43:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e991882_7208383d",
      "revId": "dd535be1fd1756ff6167b831de709110fa7e63ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e991882_1209ac43",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/PluginLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 467,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-10-20T10:27:10Z",
      "side": 1,
      "message": "rename jar to plugin or file?",
      "revId": "dd535be1fd1756ff6167b831de709110fa7e63ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83d09a10_411b5257",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/PluginLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 467,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2013-11-29T15:43:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e991882_1209ac43",
      "revId": "dd535be1fd1756ff6167b831de709110fa7e63ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ebedcc7_931cdc7f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/plugins/PluginLoader.java",
        "patchSetId": 14
      },
      "lineNbr": 700,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-10-20T10:27:10Z",
      "side": 1,
      "message": "You don\u0027t need that. It is sufficint to just return null in this method for Js plugins (unless they define their own names):\n\n public static String getGerritPluginName(File srcFile) throws IOException {\t  \n   if (isJarPlugin(fileName)) {\n     [...]\n   }\n   return null;\n }\n\nThe callers of this method are aware of \"plugin doesn\u0027t provide its own name\" semantic and handle that case correspondingly.\n\nCheck lines 148 and 709 in this file.",
      "revId": "dd535be1fd1756ff6167b831de709110fa7e63ad",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}