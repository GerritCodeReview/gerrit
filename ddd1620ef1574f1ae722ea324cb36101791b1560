{
  "comments": [
    {
      "key": {
        "uuid": "e71a3802_572e6c95",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-07-10T08:44:31Z",
      "side": 1,
      "message": "s/and/or",
      "revId": "ddd1620ef1574f1ae722ea324cb36101791b1560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e71a3802_772b7084",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-07-10T08:53:22Z",
      "side": 1,
      "message": "I think \u0027and\u0027 is correct here. The operator searches in both, the fields that contain the modified lines and the field that contains the message. \u0027or\u0027 would be only correct if we talk about finding changes, it finds the change if a modified line or the commit messages matches.",
      "parentUuid": "e71a3802_572e6c95",
      "revId": "ddd1620ef1574f1ae722ea324cb36101791b1560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07082caa_081c4771",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2013-07-10T09:00:47Z",
      "side": 1,
      "message": "\u0027and\u0027 seems more correct to me.",
      "parentUuid": "e71a3802_772b7084",
      "revId": "ddd1620ef1574f1ae722ea324cb36101791b1560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e71a3802_57574c0b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-07-10T09:12:45Z",
      "side": 1,
      "message": "How is the implementation is different from \"it finds the change if a modified line or the commit messages matches\"?\n\n class PatchPredicate extends OrPredicate\u003cChangeData\u003e {\n PatchPredicate(Provider\u003cReviewDb\u003e db, ChangeIndex index, String value) {\t\n    super(or(new MessagePredicate(db, index, value), new DiffPredicate(db,\n        index, value)));\n\nWhat am i missing?",
      "parentUuid": "e71a3802_772b7084",
      "revId": "ddd1620ef1574f1ae722ea324cb36101791b1560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07166cdc_985c3531",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListKey.java",
        "patchSetId": 5
      },
      "lineNbr": 54,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-07-10T08:44:31Z",
      "side": 1,
      "message": "Why a RevWalk instance is \"parked\" here, if it is not used in this class?\n\nit seems to be used in\n\n PatchListLoader.readPatchList()",
      "revId": "ddd1620ef1574f1ae722ea324cb36101791b1560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07166cdc_18510515",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListKey.java",
        "patchSetId": 5
      },
      "lineNbr": 54,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-07-10T08:53:22Z",
      "side": 1,
      "message": "See comment from Dave B. on the previous patch set [1].\n\n[1] https://gerrit-review.googlesource.com/#/c/47361/4/gerrit-pgm/src/main/java/com/google/gerrit/pgm/Reindex.java",
      "parentUuid": "07166cdc_985c3531",
      "revId": "ddd1620ef1574f1ae722ea324cb36101791b1560",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}