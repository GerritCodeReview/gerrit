{
  "pushCert": "certificate version 0.1\npusher Dave Borowitz \u003cdborowitz@google.com\u003e 1483712749 -0500\nnonce AHDV6Gn4Nkvfz4kmwThZ2qqMu52yvuDbMs2bxntWmROJTwMD0T7UETNIPygn7We/D7tQ6eGVoKed\n\n0000000000000000000000000000000000000000 d5cae4154d65d8d48a6870acadd786328916b89c refs/for/master\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYb6jtAAoJEF/XxZqaEoiMh+wQAJWl6MzdRzwCvuBz4eQSrDo1\nsTvihCyiTLCznL1e3KmWsIvnWSee5qFmR/LuDM3JyRegzY/AKs1VaVciv9/ETYPN\nocjKqn74HMHIJhCp/NtFfqWw9rKEvnJxfr+l4EboXAtF7LdN2ZK7o+fgFKL7TJbe\nXy0+wNXmgWn6mWa8P0/6HxIEnIdg8ID1P1Ir6eKl+sFRjaCROj3CUk+sIo4chJMK\negAxxpFt7NJ4bbAINcGofxmWDsI88B5QxSc6GX2x9NZIPJCwuzcYc+wNXU0MYewO\n4XpW4laVohnWGKp1FUUSKcqtPVTLSPBmz8FgIHACWv1fbdpImaKsmO6syOKvb+49\nMEeVM5H/M8bDXME89SxRQXt6mqXoiHWt79wl4HCbvTKmzV/vXDzDct1b5G+OcK5E\np0gvoQyi4EsPOZ+rieI5fxEaEGPaWcHAgWsuYIYkdR1v5CznGFQIrRxzkvKTQpzM\nUby9mrjH7nq5tV8W5RRi4Hz1DoOhELGV0954IcunCQAMHa6uRjwG2Xgy6DfriRuV\nI/jnUnFOoahO1UeS/uGKhvnEw3D+7KCy4N4mYRrfUwgHO7PDZOKISlq9LARc/k8m\nBo/eP76FyqH09xTGQGGQxh6qp84I0ku2qWaNqhB117fiCsTABls5XupFP9UuVjih\neIy9hJeUMk+EuL3ArsD2\n\u003dA+ro\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "57bdf6e4_57388c2c",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/notedb/NoteDbPrimaryIT.java",
        "patchSetId": 9
      },
      "lineNbr": 272,
      "author": {
        "id": 1019407
      },
      "writtenOn": "2017-01-06T17:32:51Z",
      "side": 1,
      "message": "Should PrimaryStorage.of(change) be equal to notedb after the migration? Or should the check here be that Change.getNoteDbState() \u003d\u003d REVIEW_DB? I expected the test before and after to be symmetric. PrimaryStorage.of() and Change.getNoteDbState() are subtly different and it is probably good to explicitly test both of them before and after the migration.",
      "range": {
        "startLine": 271,
        "startChar": 4,
        "endLine": 272,
        "endChar": 44
      },
      "revId": "de2fdf30f9aced7b0822063126a4e1333e0af4f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7cb4a92_74094897",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/server/notedb/NoteDbPrimaryIT.java",
        "patchSetId": 9
      },
      "lineNbr": 278,
      "author": {
        "id": 1019407
      },
      "writtenOn": "2017-01-06T17:32:51Z",
      "side": 1,
      "message": "I don\u0027t understand how this setting and getting of the topic post-migration relates to testing the migration.",
      "range": {
        "startLine": 277,
        "startChar": 0,
        "endLine": 278,
        "endChar": 77
      },
      "revId": "de2fdf30f9aced7b0822063126a4e1333e0af4f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7cb4a92_3403d079",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/PrimaryStorageMigrator.java",
        "patchSetId": 9
      },
      "lineNbr": 1,
      "author": {
        "id": 1019407
      },
      "writtenOn": "2017-01-06T17:32:51Z",
      "side": 1,
      "message": "Calendar year rolled over. I don\u0027t recall if this should be updated.",
      "range": {
        "startLine": 1,
        "startChar": 17,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "de2fdf30f9aced7b0822063126a4e1333e0af4f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bdf6e4_f79fa004",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/PrimaryStorageMigrator.java",
        "patchSetId": 9
      },
      "lineNbr": 77,
      "author": {
        "id": 1019407
      },
      "writtenOn": "2017-01-06T17:32:51Z",
      "side": 1,
      "message": "Extract these as constants?",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 77,
        "endChar": 0
      },
      "revId": "de2fdf30f9aced7b0822063126a4e1333e0af4f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7cb4a92_d4625c54",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/PrimaryStorageMigrator.java",
        "patchSetId": 9
      },
      "lineNbr": 121,
      "author": {
        "id": 1019407
      },
      "writtenOn": "2017-01-06T17:32:51Z",
      "side": 1,
      "message": "There is a bit of context missing here that I found confusing. Making this explicit helps:\n\"The other writer has multiple phases: updating ReviewDb, updating noteDbState in ReviewDb and updating NoteDb (the latter two of which may fail, since ReviewDb is still primary). This migration sets the change to read-only, ensures that noteDbState is up-to-date, ensures that NoteDb is up-to-date, and switches NoteDb to be primary (which removes the read-only state).\n\nThe current description is a bit confusing because OR groups updating noteDbState \u0026 ReviewDb as a single step, in which case they should never be out of sync, but ensureRebuilt talks about rebuilding noteDbState, so it appears they can be out-of-sync. Which is it? If they can be out-of-sync, splitting OR into OS and OR is appropriate.",
      "range": {
        "startLine": 121,
        "startChar": 29,
        "endLine": 121,
        "endChar": 36
      },
      "revId": "de2fdf30f9aced7b0822063126a4e1333e0af4f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bdf6e4_d7a49c59",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/PrimaryStorageMigrator.java",
        "patchSetId": 9
      },
      "lineNbr": 169,
      "author": {
        "id": 1019407
      },
      "writtenOn": "2017-01-06T17:32:51Z",
      "side": 1,
      "message": "Todo in this change?",
      "range": {
        "startLine": 168,
        "startChar": 1,
        "endLine": 169,
        "endChar": 0
      },
      "revId": "de2fdf30f9aced7b0822063126a4e1333e0af4f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bdf6e4_b7a92830",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/PrimaryStorageMigrator.java",
        "patchSetId": 9
      },
      "lineNbr": 176,
      "author": {
        "id": 1019407
      },
      "writtenOn": "2017-01-06T17:32:51Z",
      "side": 1,
      "message": "Explain the error reporting for this scenario. Will the user get a bogus error that they need to ignore?",
      "range": {
        "startLine": 174,
        "startChar": 1,
        "endLine": 176,
        "endChar": 0
      },
      "revId": "de2fdf30f9aced7b0822063126a4e1333e0af4f1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}