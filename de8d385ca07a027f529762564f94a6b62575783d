{
  "comments": [
    {
      "key": {
        "uuid": "42f8ea1e_ef541554",
        "filename": "polygerrit-ui/app/elements/change/gr-change-metadata/gr-change-metadata.html",
        "patchSetId": 3
      },
      "lineNbr": 218,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-09-20T21:15:11Z",
      "side": 1,
      "message": "How does this work with the \u0027limit\u0027 property declared as a number? Is it implicitly cast by the element?",
      "range": {
        "startLine": 218,
        "startChar": 16,
        "endLine": 218,
        "endChar": 26
      },
      "revId": "de8d385ca07a027f529762564f94a6b62575783d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5857471_c1d2928c",
        "filename": "polygerrit-ui/app/elements/change/gr-change-metadata/gr-change-metadata.html",
        "patchSetId": 3
      },
      "lineNbr": 218,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-09-20T22:21:31Z",
      "side": 1,
      "message": "Do you mean because the value is delimited by quotes? In HTML, the quote marks don\u0027t denote that the type of the value is a string.\n\nPolymer does indeed parse the value into the appropriate destination property type based on the type declared in the property definition.",
      "parentUuid": "42f8ea1e_ef541554",
      "range": {
        "startLine": 218,
        "startChar": 16,
        "endLine": 218,
        "endChar": 26
      },
      "revId": "de8d385ca07a027f529762564f94a6b62575783d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "697e831a_21d56c3c",
        "filename": "polygerrit-ui/app/elements/shared/gr-limited-text/gr-limited-text.js",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-09-20T21:15:11Z",
      "side": 1,
      "message": "Why is this a whole new element, instead of just integrated into something that exists already? E.g. into the linked-chip.",
      "revId": "de8d385ca07a027f529762564f94a6b62575783d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "227987e7_ef18598c",
        "filename": "polygerrit-ui/app/elements/shared/gr-limited-text/gr-limited-text.js",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-09-20T22:21:31Z",
      "side": 1,
      "message": "Good question. It\u0027s because it\u0027s also used in gr-change-list-item, for something that isn\u0027t a chip.\n\nIt can probably be used in a few more places in gr-change-list-item as well, for example in the project column.",
      "parentUuid": "697e831a_21d56c3c",
      "revId": "de8d385ca07a027f529762564f94a6b62575783d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24062013_b6d1ef0b",
        "filename": "polygerrit-ui/app/elements/shared/gr-limited-text/gr-limited-text.js",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-09-22T16:42:44Z",
      "side": 1,
      "message": "Hmm...\n\nI\u0027m wondering why this entire element needs to exist, when all it really is is the _computeDisplayText function. Tooltips will (at least in theory) never need to be truncated, so why couldn\u0027t this function just exist in a behavior? Something like...\n\n  maybeTruncateText(text, limit) {\n    if (text.length \u003e limit) {\n      return text.substr(0, limit - 1) + \u0027â€¦\u0027;\n    }\n    return text;\n  }\n\n..., and then we put tooltips on things as needed within those elements themselves.",
      "parentUuid": "227987e7_ef18598c",
      "revId": "de8d385ca07a027f529762564f94a6b62575783d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c053aec_2831c368",
        "filename": "polygerrit-ui/app/elements/shared/gr-limited-text/gr-limited-text.js",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-09-22T16:43:43Z",
      "side": 1,
      "message": "(on second thought, maybe not in a behavior -- just in some plain JS util file)",
      "parentUuid": "24062013_b6d1ef0b",
      "revId": "de8d385ca07a027f529762564f94a6b62575783d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fe2b287_8617cbb7",
        "filename": "polygerrit-ui/app/elements/shared/gr-limited-text/gr-limited-text.js",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-09-23T00:40:17Z",
      "side": 1,
      "message": "Few things:\n\n\u003e when all it really is is the _computeDisplayText function. Tooltips will (at least in theory) never need to be truncated, so why couldn\u0027t this function just exist in a behavior? Something like...\n\nTo be clear, the truncation applies to the displayed text, not the tooltip text.\n\n\u003e I\u0027m wondering why this entire element needs to exist:\n\nTwo reasons for making this element in my view are\n* It\u0027s hard to apply gr-tooltips. At least with gr-tooltip-behavior, they can only be applied to entire elements, not sub-elements. Added to that, they\u0027re hard to setup: the title attribute needs updating as well as the hasTooltip property.\n* Logic of only-tooltip-when-truncating is pretty nicely expressible in Polymer-component-property terms. If it were part of another behavior, then new glue-logic would need to be made each time it\u0027s used.",
      "parentUuid": "1c053aec_2831c368",
      "revId": "de8d385ca07a027f529762564f94a6b62575783d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}