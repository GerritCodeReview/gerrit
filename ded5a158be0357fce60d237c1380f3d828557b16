{
  "comments": [
    {
      "key": {
        "uuid": "e5613062_cacc8b7f",
        "filename": "java/com/google/gerrit/server/group/db/Groups.java",
        "patchSetId": 2
      },
      "lineNbr": 297,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-11-10T16:07:18Z",
      "side": 1,
      "message": "My first thought was: wow this is gonna be slow. Then I remembered that it\u0027s not a big deal because nobody should be calling this. I sent you https://gerrit-review.googlesource.com/#/c/gerrit/+/140290 to add a reminder to this class Javadoc for readers like me.",
      "revId": "ded5a158be0357fce60d237c1380f3d828557b16",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01963ee4_fe42bac9",
        "filename": "java/com/google/gerrit/server/group/db/Groups.java",
        "patchSetId": 2
      },
      "lineNbr": 297,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-11-14T13:38:45Z",
      "side": 1,
      "message": "The first call to getExternalGroupsFromNoteDb() will always be slow. The same holds if the cache was invalidated (after an external group was added/removed to/from an internal one).\n\nI\u0027m kind of wondering why this was never an issue since the list of external groups is used in IncludingGroupMembership#computeKnownGroups which ends up being used for the ETag of changes. I hope that we don\u0027t add additional slowness due to the NoteDb implementation but we don\u0027t have a lot of options to implement this method.\n\nOne alternative would be to load all groups from the cache instead of reading them directly from NoteDb. Several weeks/months ago, when I asked whether we are allowed to load the groups from the cache when iterating over all groups, the answer was: no. The reason was to not clutter up the group cache. Maybe we should rethink that decision as we removed the size limit of the group cache and now expect it to be able to hold all the groups (Ieef38b9dda7). What do you think?",
      "parentUuid": "e5613062_cacc8b7f",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "ded5a158be0357fce60d237c1380f3d828557b16",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdc299fd_080e33c0",
        "filename": "java/com/google/gerrit/server/group/db/Groups.java",
        "patchSetId": 2
      },
      "lineNbr": 297,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-11-14T15:02:16Z",
      "side": 1,
      "message": "\u003e I\u0027m kind of wondering why this was never an issue since the list of external groups is used in IncludingGroupMembership#computeKnownGroups which ends up being used for the ETag of changes.\n\nIncludingGroupMembership#computeKnownGroups calls GroupIncludeCache#allExternalMembers. In GroupIncludeCacheImpl, allExternalMembers is called by looking up the singleton EXTERNAL_NAME, and AllExternalLoader calls Groups#getExternalGroups. In fact, this is the _only_ caller of Groups#getExternalGroups in core.\n\nIn other words, the only time getExternalGroups is ever called is to populate the cache of all external groups, so it\u0027s ok to be slow.\n\nBy the same token, we can\u0027t change getExternalGroups to read from the cache, because then how would the cache get populated?",
      "parentUuid": "01963ee4_fe42bac9",
      "revId": "ded5a158be0357fce60d237c1380f3d828557b16",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}