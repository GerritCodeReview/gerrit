{
  "comments": [
    {
      "key": {
        "uuid": "1f84725b_ed4a8f1b",
        "filename": "java/com/google/gerrit/server/config/DefaultBrowseUrls.java",
        "patchSetId": 10
      },
      "lineNbr": 33,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-09-17T16:28:46Z",
      "side": 1,
      "message": "Missing return (causing compilation failure)",
      "revId": "df925f73327909fb6c08a6e12bb5dbb422a13e0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0560be4_a5a012ef",
        "filename": "java/com/google/gerrit/server/git/DefaultChangeReportFormatter.java",
        "patchSetId": 10
      },
      "lineNbr": 72,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-09-17T16:28:46Z",
      "side": 1,
      "message": "Optional: possibly nicer:\n\n return browseUrls.getChangeViewUrl(c.getProject(), c.getId())\n     .orElseThrow(() -\u003e new IllegalStateException(\"change view URL not available\"));",
      "range": {
        "startLine": 71,
        "startChar": 4,
        "endLine": 72,
        "endChar": 65
      },
      "revId": "df925f73327909fb6c08a6e12bb5dbb422a13e0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ecc3d8a_21bf2c8f",
        "filename": "java/com/google/gerrit/server/git/DefaultChangeReportFormatter.java",
        "patchSetId": 10
      },
      "lineNbr": 72,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-09-17T16:28:46Z",
      "side": 1,
      "message": "This cast shouldn\u0027t be necessary, and as written would also cause a raw type warning.",
      "range": {
        "startLine": 72,
        "startChar": 30,
        "endLine": 72,
        "endChar": 40
      },
      "revId": "df925f73327909fb6c08a6e12bb5dbb422a13e0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31ac8b59_be586ec6",
        "filename": "java/com/google/gerrit/server/git/DefaultChangeReportFormatter.java",
        "patchSetId": 10
      },
      "lineNbr": 72,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-09-17T16:29:10Z",
      "side": 1,
      "message": "By \"return\" I of course mean \"String changeUrl \u003d\".",
      "parentUuid": "b0560be4_a5a012ef",
      "range": {
        "startLine": 71,
        "startChar": 4,
        "endLine": 72,
        "endChar": 65
      },
      "revId": "df925f73327909fb6c08a6e12bb5dbb422a13e0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca2d3dd2_0e841b2a",
        "filename": "java/com/google/gerrit/server/mail/receive/MailProcessor.java",
        "patchSetId": 10
      },
      "lineNbr": 244,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2018-09-17T16:28:46Z",
      "side": 1,
      "message": "The downside of using this hard-coded string is since this is parsing user-generated text, it\u0027s theoretically possible for someone to write this string in the email.\n\nIn my ideal world the HtmlParser interface would change to make this more natural, either taking an Optional\u003cString\u003e or adding an overload to remove the parameter entirely. I don\u0027t think it\u0027s necessary to block this change though.",
      "revId": "df925f73327909fb6c08a6e12bb5dbb422a13e0f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}