{
  "comments": [
    {
      "key": {
        "uuid": "91538834_d5e356bd",
        "filename": "java/com/google/gerrit/json/SqlTimestampDeserializer.java",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-26T12:05:54Z",
      "side": 1,
      "message": "Should we explicitly reject the specification of the magic timestamp value to avoid that other tools discover the magic value and use it instead of \"\"?",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "dfb318f180c281c86582b47ef05951f1de818c7e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b1988dd_f219240c",
        "filename": "java/com/google/gerrit/json/SqlTimestampDeserializer.java",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-26T12:13:04Z",
      "side": 1,
      "message": "I don\u0027t think that it\u0027s mandatory to have this, but since it\u0027s not much work we may just add this check.",
      "parentUuid": "91538834_d5e356bd",
      "revId": "dfb318f180c281c86582b47ef05951f1de818c7e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daa29364_e374efa6",
        "filename": "java/com/google/gerrit/server/util/time/TimeUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-25T17:12:31Z",
      "side": 1,
      "message": "Instead of 0, which maps to 1970-01-01, we could also use a date way in the past so that this sticks out much more (e.g. 1600-01-01). What do you think?",
      "range": {
        "startLine": 56,
        "startChar": 25,
        "endLine": 56,
        "endChar": 26
      },
      "revId": "dfb318f180c281c86582b47ef05951f1de818c7e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b7ca115_65e4d83a",
        "filename": "java/com/google/gerrit/server/util/time/TimeUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-07-26T00:18:21Z",
      "side": 1,
      "message": "Does it matter, if the point of this is that we don\u0027t need to care about what the underlying value is?\n\nOr are there cases where the actual timestamp is going to be visible?",
      "parentUuid": "daa29364_e374efa6",
      "range": {
        "startLine": 56,
        "startChar": 25,
        "endLine": 56,
        "endChar": 26
      },
      "revId": "dfb318f180c281c86582b47ef05951f1de818c7e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffee98bf_36ace43b",
        "filename": "java/com/google/gerrit/server/util/time/TimeUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-26T12:05:54Z",
      "side": 1,
      "message": "\u003e Does it matter, if the point of this is that we don\u0027t need to care about what the underlying value is?\n\nThe question is rather what helps us as developers the most.\n\nTimestamp(0) - 1970-01-01\n\nPro:\n- Easy to remember. 0 -\u003e null\n- \"Nice\" value.\n\nCon:\n- People might be more tempted to use new Timestamp(0) directly in the code.\n- People might think that a value of Timestamp(0) in a variable (e.g. during debugging) is an erroneously unset value from somewhere else.\n\nTimestamp(-11676099208000) - 1600-01-01\n\nPro:\n- Stands out.\n- Easy to spot during debugging.\n- If we ever see timestamps of the year 1600 in NoteDb or being returned from an API, we know for sure that\u0027s an error and can easily trace it back. If users are exposed to this, they will also immediately know it\u0027s a bug.\n- It\u0027s less likely that anything outside of our control will depend on this exact value as null object and hence we will still have the option to change it in the future. In addition, hardly any developer will be tempted to write Timestamp(-11676099208000).\n\nCon:\n- Not as intuitive as a \u0027null object\u0027.\n- Feels even more arbitrary than Timestamp(0).\n\nI\u0027m still torn between the two options. I would be interested to hear what you prefer.\n\n\u003e \n\u003e Or are there cases where the actual timestamp is going to be visible?\n\nNo, it should never be visible. If it is, it\u0027s a bug.",
      "parentUuid": "0b7ca115_65e4d83a",
      "range": {
        "startLine": 56,
        "startChar": 25,
        "endLine": 56,
        "endChar": 26
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "dfb318f180c281c86582b47ef05951f1de818c7e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccd4a081_1131d080",
        "filename": "java/com/google/gerrit/server/util/time/TimeUtil.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-26T12:13:04Z",
      "side": 1,
      "message": "I don\u0027t have a strong opinion here and either option is fine for me. Maybe slightly leaning towards \u00271600-01-01\u0027 after reading all the pros and cons.",
      "parentUuid": "ffee98bf_36ace43b",
      "range": {
        "startLine": 56,
        "startChar": 25,
        "endLine": 56,
        "endChar": 26
      },
      "revId": "dfb318f180c281c86582b47ef05951f1de818c7e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "000f37ba_81122b9c",
        "filename": "javatests/com/google/gerrit/json/SqlTimestampDeserializerTest.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-07-26T00:18:21Z",
      "side": 1,
      "message": "nit: We usually import this static.",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 20
      },
      "revId": "dfb318f180c281c86582b47ef05951f1de818c7e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee2fa342_ff415caa",
        "filename": "javatests/com/google/gerrit/json/SqlTimestampDeserializerTest.java",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-26T12:05:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "000f37ba_81122b9c",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 20
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "dfb318f180c281c86582b47ef05951f1de818c7e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}