{
  "comments": [
    {
      "key": {
        "uuid": "7e1c1c52_a3365af4",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/GerritServer.java",
        "patchSetId": 13
      },
      "lineNbr": 91,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-11-01T22:48:25Z",
      "side": 1,
      "message": "Seems like you should do the same thing in the in-memory case? This should be as simple as cfg.setBoolean(\"index\", \"lucene\", \"testInmemory\", true).",
      "revId": "e0695a0fe9dfc15909f725e65c7eadf5947460d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e1c1c52_c33b56db",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/GerritServer.java",
        "patchSetId": 13
      },
      "lineNbr": 139,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-11-01T22:48:25Z",
      "side": 1,
      "message": "You probably already knew this but note that I\u0027m pretty sure this will fail if the site is currently running, since Reindex uses its own injector stack and will try (and fail) to make a second connection to the H2 database.",
      "revId": "e0695a0fe9dfc15909f725e65c7eadf5947460d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e1f1045_84316601",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ConflictsPredicate.java",
        "patchSetId": 13
      },
      "lineNbr": 39,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-11-01T22:48:25Z",
      "side": 1,
      "message": "Can you give these some more descriptive names?\n\nAlso, maybe newArrayListWithCapacity(changes.size())",
      "revId": "e0695a0fe9dfc15909f725e65c7eadf5947460d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e1c1c52_03264ec5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ConflictsPredicate.java",
        "patchSetId": 13
      },
      "lineNbr": 41,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-11-01T22:48:25Z",
      "side": 1,
      "message": "WithCapacity() here too if you don\u0027t mind extracting the var.",
      "revId": "e0695a0fe9dfc15909f725e65c7eadf5947460d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e1c1c52_e3405248",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ConflictsPredicate.java",
        "patchSetId": 13
      },
      "lineNbr": 42,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-11-01T22:48:25Z",
      "side": 1,
      "message": "I don\u0027t think parens around (new ChangeData(c)) are necessary here?",
      "revId": "e0695a0fe9dfc15909f725e65c7eadf5947460d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e1f1045_a43662f4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ConflictsPredicate.java",
        "patchSetId": 13
      },
      "lineNbr": 46,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-11-01T22:48:25Z",
      "side": 1,
      "message": "WithCapacity(2)",
      "range": {
        "startLine": 46,
        "startChar": 45,
        "endLine": 46,
        "endChar": 57
      },
      "revId": "e0695a0fe9dfc15909f725e65c7eadf5947460d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e1f1045_c43b5edb",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/ConflictsPredicate.java",
        "patchSetId": 13
      },
      "lineNbr": 47,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-11-01T22:48:25Z",
      "side": 1,
      "message": "Not sure if this is the right behavior or not (and this seems  unlikely in practice), but if there are multiple changes in the list that conflict with each other, they will show up in the search results despite this predicate. For example:\n\n Change Iabcd: Foo.java, Bar.java\n Change Iabce: Bar.java, Baz.java\n conflicts:Iabc\n \u003d\u003e (-change:Iabcd (file:Foo.java OR file.Bar.java))\n    OR (-change:Iabce (file:Bar.java OR file:Foo.java))\n\nIabce matches the first half of the predicate and Iabcd matches the second.",
      "revId": "e0695a0fe9dfc15909f725e65c7eadf5947460d9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}