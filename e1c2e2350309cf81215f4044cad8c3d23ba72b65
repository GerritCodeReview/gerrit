{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "01906cb8_43acff5a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 24
      },
      "lineNbr": 108,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-23T21:23:21Z",
      "side": 1,
      "message": "That\u0027s only one pice of the puzzle, let\u0027s not forget that any plugin can be doing some important operations and also can use external resources. Before anything is \"reloaded\", we should ensure that everything is properly stopped. Which is not an easy task on its own.",
      "range": {
        "startLine": 108,
        "startChar": 6,
        "endLine": 108,
        "endChar": 58
      },
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a5b70a2_08f82987",
        "filename": "/COMMIT_MSG",
        "patchSetId": 24
      },
      "lineNbr": 108,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-09-28T21:55:01Z",
      "side": 1,
      "message": "True, but for the clean-up of the resources and the lifecycle management we already have a solution in Gerrit that works: the lifecycle listener.",
      "parentUuid": "01906cb8_43acff5a",
      "range": {
        "startLine": 108,
        "startChar": 6,
        "endLine": 108,
        "endChar": 58
      },
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "451abbd4_9405df49",
        "filename": "/COMMIT_MSG",
        "patchSetId": 24
      },
      "lineNbr": 108,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-29T08:30:35Z",
      "side": 1,
      "message": "\u003e we already have a solution in Gerrit that works: the lifecycle listener.\n\nIsn\u0027t that only for the server start/stop? not a plugin load/unload?",
      "parentUuid": "0a5b70a2_08f82987",
      "range": {
        "startLine": 108,
        "startChar": 6,
        "endLine": 108,
        "endChar": 58
      },
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4038220_49fda233",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-28T12:26:01Z",
      "side": 1,
      "message": "I\u0027ve tried testing this E2E with simple _provider-consumer_ plugins and couldn\u0027t make it work.\n\nI\u0027ve created two new plugins `api-provider` and `api-consumer`. The first one has `Gerrit-ApiModule` set to `ApiProviderModule` in `MANIFEST.MF`. It\u0027s also providing a simple _greeting_ service with a default implementation. The `GreetingService` interface is bound to `DefaultGreetingService` class in `ApiProviderModule`.\n\nThe second plugin, has just a `Greet` class that depends on `GreetingService` (through constructor injection). The consumer plugin sets `Gerrit-Module` in its `MANIFEST.MF` to `ConsumerModule` where `Greet` is bound as _eager singleton_.\n\nThe `api-provider.api.jar` file is in `$gerrit_testsite/lib` and `api-consumer.jar` in `$gerrit_testsite/plugins`.\n\nSo far so good. But when Gerrit starts it\u0027s complaining `No implementation for GreetingsService was bound`.\n\nDid I miss anything in the setup?",
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f4577ee_6054b489",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-09-28T16:57:56Z",
      "side": 1,
      "message": "Have you checked @syntonyze@gmail.com example with the healthcheck plugin?",
      "parentUuid": "a4038220_49fda233",
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f799dd7_769496e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-29T08:02:54Z",
      "side": 1,
      "message": "No, I haven\u0027t. I wanted to do it all from scratch and experience how it would be for the API adopters.\n\nThis way I found that I was missing `gerrit.installModule` with the name of the API module in my `gerrit.config`.\n\nSo, we need the API Module to be mentioned twice, once in the pluing\u0027s Jar `MANIFEST.MF` file as `Gerrit-ApiModule` and then in the `gerrit.config` in `gerrit.installModule` configuration option. Is this by design?",
      "parentUuid": "6f4577ee_6054b489",
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc6f39e0_d42403a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-09-29T08:10:52Z",
      "side": 1,
      "message": "We are all connected at the Gerrit Hackathon, it\u0027s gonna be easier to show you first, can you connect?",
      "parentUuid": "0f799dd7_769496e9",
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f875d87_7c456cd8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-29T08:26:50Z",
      "side": 1,
      "message": "I\u0027ve created a GitHub repo with my simple plugins: https://github.com/dluksza/gerrit-x-plugin-dependency-poc-example",
      "parentUuid": "bc6f39e0_d42403a2",
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "534bd750_472d79b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-29T09:01:36Z",
      "side": 1,
      "message": "We found the root cause. The API provider jar must go to the `$(gerrit_site)/plugins` directory (not `$(gerrit_site)/lib`. Now everything works as expected!!",
      "parentUuid": "2f875d87_7c456cd8",
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cebd305f_462ed195",
        "filename": "java/com/google/gerrit/server/plugins/PluginLoader.java",
        "patchSetId": 24
      },
      "lineNbr": 480,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-26T15:50:11Z",
      "side": 1,
      "message": "This is a quick and dirty way of checking if the JAR file has `Gerrit-ApiModule` in its `MNIFEST.MF`. We should probably refactor logic here and use _some kind of a _wrapper_ around `Path` that knows what kind of plugin it is dealing with. But this would be probably a bigger refactoring in this area.\n\n```suggestion\n              private boolean isApi(Path pluginPath) {\n                if (!isJar(pluginPath)) {\n                  return false;\n                }\n\n                try (JarFile jarFile \u003d new JarFile(pluginPath.toString())) {\n                  String apiModule \u003d\n                      Strings.emptyToNull(\n                          jarFile.getManifest().getMainAttributes().getValue(\"Gerrit-ApiModule\"));\n\n                  return Optional.ofNullable(apiModule).isPresent();\n                } catch (IOException e) {\n                  logger.atWarning().withCause(e).log(\"cannot load plugin JAR file\");\n\n                  return false;\n                }\n              }\n```",
      "range": {
        "startLine": 478,
        "startChar": 14,
        "endLine": 480,
        "endChar": 15
      },
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c34033e7_a7e64015",
        "filename": "java/com/google/gerrit/server/plugins/PluginLoader.java",
        "patchSetId": 24
      },
      "lineNbr": 480,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-09-28T21:55:01Z",
      "side": 1,
      "message": "I agree, your version looks better and avoids the _hacky_ trick of calling it `.api.jar`.\n\nAlso, opening and checking inside each jar isn\u0027t too expensive in real-life, as nobody is planning to implement tens of thousands of plugins isn\u0027t it?",
      "parentUuid": "cebd305f_462ed195",
      "range": {
        "startLine": 478,
        "startChar": 14,
        "endLine": 480,
        "endChar": 15
      },
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d5024db_01c98667",
        "filename": "java/com/google/gerrit/server/plugins/PluginLoader.java",
        "patchSetId": 24
      },
      "lineNbr": 480,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-09-28T22:37:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c34033e7_a7e64015",
      "range": {
        "startLine": 478,
        "startChar": 14,
        "endLine": 480,
        "endChar": 15
      },
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60398914_7a581678",
        "filename": "java/com/google/gerrit/server/plugins/PluginLoader.java",
        "patchSetId": 24
      },
      "lineNbr": 480,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-29T08:30:35Z",
      "side": 1,
      "message": "\u003e Also, opening and checking inside each jar isn\u0027t too expensive in real-life, as nobody is planning to implement tens of thousands of plugins isn\u0027t it?\n\nAnd this should only happen \"once\" when the server is starting... and when the directory content is changed. Overall not very often.",
      "parentUuid": "7d5024db_01c98667",
      "range": {
        "startLine": 478,
        "startChar": 14,
        "endLine": 480,
        "endChar": 15
      },
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40dcf1f1_7223692b",
        "filename": "java/com/google/gerrit/server/plugins/ServerPlugin.java",
        "patchSetId": 24
      },
      "lineNbr": 284,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-23T21:23:21Z",
      "side": 1,
      "message": "nit: `.orElseGet(() -\u003e Guice.createInjector(modules));`, so that we won\u0027t create guice injectors when they are not needed.",
      "range": {
        "startLine": 284,
        "startChar": 9,
        "endLine": 284,
        "endChar": 46
      },
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e674335_1c3cfa33",
        "filename": "java/com/google/gerrit/server/plugins/ServerPlugin.java",
        "patchSetId": 24
      },
      "lineNbr": 284,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-09-28T22:37:06Z",
      "side": 1,
      "message": "Good catch 👍",
      "parentUuid": "40dcf1f1_7223692b",
      "range": {
        "startLine": 284,
        "startChar": 9,
        "endLine": 284,
        "endChar": 46
      },
      "revId": "e1c2e2350309cf81215f4044cad8c3d23ba72b65",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}