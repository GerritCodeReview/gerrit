{
  "comments": [
    {
      "key": {
        "uuid": "385ca663_99edfb05",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/AbstractDaemonTest.java",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-10T18:05:14Z",
      "side": 1,
      "message": "Generally speaking the reason we do this with a Provider is that you get a new instance with the current timestamp each time you call serverIdent.get(). I think that\u0027s a good feature to preserve for future uses; it shouldn\u0027t matter in this case because you\u0027re explicitly not comparing timestamps.",
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "385ca663_7910e788",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/AbstractDaemonTest.java",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-07-10T18:11:12Z",
      "side": 1,
      "message": "I thought this aligned with the deletion in SubmitOnPushIT.java\nand speaking of tests, we will likely never compare times?\n\nAnyway changed.",
      "parentUuid": "385ca663_99edfb05",
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "385ca663_d9001338",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/AbstractDaemonTest.java",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-07-10T18:13:08Z",
      "side": 1,
      "message": "Asserting time1 \u003d\u003d time2 is not the only use case. We have tests where we do things like sort a bunch of commits by committer timestamp. And in non-test code you should probably never inject this as a non-provider, so it sets a bad example to see it like that in tests.",
      "parentUuid": "385ca663_7910e788",
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18536256_78d74132",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/AbstractDaemonTest.java",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-07-10T18:21:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "385ca663_d9001338",
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18536256_58c35d7e",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 4
      },
      "lineNbr": 278,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2015-07-10T18:12:38Z",
      "side": 1,
      "message": "The usual JUnit order is expected, actual",
      "range": {
        "startLine": 277,
        "startChar": 33,
        "endLine": 278,
        "endChar": 26
      },
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "385ca663_b9227fdb",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 4
      },
      "lineNbr": 278,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-07-10T18:21:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18536256_58c35d7e",
      "range": {
        "startLine": 277,
        "startChar": 33,
        "endLine": 278,
        "endChar": 26
      },
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "385ca663_d9e77321",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 4
      },
      "lineNbr": 279,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2015-07-10T18:12:38Z",
      "side": 1,
      "message": "Would a name like\n\n assertEqualsExceptTime\n\nor\n\n assertPersonEquals\n\nbe intuitive here?",
      "range": {
        "startLine": 277,
        "startChar": 0,
        "endLine": 279,
        "endChar": 35
      },
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "385ca663_19344b19",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 4
      },
      "lineNbr": 279,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-07-10T18:21:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "385ca663_d9e77321",
      "range": {
        "startLine": 277,
        "startChar": 0,
        "endLine": 279,
        "endChar": 35
      },
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "385ca663_b9f9dfbf",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 4
      },
      "lineNbr": 288,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2015-07-10T18:12:38Z",
      "side": 1,
      "message": "(optional) I think I\u0027d find it easier to read if the caller calls\n\n assertPersonEquals(expectedAuthor, commit.getAuthorIdent());\n\ndirectly.",
      "range": {
        "startLine": 288,
        "startChar": 0,
        "endLine": 288,
        "endChar": 77
      },
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18536256_38ddc952",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 4
      },
      "lineNbr": 288,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-07-10T18:21:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "385ca663_b9f9dfbf",
      "range": {
        "startLine": 288,
        "startChar": 0,
        "endLine": 288,
        "endChar": 77
      },
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "385ca663_99f69bcd",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 4
      },
      "lineNbr": 292,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2015-07-10T18:12:38Z",
      "side": 1,
      "message": "Likewise.",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 292,
        "endChar": 50
      },
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "385ca663_592ec3ca",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/AbstractSubmit.java",
        "patchSetId": 4
      },
      "lineNbr": 292,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-07-10T18:21:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "385ca663_99f69bcd",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 292,
        "endChar": 50
      },
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "385ca663_190bab60",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/SubmitByCherryPickIT.java",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2015-07-10T18:12:38Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 42
      },
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18536256_98c4d585",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/SubmitByCherryPickIT.java",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-07-10T18:21:02Z",
      "side": 1,
      "message": "This is resolved in a later commit, as we are inconsistent with full names and usernames.\n\nThis commit should only document the current state, so I put a todo.",
      "parentUuid": "385ca663_190bab60",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 42
      },
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b867b630_15b9b418",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/change/SubmitByCherryPickIT.java",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2015-07-10T19:53:49Z",
      "side": 1,
      "message": "I don\u0027t understand what the TODO is saying. Those strings aren\u0027t equal but they should be?",
      "parentUuid": "18536256_98c4d585",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 42
      },
      "revId": "e22fd795d9d473df419e0d6e449fe820a1891645",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}