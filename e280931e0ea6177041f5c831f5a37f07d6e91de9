{
  "comments": [
    {
      "key": {
        "uuid": "8f93bdd9_db17d349",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1021482
      },
      "writtenOn": "2016-08-02T15:42:39Z",
      "side": 1,
      "message": "So if I’m understanding correctly, this waits until right before the first diff is rendered to load hljs, correct? The wait time for this could increase user-perceived latency.\n\nCan you load it from within gr-app once you get the user’s settings? I realize you’d also need to account for when the user settings change, but you could then elide loading altogether if syntax highlighting is disabled.\n\nThis would result in a non-blocking load of hljs hopefully before the user wants to view a diff, lowering initial render time but also providing the user with a fast first render of their diff.",
      "range": {
        "startLine": 26,
        "startChar": 13,
        "endLine": 27,
        "endChar": 63
      },
      "revId": "e280931e0ea6177041f5c831f5a37f07d6e91de9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f41fd2d_ab88e9c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-08-02T16:52:26Z",
      "side": 1,
      "message": "I should make this wording more clear. GR-SYNTAX-LAYER loads (and awaits) as the first (non-setup) task of the `process` method. Per gr-diff-builder.html l.109, syntax processing starts *after* the entire diff is rendered.\n\nHere\u0027s a timeline diagram: http://pastebin.com/raw/WK7Yer5n\n\nThis is slightly lazier than loading it based on user preferences after load.",
      "parentUuid": "8f93bdd9_db17d349",
      "revId": "e280931e0ea6177041f5c831f5a37f07d6e91de9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f93bdd9_db343305",
        "filename": "polygerrit-ui/app/BUCK",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-08-02T00:39:23Z",
      "side": 1,
      "message": "Let me know if this violates Buck idiom. I\u0027m treating it a little more like general Python.",
      "revId": "e280931e0ea6177041f5c831f5a37f07d6e91de9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf3bf5ab_0dcaf116",
        "filename": "polygerrit-ui/app/BUCK",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1027267
      },
      "writtenOn": "2016-08-02T16:12:30Z",
      "side": 1,
      "message": "The buck documentation suggests that\u0027s fine: https://buckbuild.com/concept/build_rule.html\n\nIf we were using bazel, we wouldn\u0027t have access to all of python, but this bit of string manipulation ought to be fine.",
      "parentUuid": "8f93bdd9_db343305",
      "revId": "e280931e0ea6177041f5c831f5a37f07d6e91de9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f41fd2d_6bea8171",
        "filename": "polygerrit-ui/app/BUCK",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1027267
      },
      "writtenOn": "2016-08-02T16:12:30Z",
      "side": 1,
      "message": "These could be a list of files, with just a single invocation of mkdir. I don\u0027t have a strong opinion either way.",
      "revId": "e280931e0ea6177041f5c831f5a37f07d6e91de9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf3bf5ab_6dd1b5c9",
        "filename": "polygerrit-ui/app/elements/diff/gr-syntax-layer/gr-syntax-layer.js",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1027267
      },
      "writtenOn": "2016-08-02T16:12:30Z",
      "side": 1,
      "message": "Missing semi-colon.",
      "revId": "e280931e0ea6177041f5c831f5a37f07d6e91de9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf3bf5ab_8d8341af",
        "filename": "polygerrit-ui/app/elements/diff/gr-syntax-layer/gr-syntax-layer.js",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-08-02T16:52:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf3bf5ab_6dd1b5c9",
      "revId": "e280931e0ea6177041f5c831f5a37f07d6e91de9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf3bf5ab_8ddee1d6",
        "filename": "polygerrit-ui/app/elements/diff/gr-syntax-layer/gr-syntax-layer.js",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1027267
      },
      "writtenOn": "2016-08-02T16:12:30Z",
      "side": 1,
      "message": "I\u0027m pondering the appropriate way to camelCase this. _loadHljs? _loadHlJs?",
      "revId": "e280931e0ea6177041f5c831f5a37f07d6e91de9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf3bf5ab_ad88fdc9",
        "filename": "polygerrit-ui/app/elements/diff/gr-syntax-layer/gr-syntax-layer.js",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-08-02T16:52:26Z",
      "side": 1,
      "message": "I\u0027m not sure how settled we were last time we discussed, but the style document says that the entire acronym would be capitalized. Happy to change the document if we have a quorum.",
      "parentUuid": "cf3bf5ab_8ddee1d6",
      "revId": "e280931e0ea6177041f5c831f5a37f07d6e91de9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef27d996_461e9273",
        "filename": "polygerrit-ui/app/elements/diff/gr-syntax-layer/gr-syntax-layer_test.html",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-08-02T00:39:23Z",
      "side": 1,
      "message": "This test looks like a big edit, but it\u0027s really just indented one layer because of the `suite`.",
      "range": {
        "startLine": 152,
        "startChar": 6,
        "endLine": 152,
        "endChar": 36
      },
      "revId": "e280931e0ea6177041f5c831f5a37f07d6e91de9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f41fd2d_8b832daf",
        "filename": "polygerrit-ui/app/elements/diff/gr-syntax-layer/gr-syntax-layer_test.html",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1027267
      },
      "writtenOn": "2016-08-02T16:12:30Z",
      "side": 1,
      "message": "This line is now too long.",
      "revId": "e280931e0ea6177041f5c831f5a37f07d6e91de9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf3bf5ab_ed9205fa",
        "filename": "polygerrit-ui/app/elements/diff/gr-syntax-layer/gr-syntax-layer_test.html",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2016-08-02T16:52:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f41fd2d_8b832daf",
      "revId": "e280931e0ea6177041f5c831f5a37f07d6e91de9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}