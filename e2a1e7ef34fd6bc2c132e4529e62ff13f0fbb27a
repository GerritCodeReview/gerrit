{
  "comments": [
    {
      "key": {
        "uuid": "0fc771d6_a53abeaa",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/WarDistribution.java",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-21T12:57:44Z",
      "side": 1,
      "message": "That is probably correct, because either core plugins are not defining its own plugin name or the plugin name are the same as file name, but it is dangerous, because theoretically, plugin can provide their own name, and this name may or may not correspond to the jar file name:\n\nExample:\nfoo-1.0.jar\n\nWhen this plugin has defined name \u003d foo, then the plugin name is \"foo\",\nif not, then the plugin name is \"foo-1.0\".\n\nThe correct way would be to check MANIFEST.MF of that file. If there is no Gerrit-PluginName there, then the line 50, 51 applies otherwise the name defined in manifest must be used.\n\nThe combination of two methods from PluginLoader is the right way to retrieve the plugin name:\n\n String correctPluginName \u003d Objects.firstNonNull(getGerritPluginName(file),\n        nameOf(fileName));\n\n private static String nameOf(String name) {\n    if (name.endsWith(\".disabled\")) {\n      name \u003d name.substring(0, name.lastIndexOf(\u0027.\u0027));\n    }\n    int ext \u003d name.lastIndexOf(\u0027.\u0027);\n    return 0 \u003c ext ? name.substring(0, ext) : name;\n  }\n\n public static String getGerritPluginName(File srcFile) throws IOException {\n    String fileName \u003d srcFile.getName();\n    if (isJarPlugin(fileName)) {\n      JarFile jarFile \u003d new JarFile(srcFile);\n      try {\n        return jarFile.getManifest().getMainAttributes()\n            .getValue(\"Gerrit-PluginName\");\n      } finally {\n        jarFile.close();\n      }\n    }\n    if (isJsPlugin(fileName)) {\n      return fileName.substring(0, fileName.length() - 3);\n    }\n    return null;\n  }",
      "range": {
        "startLine": 50,
        "startChar": 12,
        "endLine": 51,
        "endChar": 55
      },
      "revId": "e2a1e7ef34fd6bc2c132e4529e62ff13f0fbb27a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fc771d6_6549e64b",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/WarDistribution.java",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-02-21T15:56:20Z",
      "side": 1,
      "message": "\u003e    if (name.endsWith(\".disabled\")) {\n\nwhy would we have packaged a plugin jar whose name ends with \".disabled\" into gerrit.war/WEB-INF/plugins ? I am not aware that we do that and for what purpose.\n\nI think the pluginName here should be the name of the file as this is the name used to persist the plugin jar under the $site_path/plugins folder.\nThe name from the MANIFEST is used as the display name in the Web UI, right?",
      "parentUuid": "0fc771d6_a53abeaa",
      "range": {
        "startLine": 50,
        "startChar": 12,
        "endLine": 51,
        "endChar": 55
      },
      "revId": "e2a1e7ef34fd6bc2c132e4529e62ff13f0fbb27a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f8fd5ae_be3f599a",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/WarDistribution.java",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-21T17:16:33Z",
      "side": 1,
      "message": "We don\u0027t put .disabled jars in web-inf/plugins. I just copied an exerpt for you.\n\n\u003e The name from the MANIFEST is used as the display name in the Web UI, right?\n\nThe name of the plugin from the manifest is used for everything and not only for Web UI, e. g. for SSH command name, plugin-owned capabilities, and plugin specific config-section in project.config file.\n\nCheck replication plugin:\n\n gerrit_plugin(\n  name \u003d \u0027replication\u0027,\n  srcs \u003d glob([\u0027src/main/java/**/*.java\u0027]),\n  resources \u003d glob([\u0027src/main/resources/**/*\u0027]),\n  manifest_entries \u003d [\n    \u0027Gerrit-PluginName: replication\u0027,\n\nIt defines plugin name in the manifest file. If we change Buck build process and say append suffix 1.2 to the generated jar file that is packaged in WEB-INF/lugins, then the code above is wrong, because the induced plugin name would be:\n\n \"replication-1.2\"\n\nand not\n\n  \"replication\"\n\nany more. All granted replication-startReplication capabilities would be lost (because it would look for replication-1.2-startReplication, and ssh command would be\n\n  ssh gerrit replication-1.2 start\n\nand not\n\n  ssh gerrit replication start\n\nBut apparently the old code was already broken too, so i this problem is probably unrelated to this change, but was forgotten to take care about as plugin-owned name feature in MANIFEST.MF was introduced.",
      "parentUuid": "0fc771d6_6549e64b",
      "range": {
        "startLine": 50,
        "startChar": 12,
        "endLine": 51,
        "endChar": 55
      },
      "revId": "e2a1e7ef34fd6bc2c132e4529e62ff13f0fbb27a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f8fd5ae_fe39e1b5",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/WarDistribution.java",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-02-21T17:30:15Z",
      "side": 1,
      "message": "David, I believe you confuse here something. All that is done here is to take the plugin jar from the war file and extract it into the plugins folder. The Manifest with the plugin name inside of the plugin jar stays intact and when the plugin is loaded it will have the name that is defined in the manifest.",
      "parentUuid": "2f8fd5ae_be3f599a",
      "range": {
        "startLine": 50,
        "startChar": 12,
        "endLine": 51,
        "endChar": 55
      },
      "revId": "e2a1e7ef34fd6bc2c132e4529e62ff13f0fbb27a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f8fd5ae_1e4f6d53",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/WarDistribution.java",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-02-21T17:47:25Z",
      "side": 1,
      "message": "I only answered Sasa question what plugin name is used for.\n\nYou are right about the installation, but we already reading the content of manifest file in \n\n InitPlugins.getVersion(plugin)\n\nto dump the right plugin version during interactive installation:\n\n  if (!(initFlags.installPlugins.contains(pluginName) || ui.yesno(false,\n            \"Install plugin %s version %s\", pluginName, plugin.version))) {\n          tmpPlugin.delete();\n          continue;\n }\n\n\nwhereas the plugin name is still induced from the file name, even though it can be different in the manifest. It is only cosmetic, but it is still not quite correct.",
      "parentUuid": "2f8fd5ae_fe39e1b5",
      "range": {
        "startLine": 50,
        "startChar": 12,
        "endLine": 51,
        "endChar": 55
      },
      "revId": "e2a1e7ef34fd6bc2c132e4529e62ff13f0fbb27a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}