{
  "comments": [
    {
      "key": {
        "uuid": "9a887d49_735d0bae",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-02-27T19:16:35Z",
      "side": 1,
      "message": "Would it be possible to add just one boolean to the message list itself and pass that down into the expanded/collapsed logic? It\u0027s not clear to me why this gets added to the state of each message when it\u0027s really a boolean at the list-level.",
      "range": {
        "startLine": 9,
        "startChar": 14,
        "endLine": 10,
        "endChar": 10
      },
      "revId": "e5125561e6948347b0bb0cedf3daa635a93e2668",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "412ca512_25cc9de3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-02-27T19:22:33Z",
      "side": 1,
      "message": "I tried that approach initially and ran into several issues, largely due to the fact that this isn\u0027t a real boolean prop that tracks this information. It has three valid states: true, false, and undefined. \n\nThis doesn\u0027t work if I repurpose the _expanded prop in message-list, as there is at least one computed field that is dependent on that prop.\n\nSetting this field on the message object itself gives me the \u0027three state boolean\u0027 that I need here, and also lets the gr-message determine whether or not it should be expanded based on its parameters.",
      "parentUuid": "9a887d49_735d0bae",
      "range": {
        "startLine": 9,
        "startChar": 14,
        "endLine": 10,
        "endChar": 10
      },
      "revId": "e5125561e6948347b0bb0cedf3daa635a93e2668",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaba0634_9bafbc39",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1026519
      },
      "writtenOn": "2017-02-27T20:20:18Z",
      "side": 1,
      "message": "If I understand right, the three states correspond to\n* true → expand-all\n* false → collapse-all\n* undefined → no-preference\n\nIs this accurate? And is the problem with using a boolean is that Polymer won\u0027t pass-along undefined?\n\nIf we\u0027re using a boolean to encode three states, maybe they should be converted to descriptive strings like the three above. That way it\u0027s easier to interpret and the bindings would work naturally.",
      "parentUuid": "412ca512_25cc9de3",
      "range": {
        "startLine": 9,
        "startChar": 14,
        "endLine": 10,
        "endChar": 10
      },
      "revId": "e5125561e6948347b0bb0cedf3daa635a93e2668",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a772a72_7deb8b0b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2017-02-27T20:42:53Z",
      "side": 1,
      "message": "You\u0027re correct on all points :D\n\nI explored using an enum for this already, actually, and it resulted in code that was both less clear and longer than this. Using an enum would make a lot of sense if we ever needed to go back to the no-preference state, but we don\u0027t currently support that and I see no reason to enable that (especially because it adds UI complexity too). \n\nThis approach is simpler because adding the prop to the object maps 1-1 to the logic that I need in this scenario -- the undefined boolean one we\u0027ve been discussing. \n\nThe only drawback I see to this is the need to update each individual message when the state is toggled, as opposed to just one field that is native to the message list, but looping over a bunch of objects in memory adds negligible overhead when you consider how expensive the DOM redraw this action triggers is in the first place.",
      "parentUuid": "aaba0634_9bafbc39",
      "range": {
        "startLine": 9,
        "startChar": 14,
        "endLine": 10,
        "endChar": 10
      },
      "revId": "e5125561e6948347b0bb0cedf3daa635a93e2668",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}