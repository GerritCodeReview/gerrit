{
  "comments": [
    {
      "key": {
        "uuid": "960e27b4_ca24e3cf",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/RebuildNotedb.java",
        "patchSetId": 17
      },
      "lineNbr": 176,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-08-11T20:57:47Z",
      "side": 1,
      "message": "Grouping by project would allow you to write multiple changes into a single packfile together. Alternating projects wouldn\u0027t be able to combine object writes, which will lead to a lot of loose objects on disk.\n\nUnfortunately stock local filesystem JGit can\u0027t write a lot of new objects to pack files. It only writes them as loose objects. We may need to revisit that in JGit to make this RebuildNoteDb work well in Gerrit. It more-or-less needs a \"git fast-import\"y style of writing data to the repo.",
      "range": {
        "startLine": 174,
        "startChar": 67,
        "endLine": 176,
        "endChar": 27
      },
      "revId": "e541e8f5688c54a12d199fb35740eae17e0c28bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6dfab55_8bf94de7",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/RebuildNotedb.java",
        "patchSetId": 17
      },
      "lineNbr": 176,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-08-11T21:00:11Z",
      "side": 1,
      "message": "Yes, when I wrote this I was thinking about JGit inserters writing loose objects.\n\nNow that you mention it though...what if the output of RebuildNotedb were really just a fastimport file per repo? :)\n\n(Please continue reviewing this change not assuming we\u0027re going to rewrite it to that today.)",
      "parentUuid": "960e27b4_ca24e3cf",
      "range": {
        "startLine": 174,
        "startChar": 67,
        "endLine": 176,
        "endChar": 27
      },
      "revId": "e541e8f5688c54a12d199fb35740eae17e0c28bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "960e27b4_8a2eeba9",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/RebuildNotedb.java",
        "patchSetId": 17
      },
      "lineNbr": 176,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-08-11T21:17:17Z",
      "side": 1,
      "message": "I don\u0027t expect to improve the writing performance now. But its something we will have to look at as we get further down this notedb project.\n\nWriting a fast-import stream and piping it literally into git-fast-import would work. Except it requires the user to have git-core installed; IIRC some Gerrit servers are avoiding that now with builtin GC. It also won\u0027t work for rebuild in googlesource.com.",
      "parentUuid": "b6dfab55_8bf94de7",
      "range": {
        "startLine": 174,
        "startChar": 67,
        "endLine": 176,
        "endChar": 27
      },
      "revId": "e541e8f5688c54a12d199fb35740eae17e0c28bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "960e27b4_0a067b3c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeRebuilder.java",
        "patchSetId": 17
      },
      "lineNbr": 51,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-08-11T20:57:47Z",
      "side": 1,
      "message": "Just so long as we don\u0027t create a ChangeChangerFactory, I think we are OK. :)",
      "revId": "e541e8f5688c54a12d199fb35740eae17e0c28bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "960e27b4_ea1fa77e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeRebuilder.java",
        "patchSetId": 17
      },
      "lineNbr": 174,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-08-11T20:57:47Z",
      "side": 1,
      "message": "Do you see cases where this really matters? Most edits to a change aren\u0027t concurrent. Sorting by rounded-to-second time and author should get you approximately the best batching possible.",
      "range": {
        "startLine": 173,
        "startChar": 10,
        "endLine": 174,
        "endChar": 70
      },
      "revId": "e541e8f5688c54a12d199fb35740eae17e0c28bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6dfab55_4b0c855c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeRebuilder.java",
        "patchSetId": 17
      },
      "lineNbr": 174,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-08-11T21:03:09Z",
      "side": 1,
      "message": "Say we have a sequence of 4 writes to different tables, say somewhere in the submit code path, and they all use the current time instead of taking a single timestamp and reusing it. I haven\u0027t looked for such an example but it doesn\u0027t seem totally unreasonable.\n\nIf each of these writes takes 300ms on googlesource.com, then the fourth write will end up in a different bucket than the first, even though they all stem from a single end-user operation.",
      "parentUuid": "960e27b4_ea1fa77e",
      "range": {
        "startLine": 173,
        "startChar": 10,
        "endLine": 174,
        "endChar": 70
      },
      "revId": "e541e8f5688c54a12d199fb35740eae17e0c28bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6dfab55_2b09394c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeRebuilder.java",
        "patchSetId": 17
      },
      "lineNbr": 174,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2014-08-11T21:17:17Z",
      "side": 1,
      "message": "Eh, yea. We might want to say within 30 seconds could be joined together, so long as there isn\u0027t another ChangeMessage in the middle. ChangeMessage is a good signal for \"user action\" vs. \"sequence of writes made by the software\".",
      "parentUuid": "b6dfab55_4b0c855c",
      "range": {
        "startLine": 173,
        "startChar": 10,
        "endLine": 174,
        "endChar": 70
      },
      "revId": "e541e8f5688c54a12d199fb35740eae17e0c28bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "960e27b4_2a1edf7e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeRebuilder.java",
        "patchSetId": 17
      },
      "lineNbr": 174,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-08-11T21:19:52Z",
      "side": 1,
      "message": "Also we should probably keep parallel lines on a per-user basis and only linearize them at the end by bucket start time.\n\nThis is why it\u0027s a TODO :)",
      "parentUuid": "b6dfab55_2b09394c",
      "range": {
        "startLine": 173,
        "startChar": 10,
        "endLine": 174,
        "endChar": 70
      },
      "revId": "e541e8f5688c54a12d199fb35740eae17e0c28bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6dfab55_4b11256f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/notedb/ChangeRebuilder.java",
        "patchSetId": 17
      },
      "lineNbr": 174,
      "author": {
        "id": 1016407
      },
      "writtenOn": "2014-08-11T22:46:25Z",
      "side": 1,
      "message": "Since a single ChangeUpdate will never have changes by multiple users, is there any reason to sort on time before author because if we switch those, I think that\u0027ll save us some extra updates because I think the sorted list would interleave authors as it is now?",
      "parentUuid": "960e27b4_2a1edf7e",
      "range": {
        "startLine": 173,
        "startChar": 10,
        "endLine": 174,
        "endChar": 70
      },
      "revId": "e541e8f5688c54a12d199fb35740eae17e0c28bb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}