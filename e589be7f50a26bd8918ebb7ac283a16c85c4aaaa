{
  "pushCert": "certificate version 0.1\npusher A0D0EF51 1483426089 +0100\nnonce AHDV6GkSHkJ8UcLq1F02cFf2koVUitmL0qxybYpKiju71fXtR+j1ufVLtGGoXGgjw+8s1TmDpdEr\n\n0000000000000000000000000000000000000000 e9e4a69c2e99af78e2d12ee9f9aa3b1df28ea033 refs/for/master\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJYa0kpAAoJEFG1/Zeg0O9RXMIIAINXnxA4fnoZaLQg8iVJ00ZY\nx6mntW4LY1uvjS0eOgLsdZDKF3kQ14aOiUYZqsG+BgzokE9ovtRBMlM5cNt8U2R6\nJaXO/UhXvP016uvzWO3UvtQxs4M7q3n/148HpiEYHJWnvhaoPBN6c9P9BcLMFMdI\nuENDaSyVJnxlGEymXLJIclTOttyzWZlmMIVJVFkHESMJEGxA1fenPZv9amGccGUK\nHiqi7XKF+EkYOwP916h56cjSdu/ZTP/BonR4dgiVZtpagrxCvAvVXPysWl8MqYgq\nE6LkOZspf64YStMSO+atRhvqJsCVLDNhkBsPU505YHKO+ze57vP5NDgLs34SJE0\u003d\n\u003d83vd\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "f7cb4a92_343bd0fa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 12,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-06T22:02:30Z",
      "side": 1,
      "message": "I don\u0027t expect you to do anything about it at this point, but this really annoys me. I wish we had the time to write a more-general NoteMap that does directory sharding but allows arbitrary characters in strings.",
      "range": {
        "startLine": 12,
        "startChar": 8,
        "endLine": 12,
        "endChar": 34
      },
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "039c2129_fb284feb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 12,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-11T13:08:47Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "f7cb4a92_343bd0fa",
      "range": {
        "startLine": 12,
        "startChar": 8,
        "endLine": 12,
        "endChar": 34
      },
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7cb4a92_1438d4f9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 21,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-06T22:02:30Z",
      "side": 1,
      "message": "ISTM the approach of manual cache invalidation is only necessary while external IDs still exist in ReviewDb. Once we move entirely to NoteDb for external IDs, you can just include the SHA-1 of the note branch in the cache key, like we do for ChangeNotesCache. Then the cache is immutable and we no longer have to worry about invalidation.",
      "range": {
        "startLine": 18,
        "startChar": 52,
        "endLine": 21,
        "endChar": 25
      },
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "039c2129_9b258b12",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 21,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-11T13:08:47Z",
      "side": 1,
      "message": "No, I don\u0027t think that we want this here.\nPlease note that this cache has only a single value (the map with the external IDs by account). To reload this value we must parse again all external IDs and this is what we avoid by keeping the cache manually updated. We want to load the external IDs only once when the Gerrit server is started and then never again, which is okay when Gerrit is the only one doing updates to the external IDs (I\u0027m aware we have internal code that changes external IDs behind Gerrit\u0027s back which then would need to be adapted).",
      "parentUuid": "f7cb4a92_1438d4f9",
      "range": {
        "startLine": 18,
        "startChar": 52,
        "endLine": 21,
        "endChar": 25
      },
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "833c91f3_1f938340",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 21,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-11T18:50:06Z",
      "side": 1,
      "message": "I don\u0027t follow your argument for why we should not include the tree SHA-1 in the cache key.\n\nCurrently, the cache answers the query \"get me a map of all external IDs by account.\" This is cached because parsing all the data takes a long time.\n\nMy proposal is to change the cache to answer the query: \"get me the map of external IDs by account, that you would get if you parsed a notes tree at SHA-1 \u003cx\u003e\".  That is how ChangeNotesCache works. The caller is still responsible for doing a single ref read to get the SHA-1 to put in the cache key. As the ref advances, the old values fall out of the cache without any invalidation necessary.\n\nThis is ok assuming that a ref read is cheap relative to how often you need this cache, and the expensive thing is parsing the notes branch. That may not be the case e.g. if you need to do this lookup on every single request during authentication.",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bdf6e4_f79a00fe",
        "filename": "gerrit-gpg/src/main/java/com/google/gerrit/gpg/server/PostGpgKeys.java",
        "patchSetId": 11
      },
      "lineNbr": 154,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-06T22:02:30Z",
      "side": 1,
      "message": "Maybe better as a list to avoid calling toExtIdKey on each iteration:\n\n List\u003cAccountExternalId.Key\u003e extIdKeysToRemove \u003d toRemove.stream()\n     .map(fp -\u003e toExtIdKey(fp.get()))\n     .collect(toList());",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "239f651f_9ccca51a",
        "filename": "gerrit-gpg/src/main/java/com/google/gerrit/gpg/server/PostGpgKeys.java",
        "patchSetId": 11
      },
      "lineNbr": 154,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-11T13:08:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "57bdf6e4_f79a00fe",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7cb4a92_f4155867",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCache.java",
        "patchSetId": 11
      },
      "lineNbr": 23,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-06T22:02:30Z",
      "side": 1,
      "message": "Why does this need to be an interface? Do we expect multiple implementations?",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "239f651f_7c82f9a2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCache.java",
        "patchSetId": 11
      },
      "lineNbr": 23,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-11T13:08:47Z",
      "side": 1,
      "message": "Just made this an interface to be consistent with the other caches. Do you think removing this interface is better?",
      "parentUuid": "f7cb4a92_f4155867",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7cb4a92_d41a5c95",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCache.java",
        "patchSetId": 11
      },
      "lineNbr": 24,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-06T22:02:30Z",
      "side": 1,
      "message": "If you want to keep this an interface, then perhaps add default implementations for the Iterable versions that loop and delegate to the non-Iterable versions (or vice versa)",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "039c2129_fbbfef6a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCache.java",
        "patchSetId": 11
      },
      "lineNbr": 24,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-11T13:08:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7cb4a92_d41a5c95",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7cb4a92_b41fe083",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
        "patchSetId": 11
      },
      "lineNbr": 64,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-06T22:02:30Z",
      "side": 1,
      "message": "In most cases you only ever call extIdsByAccount.get while holding the lock; does this really need to be a LoadingCache rather than just a single non-final Multimap field?",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "239f651f_9ce34584",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
        "patchSetId": 11
      },
      "lineNbr": 64,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-11T13:08:47Z",
      "side": 1,
      "message": "This follows the example of the project list cache which is also using LoadingCache.\n\nLoadingCache is used to load the cache value on first access. If it wasn\u0027t using a loading cache each method would need to manually check if the external IDs have already been loaded and if not do the load. Wouldn\u0027t this be more overhead then just using LoadingCache?",
      "parentUuid": "f7cb4a92_b41fe083",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c336890f_81bf3a9f",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
        "patchSetId": 11
      },
      "lineNbr": 64,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-11T18:50:06Z",
      "side": 1,
      "message": "\u003e This follows the example of the project list cache which is also using LoadingCache.\n\nFor the record I have never been a fan of that implementation either :)\n\n\u003e each method would need to manually check if the external IDs have already been loaded and if not do the load\n\nI don\u0027t see how the performance would be any different. I guess what I am proposing is reimplementing the little subset of functionality from LoadingCache that you need, taking a write lock only when you know you need to write but keeping everything else lock-free. I think you can do it with not much more code than you have here, and then you get rid of this utterly strange usage of LoadingCache.\n\nBut, I guess, if this works, I don\u0027t feel too strongly. (Like, not strongly enough to have already rewritten ProjectListCache.)",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7cb4a92_9424e4d6",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
        "patchSetId": 11
      },
      "lineNbr": 65,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-06T22:02:30Z",
      "side": 1,
      "message": "If you make this ImmutableSetMultimap then its get method will return an ImmutableSet and you don\u0027t have to do ImmutableSet.copyOf when getting.\n\nI guess maybe the downside of using ISM here is that it takes up more space than ILM? But then you have to do more copying, so it\u0027s not obviously a win.",
      "range": {
        "startLine": 65,
        "startChar": 6,
        "endLine": 65,
        "endChar": 14
      },
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "039c2129_5baf0340",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
        "patchSetId": 11
      },
      "lineNbr": 65,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-11T13:08:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7cb4a92_9424e4d6",
      "range": {
        "startLine": 65,
        "startChar": 6,
        "endLine": 65,
        "endChar": 14
      },
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bdf6e4_d79ffceb",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
        "patchSetId": 11
      },
      "lineNbr": 92,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-06T22:02:30Z",
      "side": 1,
      "message": "external IDs",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "039c2129_bb4ba7bf",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
        "patchSetId": 11
      },
      "lineNbr": 92,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-11T13:08:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "57bdf6e4_d79ffceb",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7cb4a92_740a6846",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
        "patchSetId": 11
      },
      "lineNbr": 142,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-06T22:02:30Z",
      "side": 1,
      "message": "external IDs",
      "range": {
        "startLine": 142,
        "startChar": 38,
        "endLine": 142,
        "endChar": 46
      },
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "039c2129_5b386340",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
        "patchSetId": 11
      },
      "lineNbr": 142,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-11T13:08:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7cb4a92_740a6846",
      "range": {
        "startLine": 142,
        "startChar": 38,
        "endLine": 142,
        "endChar": 46
      },
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57bdf6e4_b79488d1",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
        "patchSetId": 11
      },
      "lineNbr": 163,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-06T22:02:30Z",
      "side": 1,
      "message": "external IDs",
      "range": {
        "startLine": 163,
        "startChar": 38,
        "endLine": 163,
        "endChar": 46
      },
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "239f651f_7cdbd9d0",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
        "patchSetId": 11
      },
      "lineNbr": 163,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-11T13:08:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "57bdf6e4_b79488d1",
      "range": {
        "startLine": 163,
        "startChar": 38,
        "endLine": 163,
        "endChar": 46
      },
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7cb4a92_54076c3c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
        "patchSetId": 11
      },
      "lineNbr": 199,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-06T22:02:30Z",
      "side": 1,
      "message": "This seems wasteful. If you make it a non-LoadingCache then you can pass an already-open ReviewDb into the public methods and avoid reopening. Makes the interface uglier though, I admit.",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "239f651f_5c7dbdcf",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
        "patchSetId": 11
      },
      "lineNbr": 199,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-11T13:08:47Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s that wasteful, since this is only invoked once after Gerrit startup. It\u0027s also only for now, as in 2 changes from here the external IDs will always be loaded from NoteDb and ReviewDb will no longer be needed here [1].\n\n[1] https://gerrit-review.googlesource.com/#/c/93470/7/gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
      "parentUuid": "f7cb4a92_54076c3c",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c336890f_c1a82265",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/account/ExternalIdCacheImpl.java",
        "patchSetId": 11
      },
      "lineNbr": 199,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-01-11T18:50:06Z",
      "side": 1,
      "message": "Ack, forgot that this is only invoked once.",
      "revId": "e589be7f50a26bd8918ebb7ac283a16c85c4aaaa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}