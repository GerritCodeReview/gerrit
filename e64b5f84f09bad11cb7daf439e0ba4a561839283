{
  "pushCert": "certificate version 0.1\npusher Stefan Beller \u003csbeller@google.com\u003e 1457633721 -0800\nnonce AO+Zq7hPFKXyyPrfPiq4maKLHJh3INtg+/t8UoWUzJbsSSJAxb2Ywh1+G15ipSM74S7Qr1P+P84V\n\n0000000000000000000000000000000000000000 8ded46f99c6df1140cb5d5d0ca239fb7f012fc78 refs/for/master\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJW4bm5AAoJEGt7+xNJsB0bzFkH+wcOIXGCVCT1MQUP1cA5uaTF\nsgYiDRNQSBpWeO7zV0OXTU5QIpCajo3y1hn6AG5AViWpgh9jRLVcWiwpImfZDvXx\nfcooAMMxMhjnyr9PtJKPhvC1Gv9ithcMP22CeP+zRnq3zKwpddats0/TssF/Rt4T\nMFdqFbCa+70DJ8+jl3igEGw2tXdyG5+iwocOEVUyP0ciPK5GYxm6nTAx5tXYf7No\nyvZ3H6Y4476WaWSTuCfpjw0shldO3mucFx9i3dUuHUx3dPmFXQXtR/8p1T8Untvp\n7aeVFabscJQqInukmS1RdlexHvik2+IvooEFhFjp2szFg4K33wCJkAtvcH/zl90\u003d\n\u003dcuyl\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "b73365d6_8ae6cb02",
        "filename": "Documentation/user-submodules.txt",
        "patchSetId": 8
      },
      "lineNbr": 24,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-03-11T05:57:32Z",
      "side": 1,
      "message": "optional nit: wrap after the opening [",
      "revId": "e64b5f84f09bad11cb7daf439e0ba4a561839283",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f716bdff_b4e68002",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/git/SubmoduleSubscriptionsIT.java",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2016-03-10T20:12:58Z",
      "side": 1,
      "message": "Could this also check that the submodule isn\u0027t updated?\n\n ObjectId oldSubHEAD \u003d subRepo.getRepository().resolve(\"HEAD\");\n pushChangeTo(subRepo, \"master\");\n assertThat(hasSubmodule(...)).isFalse();\n expectToHaveSubmoduleState(superRepo, \"master\",\n     \"subscribed-to-protect\", oldSubHEAD);",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 39,
        "endChar": 85
      },
      "revId": "e64b5f84f09bad11cb7daf439e0ba4a561839283",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f716bdff_94eb84cc",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/git/SubmoduleSubscriptionsIT.java",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2016-03-10T20:46:32Z",
      "side": 1,
      "message": "There should be no submodule at the moment.\n\nTo test what you said, we\u0027d need to start with superproject subscriptions turned on, perform at least one subscription and then turn it off and see if it is still the latest state from before turning it off",
      "parentUuid": "f716bdff_b4e68002",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 39,
        "endChar": 85
      },
      "revId": "e64b5f84f09bad11cb7daf439e0ba4a561839283",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1718b12b_f5111895",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/git/SubmoduleSubscriptionsIT.java",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2016-03-10T20:55:35Z",
      "side": 1,
      "message": "Okay. Can you check that the submodule entry doesn\u0027t exist?\n\nBTW, this reveals that the current tests are checking something unrealistic. Ordinarily when using git, when a submodule is added to .gitmodules, it is also added to the tree. Adding one without the other is unusual and git commands don\u0027t cope particularly well with it.",
      "parentUuid": "f716bdff_94eb84cc",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 39,
        "endChar": 85
      },
      "revId": "e64b5f84f09bad11cb7daf439e0ba4a561839283",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f716bdff_b417a089",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/git/SubmoduleSubscriptionsIT.java",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2016-03-10T23:24:00Z",
      "side": 1,
      "message": "\u003e Can you check that the submodule entry doesn\u0027t exist?\n\nThat is what `hasSubmodule` does?\nI\u0027ll add another test for the use case of turning off the setting while having a submodule already.\n\nI am not sure if this is unusual, as the instructions in Gerrit how to add a submodule subscription do not use git commands, but rather talk about properties of the .gitmodules file (i.e. must have `branch` field and url set correctly), so at least I did not have the idea to use git for generating the submodule subscription, but edit the text file directly.",
      "parentUuid": "1718b12b_f5111895",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 39,
        "endChar": 85
      },
      "revId": "e64b5f84f09bad11cb7daf439e0ba4a561839283",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1718b12b_355ef04b",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/git/SubmoduleSubscriptionsIT.java",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2016-03-10T23:26:31Z",
      "side": 1,
      "message": "Ah. Thanks --- sorry to have been so dense.\n\nThe usual way of adding a submodule subscription is\n\n 1) add the submodule, like normal, using git commands\n 2) edit .gitmodules to add the branch\u003d parameter\n\nIf the documentation is recommending otherwise, we definitely ought to fix it.",
      "parentUuid": "f716bdff_b417a089",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 39,
        "endChar": 85
      },
      "revId": "e64b5f84f09bad11cb7daf439e0ba4a561839283",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b73365d6_aaeb8fcb",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SubmoduleOp.java",
        "patchSetId": 8
      },
      "lineNbr": 112,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-03-11T05:57:32Z",
      "side": 1,
      "message": "We have to be careful when adding new methods that this check is added (when necessary).\n\nDo you think it\u0027s feasible to instead make SubmoduleOp abstract and provide two implementations, one for enabled and one for disabled, which would be selected based on the setting?  This will mean more code, but will make the difference a bit more explicit and less prone to missing this check.",
      "range": {
        "startLine": 110,
        "startChar": 4,
        "endLine": 112,
        "endChar": 5
      },
      "revId": "e64b5f84f09bad11cb7daf439e0ba4a561839283",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}