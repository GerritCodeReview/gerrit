{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9658020a_85725c38",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-03-07T08:50:50Z",
      "side": 1,
      "message": "Does this have a test? If not I think it is worth adding one.",
      "range": {
        "startLine": 23,
        "startChar": 49,
        "endLine": 25,
        "endChar": 72
      },
      "revId": "e7b8cf544a95788e03850a1b280b1b8c337003f2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "996678ec_e514af36",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-03-07T09:28:23Z",
      "side": 1,
      "message": "Yes.\n\nSubmitRequirementIT#withMultipleAbandonAndRestore (overwrites SRs on latest PS)\nSubmitRequirementIT#abandonRestoreUpdateMerge\nSubmitRequirementIT#returnsEmpty_forAbandonedChangeWithPreviouslyStoredSRs",
      "parentUuid": "9658020a_85725c38",
      "range": {
        "startLine": 23,
        "startChar": 49,
        "endLine": 25,
        "endChar": 72
      },
      "revId": "e7b8cf544a95788e03850a1b280b1b8c337003f2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53de4b04_60773da9",
        "filename": "java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 3
      },
      "lineNbr": 551,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2022-03-07T08:50:50Z",
      "side": 1,
      "message": "Should we not just remove all SRs we have stored (cache.asMap().entrySet().foreach(... clearSubmitRequirementResult)?",
      "range": {
        "startLine": 548,
        "startChar": 6,
        "endLine": 551,
        "endChar": 82
      },
      "revId": "e7b8cf544a95788e03850a1b280b1b8c337003f2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d03cee74_df83fbbf",
        "filename": "java/com/google/gerrit/server/notedb/ChangeUpdate.java",
        "patchSetId": 3
      },
      "lineNbr": 551,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2022-03-07T09:28:23Z",
      "side": 1,
      "message": "I tried that. We need to invoke cache.get(commit) since builders is initially empty [1] and all builders are initialized at the time you invoke cache.get(commit) [2]. Builders are initialized using the RevisionNoteBuilder::revisionNoteMap.\n\nWe could rework the code to fill all builders on initialization, but the way it\u0027s done right now is fine IMO: we only care about clearing SRs in the revision notes for which we want to store SRs with the current update.\n\n[1] https://gerrit.googlesource.com/gerrit/+/697880c856d8ce0aa76071ac05fd673b5770a191/java/com/google/gerrit/server/notedb/RevisionNoteBuilder.java#51\n[2] https://gerrit.googlesource.com/gerrit/+/697880c856d8ce0aa76071ac05fd673b5770a191/java/com/google/gerrit/server/notedb/RevisionNoteBuilder.java#57",
      "parentUuid": "53de4b04_60773da9",
      "range": {
        "startLine": 548,
        "startChar": 6,
        "endLine": 551,
        "endChar": 82
      },
      "revId": "e7b8cf544a95788e03850a1b280b1b8c337003f2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e7b8cf544a95788e03850a1b280b1b8c337003f2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Style",
        "description": {
          "value": "Code has correct style and format"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Style\u003dMAX AND -label:Code-Style\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Style=MAX AND -label:Code-Style=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Style=MAX"],"failingAtoms":["label:Code-Style=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e7b8cf544a95788e03850a1b280b1b8c337003f2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Library-Compliance",
        "description": {
          "value": "Changes to specific library/metadata files require additional approval"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Library-Compliance\u003dMAX,user\u003dnon_uploader AND -label:Library-Compliance\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^lib/.*\"","file:\"^WORKSPACE$\"","file:\"^.gitmodule$\"","file:\"^tools/deps.bzl$\""]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "e7b8cf544a95788e03850a1b280b1b8c337003f2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Release-Notes",
        "description": {
          "value": "Changes must include a \u0027Release-Notes\u0027 footer with a single sentence to mention in the release notes. Changes not worth mentioning in the release notes should put \u0027Release-Notes: skip\u0027"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Release-Notes\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Release-Notes\""},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["hasfooter:\"Release-Notes\""],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e7b8cf544a95788e03850a1b280b1b8c337003f2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e7b8cf544a95788e03850a1b280b1b8c337003f2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}