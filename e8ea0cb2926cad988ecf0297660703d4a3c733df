{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8efa00e4_dbab769e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-30T14:12:51Z",
      "side": 1,
      "message": "Can you please include a description of the problem that this change is trying to solve (approvals from prior patch sets are no longer copied on demand but approvals are solely read from NoteDb, for old changes copied approvals are not stored in NoteDb because they were not backfilled, for merged changes this means that approvals for labels that were required for submit and that were satisfied by a copied votes are no longer shown, which is confusing for users).",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48e9321a_bf3e57c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-11-30T15:48:09Z",
      "side": 1,
      "message": "Done.\n\nThanks for writing the description.",
      "parentUuid": "8efa00e4_dbab769e",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d3c51a5_596e2e70",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-11-30T12:39:30Z",
      "side": 1,
      "message": "Nice",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a02f640a_7305e5eb",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-11-30T12:39:30Z",
      "side": 1,
      "message": "We need to invalidate the ChangeNotes cache. Can you please increase the version number of that cache by 1?",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbd5305b_5cba4d90",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-11-30T15:53:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a02f640a_7305e5eb",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b2357ce_c4a3a0df",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 319,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-30T14:12:51Z",
      "side": 1,
      "message": "Maybe cover the new logic in ChangeNotesParserTest?",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d3c7cd7_53c5f77a",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 319,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-11-30T15:48:09Z",
      "side": 1,
      "message": "No need for this IMO. We are not adding any new footers to change notes, hence there\u0027s anything we can test just for parsed change notes.\n\nWe need to parse the approvals in combination with submit records, and that\u0027s what we do in the test of StickyApprovalsIT.",
      "parentUuid": "4b2357ce_c4a3a0df",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "549e66bf_bd42727a",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 320,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-30T14:32:41Z",
      "side": 1,
      "message": "Could we skip this logic entirely if any of the approvals that were read was copied? If there is any copied approval, it means this change was merged after persisting copied approvals was implemented and hence all copied approvals are already present on the latest patch set.",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35fb049a_74d2d46e",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 320,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-11-30T15:48:09Z",
      "side": 1,
      "message": "If any approval was copied, it will be ignored by the method \"getCopiedApprovalsFromSubmitRecords\" (now renamed) that checks if there is no approval for this {label, user} on the latest PS.\n\nPlease LMK if I\u0027m missing something.",
      "parentUuid": "549e66bf_bd42727a",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a9e91f7_4be552e8",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 320,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-30T16:01:08Z",
      "side": 1,
      "message": "It\u0027s more about readability. This code is only needed for changes that have been merged before the code from [1] was present. For changes that have been merged after the approval copying was in place, this logic is a no-op and can be skipped right away.\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/318135",
      "parentUuid": "35fb049a_74d2d46e",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5294f98e_689c06d1",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 320,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-11-30T16:30:32Z",
      "side": 1,
      "message": "OK I see. Done.\n\nUpdate: That failed the test, because currently we have the \"copy approvals on PS upload\" running in the codebase, so the test had some copied approvals (for code-review).\n\nI removed the logic for copying code-review as well and voted code-review\u003d+2 on all patchsets.",
      "parentUuid": "6a9e91f7_4be552e8",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a60750cd_fe9ef404",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 320,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-01T11:06:41Z",
      "side": 1,
      "message": "\u003e Update: That failed the test, because currently we have the\n\u003e \"copy approvals on PS upload\" running in the codebase, so\n\u003e the test had some copied approvals (for code-review).\n\nI think it\u0027s unexpected that this made the test fail. Maybe anything is wrong with the test? Why does it expect the Verified approval to be copied to PS3 if the Verified label is not configured to be sticky? That seems wrong.\n\nIf the test passes when the code is exercised maybe something is wrong with our logic as it now copies approvals which wouldn\u0027t have been copied by ApprovalInference before?\n\nI guess this shows that using the fake submit rule in the test is not actually testing what we want to be tested. It tests what happens if you have a submit rule that returns a label as fulfilled which is actually not present on the patch set. This may be an interesting edge case but is not our main concern.\n\nSo I still think we need a proper test.",
      "parentUuid": "5294f98e_689c06d1",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb009e35_145c7c21",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 320,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-01T12:40:50Z",
      "side": 1,
      "message": "This is resolved now, see review discussion on the test.",
      "parentUuid": "a60750cd_fe9ef404",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2a13f25_fc28a63d",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 330,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-11-30T12:39:30Z",
      "side": 1,
      "message": "nit: maybe \"backfillMissingCopiedApprovalsFromSubmitRecords\"\n\nsomething with \"backfill\" would be nice :-)",
      "range": {
        "startLine": 330,
        "startChar": 33,
        "endLine": 330,
        "endChar": 68
      },
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a22901b_78d5f139",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 330,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-11-30T15:53:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2a13f25_fc28a63d",
      "range": {
        "startLine": 330,
        "startChar": 33,
        "endLine": 330,
        "endChar": 68
      },
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8208d79_0d97069d",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 331,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-11-30T12:39:30Z",
      "side": 1,
      "message": "Can this ever be null? I can\u0027t come up with an example.",
      "range": {
        "startLine": 331,
        "startChar": 64,
        "endLine": 331,
        "endChar": 94
      },
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1efa38c_e56451ef",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 331,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-11-30T15:53:47Z",
      "side": 1,
      "message": "Yes, the caller invokes \"buildCurrentPatchSetId\" to get the latest patchset which has a code path that returns null.",
      "parentUuid": "a8208d79_0d97069d",
      "range": {
        "startLine": 331,
        "startChar": 64,
        "endLine": 331,
        "endChar": 94
      },
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "059d2306_c0e6889f",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 339,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2021-11-30T12:39:30Z",
      "side": 1,
      "message": "Do we need to filter by Status: OK ?",
      "range": {
        "startLine": 339,
        "startChar": 8,
        "endLine": 339,
        "endChar": 21
      },
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "251c381b_645d335b",
        "filename": "java/com/google/gerrit/server/notedb/ChangeNotesParser.java",
        "patchSetId": 3
      },
      "lineNbr": 339,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-11-30T15:53:47Z",
      "side": 1,
      "message": "mmm, yeah maybe we should do that to be safe.\n\nDone.",
      "parentUuid": "059d2306_c0e6889f",
      "range": {
        "startLine": 339,
        "startChar": 8,
        "endLine": 339,
        "endChar": 21
      },
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "472c24cb_c1d03eee",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/StickyApprovalsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 274,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-30T14:12:51Z",
      "side": 1,
      "message": "I\u0027m not sure that this test is covering the case that we want to fix.\nThe new logic is about backfilling approvals for changes that have been merged before copied approvals were persisted in NoteDb, but this test runs against a merged change that has copied approvals stored in NoteDb. In this case the new logic doesn\u0027t apply (it\u0027s good to test this too, but this test alone doesn\u0027t seem sufficient).",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5d1c855_06498fdc",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/StickyApprovalsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 274,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-11-30T15:48:09Z",
      "side": 1,
      "message": "\u003e I\u0027m not sure that this test is covering the case that we want to fix.\n\nIt is. If we rollback my change to ChangeNotesParser the test fails.\n\nYes, your argument is true. That\u0027s why to mimic this use case, I had to append a custom submit record (emitted from the TestSubmitRule) that always returns an approved \"Verified\" label from \"user\". We don\u0027t have any configuration that copies the \"Verified\" label between patch-sets so it\u0027s not copied with our normal workflow.\n\nWhen the change gets submitted, a submit record will be stored from the TestSubmitRule for the \"Verified\" label. Since there is no approval on the latest PS for \"Verified\", the approval is copied from PS1.\n\nI added a comment on the test to explain this.",
      "parentUuid": "472c24cb_c1d03eee",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "707c0f7b_087ecedb",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/StickyApprovalsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-30T14:12:51Z",
      "side": 1,
      "message": "It\u0027s nice to test this, but shouldn\u0027t we also test the more common case where there is only a label configuration and the default submit rule is used?",
      "range": {
        "startLine": 281,
        "startChar": 4,
        "endLine": 282,
        "endChar": 46
      },
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a17035e_bcab5254",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/StickyApprovalsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-11-30T15:48:09Z",
      "side": 1,
      "message": "I\u0027m not sure I understand this. Could you please clarify what we need to test?",
      "parentUuid": "707c0f7b_087ecedb",
      "range": {
        "startLine": 281,
        "startChar": 4,
        "endLine": 282,
        "endChar": 46
      },
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92df17c5_e0352135",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/StickyApprovalsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-30T16:01:08Z",
      "side": 1,
      "message": "Sure:\n\nWith change [1] we started to persist copied approvals in NoteDb.\n\nSince this code is present now, the change that you are creating and submitting in the test, does have copied approvals persisted in NoteDb.\n\nWhat we are concerned about are changes that have been merged before the code from [1] was present. These changes do not have copied approvals persisted in NoteDb. I think you would need to create such a change for the test.\n\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/318135",
      "parentUuid": "5a17035e_bcab5254",
      "range": {
        "startLine": 281,
        "startChar": 4,
        "endLine": 282,
        "endChar": 46
      },
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f84c063_63d6db46",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/StickyApprovalsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-11-30T16:30:32Z",
      "side": 1,
      "message": "Thanks for clarifying. I was thinking that testing this right now is impossible, because current code persists the copied votes in NoteDb.\n\nThe test you\u0027re suggesting should only use the default submit rule, then we want to persist a submit record in NoteDb upon merge for an approval that does not exist on the latest patchset (and then make sure it was backfilled correctly). But this is impossible since the DefaultSubmitRule inspects cd.currentApprovals() (i.e. approvals on the latest patchset).\n\nThis is why I made the custom submit rule workaround.\n\nNot sure if I could work-around this to get to this state.",
      "parentUuid": "92df17c5_e0352135",
      "range": {
        "startLine": 281,
        "startChar": 4,
        "endLine": 282,
        "endChar": 46
      },
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90251add_6faa2f47",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/StickyApprovalsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-01T12:40:50Z",
      "side": 1,
      "message": "Discussed with Youssef offline. I understand the idea behind this test now and got convinced that it\u0027s sufficiently tests the backfilling logic. To make this test better understandable for readers I\u0027m proposing too add a more detailed explanation of how the test works (see comment above).",
      "parentUuid": "5f84c063_63d6db46",
      "range": {
        "startLine": 281,
        "startChar": 4,
        "endLine": 282,
        "endChar": 46
      },
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a58824e7_9f2e218e",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/StickyApprovalsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-12-01T13:05:26Z",
      "side": 1,
      "message": "Thanks for writing the detailed comment.",
      "parentUuid": "90251add_6faa2f47",
      "range": {
        "startLine": 281,
        "startChar": 4,
        "endLine": 282,
        "endChar": 46
      },
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a659b25_48bc454b",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/StickyApprovalsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 305,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-11-30T14:12:51Z",
      "side": 1,
      "message": "The comment in l. 298 suggest that it\u0027s not intended that admin votes again?",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf0e69fd_5637dc52",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/StickyApprovalsIT.java",
        "patchSetId": 3
      },
      "lineNbr": 305,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-11-30T15:48:09Z",
      "side": 1,
      "message": "Yes, that should not affect the test. I removed the vote from the admin at this line.",
      "parentUuid": "3a659b25_48bc454b",
      "revId": "e8ea0cb2926cad988ecf0297660703d4a3c733df",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}