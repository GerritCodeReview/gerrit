{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6dce8e4d_58326707",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-09-30T14:55:28Z",
      "side": 1,
      "message": "Ping, any Googlers able to review this like Marco suggests?",
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6e5ee9c_104aff3f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2020-10-02T16:38:58Z",
      "side": 1,
      "message": "+ the other 2 Google backend maintainers",
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bca9a2f_f9eb4f5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-07T17:01:02Z",
      "side": 1,
      "message": "Sorry for the delay here, I\u0027ll do a full review tomorrow.",
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4fc3134_ac28e529",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2020-10-08T09:46:08Z",
      "side": 1,
      "message": "With so many reviewers on this change, could you clarify how you envision the process so that you don\u0027t get contradictory or redundant comments? Maybe it would make sense to go top-down in the level of abstraction so that people don\u0027t spend time on details until the design is okayed?",
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1fa3c1ed_ba34790a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-10-08T13:07:43Z",
      "side": 1,
      "message": "Nasser added you while I was adding Patrick, so I suspect he didn\u0027t notice me doing so (prior to adding you and Han-Wen). Now, your comment about going top-down makes sense to me. This review ended up truly needing Google reviewers, hence me 1. requesting so and 2. eventually having to add Patrick.",
      "parentUuid": "d4fc3134_ac28e529",
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bc72f41_f6254d99",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 17
      },
      "lineNbr": 936,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "The interface should not allow for null to be a valid return value. Since it\u0027s a collection, you can just return an empty collection (e.g. ImmtuableMap.of())",
      "range": {
        "startLine": 936,
        "startChar": 1,
        "endLine": 936,
        "endChar": 16
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e4b3cb3_8468173f",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 17
      },
      "lineNbr": 988,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "I feel strongly about only maintaining one of the two. The new bulk factory seems like the better choice to me because it allows for more use cases to be implemented and performance optimizations to happen.\n\nHaving the option to speed up processing by calling plugins with a collection of changes instead of one change makes sense to me. At the same time, all implementation comes at a maintenance cost and I see no need for needing the single-change attribute factory going forward. From what I see, it doesn\u0027t have many callers and all callers can simple migrate to your new bulk factory without much work.\n\nCan you remove the old factory in a follow up change or rewrite the old to the new instead of implementing the new completely on the side?",
      "range": {
        "startLine": 978,
        "startChar": 0,
        "endLine": 988,
        "endChar": 57
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fecb50ee_378c301d",
        "filename": "java/com/google/gerrit/server/change/ChangeJson.java",
        "patchSetId": 17
      },
      "lineNbr": 255,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "Instead of having an optional here, is there a way to bind a no-op factory? It would make the code more readable.",
      "range": {
        "startLine": 255,
        "startChar": 16,
        "endLine": 255,
        "endChar": 24
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e310dc90_286588c5",
        "filename": "java/com/google/gerrit/server/change/ChangeJson.java",
        "patchSetId": 17
      },
      "lineNbr": 306,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "nit: this name isn\u0027t readable. Can we name it pluginInfosByChange ?",
      "range": {
        "startLine": 306,
        "startChar": 58,
        "endLine": 306,
        "endChar": 70
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4669010c_2dfb5905",
        "filename": "java/com/google/gerrit/server/change/ChangeJson.java",
        "patchSetId": 17
      },
      "lineNbr": 306,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "Dealing with null here and an optional later makes the code harder to read. If you just use an empty map here and treat that empty map later on, it will get easier to read.",
      "range": {
        "startLine": 306,
        "startChar": 73,
        "endLine": 306,
        "endChar": 77
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d66e11c_c69579f5",
        "filename": "java/com/google/gerrit/server/change/ChangeJson.java",
        "patchSetId": 17
      },
      "lineNbr": 440,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "Optionals in arguments are discouraged. Just use an empty collection here in case there\u0027s no PDAF",
      "range": {
        "startLine": 440,
        "startChar": 6,
        "endLine": 440,
        "endChar": 14
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87827960_3f45b57c",
        "filename": "java/com/google/gerrit/server/change/ChangeJson.java",
        "patchSetId": 17
      },
      "lineNbr": 468,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "Use get on the list multimap directly without the optional handling. #get is guaranteed to provide a List, never null [1].\n\n[1] https://guava.dev/releases/19.0/api/docs/com/google/common/collect/ListMultimap.html",
      "range": {
        "startLine": 466,
        "startChar": 18,
        "endLine": 468,
        "endChar": 40
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ae7420d_ef3e270f",
        "filename": "java/com/google/gerrit/server/change/ChangeJson.java",
        "patchSetId": 17
      },
      "lineNbr": 526,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "Similar to above, don\u0027t wrap collections in optionals. Use empty collections instead (which the ListMultiMap returns if there\u0027s no value for a key).",
      "range": {
        "startLine": 526,
        "startChar": 6,
        "endLine": 526,
        "endChar": 14
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "823edbdf_96c6e55d",
        "filename": "java/com/google/gerrit/server/change/ChangeJson.java",
        "patchSetId": 17
      },
      "lineNbr": 647,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "Why is this distinction necessary? Can\u0027t you guarantee that the PDAIs were loaded and remove the fallback loading here?",
      "range": {
        "startLine": 639,
        "startChar": 0,
        "endLine": 647,
        "endChar": 5
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0087032_676a48c9",
        "filename": "java/com/google/gerrit/server/change/ChangePluginDefinedInfoFactory.java",
        "patchSetId": 17
      },
      "lineNbr": 41,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "nit: ... for each of the provided {@link ChangeData}s",
      "range": {
        "startLine": 41,
        "startChar": 5,
        "endLine": 41,
        "endChar": 41
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0d14d81_a5a5aafc",
        "filename": "java/com/google/gerrit/server/change/PluginDefinedAttributesFactories.java",
        "patchSetId": 17
      },
      "lineNbr": 66,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "This should not be nullable, but an empty collection.\n\nThe caller, for example ChangeQueryProcessor doesn\u0027t propagate the @Nullable annotation and does\u0027t treat the null case explicitly either.",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 66,
        "endChar": 11
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2540daec_86075bb2",
        "filename": "java/com/google/gerrit/server/change/PluginDefinedAttributesFactories.java",
        "patchSetId": 17
      },
      "lineNbr": 71,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "nit:naming\n\nsuggestion: pluginInfosByChange",
      "range": {
        "startLine": 71,
        "startChar": 64,
        "endLine": 71,
        "endChar": 68
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f25dcf16_a4e7d89d",
        "filename": "java/com/google/gerrit/server/change/PluginDefinedAttributesFactories.java",
        "patchSetId": 17
      },
      "lineNbr": 96,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "This is not a good idea. If the system breaks, we want the request to fail instead of succeed and silently miss information that clients might expect.\n\nI see the existing logic handles it the same way and also eats up exceptions. I would change that and propagate these exceptions instead.",
      "range": {
        "startLine": 96,
        "startChar": 9,
        "endLine": 96,
        "endChar": 59
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cb26549_1e8550d6",
        "filename": "java/com/google/gerrit/server/change/PluginDefinedInfosFactory.java",
        "patchSetId": 17
      },
      "lineNbr": 23,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "nit: missing JavaDoc",
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4240c128_3cbeb71a",
        "filename": "java/com/google/gerrit/server/query/change/ChangeQueryProcessor.java",
        "patchSetId": 17
      },
      "lineNbr": 155,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "Should this happen in the constructor instead? It seems it\u0027s the only place where you need the values.",
      "range": {
        "startLine": 155,
        "startChar": 13,
        "endLine": 155,
        "endChar": 65
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c8aa3ba_182a39e9",
        "filename": "java/com/google/gerrit/server/query/change/OutputStreamQuery.java",
        "patchSetId": 17
      },
      "lineNbr": 103,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "nit: naming\n\nsuggestion: pluginInfosByChange",
      "range": {
        "startLine": 103,
        "startChar": 62,
        "endLine": 103,
        "endChar": 65
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df329be5_838feaae",
        "filename": "java/com/google/gerrit/server/query/change/OutputStreamQuery.java",
        "patchSetId": 17
      },
      "lineNbr": 333,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "Same as before for treating collections/null/lists.",
      "range": {
        "startLine": 333,
        "startChar": 21,
        "endLine": 333,
        "endChar": 26
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3140b87e_2f402632",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/PluginFieldsIT.java",
        "patchSetId": 17
      },
      "lineNbr": 42,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2020-10-08T13:50:50Z",
      "side": 1,
      "message": "I don\u0027t understand the NullAttribute test for the bulk interface: Since we return a map, we can just not return a key/value if the plugin doesn\u0027t want to contribute any infos.\n\nFor the single info interface, that was different (though as a return value, I think optional would have been the better choice).",
      "range": {
        "startLine": 42,
        "startChar": 42,
        "endLine": 42,
        "endChar": 55
      },
      "revId": "e8ef2ce9f1373b5eadfe6414271ec6d277dd5d3e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}