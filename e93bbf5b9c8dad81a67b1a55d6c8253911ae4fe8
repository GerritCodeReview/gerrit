{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "41b4eef1_07077963",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2022-06-02T18:44:53Z",
      "side": 1,
      "message": "A no-op, one-line change and I have 3 comments - I am sorry. It took me some time to understand the lifetime of this class, its parents and children and now I feelit should probably be improved.\n\nHowever, I also realize that you are trying to get somewhere and that my concerns equally apply to preexisting code, so I just left my thoughts but am okay if you want to move forward with this. +1.",
      "revId": "e93bbf5b9c8dad81a67b1a55d6c8253911ae4fe8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "093f6997_c4f35a33",
        "filename": "polygerrit-ui/app/embed/diff/gr-diff-cursor/gr-diff-cursor.ts",
        "patchSetId": 4
      },
      "lineNbr": 121,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2022-06-02T18:44:53Z",
      "side": 1,
      "message": "Nit: Here in embed/, ideally we would not mention Gerrit-specific views that other apps embedding a GrDiff would not have. Maybe the idea can be conveyed more generally like this:\n\n\"GrDiffCursor offers explicit lifecycle methods to allow its parent to initialize and tear down the global scroll event handlers it uses.\"",
      "range": {
        "startLine": 121,
        "startChar": 35,
        "endLine": 121,
        "endChar": 45
      },
      "revId": "e93bbf5b9c8dad81a67b1a55d6c8253911ae4fe8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5582eebf_ebb0c227",
        "filename": "polygerrit-ui/app/embed/diff/gr-diff-cursor/gr-diff-cursor.ts",
        "patchSetId": 4
      },
      "lineNbr": 121,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2022-06-02T18:44:53Z",
      "side": 1,
      "message": "Supernit: Is this not an API comment? Do you have a convention to use /** */ for those?",
      "range": {
        "startLine": 121,
        "startChar": 2,
        "endLine": 121,
        "endChar": 4
      },
      "revId": "e93bbf5b9c8dad81a67b1a55d6c8253911ae4fe8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bb9874c_797d12a5",
        "filename": "polygerrit-ui/app/embed/diff/gr-diff-cursor/gr-diff-cursor.ts",
        "patchSetId": 4
      },
      "lineNbr": 121,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2022-06-02T18:44:53Z",
      "side": 1,
      "message": "FWIW, it is not completely clear to me why the instance would be reused as the GrDiffView is reconstructed. It looks to me as if no state is intentionally kept, and this actually increases the risk of accidentally leaking any state unintentionally.\nFor example, line 129 calls `cursorManager.unsetCursor`, but only after unsubscribing from `cursorManager.target$` which means `diffRow[Internal]` is not reset. \n\nI think I would find it cleaner if GrDiffView.connectedCallback would create a new GrDiffCursor each time it is connected. But you may have a deeper understanding of this and have your reasons why you want to reuse the instance?",
      "range": {
        "startLine": 121,
        "startChar": 18,
        "endLine": 121,
        "endChar": 29
      },
      "revId": "e93bbf5b9c8dad81a67b1a55d6c8253911ae4fe8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dab75a0_1c08c9be",
        "filename": "polygerrit-ui/app/embed/diff/gr-diff-cursor/gr-diff-cursor.ts",
        "patchSetId": 4
      },
      "lineNbr": 121,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-06-03T06:54:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5582eebf_ebb0c227",
      "range": {
        "startLine": 121,
        "startChar": 2,
        "endLine": 121,
        "endChar": 4
      },
      "revId": "e93bbf5b9c8dad81a67b1a55d6c8253911ae4fe8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4c4c99f_16b705c7",
        "filename": "polygerrit-ui/app/embed/diff/gr-diff-cursor/gr-diff-cursor.ts",
        "patchSetId": 4
      },
      "lineNbr": 121,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-06-03T06:54:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "093f6997_c4f35a33",
      "range": {
        "startLine": 121,
        "startChar": 35,
        "endLine": 121,
        "endChar": 45
      },
      "revId": "e93bbf5b9c8dad81a67b1a55d6c8253911ae4fe8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cccaaba0_f25ef0c3",
        "filename": "polygerrit-ui/app/embed/diff/gr-diff-cursor/gr-diff-cursor.ts",
        "patchSetId": 4
      },
      "lineNbr": 121,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-06-03T06:54:11Z",
      "side": 1,
      "message": "The advantage of not recreating the GrDiffCursor is that we don\u0027t have to recompute updateStops each time we go back between change page and the first file. Though arguably that\u0027s not a common enough scenario to optimize for.",
      "parentUuid": "0bb9874c_797d12a5",
      "range": {
        "startLine": 121,
        "startChar": 18,
        "endLine": 121,
        "endChar": 29
      },
      "revId": "e93bbf5b9c8dad81a67b1a55d6c8253911ae4fe8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f19619ce_95a1a882",
        "filename": "polygerrit-ui/app/embed/diff/gr-diff-cursor/gr-diff-cursor.ts",
        "patchSetId": 4
      },
      "lineNbr": 121,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2022-06-03T07:53:27Z",
      "side": 1,
      "message": "Are you sure? `updateStops` seems to be called whenever a diff renders (Line 339) and also whenever diffs are replaced (Line 530) which I would expect to happen as you switch between CL page and file page. I think in a bright future, GrDiffCursor and GrCursorManager would not depend on the DOM, but on a view model of what is shown to the user. Then indeed certain precomputations could be made and kept even when the page is re-rendered. As it stands, I at least do not understand how such an optimization would work if the entire DOM is replaced.\n\nBut again, I do not insist that this has to be changed now, I just wanted to point it out, in case you decide that the cleaner fix is after all to recreate this class, and then this new method would not be needed. I have a certain aversion to classes that are in some kind of uninitialized state - I think that is what constructors are for. But obviously that is a general rule and this may be an exception.",
      "parentUuid": "cccaaba0_f25ef0c3",
      "range": {
        "startLine": 121,
        "startChar": 18,
        "endLine": 121,
        "endChar": 29
      },
      "revId": "e93bbf5b9c8dad81a67b1a55d6c8253911ae4fe8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}