{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6c0477ca_f7f3ba53",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-04-11T16:27:33Z",
      "side": 1,
      "message": "nit: s/is/are/",
      "range": {
        "startLine": 11,
        "startChar": 27,
        "endLine": 11,
        "endChar": 30
      },
      "revId": "e953a9f3a8db04e5f77fd4b7b9cf20c9dbb5f796",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16efa07e_4cb73f64",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-04-11T16:42:44Z",
      "side": 1,
      "message": "No, \u0027is\u0027 is the correct usage here. It\u0027s clearer if you simplify the sentence a little: \"when inserting is retried\".",
      "parentUuid": "6c0477ca_f7f3ba53",
      "range": {
        "startLine": 11,
        "startChar": 27,
        "endLine": 11,
        "endChar": 30
      },
      "revId": "e953a9f3a8db04e5f77fd4b7b9cf20c9dbb5f796",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e4d25ba_72b727ce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2023-04-17T14:33:33Z",
      "side": 1,
      "message": "Wouldn\u0027t it make more sense to not retry in case the new change is inserted?\n\nThis is causing issue for some of our users with the large size of submission, so we are considering reverting the original.",
      "range": {
        "startLine": 11,
        "startChar": 39,
        "endLine": 12,
        "endChar": 32
      },
      "revId": "e953a9f3a8db04e5f77fd4b7b9cf20c9dbb5f796",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75716c91_0ec55c9f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1010013
      },
      "writtenOn": "2023-04-17T14:53:05Z",
      "side": 1,
      "message": "\u003e Wouldn\u0027t it make more sense to not retry in case the new change is inserted?\n\nUnfortunately inserting changes, which requires an atomic update of 2 refs, is particularly prone to contention in a non reftable setup and projects with large ref counts. This is because this atomic operation requires rewriting a potentially very large packerefs file (while holding its lock) for each insertion. We are seeing failures during our testing without retries. Is there another way besides retries to avoid this contention and these failures?",
      "parentUuid": "7e4d25ba_72b727ce",
      "range": {
        "startLine": 11,
        "startChar": 39,
        "endLine": 12,
        "endChar": 32
      },
      "revId": "e953a9f3a8db04e5f77fd4b7b9cf20c9dbb5f796",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f82e70a_4c9c2482",
        "filename": "java/com/google/gerrit/server/git/receive/ReceiveCommits.java",
        "patchSetId": 1
      },
      "lineNbr": 571,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-04-11T16:27:33Z",
      "side": 1,
      "message": "Moving this seems unnecessary?",
      "revId": "e953a9f3a8db04e5f77fd4b7b9cf20c9dbb5f796",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecab4f50_ba384f58",
        "filename": "java/com/google/gerrit/server/git/receive/ReceiveCommits.java",
        "patchSetId": 1
      },
      "lineNbr": 571,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-04-11T16:42:44Z",
      "side": 1,
      "message": "I suggested Kaushik create the new comment on line 570 and group these initializations together.",
      "parentUuid": "5f82e70a_4c9c2482",
      "revId": "e953a9f3a8db04e5f77fd4b7b9cf20c9dbb5f796",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86461901_54ecb6c6",
        "filename": "java/com/google/gerrit/server/git/receive/ReceiveCommits.java",
        "patchSetId": 1
      },
      "lineNbr": 571,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-04-11T17:04:57Z",
      "side": 1,
      "message": "I think this is a sign of the problem I pointed out below.",
      "parentUuid": "ecab4f50_ba384f58",
      "revId": "e953a9f3a8db04e5f77fd4b7b9cf20c9dbb5f796",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8b5c9a0_4fe40dc8",
        "filename": "java/com/google/gerrit/server/git/receive/ReceiveCommits.java",
        "patchSetId": 1
      },
      "lineNbr": 792,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-04-11T16:27:33Z",
      "side": 1,
      "message": "This doesn\u0027t feel safe if these are defined at the file level, there could other parts of this class updating them and this would be wiping them.",
      "revId": "e953a9f3a8db04e5f77fd4b7b9cf20c9dbb5f796",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "748993ee_e4e63b6c",
        "filename": "java/com/google/gerrit/server/git/receive/ReceiveCommits.java",
        "patchSetId": 1
      },
      "lineNbr": 792,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-04-11T16:42:44Z",
      "side": 1,
      "message": "I agree it\u0027s not as safe as it could be. A better approach would be to take all the code within this retry and anything it calls and create a new class for it. These fields would move to the new class and ReceiveCommits would access them via a getter.\n\nI expect that will be a pretty large refactor and probably shouldn\u0027t happen on a stable branch, but maybe we should try it and see before deciding since I would like that refactor to happen on master anyway.",
      "parentUuid": "a8b5c9a0_4fe40dc8",
      "revId": "e953a9f3a8db04e5f77fd4b7b9cf20c9dbb5f796",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84e878b6_514a3e77",
        "filename": "java/com/google/gerrit/server/git/receive/ReceiveCommits.java",
        "patchSetId": 1
      },
      "lineNbr": 792,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2023-04-11T17:04:57Z",
      "side": 1,
      "message": "A simpler approach might be to define new collections within this scope and to add them to the file scope when leaving this scope.",
      "parentUuid": "748993ee_e4e63b6c",
      "revId": "e953a9f3a8db04e5f77fd4b7b9cf20c9dbb5f796",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e155b0c_7c173b02",
        "filename": "java/com/google/gerrit/server/git/receive/ReceiveCommits.java",
        "patchSetId": 1
      },
      "lineNbr": 792,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2023-04-11T17:29:49Z",
      "side": 1,
      "message": "To minimize changes, would it be better to check the state to ensure that they are empty near line 782?\n\n    checkState(messages.isEmpty(), \"messages is expected to be empty as a retry will clear it\");\n    checkState(replaceByChange.isEmpty(), \"replaceByChange is expected to be empty as a retry will clear it\");\n    checkState(updateGroups.isEmpty(), \"updateGroups is expected to be empty as a retry will clear it\");",
      "parentUuid": "84e878b6_514a3e77",
      "revId": "e953a9f3a8db04e5f77fd4b7b9cf20c9dbb5f796",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "622a99b6_2bdafd6b",
        "filename": "java/com/google/gerrit/server/git/receive/ReceiveCommits.java",
        "patchSetId": 1
      },
      "lineNbr": 792,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-04-11T17:54:27Z",
      "side": 1,
      "message": "\u003e A simpler approach might be to define new collections within this scope and to add them to the file scope when leaving this scope.\n\nThis feels like a good incremental step towards the bigger refactor. I took a look at the refactor and it\u0027s enormous, so I definitely don\u0027t think we should do it on stable-3.5.",
      "parentUuid": "2e155b0c_7c173b02",
      "revId": "e953a9f3a8db04e5f77fd4b7b9cf20c9dbb5f796",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}