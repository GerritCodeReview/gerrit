{
  "comments": [
    {
      "key": {
        "uuid": "307ae4aa_945fa42f",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/events/GarbageCollectorListener.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-10-01T14:15:57Z",
      "side": 1,
      "message": "JGit GarbageCollectCommand command returns statistics in Properties instance. Wouldn\u0027t it make sense to pass it in the GCEvent?\n\n  public interface Event {\n    String getProjectName();\n    Properties getStatistics();\n  }",
      "range": {
        "startLine": 24,
        "startChar": 19,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "ea94e800b4aea5db5cf8dd4720f0dd45ccc1c301",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "307ae4aa_5407cc0a",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/events/GarbageCollectorListener.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-10-01T18:48:25Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "307ae4aa_945fa42f",
      "range": {
        "startLine": 24,
        "startChar": 19,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "ea94e800b4aea5db5cf8dd4720f0dd45ccc1c301",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1077a0c2_936edc9c",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/events/GarbageCollectorListener.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1007114
      },
      "writtenOn": "2014-10-02T15:40:18Z",
      "side": 1,
      "message": "Good idea. But the Properties object returned by the GC is untyped and there are no constants for the keys. I\u0027d rather expose the values using dedicated get methods. See PS4.",
      "parentUuid": "307ae4aa_5407cc0a",
      "range": {
        "startLine": 24,
        "startChar": 19,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "ea94e800b4aea5db5cf8dd4720f0dd45ccc1c301",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1077a0c2_53a92421",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/events/GarbageCollectorListener.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-10-06T09:21:45Z",
      "side": 1,
      "message": "\u003e Good idea. But the Properties object returned by the GC is untyped...\n\nIf this is considered a problem then shouldn\u0027t it be fixed in JGit?\n\n\u003e ... I\u0027d rather expose the values using dedicated get methods.\n\nand then you have to regularly maintain this API whenever JGit changes something in its GC statistics return value... otherwise the newly added values will not be available...",
      "parentUuid": "1077a0c2_936edc9c",
      "range": {
        "startLine": 24,
        "startChar": 19,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "ea94e800b4aea5db5cf8dd4720f0dd45ccc1c301",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1077a0c2_13b3ac93",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/events/GarbageCollectorListener.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-10-06T10:32:01Z",
      "side": 1,
      "message": "| But the Properties object returned by the GC is untyped and there are no constants for the keys.\n\nSo you are going to hard code those keys in Gerrit core? That\u0027s sounds wrong to me. The keys (or interface) should be added to JGit and not be hard coded in Gerrit, obviously.",
      "parentUuid": "1077a0c2_936edc9c",
      "range": {
        "startLine": 24,
        "startChar": 19,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "ea94e800b4aea5db5cf8dd4720f0dd45ccc1c301",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "307ae4aa_7439a87a",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/events/GarbageCollectorListener.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1007114
      },
      "writtenOn": "2014-10-06T11:47:42Z",
      "side": 1,
      "message": "Well, It would be much better expose the API (as methods or constants) from JGit.  However I have learned that this has been discussed but rejected:\n\nhttps://git.eclipse.org/r/#/c/7614/1..2/org.eclipse.jgit/src/org/eclipse/jgit/api/GarbageCollectCommand.java\n\nAs I can\u0027t find a trace of the discussion maybe one of the JGit contributors in this loop (Chris, Matthias, Sa≈°a) could recall why the repo statistics have not been exposed on the JGit API.",
      "parentUuid": "1077a0c2_13b3ac93",
      "range": {
        "startLine": 24,
        "startChar": 19,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "ea94e800b4aea5db5cf8dd4720f0dd45ccc1c301",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "307ae4aa_f424d84e",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/events/GarbageCollectorListener.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-10-06T13:09:31Z",
      "side": 1,
      "message": "If the exposing the API through JGit is not an option, then i agree with you, that exposing (and maintaining) the GC statistics API in Gerrit core is much cleaner, then delegating the job of figuring out the GC statistics attributes in Property class to plugin authors.",
      "parentUuid": "307ae4aa_7439a87a",
      "range": {
        "startLine": 24,
        "startChar": 19,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "ea94e800b4aea5db5cf8dd4720f0dd45ccc1c301",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1077a0c2_93a6dc4b",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/events/GarbageCollectorListener.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-10-06T13:46:54Z",
      "side": 1,
      "message": "If it makes sense to expose and maintain such an API here then I cannot imagine why it wouldn\u0027t make sense to do that in JGit.\n\n@Chris Halstrick: could you tell us more about the reason for returning untyped Properties.",
      "parentUuid": "307ae4aa_f424d84e",
      "range": {
        "startLine": 24,
        "startChar": 19,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "ea94e800b4aea5db5cf8dd4720f0dd45ccc1c301",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95446258_8fa2f536",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/events/GarbageCollectorListener.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1007114
      },
      "writtenOn": "2014-10-24T12:32:53Z",
      "side": 1,
      "message": "No such API seem to get exposed by JGit any time soon. Going for David\u0027s proposal.",
      "parentUuid": "1077a0c2_93a6dc4b",
      "range": {
        "startLine": 24,
        "startChar": 19,
        "endLine": 24,
        "endChar": 24
      },
      "revId": "ea94e800b4aea5db5cf8dd4720f0dd45ccc1c301",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}