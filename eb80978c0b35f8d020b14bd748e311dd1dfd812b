{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e30bb2fc_3427dcf5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-12-20T09:59:52Z",
      "side": 1,
      "message": "Friendly ping. I added a long comment for why a test is failing and proposed a way to proceed.",
      "revId": "eb80978c0b35f8d020b14bd748e311dd1dfd812b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d5f77c4_34569db4",
        "filename": "java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 731,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-20T12:11:29Z",
      "side": 1,
      "message": "Is the information in the IS_SUBMITTABLE field ever needed for closed changes? If not, shouldn\u0027t this field just contain \u0027false\u0027 for closed changes?",
      "range": {
        "startLine": 729,
        "startChar": 6,
        "endLine": 731,
        "endChar": 57
      },
      "revId": "eb80978c0b35f8d020b14bd748e311dd1dfd812b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93d3ee66_3b01ca5b",
        "filename": "javatests/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 1
      },
      "lineNbr": 3032,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-12-15T15:21:59Z",
      "side": 1,
      "message": "This line is failing when run with Lucene backend (does not match with any docs). Still looking why.",
      "revId": "eb80978c0b35f8d020b14bd748e311dd1dfd812b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1320b1c_03a3d655",
        "filename": "javatests/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 1
      },
      "lineNbr": 3032,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-12-15T16:07:33Z",
      "side": 1,
      "message": "This one very subtle, here\u0027s why it failed:\n\nIn Lucene, we maintain separate sub indexes for open/closed changes. When we execute a query, query processor will use either the open index, closed index or both depending on the query [1]. For example, if we search for \"status:open AND status:merged\" the processor will use both indexes, but if we search for \"status:open\" the processor will use the open sub-index only.\n  \nNow if we have a query like the one in this change: \"AND (field(issubmittable, 1), NOT(field(status, closed))\". Assume we have two open changes, where c1 is submittable but c2 isn\u0027t. A query for \"is:submittable\" will work (will match with c1), but a query with \"-is:submittable\" (we expect it to match with c2) won\u0027t work and will not match with any changes. This is because the code in [1] inspects the query:\n  * -(issubmittable:1 status:new -(status:merged OR status:abandoned))\n\nand concludes that the statuses in the query are [merged, abandoned]. It neglected \"new\" since it was negated. The query then uses the closed index only which is empty, hence the query does not match with any changes.\n  \nWith the current code state in [1] I believe this behaviour is wrong. I\u0027d always use both open and closed indexes in queries and neglect this optimization. \n\n[1] https://gerrit.googlesource.com/gerrit/+/4f3e4366d9181fafc1b1af8ebbe72d7cfd81fc89/java/com/google/gerrit/lucene/LuceneChangeIndex.java#270",
      "parentUuid": "93d3ee66_3b01ca5b",
      "revId": "eb80978c0b35f8d020b14bd748e311dd1dfd812b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d44e0413_5a37e162",
        "filename": "javatests/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 1
      },
      "lineNbr": 3032,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-12-20T12:11:29Z",
      "side": 1,
      "message": "Can ChangeIndexRewriter#getPossibleStatus(Predicate) be fixed to detect the statuses in the query correctly?\n\n\u003e With the current code state in [1] I believe this behaviour is wrong.\n\u003e I\u0027d always use both open and closed indexes in queries and neglect this\n\u003e optimization. \n\nI wouldn\u0027t drop this optimization without understanding how it would effect performance of change queries. \n\nAlso if this optimization is dropped, there is probably no more reason to keep the indexes for open and closed changes separate? Hence in this case we should cleanup and merge them, and drop all code complexity that comes from having these indexes separately.",
      "parentUuid": "b1320b1c_03a3d655",
      "revId": "eb80978c0b35f8d020b14bd748e311dd1dfd812b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}