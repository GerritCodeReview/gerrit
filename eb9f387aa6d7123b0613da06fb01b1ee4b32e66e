{
  "comments": [
    {
      "key": {
        "uuid": "86b8947d_ccb30e78",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 11,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-11-26T18:37:11Z",
      "side": 1,
      "message": "I don\u0027t see that code in your change",
      "revId": "eb9f387aa6d7123b0613da06fb01b1ee4b32e66e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "438a2aff_f6ec473d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 11,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-11-26T18:45:41Z",
      "side": 1,
      "message": "Good point, lost in rebase :-(",
      "parentUuid": "86b8947d_ccb30e78",
      "revId": "eb9f387aa6d7123b0613da06fb01b1ee4b32e66e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f877e6a_ee0d5f5e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SearchingChangeCacheImpl.java",
        "patchSetId": 13
      },
      "lineNbr": 54,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-11-26T18:38:53Z",
      "side": 1,
      "message": "Needs to be documented",
      "range": {
        "startLine": 54,
        "startChar": 41,
        "endLine": 54,
        "endChar": 54
      },
      "revId": "eb9f387aa6d7123b0613da06fb01b1ee4b32e66e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e44e04ed_8722fd8b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SearchingChangeCacheImpl.java",
        "patchSetId": 13
      },
      "lineNbr": 78,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-11-26T18:38:53Z",
      "side": 1,
      "message": "To be disabled by default, for backward compatiblity.",
      "range": {
        "startLine": 78,
        "startChar": 27,
        "endLine": 78,
        "endChar": 31
      },
      "revId": "eb9f387aa6d7123b0613da06fb01b1ee4b32e66e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27f653a8_9f11ab50",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SearchingChangeCacheImpl.java",
        "patchSetId": 13
      },
      "lineNbr": 79,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-11-26T18:38:53Z",
      "side": 1,
      "message": "Possibly even a shorter one would suffice: we just need it \"long enough\" to serve one page. 1-2 Minutes at most?",
      "range": {
        "startLine": 79,
        "startChar": 30,
        "endLine": 79,
        "endChar": 49
      },
      "revId": "eb9f387aa6d7123b0613da06fb01b1ee4b32e66e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca7ca72c_32123a5c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SearchingChangeCacheImpl.java",
        "patchSetId": 13
      },
      "lineNbr": 79,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2018-11-26T18:47:58Z",
      "side": 1,
      "message": "With proper cache invalidation any time should be OK?\nAs a workaround (without proper cache invalidation) we could set it to 1 minute\nin order to mitigate the issue.",
      "parentUuid": "27f653a8_9f11ab50",
      "range": {
        "startLine": 79,
        "startChar": 30,
        "endLine": 79,
        "endChar": 49
      },
      "revId": "eb9f387aa6d7123b0613da06fb01b1ee4b32e66e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e591325_cde1eb91",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SearchingChangeCacheImpl.java",
        "patchSetId": 13
      },
      "lineNbr": 79,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-11-26T20:39:38Z",
      "side": 1,
      "message": "Yes, however it would be weird because the user that is updating the change won\u0027t see the result of it for around 1 min, which may break the user journey. Best to get it fixed.",
      "parentUuid": "ca7ca72c_32123a5c",
      "range": {
        "startLine": 79,
        "startChar": 30,
        "endLine": 79,
        "endChar": 49
      },
      "revId": "eb9f387aa6d7123b0613da06fb01b1ee4b32e66e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e9af80e_ab1f28cf",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SearchingChangeCacheImpl.java",
        "patchSetId": 13
      },
      "lineNbr": 79,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-11-26T20:52:25Z",
      "side": 1,
      "message": "It should all be fixed now, with invalidation when changes are reindexed or deleted.",
      "parentUuid": "9e591325_cde1eb91",
      "range": {
        "startLine": 79,
        "startChar": 30,
        "endLine": 79,
        "endChar": 49
      },
      "revId": "eb9f387aa6d7123b0613da06fb01b1ee4b32e66e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ec92b0a_6e4b5d33",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/SearchingChangeCacheImpl.java",
        "patchSetId": 13
      },
      "lineNbr": 79,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-11-26T21:12:37Z",
      "side": 1,
      "message": "I think it will be very hard if at all possible to fix cache invalidation for ReviewDb backend. ReviewDb can be mutated behind the Gerrit\u0027s back, (even in plugin). How Gerrit would know to invalidate the change cache. NoteDb cache access works fine, because SHA1 key is immutable. I like the idea to don\u0027t even try to implement cache invalidation, and just cache the data for 60 seconds during change screen load. The fact, that the ReviewDb is removed and NoteDb cache just works is another heavy argument to prefer KISS solution here.",
      "parentUuid": "5e9af80e_ab1f28cf",
      "range": {
        "startLine": 79,
        "startChar": 30,
        "endLine": 79,
        "endChar": 49
      },
      "revId": "eb9f387aa6d7123b0613da06fb01b1ee4b32e66e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}