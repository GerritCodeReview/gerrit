{
  "pushCert": "certificate version 0.1\npusher A0D0EF51 1483457667 +0100\nnonce AHDV6GnSY8OjH2/w4RtBQg8k7djQmzoNcEKsAP4zKNfrmJ6oiZP4UGEZ3U3CFtPXG5RuTbBwVB3f\n\n0000000000000000000000000000000000000000 fc342c1f283e24b8ffac2c089cc64e17ff6fb006 refs/for/master\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJYa8SDAAoJEFG1/Zeg0O9RsgcIAKHZK1C7rKRRxzIjlwsZNex/\nu6TnSzmhllu8FZ7bLv3czl4eNRL+qtbFZvzqHSswUqhzxOaSzZaOD3x0yiAgdRg5\nX+XwHlXuzk8hLmZHohywR3NyCBRRChmG8YDBNYaOYIY84K+SWLJXbB/j2z9HTU8r\n6c7sozMAU0jkrbTs8btuUFGc/JwV2k4orCkKiDq1HzRLHpuLE9HdFbsWlGXa0P+P\nqrluS9uKZVd8+mY6uchdSfKB6FEgFv1sIVzRlsOmAuHbB3nwzaSpKO1tLZYFeOLN\nEQewf2tZeCMRSYkkigDoCir2STRd0RyH0gVADuZo4wLtwCZ4untSrHW/7UgORoU\u003d\n\u003dmT9E\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "1a1ba32a_7e38458d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-03T21:00:39Z",
      "side": 1,
      "message": "Why can\u0027t we decide it depending on presence of query parameter and need another one unused?",
      "range": {
        "startLine": 32,
        "startChar": 48,
        "endLine": 32,
        "endChar": 58
      },
      "revId": "ebad3f5b177a89d3b1ecd6ab4ec2b840ae517079",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57b176f0_d7855cf4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-04T08:53:00Z",
      "side": 1,
      "message": "We could decide it based on the presence of the query parameter. Actually this is what I implemented first before I changed it to expectList.\n\nI saw 2 reasons for this:\n\n1. It allows us to use \u0027-q\u0027 as alias for \u0027--query\u0027:\nUnfortunately ListGroups already uses \u0027-q\u0027 for something else. So if we would just check for \u0027--query\u0027 I think it would be confusing for users that\n\n- GET /accounts/?query\u003d... and GET /accounts/?q\u003d... are the same\n- GET /changes/?query\u003d... and GET /changes/?q\u003d... are the same\n- but GET /groups/?query\u003d... and GET /groups/?q\u003d... are NOT the same.\n\n2. If we want to move more the functionality from ListGroups to QueryGroups we would need to check for further parameters and not just \u0027--query\u0027",
      "parentUuid": "1a1ba32a_7e38458d",
      "range": {
        "startLine": 32,
        "startChar": 48,
        "endLine": 32,
        "endChar": 58
      },
      "revId": "ebad3f5b177a89d3b1ecd6ab4ec2b840ae517079",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7847225_8a3acb24",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-04T10:16:35Z",
      "side": 1,
      "message": "OK, I see. What is when we pass query, but forget the expectList?\n\n  GET /groups/?query\u003d\u003cquery\u003e\n\nWould it be ignored? Error?",
      "parentUuid": "57b176f0_d7855cf4",
      "range": {
        "startLine": 32,
        "startChar": 48,
        "endLine": 32,
        "endChar": 58
      },
      "revId": "ebad3f5b177a89d3b1ecd6ab4ec2b840ae517079",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ba32a_5e358991",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 34,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-03T21:00:39Z",
      "side": 1,
      "message": "This statement is confusing. QueryGroup REST doesn\u0027t used expectList at all. Ut currently only used in GroupsCollection to implement the switch, which is probably not nbeeded, sa there is query that is not used in ListGroup REST endpoint.",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 34,
        "endChar": 54
      },
      "revId": "ebad3f5b177a89d3b1ecd6ab4ec2b840ae517079",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17f0de9e_f06d1eaf",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/restapi/NeedsParams.java",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-03T21:00:39Z",
      "side": 1,
      "message": "I would rather extract this file and adaptation in RestApiServlet in its own change.",
      "revId": "ebad3f5b177a89d3b1ecd6ab4ec2b840ae517079",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57b176f0_3796982b",
        "filename": "gerrit-extension-api/src/main/java/com/google/gerrit/extensions/restapi/NeedsParams.java",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-04T08:53:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17f0de9e_f06d1eaf",
      "revId": "ebad3f5b177a89d3b1ecd6ab4ec2b840ae517079",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ba32a_9ef9e1a8",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/group/GroupsCollection.java",
        "patchSetId": 10
      },
      "lineNbr": 52,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-03T21:00:39Z",
      "side": 1,
      "message": "isQuery?",
      "range": {
        "startLine": 52,
        "startChar": 18,
        "endLine": 52,
        "endChar": 28
      },
      "revId": "ebad3f5b177a89d3b1ecd6ab4ec2b840ae517079",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ba32a_bef49dae",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/group/GroupsCollection.java",
        "patchSetId": 10
      },
      "lineNbr": 56,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-03T21:00:39Z",
      "side": 1,
      "message": "Now, that you removed the Singleton, this endpoint is bound in request mode, so that the all providers are not needed, here and below.",
      "range": {
        "startLine": 56,
        "startChar": 6,
        "endLine": 56,
        "endChar": 14
      },
      "revId": "ebad3f5b177a89d3b1ecd6ab4ec2b840ae517079",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57b176f0_17919432",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/group/GroupsCollection.java",
        "patchSetId": 10
      },
      "lineNbr": 56,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-04T08:53:00Z",
      "side": 1,
      "message": "I think it still makes a difference, since ListGroups and QueryGroups are both no singletons either.\n\nIf there are no providers, it means that for each GET /groups/ request both classes, ListGroups and QueryGroups, are instantiated, but only one of them is used. Also non of these classes needs to be instantiated for GET /group/\u003cgroup-id\u003e/ since then the list() method is not invoked at all.",
      "parentUuid": "1a1ba32a_bef49dae",
      "range": {
        "startLine": 56,
        "startChar": 6,
        "endLine": 56,
        "endChar": 14
      },
      "revId": "ebad3f5b177a89d3b1ecd6ab4ec2b840ae517079",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7847225_aa378f3d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/group/GroupsCollection.java",
        "patchSetId": 10
      },
      "lineNbr": 56,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-04T10:16:35Z",
      "side": 1,
      "message": "Right. Missed it.",
      "parentUuid": "57b176f0_17919432",
      "range": {
        "startLine": 56,
        "startChar": 6,
        "endLine": 56,
        "endChar": 14
      },
      "revId": "ebad3f5b177a89d3b1ecd6ab4ec2b840ae517079",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17f0de9e_b06396c4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/group/GroupsCollection.java",
        "patchSetId": 10
      },
      "lineNbr": 74,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-03T21:00:39Z",
      "side": 1,
      "message": "params.containsKey(\"query\")?",
      "range": {
        "startLine": 74,
        "startChar": 22,
        "endLine": 74,
        "endChar": 54
      },
      "revId": "ebad3f5b177a89d3b1ecd6ab4ec2b840ae517079",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17f0de9e_90601ab9",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/group/GroupsCollection.java",
        "patchSetId": 10
      },
      "lineNbr": 92,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-03T21:00:39Z",
      "side": 1,
      "message": "i wouldn\u0027t emphasize here what kind of dta structure we are returning, but mostly whether we are listing or quering.",
      "revId": "ebad3f5b177a89d3b1ecd6ab4ec2b840ae517079",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57b176f0_f78260e9",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/group/GroupsCollection.java",
        "patchSetId": 10
      },
      "lineNbr": 92,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2017-01-04T08:53:00Z",
      "side": 1,
      "message": "If we continue to use \u0027expectList\u0027 I think it makes sense to emphasize it here. If we decide to base the switch on \u0027--query\u0027 then I agree that its not needed.\n\nWith \u0027expectList\u0027 it makes sense to emphasize that ListGroups aka \u0027list\u0027 returns a map, although the name suggests something else. Otherwise someone would ask why not to use \u0027list\u0027 if expectList \u003d\u003d true.",
      "parentUuid": "17f0de9e_90601ab9",
      "revId": "ebad3f5b177a89d3b1ecd6ab4ec2b840ae517079",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}