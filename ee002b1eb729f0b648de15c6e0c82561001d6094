{
  "comments": [
    {
      "key": {
        "uuid": "e5fefe6e_5216b495",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2015-12-14T19:45:50Z",
      "side": 1,
      "message": "Drop this word?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 5
      },
      "revId": "ee002b1eb729f0b648de15c6e0c82561001d6094",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8580e214_67fdd292",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2015-12-15T08:09:10Z",
      "side": 1,
      "message": "Edwin reminds me that this was supported until the series https://gerrit-review.googlesource.com/69381 --- e.g., see https://gerrit-review.googlesource.com/37754.\n\nThe proposed change only forbids multiple submit types per branch in the context of a batch that is being merged. In a way, it would be nicer to forbid multiple types per branch altogether though that would be more invasive. (The submit_type predicate is allowed to use arbitrary facts about the current change. It already avoids passing in the CurrentUser but I wouldn\u0027t be surprised if people are using other facts in the wild, like commit_message_matches, change_owner, or commit_delta.) Doing this in the context of a batch gives people a way out: submit a smaller batch of changes (good).\n\nAs Edwin mentioned, this would presumably get a mention in the release notes.\n\nCould the prolog cookbook get a warning? E.g.\n\n Warning: using different submit types for different changes\n within a single branch and project is discouraged. Changes\n with different submit types targeting the same branch\n cannot be submitted in a single batch using the \"submit\n whole topic\" or \"submit including ancestors\" button.\n\n In other words, submit type rules should not generally\n need to use prolog facts other than change_branch and\n change_project.",
      "range": {
        "startLine": 7,
        "startChar": 14,
        "endLine": 7,
        "endChar": 63
      },
      "revId": "ee002b1eb729f0b648de15c6e0c82561001d6094",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45726a21_c52e7ace",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2015-12-15T14:44:41Z",
      "side": 1,
      "message": "don\u0027t forget that you can\u0027t generally forbid mixing at this point in time, as merges will be merged even if the submit type is cherry-pick. see also http://code.google.com/p/gerrit/issues/detail?id\u003d983",
      "parentUuid": "8580e214_67fdd292",
      "revId": "ee002b1eb729f0b648de15c6e0c82561001d6094",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e9fafb_f19b2885",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-12-15T15:09:32Z",
      "side": 1,
      "message": "\u003e don\u0027t forget that you can\u0027t generally forbid mixing at this point\n \u003e in time, as merges will be merged even if the submit type is\n \u003e cherry-pick.\n\nTechnically that\u0027s not mixing submit types; the implementation of CherryPick is what\u0027s responsible for choosing the merge in this case.",
      "parentUuid": "45726a21_c52e7ace",
      "revId": "ee002b1eb729f0b648de15c6e0c82561001d6094",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45d50a32_cda089ba",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-12-15T15:10:59Z",
      "side": 1,
      "message": "\u003e Edwin reminds me that this was supported until [the submitted state was removed]\n\nYes, it\u0027s true that we kind of had to be able to support this or else the submit queue would get stuck much more frequently. But I would still argue that it produced insane and/or unexpected results even back then ;)",
      "parentUuid": "8580e214_67fdd292",
      "range": {
        "startLine": 7,
        "startChar": 14,
        "endLine": 7,
        "endChar": 63
      },
      "revId": "ee002b1eb729f0b648de15c6e0c82561001d6094",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45d50a32_cdc9a980",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-12-15T16:47:50Z",
      "side": 1,
      "message": "\u003e As Edwin mentioned, this would presumably get a mention in the release notes.\n\nI updated prolog-cookbook.txt but there are currently no 2.13 release notes.",
      "parentUuid": "8580e214_67fdd292",
      "range": {
        "startLine": 7,
        "startChar": 14,
        "endLine": 7,
        "endChar": 63
      },
      "revId": "ee002b1eb729f0b648de15c6e0c82561001d6094",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45feeabd_45d6aa1b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-12-16T02:05:48Z",
      "side": 1,
      "message": "Initial release notes for 2.13 are here:\n\nhttps://gerrit-review.googlesource.com/#/c/72488/",
      "parentUuid": "45d50a32_cdc9a980",
      "range": {
        "startLine": 7,
        "startChar": 14,
        "endLine": 7,
        "endChar": 63
      },
      "revId": "ee002b1eb729f0b648de15c6e0c82561001d6094",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c512dad7_69d98549",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-12-16T14:39:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45feeabd_45d6aa1b",
      "range": {
        "startLine": 7,
        "startChar": 14,
        "endLine": 7,
        "endChar": 63
      },
      "revId": "ee002b1eb729f0b648de15c6e0c82561001d6094",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8580e214_c7d2fe24",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-12-14T17:35:24Z",
      "side": 1,
      "message": "(RFC) Another possible solution would be to hard code the order of submit types in the order they make most sense.\n\n    FF only / Merge Always\n    Merge if necessary \n    Rebase if necessary\n    Cherrypick\n\nBy having the Cherrypick type last, we don\u0027t run into problems with revisions being out of date.\nThe same reason puts rebase at the second last order.\nMerge if necessary is a weaker form of both either FF only or Merge Always.\n\nThe FF only and Merge Always are mutually exclusive within one submission though. (They could be resolved if you take topological order into account)",
      "revId": "ee002b1eb729f0b648de15c6e0c82561001d6094",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45726a21_850ac266",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2015-12-14T19:45:50Z",
      "side": 1,
      "message": "Suppose we put cherry-pick last. Consider the following sequence of commits:\n\n  A -- B\n\nSuppose A has cherry-pick submit type and B has \u0027Merge if necessary\u0027 submit type. What happens when I try to submit B with its ancestors?",
      "parentUuid": "8580e214_c7d2fe24",
      "revId": "ee002b1eb729f0b648de15c6e0c82561001d6094",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45d50a32_edc4656a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-12-15T16:47:50Z",
      "side": 1,
      "message": "Jonathan is right, this is similar to the scenario in the commit description.",
      "parentUuid": "45726a21_850ac266",
      "revId": "ee002b1eb729f0b648de15c6e0c82561001d6094",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5fefe6e_7211389c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/CommitMergeStatus.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2015-12-14T19:45:50Z",
      "side": 1,
      "message": "s/sumitted/submitted/\n\nIt would be hard to act on this if the changes in the batch have the same topic --- the user has to realize they need to unset the topic before they can submit changes one at a time. Maybe we should focus on the \"please contact the server admin\" side of things? E.g. something like\n\n Cannot mix submit types within a batch submitted to a branch\n\n The Prolog submit type rules for this project determined\n that different changes from this batch with the same\n destination branch should be submitted using different\n methods. This is not a supported configuration --- please\n contact your site administrator.\n\n You may submit the changes one at a time in the meantime.",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 57,
        "endChar": 73
      },
      "revId": "ee002b1eb729f0b648de15c6e0c82561001d6094",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45d50a32_0db7b1f9",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/CommitMergeStatus.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-12-15T16:47:50Z",
      "side": 1,
      "message": "Thanks for the suggestion. Done.",
      "parentUuid": "e5fefe6e_7211389c",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 57,
        "endChar": 73
      },
      "revId": "ee002b1eb729f0b648de15c6e0c82561001d6094",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}