{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b901d765_a8e3c0c8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-02-07T10:51:24Z",
      "side": 1,
      "message": "This also affects old schema versions, isn\u0027t it?\nIsn\u0027t it enough to create the new schema version without the assignee fields?",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "ee45d32ee386178492d733ffcf49fa248939f2b9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06425c9a_d480c463",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2023-02-07T11:37:06Z",
      "side": 1,
      "message": "\u003e Isn\u0027t it enough to create the new schema version without the assignee fields?\n\nFrom my understanding\n1) I need to created the new version of schema and mark the field as deleted.\n2) Because of that I have to keep the definition in ChangeField\n3) The definition needs a getter.\n4) The current getter wouldn\u0027t work, because next change is removing Assignee from Change.java\n\nI think this works as intended. If the \"new code\" tries to write \"old schema\" it populates the field that \"old schema\" must have, but since the value no longer makes sense it writes -1.\n\nSo the old schemas can continue to be written in a valid way, if needed\n\nLet me know if I am understanding it wrong? (I don\u0027t really have the best understanding of this part of the code)",
      "parentUuid": "b901d765_a8e3c0c8",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "ee45d32ee386178492d733ffcf49fa248939f2b9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "308fb016_4ec88d08",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-02-07T12:32:41Z",
      "side": 1,
      "message": "We support online upgrades for index schema versions [1,2].\nThis means when you upgrade Gerrit it continues to read from the old schema version, while updates are written to both, the old and new schema version. Then in a background thread it backfills the new schema version with data for old changes (this can take hours or even days). Only after the backfilling is done it switches to reading from the new schema version and the old schema version becomes obsolete.\n\nThis means while the old schema version is still being used, we should not break it. IIUC changing the assignee field as proposed in this change would mean that old changes still have assignees while for newly indexed changes the assignee information is missing (while the old index schema version is still used), which would be inconsistent and may be confusing. I don\u0027t know, maybe this could be acceptable if we document this properly?\n\nUsually we never change getters of existing fields while there is still a schema version that uses the field. E.g. if a getter would need to be changed, we rather add a new field with a new getter that is used from the new schema version, while the old field stays untouched.\n\nThe usual way how we make such a change is:\n1. Add the new schema version\n2. Make a Gerrit release\n3. Note in the release notes that this is a mandatory release if online reindexing is used (i.e. if this is release N, users upgrading from release \u003cN must upgrade to release N, before they can upgrade to release \u003eN, e.g. a direct upgrade from release \u003cN to a release \u003eN is not possible).\n4. Drop all code for the old schema versions in the next release.\n\n[1] https://gerrit.googlesource.com/gerrit/+/refs/heads/master/java/com/google/gerrit/server/index/OnlineUpgrader.java\n[2] https://gerrit.googlesource.com/gerrit/+/refs/heads/master/java/com/google/gerrit/server/index/OnlineReindexer.java",
      "parentUuid": "06425c9a_d480c463",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "ee45d32ee386178492d733ffcf49fa248939f2b9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "385d44dd_52a417b2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2023-02-07T15:40:51Z",
      "side": 1,
      "message": "Updated change description to clarify, why it\u0027s fine to replace the getter with NO_ASSIGNEE.\n\nIn essence, previous changes in the stack of changes already remove the functionality of querying and writing assignee. The reindexing would only ever write NO_ASSIGNEE anyway, because assignee will no longer be read from the notedb after https://gerrit-review.git.corp.google.com/c/gerrit/+/357459/4 . Therefore we don\u0027t need a separate release for the index migration in this case.",
      "parentUuid": "308fb016_4ec88d08",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "ee45d32ee386178492d733ffcf49fa248939f2b9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab67a973_59ff4dd2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-02-07T16:05:02Z",
      "side": 1,
      "message": "Did you forget to upload the new patch set? I don\u0027t see the updated commit message.",
      "parentUuid": "385d44dd_52a417b2",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "ee45d32ee386178492d733ffcf49fa248939f2b9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "792f14e1_a6d9d737",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1148215
      },
      "writtenOn": "2023-02-07T16:08:05Z",
      "side": 1,
      "message": "Right, sorry. Forgot to push",
      "parentUuid": "ab67a973_59ff4dd2",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "ee45d32ee386178492d733ffcf49fa248939f2b9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebcda7b5_4ee9ab99",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-02-08T07:05:53Z",
      "side": 1,
      "message": "Thanks for the update!",
      "parentUuid": "792f14e1_a6d9d737",
      "range": {
        "startLine": 10,
        "startChar": 20,
        "endLine": 11,
        "endChar": 12
      },
      "revId": "ee45d32ee386178492d733ffcf49fa248939f2b9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}