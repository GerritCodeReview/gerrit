{
  "comments": [
    {
      "key": {
        "uuid": "2f8b84c9_61c26a57",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-09-25T06:36:48Z",
      "side": 1,
      "message": "Here is explained how it is used for load-balancing the ES requests: [1].\n\n* [1] https://risdenk.github.io/2017/12/24/elasticsearch-java-high-level-rest-client-scroll-api-load-balancer.html",
      "revId": "ee4b09691ee3788fc21ae23903170d2fbdc11106",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1863fa08_2d25b09e",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticRestClientProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-09-25T06:36:48Z",
      "side": 1,
      "message": "My point in Jacek\u0027s review was to adapt the endpoint we provide to include leading slash. In this example, if we say that:\n\n  Request request \u003d new Request(\n    \"GET\",  \n    \"/\");\n\nas specified in the documentation: [1].\n\nAlso I don\u0027t see with that approach, how you can avoid that double slashes are used? Say we would accidentally change this line to:\n\n  new Request(\"GET\", \"/\")\n\nand in addition call builder.setPathPrefix(\"/\"). Wouldn\u0027t that mean that we would add double slash for that request?\n\nCan we just take care, that all endpoints are prefxied with \"/foo\" wen we build Request instance? We do the same in gerrit core, isn\u0027t it? Why look for a different approach constructing ES endpoints?\n\n* [1] https://www.elastic.co/guide/en/elasticsearch/client/java-rest/master/java-rest-low-usage-requests.html#java-rest-low-usage-requests",
      "range": {
        "startLine": 110,
        "startChar": 48,
        "endLine": 110,
        "endChar": 70
      },
      "revId": "ee4b09691ee3788fc21ae23903170d2fbdc11106",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d1a23ee_bc57e51b",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticRestClientProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2018-09-25T06:41:55Z",
      "side": 1,
      "message": "This is what I was heading towards with [1] before I found this pathPrefix option.\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/197052",
      "parentUuid": "1863fa08_2d25b09e",
      "range": {
        "startLine": 110,
        "startChar": 48,
        "endLine": 110,
        "endChar": 70
      },
      "revId": "ee4b09691ee3788fc21ae23903170d2fbdc11106",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc7c4e9b_736d0e55",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticRestClientProvider.java",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-09-25T06:44:37Z",
      "side": 1,
      "message": "I prefer the approach in https://gerrit-review.googlesource.com/c/gerrit/+/197052.",
      "parentUuid": "2d1a23ee_bc57e51b",
      "range": {
        "startLine": 110,
        "startChar": 48,
        "endLine": 110,
        "endChar": 70
      },
      "revId": "ee4b09691ee3788fc21ae23903170d2fbdc11106",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}