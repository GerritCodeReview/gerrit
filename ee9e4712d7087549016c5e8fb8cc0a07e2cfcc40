{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "373f6748_42ec792f",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-09-14T13:20:48Z",
      "side": 1,
      "message": "Why flex?\n\nBe aware that you have to carefully check that children of flex are block and not inline. So if you want to keep flex, then \u003cgr-autocomplete\u003e has to become `block` or needs a \u003cdiv\u003e wrapper.",
      "revId": "ee9e4712d7087549016c5e8fb8cc0a07e2cfcc40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a4af417_8ec7a58f",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-09-14T14:08:47Z",
      "side": 1,
      "message": "Can you provide a source for that? My understanding is that parent flex controls this for its children.",
      "parentUuid": "373f6748_42ec792f",
      "revId": "ee9e4712d7087549016c5e8fb8cc0a07e2cfcc40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2088110f_84f3e181",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2022-09-14T14:45:06Z",
      "side": 1,
      "message": "It was easiest how to put it to one line. Whole host is already inline-flex. Do you have idea for different approach? Should I make gr-buttons inline box?\n\nYes, Gr-autocomplete become inline-block. Do you think there can be issue with that?",
      "parentUuid": "1a4af417_8ec7a58f",
      "revId": "ee9e4712d7087549016c5e8fb8cc0a07e2cfcc40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75ef2ea3_e5b6741c",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-09-14T17:36:23Z",
      "side": 1,
      "message": "What I mean is that components like \u003cgr-button\u003e, \u003cgr-icon\u003e and a lot of others are `display:inline-block` by default. And the default for web components is `display:inline`. You cannot expect them all to \"just work\" when using `display:block` on them. So you have to be careful of that.\n\nBut using such components as direct children of a `display:flex` parent makes the situation even worse, because the browser will force the outer display type for direct children to be `block`, no matter what the css rule says. Here is an example: https://imgur.com/a/QJXXEhG. The `Style` of `\u003cgr-button\u003e` is clearly `display:inline-block`, but `Computed` is `display:block`.\n\nThis can result in issues with vertical positioning, which become extremely hard to debug.\n\nBut of course, `display:block` might not be a problem at all. My recommendation is just to be explicit about it and make sure you understand what you are doing. So instead of letting the browser making a forced display conversion, write down the `display:block` css yourself. Or (I think I prefer that) wrap the component in a `\u003cdiv\u003e`.\n\nAlso, when you want to position elements next to each other, then you can also just use `display:inline*` for all children. The major difference is that vertical alignment and wrapping works differently.",
      "parentUuid": "2088110f_84f3e181",
      "revId": "ee9e4712d7087549016c5e8fb8cc0a07e2cfcc40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7dc037b0_83a3f58d",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2022-09-14T17:46:36Z",
      "side": 1,
      "message": "Thanks for explanation. I didn\u0027t know so much about it. I changed children to inline-block.",
      "parentUuid": "75ef2ea3_e5b6741c",
      "revId": "ee9e4712d7087549016c5e8fb8cc0a07e2cfcc40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfcad4fe_7c453485",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1013302
      },
      "writtenOn": "2022-09-14T13:20:48Z",
      "side": 1,
      "message": "I am not sure I like the swapped buttons, but don\u0027t feel strongly about it. Maybe we could actually make \"SET TOPIC\" primary?",
      "revId": "ee9e4712d7087549016c5e8fb8cc0a07e2cfcc40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1d72572_2fcaedcd",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-label/gr-editable-label.ts",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1085182
      },
      "writtenOn": "2022-09-14T14:45:06Z",
      "side": 1,
      "message": "Good idea!",
      "parentUuid": "dfcad4fe_7c453485",
      "revId": "ee9e4712d7087549016c5e8fb8cc0a07e2cfcc40",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}