{
  "comments": [
    {
      "key": {
        "uuid": "99cf5447_ec63ab0b",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 4
      },
      "lineNbr": 969,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-06-03T13:39:29Z",
      "side": 1,
      "message": "Do we want to allow scheduling this at such granularity?",
      "range": {
        "startLine": 968,
        "startChar": 0,
        "endLine": 969,
        "endChar": 27
      },
      "revId": "eec4698e107bceaefd32a690afec6ba7164fc3f5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1959a445_a88ffbfc",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 4
      },
      "lineNbr": 969,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2015-06-03T13:42:11Z",
      "side": 1,
      "message": "I doubt that this granularity will be ever needed, but it\u0027s already supported by the scheduling framework which also handles the scheduling of the Git garbage collection.",
      "parentUuid": "99cf5447_ec63ab0b",
      "range": {
        "startLine": 968,
        "startChar": 0,
        "endLine": 969,
        "endChar": 27
      },
      "revId": "eec4698e107bceaefd32a690afec6ba7164fc3f5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b93ed8ea_3db76f2a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/change/ChangeCleanupRunner.java",
        "patchSetId": 4
      },
      "lineNbr": 126,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2015-06-03T14:03:04Z",
      "side": 1,
      "message": "this could be simplified by using OneOffRequestContext:\n\n  private final OneOffRequestContext oneOffRequestContext;\n  private final AbandonUtil abandonUtil;\n\n  @Inject\n  ChangeCleanupRunner(\n      OneOffRequestContext oneOffRequestContext,\n      AbandonUtil abandonUtil) {\n    this.oneOffRequestContext \u003d oneOffRequestContext;\n    this.abandonUtil \u003d abandonUtil;\n  }\n\n  @Override\n  public void run() {\n    log.info(\"Running change cleanups.\");\n    try (ManualRequestContext ctx \u003d oneOffRequestContext.open()){\n      abandonUtil.abandonInactiveOpenChanges();\n    } catch (OrmException e) {\n      log.error(\"Failed to cleanup changes.\", e);\n    }\n  }",
      "range": {
        "startLine": 101,
        "startChar": 4,
        "endLine": 126,
        "endChar": 5
      },
      "revId": "eec4698e107bceaefd32a690afec6ba7164fc3f5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}