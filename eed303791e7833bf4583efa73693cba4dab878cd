{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "66eb2629_2687b9cb",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoadException.java",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-01-29T08:42:50Z",
      "side": 1,
      "message": "Why do we need to add a new exception? This is caught by the cache framework, right? Wouldn\u0027t an IOException or internal error do?",
      "revId": "eed303791e7833bf4583efa73693cba4dab878cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb58b5fb_4f1ca0a9",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoadException.java",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-01-29T12:13:50Z",
      "side": 1,
      "message": "Yes. Any checked exception that is thrown inside the cache loader is caught by the cache framework and wrapped in an ExecutionException.\n\nI removed this class and used IOException instead.",
      "parentUuid": "66eb2629_2687b9cb",
      "revId": "eed303791e7833bf4583efa73693cba4dab878cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23895de9_cc84d1f8",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoadException.java",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-01-29T08:42:50Z",
      "side": 1,
      "message": "I don\u0027t think we need this. IIRC it was (only?) David P having set up his IDE to want this.",
      "revId": "eed303791e7833bf4583efa73693cba4dab878cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5a7b5ed_71b13c6f",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoadException.java",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-01-29T12:13:50Z",
      "side": 1,
      "message": "Thanks for the info. I removed this class anyway.",
      "parentUuid": "23895de9_cc84d1f8",
      "revId": "eed303791e7833bf4583efa73693cba4dab878cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d8d81a1_cd3c6106",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoader.java",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-01-29T08:42:50Z",
      "side": 1,
      "message": "Wouldn\u0027t this be an internal error?",
      "revId": "eed303791e7833bf4583efa73693cba4dab878cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2aab5d7b_bcf9224a",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoader.java",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-01-29T12:13:50Z",
      "side": 1,
      "message": "Ye. Comments ranges {startLine, endLine} stored in the comments metadata in NoteDb are expected to fall within the file boundaries.\n\nReplaced this with a IOException. Also let the exceptions propagate, they will be caught by the cache framework which will wrap and throw as ExecutionException, then the caller of the cache (CommentContextCacheImpl) will catch this and throw a StorageException.",
      "parentUuid": "1d8d81a1_cd3c6106",
      "revId": "eed303791e7833bf4583efa73693cba4dab878cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e17e3067_7ee62f9b",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoader.java",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-01T12:56:24Z",
      "side": 1,
      "message": "The removal of the CommentContextLoadException LGTM. But I wonder if it isn\u0027t confusing to the reader when an IOException is thrown by a method that doesn\u0027t do any I/O. Would e.g. CanonicalException.internal() be clearer? The problem could be that the caller retries an I/O exception, which in this case won\u0027t help.\n\nThere\u0027s also UnprocessableEntityException, not sure if that is applicable here (it seems to be intended for the REST API only).",
      "parentUuid": "2aab5d7b_bcf9224a",
      "revId": "eed303791e7833bf4583efa73693cba4dab878cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ea2b344_8428b992",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoader.java",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-01T13:39:19Z",
      "side": 1,
      "message": "I agree on changing IOException. UnprocessableEntityException has the javadoc:\n`Resource referenced in the request body is not found`\n\nWhich is not exactly the case here. I also thought of \"StorageException\" but this one is used for any read/write error in the storage layer, so it\u0027s the closest to the scenario here.\n\nI changed it to UnprocessableEntityException, it\u0027s better than IOException anyway.",
      "parentUuid": "e17e3067_7ee62f9b",
      "revId": "eed303791e7833bf4583efa73693cba4dab878cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deafade6_dcc58c3c",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoader.java",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-02T11:32:34Z",
      "side": 1,
      "message": "UnprocessableEntityException is declared to be used only for the REST API. Did you verify that this applies here, i.e. that it will not surface outside of the REST API? Why not CanonicalException.internal()?",
      "parentUuid": "3ea2b344_8428b992",
      "revId": "eed303791e7833bf4583efa73693cba4dab878cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa4de4d2_d7e931db",
        "filename": "java/com/google/gerrit/server/comment/CommentContextLoader.java",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-02T11:46:26Z",
      "side": 1,
      "message": "CanonicalException.internal() is only defined in google3. Right now, the comment context is called from ListComments -\u003e CommentJson so on the rest API path, but that can change in the future if other parts of the code base wanted to retrieve the comment context.\n\nI\u0027m more inclined to use the StorageException, or create our own. Javadocs for StorageException say:\n```\n/**\n * Any read/write error in a storage layer.\n *\n * \u003cp\u003eThis includes but is not limited to:\n *\n * \u003cul\u003e\n *   \u003cli\u003eNoteDb exceptions\n *   \u003cli\u003eSecondary index exceptions\n *   \u003cli\u003e{@code AccountPatchReviewStore} exceptions\n *   \u003cli\u003eWrapped JGit exceptions\n *   \u003cli\u003eOther wrapped {@code IOException}s\n * \u003c/ul\u003e\n */\n```\n\nOur use case here can be considered a NoteDb exception, so that should do it. WDYT?",
      "parentUuid": "deafade6_dcc58c3c",
      "revId": "eed303791e7833bf4583efa73693cba4dab878cd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}