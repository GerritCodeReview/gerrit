{
  "comments": [
    {
      "key": {
        "uuid": "d065072b_3ac9393c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/VisibleRefFilter.java",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-09-10T13:10:04Z",
      "side": 1,
      "message": "Should admin be able to see all user refs so that they are investigate any problems?",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 46
      },
      "revId": "ef8166296001db89104fce9ad9cf4b5d2cd88ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "106cff13_bcb389d2",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/VisibleRefFilter.java",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-09-10T13:11:16Z",
      "side": 1,
      "message": "*they are able to investigate...",
      "parentUuid": "d065072b_3ac9393c",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 46
      },
      "revId": "ef8166296001db89104fce9ad9cf4b5d2cd88ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d065072b_7ac3b11b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/VisibleRefFilter.java",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-10T13:17:17Z",
      "side": 1,
      "message": "I thought about that but figured that they would probably have direct access to the git repos. Do you think a significant fraction of admins would not?\n\nAlso I don\u0027t think admins have automatic read access to all refs/changes refs, do they?\n\nAlthough RefControl.isVisible does hard-code access for InternalUser, maybe we should do that here? (I don\u0027t think we want to go all the way to creating a RefControl for each of these refs.)",
      "parentUuid": "106cff13_bcb389d2",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 46
      },
      "revId": "ef8166296001db89104fce9ad9cf4b5d2cd88ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "106cff13_bc57098b",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/VisibleRefFilter.java",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-09-10T13:53:43Z",
      "side": 1,
      "message": "\u003e I thought about that but figured that they would probably \n \u003e have direct access to the git repos. Do you think a \n \u003e significant fraction of admins would not?\n\nAt least at SAP we will have Gerrit servers where Gerrit admins do not have direct access to the git repos.\n\n \u003e Also I don\u0027t think admins have automatic read access to \n \u003e all refs/changes refs, do they?\n\nAgreed, admins should not have read access on the user refs by default, but it would be nice if it is assignable. Maybe this is something similar to drafts which are by default also user private, but then there is a View Drafts permission which can be assigned.",
      "parentUuid": "d065072b_7ac3b11b",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 46
      },
      "revId": "ef8166296001db89104fce9ad9cf4b5d2cd88ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d065072b_fa82217a",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/VisibleRefFilter.java",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-10T15:52:02Z",
      "side": 1,
      "message": "I think a global capability is an ok solution. How general should it be? \"View metadata\"? Or just reuse \"Query database\" for this purpose?\n\nAlso, do you think it\u0027s a problem that we don\u0027t respect Read on refs/* for this? I think Read on refs/* is like read on all the \"classical\" Gerrit refs. But the line between classical/metadata refs does seem a bit arbitrary, since the former includes refs/meta/config...",
      "parentUuid": "106cff13_bc57098b",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 46
      },
      "revId": "ef8166296001db89104fce9ad9cf4b5d2cd88ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d065072b_fa34e112",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/VisibleRefFilter.java",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-09-10T17:09:12Z",
      "side": 1,
      "message": "I\u0027m undecided if it\u0027s better to handle this via a global capability or via Read on \u0027refs/*\u0027 / \u0027refs/users/*\u0027.\n\nRespecting the Read access right would probably be least surprising, but I can also follow the argument that this is an internal ref, which speaks more in favour of a global capability. \n\nIf we go for a global capability, \u0027View Metadata\u0027 sounds more suitable to me, but I wouldn\u0027t introduce it if this is the only need for it. Reusing \u0027Query Database\u0027 would be fine with me.",
      "parentUuid": "d065072b_fa82217a",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 46
      },
      "revId": "ef8166296001db89104fce9ad9cf4b5d2cd88ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d065072b_1dcef743",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/git/VisibleRefFilter.java",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-09-11T10:42:27Z",
      "side": 1,
      "message": "In an ideal world we would both reuse \"Query Database\" and rename it to something more generic, but I guess that\u0027s not really an option since capabilities are referred to by name in project.config...\n\nReasons not to respect Read:\n\n* Admins might not know that this metadata even exists, so might be surprised that possibly private user data is exposed.\n* Technically, it is much more expensive to do the permissions check. This is less of an issue for edits, of which there will be relatively few in a repository. But if we were going to do this for edit refs we would probably need to do it for refs/changes/YZ/XYZ/meta...and that would be expensive. I spent significant time optimizing the string parsing code to keep ls-remote time down when we turn on notedb; respecting normal read permissions would make ls-remote time potentially much worse.\n* Even prior to this change, we do not properly respect Read on refs/changes/*. If we extract a Change.Id from a ref, we check if the change is readable, and do not reach the else clause below where we actually create a RefControl for the ref.\n\nRight now I am leaning towards using Query Database. I can\u0027t think of a scenario where an admin should have access to one kind of code review metadata (reviewdb data) but not another (notedb/edits).",
      "parentUuid": "d065072b_fa34e112",
      "range": {
        "startLine": 101,
        "startChar": 8,
        "endLine": 101,
        "endChar": 46
      },
      "revId": "ef8166296001db89104fce9ad9cf4b5d2cd88ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}