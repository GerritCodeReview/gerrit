{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "24f93e7a_99e59d2e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-06-17T07:59:32Z",
      "side": 1,
      "message": "Friendly ping.",
      "revId": "f00f598692f8cbd6b5f20ca158555f1439439a4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37d8ff43_18987d23",
        "filename": "java/com/google/gerrit/server/query/change/EqualsMaxLabelVotePredicate.java",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-06-21T12:05:11Z",
      "side": 1,
      "message": "I think this doesn\u0027t work.\n\nIIUC, this is the value that is passed to the index to do the matching on the LABEL field. Since the change documents in the index never have \"MAX\" as value, this predicate will never match any index document and hence the match / matchValue method will never be invoked.\n\nTo make this work you would need to store MAX as a value for the LABEL field in the change index, at the moment when the change is being indexed.",
      "range": {
        "startLine": 23,
        "startChar": 32,
        "endLine": 23,
        "endChar": 60
      },
      "revId": "f00f598692f8cbd6b5f20ca158555f1439439a4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a92e152f_d3928ce9",
        "filename": "java/com/google/gerrit/server/query/change/LabelPredicate.java",
        "patchSetId": 3
      },
      "lineNbr": 176,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-06-15T07:49:00Z",
      "side": 1,
      "message": "Would it be possible to just use EqualsNumericLabelVotePredicate for these two cases?\n\nJust lookup the label type and then for MAX create new EqualsNumericLabelVotePredicate(args, label, labelType.getMaxPositive(), account) and for MIN create new EqualsNumericLabelVotePredicate(args, label, labelType.getMaxNegative(), account).\n\nThen EqualsNumericLabelVotePredicate could be named EqualsLabelVotePredicate and EqualsAnyLabelVotePredicate could be renamed to AnyLabelVotePredicate.\n\nI would then also change this method to \n\n  private static Predicate\u003cChangeData\u003e createEqualsLabelPredicate(\n      Args args, String label, VoteType voteType, short expVal, Account.Id account)\n\nand let the caller do the creation of AnyLabelVotePredicate.\n\nWDYT?",
      "range": {
        "startLine": 173,
        "startChar": 2,
        "endLine": 176,
        "endChar": 69
      },
      "revId": "f00f598692f8cbd6b5f20ca158555f1439439a4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3eaf7c01_59a715cf",
        "filename": "java/com/google/gerrit/server/query/change/LabelPredicate.java",
        "patchSetId": 3
      },
      "lineNbr": 176,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-06-15T08:17:05Z",
      "side": 1,
      "message": "\u003e Would it be possible to just use EqualsNumericLabelVotePredicate for these two cases?\n\nI considered using that option before implementing the Max/Min predicates, but the logic turned out to be complex:\n\nIn EqualsLabelPredicate#match, we use the project cache to get a ProjectState (for a specific project, depending on the ChangeData that is passed as input param), then we use ProjectState to get the label type. At the time we create the predicate (here), we don\u0027t know which ChangeData (and/or project) to lookup.\n\nWDYT? Could there be a shortcut to get label types?",
      "parentUuid": "a92e152f_d3928ce9",
      "range": {
        "startLine": 173,
        "startChar": 2,
        "endLine": 176,
        "endChar": 69
      },
      "revId": "f00f598692f8cbd6b5f20ca158555f1439439a4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6489803a_0b6861ec",
        "filename": "java/com/google/gerrit/server/query/change/LabelPredicate.java",
        "patchSetId": 3
      },
      "lineNbr": 176,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-06-21T12:05:11Z",
      "side": 1,
      "message": "Ah, I see. The problem is that labelType can only be looked up when we are inside the match method (where we know the change and hence the project).\n\nStill I think this can be written cleaner. My attempt to do so is here:\nhttps://gerrit-review.googlesource.com/c/gerrit/+/309804\n\nPlease note that it has the same issue as commented at:\nhttps://gerrit-review.googlesource.com/c/gerrit/+/309067/3/java/com/google/gerrit/server/query/change/EqualsMaxLabelVotePredicate.java\n\nSo also my change doesn\u0027t work yet.",
      "parentUuid": "3eaf7c01_59a715cf",
      "range": {
        "startLine": 173,
        "startChar": 2,
        "endLine": 176,
        "endChar": 69
      },
      "revId": "f00f598692f8cbd6b5f20ca158555f1439439a4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "170ee8e5_c2cf83f3",
        "filename": "javatests/com/google/gerrit/acceptance/api/change/ChangeIT.java",
        "patchSetId": 3
      },
      "lineNbr": 3997,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-06-21T12:05:11Z",
      "side": 1,
      "message": "There should also be query tests in AbstractQueryChangesTest.\n\nAdding these tests reveals the issue that I pointed out at:\nhttps://gerrit-review.googlesource.com/c/gerrit/+/309067/3/java/com/google/gerrit/server/query/change/EqualsMaxLabelVotePredicate.java",
      "revId": "f00f598692f8cbd6b5f20ca158555f1439439a4f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}