{
  "comments": [
    {
      "key": {
        "uuid": "ef85d339_6c866763",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 6
      },
      "lineNbr": 723,
      "author": {
        "id": 1024777
      },
      "writtenOn": "Feb 6, 2017 12:21:12 PM",
      "side": 1,
      "message": "I wonder if it makes any sense to consider moving this to the server side.\nSame for the rest of the changes.",
      "revId": "f0e8f345f0f44d814d02c279bb582f971d9b5343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d52a1f75_cb338d60",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 6
      },
      "lineNbr": 723,
      "author": {
        "id": 1030207
      },
      "writtenOn": "Feb 6, 2017 12:22:26 PM",
      "side": 1,
      "message": "@Kasper is working on adding the range via the server when a comment is POSTed. I\u0027m not sure that this part (for ones that don\u0027t have it already) can be added, unless we can do a one time job.",
      "parentUuid": "ef85d339_6c866763",
      "revId": "f0e8f345f0f44d814d02c279bb582f971d9b5343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bf1cf42_2c0e37ad",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 6
      },
      "lineNbr": 723,
      "author": {
        "id": 1024777
      },
      "writtenOn": "Feb 6, 2017 12:30:08 PM",
      "side": 1,
      "message": "I feel the answer is more of \u0027yes\u0027, than \u0027no\u0027.\nIs there a related bug? Should this code be removed when the server-side change lands?\nPlease add a TODO.",
      "parentUuid": "d52a1f75_cb338d60",
      "revId": "f0e8f345f0f44d814d02c279bb582f971d9b5343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7406f4d4_82175510",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 6
      },
      "lineNbr": 723,
      "author": {
        "id": 1030207
      },
      "writtenOn": "Feb 6, 2017 12:46:51 PM",
      "side": 1,
      "message": "The TODO is on line 739 for part of it. Are you suggesting we ask someone on the backend team to backfill data for us (not just add it going forward)? If we do that, we can remove this.",
      "parentUuid": "2bf1cf42_2c0e37ad",
      "revId": "f0e8f345f0f44d814d02c279bb582f971d9b5343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24aad5a3_b03f1a98",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 6
      },
      "lineNbr": 723,
      "author": {
        "id": 1029297
      },
      "writtenOn": "Feb 6, 2017 12:51:26 PM",
      "side": 1,
      "message": "Pertinent Monorail bug is here:\nhttps://bugs.chromium.org/p/gerrit/issues/detail?id\u003d5462\n\nThis change is a temporary fix, the server side change will be a permanent one.",
      "parentUuid": "7406f4d4_82175510",
      "revId": "f0e8f345f0f44d814d02c279bb582f971d9b5343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b2750f9_57fab80f",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 6
      },
      "lineNbr": 723,
      "author": {
        "id": 1026519
      },
      "writtenOn": "Feb 6, 2017 1:21:36 PM",
      "side": 1,
      "message": "FWIW, I think it\u0027s a fine approach to infer the range on the client.",
      "parentUuid": "24aad5a3_b03f1a98",
      "revId": "f0e8f345f0f44d814d02c279bb582f971d9b5343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8c5fb78_83551acb",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 6
      },
      "lineNbr": 723,
      "author": {
        "id": 1029297
      },
      "writtenOn": "Feb 6, 2017 3:14:58 PM",
      "side": 1,
      "message": "The code for inferring the range will probably always stay, the code that will be added on the backend will ensure that the range field of every comment mirrors that of its\u0027 parent.",
      "parentUuid": "3b2750f9_57fab80f",
      "revId": "f0e8f345f0f44d814d02c279bb582f971d9b5343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f107b43_b9c7c2f4",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 6
      },
      "lineNbr": 727,
      "author": {
        "id": 1026519
      },
      "writtenOn": "Feb 6, 2017 1:21:36 PM",
      "side": 1,
      "message": "Nit: if you use a filter, it will keep scanning the list, even after it\u0027s found the first match. This would be more efficient as a for with a break.\n\nfor (var i \u003d 0; i \u003c comments.length; i++) {\n  if (comments[i].id \u003d\u003d\u003d comment.in_reply_to) {\n    comment.range \u003d comments[i].range;\n    break;\n  }\n}",
      "range": {
        "startLine": 725,
        "startChar": 10,
        "endLine": 727,
        "endChar": 22
      },
      "revId": "f0e8f345f0f44d814d02c279bb582f971d9b5343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82ae9982_b601a86e",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 6
      },
      "lineNbr": 727,
      "author": {
        "id": 1030207
      },
      "writtenOn": "Feb 6, 2017 1:59:19 PM",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f107b43_b9c7c2f4",
      "revId": "f0e8f345f0f44d814d02c279bb582f971d9b5343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "817f928b_c31516e0",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 6
      },
      "lineNbr": 742,
      "author": {
        "id": 1026519
      },
      "writtenOn": "Feb 6, 2017 1:21:36 PM",
      "side": 1,
      "message": "Nit: This comment doesn\u0027t really explain why recursion isn\u0027t used. Like, there isn\u0027t anything wrong with recursion in general, but in this case it would be less efficient/simple. Maybe something like...\n\n  // Sort comments by date so that parent ranges\n  // can be propagated in a single pass.\n\n...?",
      "range": {
        "startLine": 742,
        "startChar": 8,
        "endLine": 742,
        "endChar": 70
      },
      "revId": "f0e8f345f0f44d814d02c279bb582f971d9b5343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8fb4b09_50691a97",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 6
      },
      "lineNbr": 742,
      "author": {
        "id": 1030207
      },
      "writtenOn": "Feb 6, 2017 1:59:19 PM",
      "side": 1,
      "message": "Done",
      "parentUuid": "817f928b_c31516e0",
      "revId": "f0e8f345f0f44d814d02c279bb582f971d9b5343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b38931f1_51245d1a",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 6
      },
      "lineNbr": 746,
      "author": {
        "id": 1026519
      },
      "writtenOn": "Feb 6, 2017 1:21:36 PM",
      "side": 1,
      "message": "Why is the function declared separately if this is the only place it\u0027s used? I suspect we can just declare addCommentRange as an anonymous function here (or even as a vanilla for loop).",
      "range": {
        "startLine": 746,
        "startChar": 25,
        "endLine": 746,
        "endChar": 40
      },
      "revId": "f0e8f345f0f44d814d02c279bb582f971d9b5343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c6f26f2_251f4913",
        "filename": "polygerrit-ui/app/elements/shared/gr-rest-api-interface/gr-rest-api-interface.js",
        "patchSetId": 6
      },
      "lineNbr": 746,
      "author": {
        "id": 1030207
      },
      "writtenOn": "Feb 6, 2017 1:59:19 PM",
      "side": 1,
      "message": "Done",
      "parentUuid": "b38931f1_51245d1a",
      "revId": "f0e8f345f0f44d814d02c279bb582f971d9b5343",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}