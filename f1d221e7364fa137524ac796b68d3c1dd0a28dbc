{
  "comments": [
    {
      "key": {
        "uuid": "fb485fa2_1b3f1b09",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-11-23T15:13:59Z",
      "side": 1,
      "message": "It this documented somewhere? Please include a link to that documentation in the commit message.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "f1d221e7364fa137524ac796b68d3c1dd0a28dbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b3f57ea_dd548b4c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-11-24T01:06:30Z",
      "side": 1,
      "message": "What level of documentation are you looking for?\n\nThe javadoc of readFully [1] says \"Read the entire byte array into memory, or throw an exception\", while readWholeStream\u0027s [2] says \"Read an entire input stream into memory\".  Is that enough, or were you looking for some documentation that describes the specific use case we\u0027ve encountered here?\n\nBTW is there any specific reason to use JGit\u0027s API here rather than the standard Java IO APIs? As far as I can see we\u0027re not doing anything with git repositories in this code.  Perhaps this is something that should be followed up on master, rather than a stable branch, though.\n\n\n[1] http://download.eclipse.org/jgit/docs/jgit-2.0.0.201206130900-r/apidocs/org/eclipse/jgit/util/IO.html#readFully(java.io.InputStream, byte[], int, int)\n\n[2] http://download.eclipse.org/jgit/docs/jgit-2.0.0.201206130900-r/apidocs/org/eclipse/jgit/util/IO.html#readWholeStream(java.io.InputStream, int)",
      "parentUuid": "fb485fa2_1b3f1b09",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "f1d221e7364fa137524ac796b68d3c1dd0a28dbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb485fa2_9bbdeb85",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2015-11-24T11:19:28Z",
      "side": 1,
      "message": "It was failing, for instance, when rendering the its-jira documentation and possibly may fail as well with other plugins.\n\nShall we fix it on stable-2.11 as well?",
      "parentUuid": "3b3f57ea_dd548b4c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "f1d221e7364fa137524ac796b68d3c1dd0a28dbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b53e354_f8ba3189",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-11-24T11:24:31Z",
      "side": 1,
      "message": "\u003e What level of documentation are you looking for?\n\nOne which says that JarEntry.getSize() is unreliable and can only be used as a hint.",
      "parentUuid": "3b3f57ea_dd548b4c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "f1d221e7364fa137524ac796b68d3c1dd0a28dbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb485fa2_dbb773a1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2015-11-24T11:28:40Z",
      "side": 1,
      "message": "The Oracle documentation on that method is quite cryptic ... as a matter of fact (see my previous comment) it is just a hint on the final size, because of the compression applied on the jar itself.",
      "parentUuid": "9b53e354_f8ba3189",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "f1d221e7364fa137524ac796b68d3c1dd0a28dbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb485fa2_3b5bf739",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-11-24T12:01:15Z",
      "side": 1,
      "message": "Reading the Oracle documentation [1] it says that it is uncompressed size. It doesn\u0027t say that the returned value is just a hint. This is why I asked.\n\n[1] http://docs.oracle.com/javase/7/docs/api/java/util/zip/ZipEntry.html#getSize()",
      "parentUuid": "fb485fa2_dbb773a1",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "f1d221e7364fa137524ac796b68d3c1dd0a28dbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b53e354_988215b5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2015-11-24T12:09:06Z",
      "side": 1,
      "message": "Yes, but the problem is what it doesn\u0027t say :-( it seems that the size is the one declared in the JAR header, that could be different from the actual size of the uncompressed file.\n\nHave you tried to display the its-jira.jar documentation? Does it work for you without this patch?",
      "parentUuid": "fb485fa2_3b5bf739",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "f1d221e7364fa137524ac796b68d3c1dd0a28dbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b53e354_1845654a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2015-11-24T14:58:35Z",
      "side": 1,
      "message": "I trust that you tried and that it doesn\u0027t work. Just wanted to additionally document what you claim, if possible. If not, you can tell that this is based on your observation.",
      "parentUuid": "9b53e354_988215b5",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "f1d221e7364fa137524ac796b68d3c1dd0a28dbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bafab61_a69e2620",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2015-11-25T06:23:26Z",
      "side": 1,
      "message": "\u003e Shall we fix it on stable-2.11 as well?\n\nYes, please move it to stable-2.11",
      "parentUuid": "fb485fa2_9bbdeb85",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "f1d221e7364fa137524ac796b68d3c1dd0a28dbc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}