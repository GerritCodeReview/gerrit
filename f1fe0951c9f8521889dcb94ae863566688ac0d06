{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "234d1dc1_0342d6c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-10-21T15:30:35Z",
      "side": 1,
      "message": "What are examples of such queries, that use multiple DataSources? I thought we would always go to the index for the results?",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "f1fe0951c9f8521889dcb94ae863566688ac0d06",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cff591c_e86d94a0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1096442
      },
      "writtenOn": "2022-10-22T12:56:17Z",
      "side": 1,
      "message": "Unfortunately there are no operators which are dataSources other than Index in the Core as of now. But we (at Qualcomm) do have operators in plugins which are Datasources.\n\nSuppose there is an operator (say \"foo:bar\") provided by a plugin which is a datasource retuning around 10 changes. On a 3.4 test site against LUCENE which contains ~20K open changes, ~2.8M merged changes, ~1.2M abandoned changes, the performance of,\n\nquery \"foo:bar status:open\"\n  when status:open is datasource: 2.1s, 2.1s, 2.1s\n  when foo:bar is datasource: 0.07s, 0.07s, 0.07s\n\nquery \"foo:bar status:merged\"\n  when status:merged is datasource: 6m49s, 6m38s, 6m34s\n  when foo:bar is datasource: 0.07s, 0.07s, 0.07s\n \nI\u0027ll update this info in the commit message.",
      "parentUuid": "234d1dc1_0342d6c6",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "f1fe0951c9f8521889dcb94ae863566688ac0d06",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e7606ba_75858075",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1118500
      },
      "writtenOn": "2022-10-24T15:19:41Z",
      "side": 1,
      "message": "Thank you for the explanation. This makes sense.\n\nWhen I run FakeQueryChangesLatestIndexVersionTest and FakeQueryChangesPreviousIndexVersionTest, they are failing with the following error:\n\n```\n\ncom.google.gerrit.exceptions.StorageException: No ChangeDataSource: reviewerin:bf211bb3774efeabb399a8cfa076abd922cda78a\n\tat com.google.gerrit.server.query.change.OrSource.read(OrSource.java:45)\n\tat com.google.gerrit.index.query.PaginatingSource.read(PaginatingSource.java:52)\n\tat com.google.gerrit.index.query.AndSource.read(AndSource.java:84)\n\tat com.google.gerrit.index.query.QueryProcessor.query(QueryProcessor.java:293)\n\tat com.google.gerrit.index.query.QueryProcessor.query(QueryProcessor.java:194)\n\tat com.google.gerrit.server.restapi.change.QueryChanges.query(QueryChanges.java:195)\n\tat com.google.gerrit.server.restapi.change.QueryChanges.apply(QueryChanges.java:152)\n\tat com.google.gerrit.server.api.changes.ChangesImpl.get(ChangesImpl.java:149)\n\tat com.google.gerrit.server.api.changes.ChangesImpl$1.get(ChangesImpl.java:124)\n\t\n```\n\nCould you, please, fix it before submitting the change?",
      "parentUuid": "5cff591c_e86d94a0",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 25
      },
      "revId": "f1fe0951c9f8521889dcb94ae863566688ac0d06",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}