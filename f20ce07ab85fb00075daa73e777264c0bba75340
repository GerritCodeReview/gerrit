{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bfe66acf_18256e56",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-05T08:23:40Z",
      "side": 1,
      "message": "I also don\u0027t understand why 4 requests are used.",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15291006_a5cc20c0",
        "filename": "javatests/com/google/gerrit/acceptance/git/AbstractGitOverHttpServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-01-05T00:02:08Z",
      "side": 1,
      "message": "Before changing this from 2 to 4, we should understand why that happened :-O",
      "range": {
        "startLine": 84,
        "startChar": 28,
        "endLine": 84,
        "endChar": 38
      },
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d719e0b6_503f41e0",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-05T08:23:40Z",
      "side": 1,
      "message": "Why 4? I would have expected 3 if testRepo and the server-side project differ only by that one commit created in line 76.\n\n1. /info/refs?service\u003dgit-upload-pack\n2. ls-refs\n3. fetch, finding a common commit and server sending the pack",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "922dbb5c_5c723a90",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2021-01-05T16:41:14Z",
      "side": 1,
      "message": "the jgit packet trace for this test:\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c version 2\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c fetch\u003dshallow\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c server-option\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e peel\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e symrefs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix HEAD\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/tags/\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/heads/\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c peel\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c symrefs\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix HEAD\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/tags/\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/heads/\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 41e2147369f62848119eeec7b18e0f1bdefa2ed2 HEAD symref-target:refs/heads/master\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 41e2147369f62848119eeec7b18e0f1bdefa2ed2 refs/heads/master\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 41e2147369f62848119eeec7b18e0f1bdefa2ed2 HEAD symref-target:refs/heads/master\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 41e2147369f62848119eeec7b18e0f1bdefa2ed2 refs/heads/master\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dfetch\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e no-progress\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e include-tag\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ofs-delta\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e thin-pack\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e want 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e done\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c want 41e2147369f62848119eeec7b18e0f1bdefa2ed2\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c done\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c packfile\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c version 2\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c fetch\u003dshallow\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c server-option\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e peel\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e symrefs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/tags/\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/heads/\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c peel\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c symrefs\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/tags/\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/heads/\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 80958194b5e5e6cd964897200ac0cd171f5e22f8 refs/heads/master\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 80958194b5e5e6cd964897200ac0cd171f5e22f8 refs/heads/master\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dfetch\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e no-progress\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e include-tag\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ofs-delta\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e thin-pack\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e want 80958194b5e5e6cd964897200ac0cd171f5e22f8\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c want 80958194b5e5e6cd964897200ac0cd171f5e22f8\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e acknowledgments\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c acknowledgments\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e done\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c want 80958194b5e5e6cd964897200ac0cd171f5e22f8\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c done\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c packfile",
      "parentUuid": "d719e0b6_503f41e0",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4e7fa48_c45ce101",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-05T17:09:44Z",
      "side": 1,
      "message": "This a clone followed by the fetch.\n\nJust the fetch part, taken apart:\n\nFIRST request:\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nResponse from server upon initial client request.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c version 2\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ls-refs\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c fetch\u003dshallow\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c server-option\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nClient receives it.\n\n\nSECOND request:\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dls-refs\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e peel\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e symrefs\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/tags/\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/heads/\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nClient calls ls-refs refs/tags refs/heads.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dls-refs\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c peel\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c symrefs\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/tags/\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/heads/\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nServer receives it.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 80958194b5e5e6cd964897200ac0cd171f5e22f8 refs/heads/master\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nServer advertises refs/heads/master\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 80958194b5e5e6cd964897200ac0cd171f5e22f8 refs/heads/master\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nClient receives it.\n\nTHIRD request:\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dfetch\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e no-progress\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e include-tag\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ofs-delta\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e thin-pack\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e want 80958194b5e5e6cd964897200ac0cd171f5e22f8\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nClient wants the new master, has the old master\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c want 80958194b5e5e6cd964897200ac0cd171f5e22f8\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nServer receives it\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e acknowledgments\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nServer sends two ACKs. (Really? Client seems to get only one.)\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c acknowledgments\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\n\nClient receives it.\n\nFOURTH request: \n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n\nClient tells server again that it has the ACK\u0027ed id.\n\nNot visible here: it would also have sent again command\u003dfetch, want, and previously sent haves.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nThis line appears to be out-of-order, terminates the server\u0027s reply in the 3rd request above.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e done\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nClient has nothing more to send.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c want 80958194b5e5e6cd964897200ac0cd171f5e22f8\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c done\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nServer receives it.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nServer sends ACK and packfile.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c packfile\n\nClient receives packfile.\n\nSo yes, four requests it is... Would have to cross-check with C git whether this is correct.",
      "parentUuid": "922dbb5c_5c723a90",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f95ed725_ad9076de",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-01-05T19:35:11Z",
      "side": 1,
      "message": "Thanks @Thomas, that is unexpected I think.\n\nThe code does:\n      testRepo.git().fetch().call();\n\nI would expect this to produce a fetch *ONLY* without a clone.\nThere is the draining of the events at the beginning of the method, so the ones associated with the clone of testRepo should not be captured.",
      "parentUuid": "b4e7fa48_c45ce101",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a152d76_9bb0107f",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-05T21:49:10Z",
      "side": 1,
      "message": "Matthias didn\u0027t post the HttpAuditEvents, he posted the debug log, presumably from the whole test run. The test setup performs the clone.",
      "parentUuid": "f95ed725_ad9076de",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd8ad6be_3a6308ef",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-01-05T22:01:07Z",
      "side": 1,
      "message": "BUT there were 4 requests and those are matching what we see in the audit, isn\u0027t it?",
      "parentUuid": "0a152d76_9bb0107f",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3e78cf4_e9506d14",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-06T09:37:31Z",
      "side": 1,
      "message": "Yes, there are 4 for the fetch, both in the debug log and in the http audit.\n\nI thought we had here:\n\n* Upstream repo has one commit\n* Client clones\n* Upstream repo gets another commit on top of the first\n* Client fetches\n\nThat fetch should need 3 HTTP requests, not 4.\n\nThis starts to look like a bug in either the test or in Gerrit.\n\n* In the JGit tests (SmartClientSmartServerTests), I get the expected behavior with just 3 requests. When adapting those tests for protocol V2, the number of requests increased by 1 (for the extra ls-refs), as expected. I even went to the trouble to write exactly the above scenario as a JGit-only test in SmartClientSmartServerTests, and I do get 3 requests.\n* Running that scenario against Github over HTTPS, I get with both C git and with JGit 3 HTTP requests as expected. Here\u0027s the debug log from JGit (against Github), with the upstream being exactly one commit ahead:\n\n2021-01-05 22:54:34 DEBUG main PacketLineIn:207 - git\u003c # service\u003dgit-upload-pack\n2021-01-05 22:54:34 DEBUG main PacketLineIn:182 - git\u003c 0000\n2021-01-05 22:54:34 DEBUG main PacketLineIn:207 - git\u003c version 2\n2021-01-05 22:54:34 DEBUG main PacketLineIn:207 - git\u003c agent\u003dgit/github-gb13cc0c1a7bd\n2021-01-05 22:54:34 DEBUG main PacketLineIn:207 - git\u003c ls-refs\n2021-01-05 22:54:34 DEBUG main PacketLineIn:207 - git\u003c fetch\u003dshallow filter\n2021-01-05 22:54:34 DEBUG main PacketLineIn:207 - git\u003c server-option\n2021-01-05 22:54:34 DEBUG main PacketLineIn:207 - git\u003c object-format\u003dsha1\n2021-01-05 22:54:34 DEBUG main PacketLineIn:182 - git\u003c 0000\n\nServer\u0027s reply to the initial request.\n\nSECOND request:\n\n2021-01-05 22:54:34 DEBUG main PacketLineOut:149 - git\u003e command\u003dls-refs\n2021-01-05 22:54:34 DEBUG main PacketLineOut:149 - git\u003e agent\u003dJGit/5.11.0-SNAPSHOT\n2021-01-05 22:54:34 DEBUG main PacketLineOut:165 - git\u003e 0001\n2021-01-05 22:54:34 DEBUG main PacketLineOut:149 - git\u003e peel\n2021-01-05 22:54:34 DEBUG main PacketLineOut:149 - git\u003e symrefs\n2021-01-05 22:54:34 DEBUG main PacketLineOut:149 - git\u003e ref-prefix refs/tags/\n2021-01-05 22:54:34 DEBUG main PacketLineOut:149 - git\u003e ref-prefix refs/heads/\n2021-01-05 22:54:34 DEBUG main PacketLineOut:184 - git\u003e 0000\n\nClient sends ls-refs refs/tags refs/heads\n\n2021-01-05 22:54:35 DEBUG main PacketLineIn:207 - git\u003c 49bd0af65ee0826e1910e1bac9bdbf06f76f870e refs/heads/master\n2021-01-05 22:54:35 DEBUG main PacketLineIn:182 - git\u003c 0000\n\nServer advertises refs/heads/master\n\nTHIRD request:\n\n2021-01-05 22:54:35 DEBUG main PacketLineOut:149 - git\u003e command\u003dfetch\n2021-01-05 22:54:35 DEBUG main PacketLineOut:149 - git\u003e agent\u003dJGit/5.11.0-SNAPSHOT\n2021-01-05 22:54:35 DEBUG main PacketLineOut:165 - git\u003e 0001\n2021-01-05 22:54:35 DEBUG main PacketLineOut:149 - git\u003e include-tag\n2021-01-05 22:54:35 DEBUG main PacketLineOut:149 - git\u003e ofs-delta\n2021-01-05 22:54:35 DEBUG main PacketLineOut:149 - git\u003e thin-pack\n2021-01-05 22:54:35 DEBUG main PacketLineOut:145 - git\u003e want 49bd0af65ee0826e1910e1bac9bdbf06f76f870e\\n\n2021-01-05 22:54:35 DEBUG main PacketLineOut:145 - git\u003e have 72f017bedddb968172b1973e750ad00b3eb96250\\n\n2021-01-05 22:54:35 DEBUG main PacketLineOut:184 - git\u003e 0000\n\nClient says he wants the new master, and has the old master\n\n2021-01-05 22:54:36 DEBUG main PacketLineIn:207 - git\u003c acknowledgments\n2021-01-05 22:54:36 DEBUG main PacketLineIn:207 - git\u003c ACK 72f017bedddb968172b1973e750ad00b3eb96250\n2021-01-05 22:54:36 DEBUG main PacketLineOut:145 - git\u003e have 72f017bedddb968172b1973e750ad00b3eb96250\\n\n2021-01-05 22:54:36 DEBUG main PacketLineIn:207 - git\u003c ready\n2021-01-05 22:54:36 DEBUG main PacketLineIn:186 - git\u003c 0001\n2021-01-05 22:54:36 DEBUG main PacketLineIn:207 - git\u003c packfile\n\nServer ACKs the \"have\", sends a \"ready\", and the packfile. The lone PacketLineOut trace in here can be ignored; the client adds this \"have\" to its internal buffer, but doesn\u0027t send it anymore.\n\n(Packet debug logs in JGit do not really show what goes over the wire due to internal buffering.)\n\nSo JGit client-side appears to do everything correctly. A fetch where the clone has one commit and the upstream is one commit ahead needs THREE HTTP requests, not FOUR. But in Matthias\u0027 trace Gerrit doesn\u0027t reply \"ACK-ready-0001-packfile\" in the 3rd request. It replies \"ACK-0000\" in the 3rd request, which makes the client correctly send again a \"have\" for the just ACKed id. Only then does Gerrit send back the \"ACK-ready-0001-packfile\".\n\nSo what\u0027s going on here? Did I misunderstand the test scenario, or is there a bug somewhere?",
      "parentUuid": "dd8ad6be_3a6308ef",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e80b1d75_79c99e34",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-06T10:07:23Z",
      "side": 1,
      "message": "Looking again through Matthias\u0027 debug log, I notice that at the end of the fourth request, there is only \"ACK-packfile-0000\" in the log. There should be \"ACK-ready-0001-packfile\". And there\u0027s no record of the client getting this ACK. So I\u0027m not entirely sure this log is really correct... what is clear is that Gerrit sends in the third request only ACK-0000, even though it could have sent the packfile already (ACK-ready-0001-packfile).\n\nBTW, it would help if the log contained the thread id/name. Makes it easier to discern which PacketLineIn/Out occurs on the client and which on the server.",
      "parentUuid": "d3e78cf4_e9506d14",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31306e9c_0e958027",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-06T11:27:50Z",
      "side": 1,
      "message": "\u003e Looking again through Matthias\u0027 debug log, I notice that at the end of the fourth request, there is only \"ACK-packfile-0000\" in the log. And there\u0027s no record of the client getting this ACK. So I\u0027m not entirely sure this log is really correct...\n\nOK, that bit is solved: UploadPack logs ACKs that it doesn\u0027t send. See JGit commit https://git.eclipse.org/r/c/jgit/jgit/+/174318 which should fix this. This also explains the double ACK logged in the third request in Matthias\u0027 log, where the client gets only one.\n\nSo the *real* server reply on the fourth request is not ACK-packfile-0000 but only packfile-0000. Which is correct since the client had sent a \"done\", so no ACKs should be sent.\n\nWhich still doesn\u0027t explain why the server sends ACK-0000 in the third request instead of ACK-ready-0001-packfile.",
      "parentUuid": "e80b1d75_79c99e34",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "076ac4e7_b34f2a30",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-01-06T11:31:33Z",
      "side": 1,
      "message": "\u003e Which still doesn\u0027t explain why the server sends ACK-0000 in the third request instead of ACK-ready-0001-packfile.\n\nIf C-git with wire protocol v2 enabled communicates with gerrit, the results are the same?",
      "parentUuid": "31306e9c_0e958027",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d37f226_d2af06f1",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-06T12:06:23Z",
      "side": 1,
      "message": "\u003e If C-git with wire protocol v2 enabled communicates with gerrit, the results are the same?\n\nGood question. I\u0027m not set up to build a Gerrit from this patch set and run C git against it.",
      "parentUuid": "076ac4e7_b34f2a30",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "909a64c7_66bdc03c",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-01-06T12:35:41Z",
      "side": 1,
      "message": "I applied your logging fix change (https://git.eclipse.org/r/c/jgit/jgit/+/174318 ) in modules/jgit and running this test on this change produced this output:\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e peel\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e symrefs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix HEAD\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/tags/\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/heads/\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 215a477390e056adeb6ee6d2546d5bde4b254bb5 HEAD symref-target:refs/heads/master\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 215a477390e056adeb6ee6d2546d5bde4b254bb5 refs/heads/master\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dfetch\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e no-progress\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e include-tag\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ofs-delta\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e thin-pack\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e want 215a477390e056adeb6ee6d2546d5bde4b254bb5\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e done\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e peel\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e symrefs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/tags/\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/heads/\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 6afbff37c01d47a82283fe4fe618885105f2cada refs/heads/master\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dfetch\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e no-progress\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e include-tag\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ofs-delta\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e thin-pack\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e want 6afbff37c01d47a82283fe4fe618885105f2cada\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e have 215a477390e056adeb6ee6d2546d5bde4b254bb5\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e acknowledgments\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 215a477390e056adeb6ee6d2546d5bde4b254bb5\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e have 215a477390e056adeb6ee6d2546d5bde4b254bb5\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e done\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\n\nWill try to run C-Git client on this commit.",
      "parentUuid": "1d37f226_d2af06f1",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edc5670d_1e79db77",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-06T12:43:27Z",
      "side": 1,
      "message": "\u0027Scuse me: is that log complete? I miss 0000/0001 lines at least. Please also either include the thread name in the log pattern config, or also the PacketLineIn logs. Otherwise it gets even harder to be sure what comes from the client and what from the server.",
      "parentUuid": "909a64c7_66bdc03c",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "582c18cf_04d0686b",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-01-06T12:48:54Z",
      "side": 1,
      "message": "Here is PacketLineIn and PacketLineOut logs for this test only with your logging fixed applied (please ignore ERROR severity):\n\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c version 2\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ls-refs\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c fetch\u003dshallow\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c server-option\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dls-refs\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e peel\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e symrefs\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix HEAD\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/tags/\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/heads/\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dls-refs\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c peel\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c symrefs\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix HEAD\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/tags/\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/heads/\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 19740e25fedebf1d00325d1892ed7861c3b58485 HEAD symref-target:refs/heads/master\\n\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 19740e25fedebf1d00325d1892ed7861c3b58485 refs/heads/master\\n\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 19740e25fedebf1d00325d1892ed7861c3b58485 HEAD symref-target:refs/heads/master\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 19740e25fedebf1d00325d1892ed7861c3b58485 refs/heads/master\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dfetch\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e no-progress\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e include-tag\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ofs-delta\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e thin-pack\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e want 19740e25fedebf1d00325d1892ed7861c3b58485\\n\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e done\\n\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c want 19740e25fedebf1d00325d1892ed7861c3b58485\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c done\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c packfile\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c version 2\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ls-refs\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c fetch\u003dshallow\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c server-option\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dls-refs\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e peel\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e symrefs\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/tags/\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/heads/\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dls-refs\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c peel\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c symrefs\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/tags/\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/heads/\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e c44c7efd7609af11c37e5195aeefb80c6828dda1 refs/heads/master\\n\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c c44c7efd7609af11c37e5195aeefb80c6828dda1 refs/heads/master\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dfetch\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e no-progress\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e include-tag\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ofs-delta\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e thin-pack\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e want c44c7efd7609af11c37e5195aeefb80c6828dda1\\n\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e have 19740e25fedebf1d00325d1892ed7861c3b58485\\n\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c want c44c7efd7609af11c37e5195aeefb80c6828dda1\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c have 19740e25fedebf1d00325d1892ed7861c3b58485\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e acknowledgments\\n\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 19740e25fedebf1d00325d1892ed7861c3b58485\\n\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c acknowledgments\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ACK 19740e25fedebf1d00325d1892ed7861c3b58485\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e have 19740e25fedebf1d00325d1892ed7861c3b58485\\n\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e done\\n\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c want c44c7efd7609af11c37e5195aeefb80c6828dda1\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c have 19740e25fedebf1d00325d1892ed7861c3b58485\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c done\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c packfile",
      "parentUuid": "edc5670d_1e79db77",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "939d6168_5d6d8c80",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-06T13:05:56Z",
      "side": 1,
      "message": "Taken apart again:\n\nCloning (not analyzed):\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c version 2\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ls-refs\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c fetch\u003dshallow\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c server-option\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dls-refs\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e peel\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e symrefs\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix HEAD\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/tags/\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/heads/\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dls-refs\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c peel\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c symrefs\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix HEAD\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/tags/\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/heads/\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 19740e25fedebf1d00325d1892ed7861c3b58485 HEAD symref-target:refs/heads/master\\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 19740e25fedebf1d00325d1892ed7861c3b58485 refs/heads/master\\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 19740e25fedebf1d00325d1892ed7861c3b58485 HEAD symref-target:refs/heads/master\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 19740e25fedebf1d00325d1892ed7861c3b58485 refs/heads/master\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dfetch\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e no-progress\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e include-tag\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ofs-delta\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e thin-pack\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e want 19740e25fedebf1d00325d1892ed7861c3b58485\\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e done\\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c want 19740e25fedebf1d00325d1892ed7861c3b58485\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c done\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c packfile\n\nFetch:\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\n\n(Missing a 0000 line here) Server sends reply on initial request\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c version 2\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ls-refs\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c fetch\u003dshallow\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c server-option\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nClient receives it (with the 0000)\n\nSECOND request:\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dls-refs\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e peel\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e symrefs\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/tags/\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/heads/\n\nClient sends ls-refs (missing 0001 and 0000 in the log)\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dls-refs\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c peel\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c symrefs\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/tags/\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/heads/\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nServer receives the request (including 0001 and 0000)\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e c44c7efd7609af11c37e5195aeefb80c6828dda1 refs/heads/master\\n\n\nServer advertises refs/heads/master (0000 missing)\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c c44c7efd7609af11c37e5195aeefb80c6828dda1 refs/heads/master\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nClient gets the advertisement.\n\nTHIRD request:\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dfetch\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e no-progress\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e include-tag\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ofs-delta\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e thin-pack\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e want c44c7efd7609af11c37e5195aeefb80c6828dda1\\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e have 19740e25fedebf1d00325d1892ed7861c3b58485\\n\n\nClient sends fetch request (0000 missing)\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c want c44c7efd7609af11c37e5195aeefb80c6828dda1\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c have 19740e25fedebf1d00325d1892ed7861c3b58485\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nServer receives request.\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e acknowledgments\\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 19740e25fedebf1d00325d1892ed7861c3b58485\\n\n\nServer replies ACK-0000 (0000 missing in log)\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c acknowledgments\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ACK 19740e25fedebf1d00325d1892ed7861c3b58485\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e have 19740e25fedebf1d00325d1892ed7861c3b58485\\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nClient receives ACK-0000, and puts a have in buffer to send on next request\n\nFOURTH request:\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e done\\n\n\nClient resends it buffer plus a \"done\".\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c want c44c7efd7609af11c37e5195aeefb80c6828dda1\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c have 19740e25fedebf1d00325d1892ed7861c3b58485\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c done\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nServer receives the request.\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\n\u003e ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c packfile\n\nServer sends the packfile (no ACKs, since it got a \"done\".)\n\nSo still the same.\n\nDavid, why are the 0000/0001 lines missing? I don\u0027t get that with my logging fix.",
      "parentUuid": "582c18cf_04d0686b",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cf5a206_96ccfc70",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-01-06T13:18:35Z",
      "side": 1,
      "message": "\u003e David, why are the 0000/0001 lines missing? I don\u0027t get that with my logging fix.\n\nApologies, I screwed it up. Here is the complete communication for fetch part with your logging fix:\n\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c version 2\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ls-refs\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c fetch\u003dshallow\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c server-option\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dls-refs\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e peel\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e symrefs\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/tags/\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/heads/\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dls-refs\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c peel\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c symrefs\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/tags/\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/heads/\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e c7b74adfe6fcef2c7a4b58a31a8e48975b2c5093 refs/heads/master\\n\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c c7b74adfe6fcef2c7a4b58a31a8e48975b2c5093 refs/heads/master\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dfetch\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e no-progress\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e include-tag\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ofs-delta\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e thin-pack\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e want c7b74adfe6fcef2c7a4b58a31a8e48975b2c5093\\n\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e have f7bd9481f5a2533d27dbdd7bfce2e6a8eee28089\\n\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c want c7b74adfe6fcef2c7a4b58a31a8e48975b2c5093\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c have f7bd9481f5a2533d27dbdd7bfce2e6a8eee28089\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e acknowledgments\\n\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK f7bd9481f5a2533d27dbdd7bfce2e6a8eee28089\\n\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c acknowledgments\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ACK f7bd9481f5a2533d27dbdd7bfce2e6a8eee28089\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e have f7bd9481f5a2533d27dbdd7bfce2e6a8eee28089\\n\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e done\\n\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c want c7b74adfe6fcef2c7a4b58a31a8e48975b2c5093\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c have f7bd9481f5a2533d27dbdd7bfce2e6a8eee28089\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c done\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\nERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c packfile\nERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000",
      "parentUuid": "939d6168_5d6d8c80",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "270c4693_d040024d",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-06T13:28:27Z",
      "side": 1,
      "message": "OK, thanks. Analysis and split up into the four requests is still the same, just that now the 0000/0001 lines are there, too.\n\nIt also looks like the server sends a 0000 after the packfile, which the client never reads, but that is unrelated to the question of why the server just replies ACK-0000 in the third request. Is UploadPack.okToGiveUp() getting confused?\n\nLooking forward to C git logs for this test case.",
      "parentUuid": "8cf5a206_96ccfc70",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80bf8ae1_8d341906",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-01-06T15:01:00Z",
      "side": 1,
      "message": "\u003e Looking forward to C git logs for this test case.\n\nGerrit logs for fetch operation trggered by C git:\n\n[2021-01-06T15:54:51.963+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\n[2021-01-06T15:54:51.963+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\n[2021-01-06T15:54:51.963+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\n[2021-01-06T15:54:51.963+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\n[2021-01-06T15:54:51.964+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n[2021-01-06T15:54:52.000+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dls-refs\n[2021-01-06T15:54:52.000+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n[2021-01-06T15:54:52.000+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c peel\n[2021-01-06T15:54:52.001+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c symrefs\n[2021-01-06T15:54:52.001+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/heads/\n[2021-01-06T15:54:52.001+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/tags/\n[2021-01-06T15:54:52.001+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n[2021-01-06T15:54:52.004+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e e235e3a87e5aeeaea910adb9a9af7b8aa4021904 refs/heads/master\\n\n[2021-01-06T15:54:52.004+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n[2021-01-06T15:54:52.029+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n[2021-01-06T15:54:52.031+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n[2021-01-06T15:54:52.031+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n[2021-01-06T15:54:52.031+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n[2021-01-06T15:54:52.031+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n[2021-01-06T15:54:52.031+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c want e235e3a87e5aeeaea910adb9a9af7b8aa4021904\n[2021-01-06T15:54:52.031+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c have ffcf103320cfc712d10094eb0a4f4ebed4610fd1\n[2021-01-06T15:54:52.032+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n[2021-01-06T15:54:52.032+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e acknowledgments\\n\n[2021-01-06T15:54:52.032+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK ffcf103320cfc712d10094eb0a4f4ebed4610fd1\\n\n[2021-01-06T15:54:52.035+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ready\\n\n[2021-01-06T15:54:52.035+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n[2021-01-06T15:54:52.035+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\n[2021-01-06T15:54:52.041+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nTest case:\n\n* clone a project\n* created change edit through the UI\n* publish change edit\n* fetch on the client side.\n\nNote, that I didn\u0027t activate GIT trace on the client side, but can do that.",
      "parentUuid": "270c4693_d040024d",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64808847_491c3a6c",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-06T15:15:26Z",
      "side": 1,
      "message": "That\u0027s three requests. Now, can you do the same with the JGit pgm client, please? I would expect that to use 3 requests, too. So most likely something in this test setup here is different.\n\n\u003e Gerrit logs for fetch operation trggered by C git:\n\u003e \n\u003e [2021-01-06T15:54:51.963+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\n\u003e [2021-01-06T15:54:51.963+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\n\u003e [2021-01-06T15:54:51.963+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\n\u003e [2021-01-06T15:54:51.963+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\n\u003e [2021-01-06T15:54:51.964+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nServer\u0027s initial reply.\n\nSECOND request\n\n\u003e [2021-01-06T15:54:52.000+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dls-refs\n\u003e [2021-01-06T15:54:52.000+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n\u003e [2021-01-06T15:54:52.000+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c peel\n\u003e [2021-01-06T15:54:52.001+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c symrefs\n\u003e [2021-01-06T15:54:52.001+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/heads/\n\u003e [2021-01-06T15:54:52.001+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/tags/\n\u003e [2021-01-06T15:54:52.001+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nClient sends ls-refs\n\n\u003e [2021-01-06T15:54:52.004+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e e235e3a87e5aeeaea910adb9a9af7b8aa4021904 refs/heads/master\\n\n\u003e [2021-01-06T15:54:52.004+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nServer advertises refs/heads/master\n\nTHIRD request\n\n\u003e [2021-01-06T15:54:52.029+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n\u003e [2021-01-06T15:54:52.031+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n\u003e [2021-01-06T15:54:52.031+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n\u003e [2021-01-06T15:54:52.031+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n\u003e [2021-01-06T15:54:52.031+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n\u003e [2021-01-06T15:54:52.031+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c want e235e3a87e5aeeaea910adb9a9af7b8aa4021904\n\u003e [2021-01-06T15:54:52.031+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c have ffcf103320cfc712d10094eb0a4f4ebed4610fd1\n\u003e [2021-01-06T15:54:52.032+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nClient calls fetch, wants new master, has old master\n\n\u003e [2021-01-06T15:54:52.032+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e acknowledgments\\n\n\u003e [2021-01-06T15:54:52.032+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK ffcf103320cfc712d10094eb0a4f4ebed4610fd1\\n\n\u003e [2021-01-06T15:54:52.035+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ready\\n\n\u003e [2021-01-06T15:54:52.035+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n\u003e [2021-01-06T15:54:52.035+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\n\u003e [2021-01-06T15:54:52.041+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nServer replies as expected ACK-ready-0001-packfile.\n\n\u003e \n\u003e Test case:\n\u003e \n\u003e * clone a project\n\u003e * created change edit through the UI\n\u003e * publish change edit\n\u003e * fetch on the client side.\n\u003e \n\u003e Note, that I didn\u0027t activate GIT trace on the client side, but can do that.\n\nIf JGit pgm gives that same trace, we\u0027re fine, and something must be special in this test case setup here. If so, what are we missing?\n\nIf JGit pgm needs 4 requests, something is wrong in JGit.",
      "parentUuid": "80bf8ae1_8d341906",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39310115_996c74cd",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-01-06T16:15:31Z",
      "side": 1,
      "message": "\u003e Now, can you do the same with the JGit pgm client, please?\n\nThis this the gerrit server log for the above test case, but fetch was done by JGit built from HEAD:\n\n\n[2021-01-06T17:11:32.922+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\n[2021-01-06T17:11:32.923+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\n[2021-01-06T17:11:32.923+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\n[2021-01-06T17:11:32.923+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\n[2021-01-06T17:11:32.923+01:00] [HTTP GET /a/test_repo/info/refs?service\u003dgit-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n[2021-01-06T17:11:32.996+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dls-refs\n[2021-01-06T17:11:32.996+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n[2021-01-06T17:11:32.996+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c peel\n[2021-01-06T17:11:32.996+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c symrefs\n[2021-01-06T17:11:32.996+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/tags/\n[2021-01-06T17:11:32.996+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/heads/\n[2021-01-06T17:11:32.996+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n[2021-01-06T17:11:32.998+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e e1eaee6d300aab689938ff2787d6fb1a5c843896 refs/heads/master\\n\n[2021-01-06T17:11:32.998+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n[2021-01-06T17:11:33.095+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n[2021-01-06T17:11:33.099+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n[2021-01-06T17:11:33.099+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n[2021-01-06T17:11:33.099+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n[2021-01-06T17:11:33.099+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n[2021-01-06T17:11:33.099+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c want e1eaee6d300aab689938ff2787d6fb1a5c843896\n[2021-01-06T17:11:33.100+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c have e235e3a87e5aeeaea910adb9a9af7b8aa4021904\n[2021-01-06T17:11:33.100+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c have ffcf103320cfc712d10094eb0a4f4ebed4610fd1\n[2021-01-06T17:11:33.100+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n[2021-01-06T17:11:33.100+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e acknowledgments\\n\n[2021-01-06T17:11:33.100+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK e235e3a87e5aeeaea910adb9a9af7b8aa4021904\\n\n[2021-01-06T17:11:33.101+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK ffcf103320cfc712d10094eb0a4f4ebed4610fd1\\n\n[2021-01-06T17:11:33.101+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e ready\\n\n[2021-01-06T17:11:33.101+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n[2021-01-06T17:11:33.102+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\n[2021-01-06T17:11:33.110+01:00] [HTTP POST /a/test_repo/git-upload-pack (admin from 127.0.0.1)] ERROR org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000",
      "parentUuid": "64808847_491c3a6c",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}