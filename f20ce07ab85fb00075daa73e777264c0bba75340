{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bfe66acf_18256e56",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-05T08:23:40Z",
      "side": 1,
      "message": "I also don\u0027t understand why 4 requests are used.",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15291006_a5cc20c0",
        "filename": "javatests/com/google/gerrit/acceptance/git/AbstractGitOverHttpServlet.java",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-01-05T00:02:08Z",
      "side": 1,
      "message": "Before changing this from 2 to 4, we should understand why that happened :-O",
      "range": {
        "startLine": 84,
        "startChar": 28,
        "endLine": 84,
        "endChar": 38
      },
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d719e0b6_503f41e0",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-05T08:23:40Z",
      "side": 1,
      "message": "Why 4? I would have expected 3 if testRepo and the server-side project differ only by that one commit created in line 76.\n\n1. /info/refs?service\u003dgit-upload-pack\n2. ls-refs\n3. fetch, finding a common commit and server sending the pack",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "922dbb5c_5c723a90",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2021-01-05T16:41:14Z",
      "side": 1,
      "message": "the jgit packet trace for this test:\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c version 2\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c fetch\u003dshallow\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c server-option\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e peel\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e symrefs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix HEAD\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/tags/\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/heads/\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c peel\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c symrefs\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix HEAD\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/tags/\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/heads/\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 41e2147369f62848119eeec7b18e0f1bdefa2ed2 HEAD symref-target:refs/heads/master\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 41e2147369f62848119eeec7b18e0f1bdefa2ed2 refs/heads/master\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 41e2147369f62848119eeec7b18e0f1bdefa2ed2 HEAD symref-target:refs/heads/master\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 41e2147369f62848119eeec7b18e0f1bdefa2ed2 refs/heads/master\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dfetch\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e no-progress\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e include-tag\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ofs-delta\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e thin-pack\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e want 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e done\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c want 41e2147369f62848119eeec7b18e0f1bdefa2ed2\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c done\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c packfile\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c version 2\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c fetch\u003dshallow\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c server-option\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e peel\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e symrefs\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/tags/\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/heads/\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dls-refs\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c peel\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c symrefs\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/tags/\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/heads/\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 80958194b5e5e6cd964897200ac0cd171f5e22f8 refs/heads/master\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 80958194b5e5e6cd964897200ac0cd171f5e22f8 refs/heads/master\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dfetch\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e no-progress\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e include-tag\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ofs-delta\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e thin-pack\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e want 80958194b5e5e6cd964897200ac0cd171f5e22f8\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c want 80958194b5e5e6cd964897200ac0cd171f5e22f8\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e acknowledgments\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c acknowledgments\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e done\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c want 80958194b5e5e6cd964897200ac0cd171f5e22f8\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c done\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\n  DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n  DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c packfile",
      "parentUuid": "d719e0b6_503f41e0",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4e7fa48_c45ce101",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-05T17:09:44Z",
      "side": 1,
      "message": "This a clone followed by the fetch.\n\nJust the fetch part, taken apart:\n\nFIRST request:\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e version 2\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ls-refs\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e fetch\u003dshallow\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e server-option\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nResponse from server upon initial client request.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c version 2\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ls-refs\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c fetch\u003dshallow\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c server-option\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nClient receives it.\n\n\nSECOND request:\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dls-refs\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e peel\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e symrefs\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/tags/\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ref-prefix refs/heads/\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nClient calls ls-refs refs/tags refs/heads.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dls-refs\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c peel\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c symrefs\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/tags/\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ref-prefix refs/heads/\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nServer receives it.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 80958194b5e5e6cd964897200ac0cd171f5e22f8 refs/heads/master\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nServer advertises refs/heads/master\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 80958194b5e5e6cd964897200ac0cd171f5e22f8 refs/heads/master\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nClient receives it.\n\nTHIRD request:\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e command\u003dfetch\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0001\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e no-progress\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e include-tag\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ofs-delta\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e thin-pack\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e want 80958194b5e5e6cd964897200ac0cd171f5e22f8\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nClient wants the new master, has the old master\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c want 80958194b5e5e6cd964897200ac0cd171f5e22f8\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nServer receives it\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e acknowledgments\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nServer sends two ACKs. (Really? Client seems to get only one.)\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c acknowledgments\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\n\nClient receives it.\n\nFOURTH request: \n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n\nClient tells server again that it has the ACK\u0027ed id.\n\nNot visible here: it would also have sent again command\u003dfetch, want, and previously sent haves.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nThis line appears to be out-of-order, terminates the server\u0027s reply in the 3rd request above.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e done\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nClient has nothing more to send.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c command\u003dfetch\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0001\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c no-progress\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c include-tag\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c ofs-delta\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c thin-pack\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c want 80958194b5e5e6cd964897200ac0cd171f5e22f8\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c have 41e2147369f62848119eeec7b18e0f1bdefa2ed2\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c done\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c 0000\n\nServer receives it.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e ACK 41e2147369f62848119eeec7b18e0f1bdefa2ed2\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e packfile\\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineOut : git\u003e 0000\n\nServer sends ACK and packfile.\n\n\u003e   DEBUG org.eclipse.jgit.transport.PacketLineIn : git\u003c packfile\n\nClient receives packfile.\n\nSo yes, four requests it is... Would have to cross-check with C git whether this is correct.",
      "parentUuid": "922dbb5c_5c723a90",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f95ed725_ad9076de",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-01-05T19:35:11Z",
      "side": 1,
      "message": "Thanks @Thomas, that is unexpected I think.\n\nThe code does:\n      testRepo.git().fetch().call();\n\nI would expect this to produce a fetch *ONLY* without a clone.\nThere is the draining of the events at the beginning of the method, so the ones associated with the clone of testRepo should not be captured.",
      "parentUuid": "b4e7fa48_c45ce101",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a152d76_9bb0107f",
        "filename": "javatests/com/google/gerrit/acceptance/git/HttpPushForReviewIT.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1100310
      },
      "writtenOn": "2021-01-05T21:49:10Z",
      "side": 1,
      "message": "Matthias didn\u0027t post the HttpAuditEvents, he posted the debug log, presumably from the whole test run. The test setup performs the clone.",
      "parentUuid": "f95ed725_ad9076de",
      "revId": "f20ce07ab85fb00075daa73e777264c0bba75340",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}