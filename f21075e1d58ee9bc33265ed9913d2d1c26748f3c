{
  "comments": [
    {
      "key": {
        "uuid": "56ae6f94_b8b4590d",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/Change.java",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-08-08T09:48:35Z",
      "side": 1,
      "message": "That why it is wrong to unconditionally parse patch set id part as commented in this change [1]. Now you call the check method PatchSet.Id.fromRef() for something that doesn\u0027t apply and silently discard the result. What you want is not to call the check method if you know that the check result does not apply in the first place:\n\n  if (ref.startsWith(REFS_CHANGES) \u0026\u0026 PatchSet.Id.fromRef(ref, ce) \u003e\u003d 0) {\n      return null;\n  }\n  return new Change.Id(Integer.parseInt(ref.substring(cs, ce)));\n\nNot to mention, that your exception case would need to be extended even further for change edit reference and who know what come next.\n\n [1] https://gerrit-review.googlesource.com/58943",
      "range": {
        "startLine": 140,
        "startChar": 26,
        "endLine": 140,
        "endChar": 75
      },
      "revId": "f21075e1d58ee9bc33265ed9913d2d1c26748f3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56ae6f94_f8bed1e8",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/Change.java",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-08-08T10:35:37Z",
      "side": 1,
      "message": "OK, the suggested check is wrong, was thinking on change edit ref. So may be:\n\n  if (!ref.substring(ce).equals(RefNames.META_SUFFIX)\n      \u0026\u0026 PatchSet.Id.fromRef(ref, ce) \u003c 0) {\n    return null;\n  }\n  return new Change.Id(Integer.parseInt(ref.substring(cs, ce)));\n\nThe check that the ref starts with REFS_CHANGES can be added later when it really needed.",
      "parentUuid": "56ae6f94_b8b4590d",
      "range": {
        "startLine": 140,
        "startChar": 26,
        "endLine": 140,
        "endChar": 75
      },
      "revId": "f21075e1d58ee9bc33265ed9913d2d1c26748f3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6fa5f81_6c0b1bf9",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/Change.java",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2014-08-08T13:28:30Z",
      "side": 1,
      "message": "I don\u0027t understand how your suggestion is different from what I have except that the condition is reversed.",
      "parentUuid": "56ae6f94_f8bed1e8",
      "range": {
        "startLine": 140,
        "startChar": 26,
        "endLine": 140,
        "endChar": 75
      },
      "revId": "f21075e1d58ee9bc33265ed9913d2d1c26748f3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b3bbfb_d708fc49",
        "filename": "gerrit-reviewdb/src/main/java/com/google/gerrit/reviewdb/client/Change.java",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-08-08T13:38:48Z",
      "side": 1,
      "message": "Your code call PatchSet.Id.fromRef() check and discard it result if it is not related. My suggestion check it first and call the check only if it is related. And there is no point of assigning patchSetId in a var if it\u0027s not used.\n\nBut then again, as i said in comment to another change, i don\u0027t think that you need the whole patch set id part check in Change.id.parse() method. That check belongs to PatchSet.Id.parse().",
      "parentUuid": "d6fa5f81_6c0b1bf9",
      "range": {
        "startLine": 140,
        "startChar": 26,
        "endLine": 140,
        "endChar": 75
      },
      "revId": "f21075e1d58ee9bc33265ed9913d2d1c26748f3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}