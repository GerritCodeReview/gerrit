{
  "comments": [
    {
      "key": {
        "uuid": "12a6b1d3_9f6753e6",
        "filename": "Documentation/rest-api-plugins.txt",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2013-09-03T01:07:52Z",
      "side": 1,
      "message": "This link is not rendering correctly in the HTML output from asciidoc.",
      "revId": "f3eecedf9709bff73a84936cbc24f35bc482bec5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12a6b1d3_5f7aeb7a",
        "filename": "Documentation/rest-api-plugins.txt",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2013-09-03T05:23:14Z",
      "side": 1,
      "message": "The problem seems to be caused by the text being enclosed in backtick quotes (`).  After replacing them with regular quotes (\u0027) the link is rendered correctly.",
      "parentUuid": "12a6b1d3_9f6753e6",
      "revId": "f3eecedf9709bff73a84936cbc24f35bc482bec5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_c0585e32",
        "filename": "Documentation/rest-api-plugins.txt",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-02T13:14:50Z",
      "side": 1,
      "message": "Is it actually possible for a plugin to register a REST endpoint under its own namespace? E.g. could the plugin delete-projects register a REST endpoint under /plugins/delete-project/projects/\u003cproject-name\u003e for deleting projects that is not available under /plugins/\u003cany-other-plugin\u003e/projects/\u003cproject-name\u003e? How would a plugin register such a REST endpoint? At the moment the delete-project plugin is registering its REST endpoint under /projects/\u003cproject-name\u003e [1]. I\u0027m wondering now whether this was a good idea if to take into consideration that it might clash one day with another Gerrit core REST endpoint.\n\n[1] https://gerrit-review.googlesource.com/49148",
      "revId": "f3eecedf9709bff73a84936cbc24f35bc482bec5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_80537613",
        "filename": "Documentation/rest-api-plugins.txt",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-09-02T14:58:34Z",
      "side": 1,
      "message": "The plugin namespace is already there: The `plugin-name~` prefix ensures that the plugin REST endpoints do not clash:\n\nGiven that the delete-project.jar plugin is deployed, you use the following endpoint for POST delete endpoint from the change [1] above:\n\n POST /projects/foo/delete-project~delete",
      "parentUuid": "32a1f5ba_c0585e32",
      "revId": "f3eecedf9709bff73a84936cbc24f35bc482bec5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_404d6e6c",
        "filename": "Documentation/rest-api-plugins.txt",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-02T15:08:55Z",
      "side": 1,
      "message": "Oh, I wasn\u0027t aware of this. This means the documentation added in [1] needs be fixed like this [2]?\n\nStill for curiousity would it be possible to add the REST endpoint as\n  /plugins/delete-project/projects/\u003cproject-name\u003e \nand not having it as\n  /plugins/\u003cany-other-plugin\u003e/projects/\u003cproject-name\u003e\n?\n\n  [1] https://gerrit-review.googlesource.com/#/c/49148/23/src/main/resources/Documentation/rest-api-projects.md\n  [2] https://gerrit-review.googlesource.com/49378",
      "parentUuid": "32a1f5ba_80537613",
      "revId": "f3eecedf9709bff73a84936cbc24f35bc482bec5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12a6b1d3_9f5d1321",
        "filename": "Documentation/rest-api-plugins.txt",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2013-09-02T18:09:21Z",
      "side": 1,
      "message": "Yes. A plugin can register their own subclass of RestApiServlet in their URL namespace and bind their own collection similar to what ProjectsRestApiServlet does. This is most useful for collections that are specific to the plugin and do not exist in the core server.\n\nUsing your own RestApiServlet is awkward for resource types that exist in the server, e.g. ProjectResource. A plugin would want to reuse ProjectsCollection.parse() and ProjectResource, but not the views map of ProjectsCollection. I think that is doable by wrapping ProjectsCollection with your own class that exports your own views map and hides the default ProjectsCollection view, but why? For existing resource types and collections its simpler to just register your view and let the server do the rest of the work.",
      "parentUuid": "32a1f5ba_404d6e6c",
      "revId": "f3eecedf9709bff73a84936cbc24f35bc482bec5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32a1f5ba_0080864b",
        "filename": "Documentation/rest-api-plugins.txt",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2013-09-02T18:15:27Z",
      "side": 1,
      "message": "That\u0027s interesting, thanks for explaining :-)",
      "parentUuid": "12a6b1d3_9f5d1321",
      "revId": "f3eecedf9709bff73a84936cbc24f35bc482bec5",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}