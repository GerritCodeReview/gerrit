{
  "pushCert": "certificate version 0.1\npusher Dave Borowitz \u003cdborowitz@google.com\u003e 1503335696 -0400\nnonce AHIDc+NGFZk2Qw3VoALU9F96vGQURjzs2mAtGZ5bapMy65z/mCMVehlaEtpaqgZREzY+ysaprhXB\n\n0000000000000000000000000000000000000000 60e23adee42e179edf8873f7cd00a25cd73012b1 refs/for/master%topic\u003dscan-change-notes,r\u003daliceks\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJZmxUQAAoJEF/XxZqaEoiM1YoQAMsYfskw2h71XAILqKFnDv7H\neTq3By3BiuZVNMQ0DXx6nD/zTHMOjjRdWMkpakE256x/PY3MCkiVRofuybtm3EK0\nXXVxMFsJKL8SFJ2Xq1p9Uceb7onzU1mwJ/0WwSBhxIlj+FaYlhOq3Ra2urfC4yBW\nenOZTj6HtXhtHvuTZInwwXZ1rAMrKnC273IGs2eOb0qW+EIwIHEbNNAnHWrSUFf4\n/G/FxYi69GpRAzrNwGogL0oYl9wyesRvNIM/1DeSEMH1M6C9zKTsCgMWMQCVGNFQ\n4jrvkrjGZ6LDCWMO5B7DC+9AZYvqaPEZti5kSZ35sHhgrnfpUpDQjQkAuQlBBly9\nhlN4m3ck+ki+Ic/NR5jS4N3EBY41lC4+GC3jlwuynkRFtSxfQIvGoKpZy/wJHME6\nO/Ov1kSZZbABPMMRj0dWF2rTwZAbvCXViZwWXfYGaPKmiKwUyReNmO1WOBFciNbh\nqrFqqx9F9lbSESKUbpj2Md1p6SFs+lJQ8w81jPLBB1B18kfe1l1xNGMbDSviRAix\nREBJSJcsnJCL8GhcGLscJF+MWVKpzX5L2bJXOSwu+mrjc2zmQMSbHptj3kXqnCme\nbIuROay78SPoEGCI7A7pzuaXpEdoUCettHZGIlMgcErJlGWWxFLbzpkOmWCKLF1Y\ncbn6/8N48ewDxceS39ba\n\u003dITlp\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "246067c4_a63b03a5",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/AllChangesIndexer.java",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-08-22T11:47:01Z",
      "side": 1,
      "message": "Maybe unrelated to this change but do we still need a project indexer?\nIIRC, we used to index each project with one thread exactly because of the pack file locality.\nThis had a bad side effect that 90% of reindexing finished in the first 10% of the total\nreindexing time, and the last 10% usually takes 90% of the total time utilizing only 1-2 threads.\n\nNow that we index changes in any order, we could better utilize indexing threads\nby using all indexing threads all the time.",
      "range": {
        "startLine": 198,
        "startChar": 16,
        "endLine": 198,
        "endChar": 30
      },
      "revId": "f3f02b4474118f40c9d41ef64131699614599b9f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd327050_69f6564d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/AllChangesIndexer.java",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-08-22T14:33:42Z",
      "side": 1,
      "message": "There is still the issue of thrashing the kernel buffer cache if it keeps closing and reopening large packfiles. But I fully admit I don\u0027t know how much of an issue this would be in practice. If I code something up that sprays changes across threads, will you be able to test out performance on a larger dataset?",
      "parentUuid": "246067c4_a63b03a5",
      "range": {
        "startLine": 198,
        "startChar": 16,
        "endLine": 198,
        "endChar": 30
      },
      "revId": "f3f02b4474118f40c9d41ef64131699614599b9f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a97b983_809401c4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/AllChangesIndexer.java",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-08-22T18:47:36Z",
      "side": 1,
      "message": "\u003e There is still the issue of thrashing the kernel buffer cache if it keeps closing and reopening large packfiles.\n\nPack files are normally accessed through the window cache.\nIf window cache is large enough, all pack files will be eventually cached in memory.\n\nBtw, if the diff_summary cache is populated for all changes, what would indexing\nneed to access pack files for?\n\n\u003e But I fully admit I don\u0027t know how much of an issue this would be in practice. If I code something up that sprays changes across threads, will you be able to test out performance on a larger dataset?\n\nI think I would be able to perform the test on a copy of our largest production\nserver.",
      "parentUuid": "dd327050_69f6564d",
      "range": {
        "startLine": 198,
        "startChar": 16,
        "endLine": 198,
        "endChar": 30
      },
      "revId": "f3f02b4474118f40c9d41ef64131699614599b9f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe28de9a_af3d2d96",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/AllChangesIndexer.java",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-08-23T08:36:02Z",
      "side": 1,
      "message": "\u003e I think I would be able to perform the test on a copy of our largest production\n\u003e server.\n\nSuch a test will require time and patience. Therefore, I propose to do it\nin context of a follow-up change. This one shouldn\u0027t be blocked for too long\nwaiting on my tests.",
      "parentUuid": "0a97b983_809401c4",
      "range": {
        "startLine": 198,
        "startChar": 16,
        "endLine": 198,
        "endChar": 30
      },
      "revId": "f3f02b4474118f40c9d41ef64131699614599b9f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dfa34c2_a0dbd54e",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/change/AllChangesIndexer.java",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2017-08-29T21:04:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fe28de9a_af3d2d96",
      "range": {
        "startLine": 198,
        "startChar": 16,
        "endLine": 198,
        "endChar": 30
      },
      "revId": "f3f02b4474118f40c9d41ef64131699614599b9f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}