{
  "comments": [
    {
      "key": {
        "uuid": "39ebc864_e173e65d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/index/ChangeSchemas.java",
        "patchSetId": 9
      },
      "lineNbr": 277,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-29T18:21:32Z",
      "side": 1,
      "message": "This field is deprecated. Please fix all Eclipse warnings.",
      "revId": "f54bfc241f7a2402b73463254f6f5100dfde4efa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ebc864_c180e295",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/TopicPredicate.java",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-29T18:21:32Z",
      "side": 1,
      "message": "Not used. Please organize all imports.",
      "revId": "f54bfc241f7a2402b73463254f6f5100dfde4efa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ebc864_0177ea4d",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/TopicPredicate.java",
        "patchSetId": 9
      },
      "lineNbr": 65,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-29T18:14:34Z",
      "side": 1,
      "message": "No, you still need the LegacyChangeIdPredicate here. Otherwise this will just return some arbitrary change matching the topic predicate, which may or may not be the change we\u0027re interested in.\n\n Predicate\u003cChangeData\u003e thisId \u003d new LegacyChangeIdPredicate(cd.getId());\n Iterable\u003cChangeData\u003e results \u003d index.getSource(and(thisId, this), 0, 1);\n return !Iterables.isEmpty(results.read());",
      "revId": "f54bfc241f7a2402b73463254f6f5100dfde4efa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19f28455_40d16ec4",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/query/change/TopicPredicate.java",
        "patchSetId": 9
      },
      "lineNbr": 65,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2015-05-29T18:18:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39ebc864_0177ea4d",
      "revId": "f54bfc241f7a2402b73463254f6f5100dfde4efa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ebc864_814adaf9",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 9
      },
      "lineNbr": 463,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2015-05-29T18:32:43Z",
      "side": 1,
      "message": "The issue here is that Lucene\u0027s QueryBuilder apparently returns a null query when you do a full-text search for the empty string. So, we should add some checks to LuceneChangeIndex to make this obvious.\n\nBut I guess the question is what is the right behavior here from the search side. Maybe ChangeQueryBuilder.topic() should return an ExactTopicPredicate if the value is \"\"?",
      "revId": "f54bfc241f7a2402b73463254f6f5100dfde4efa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}