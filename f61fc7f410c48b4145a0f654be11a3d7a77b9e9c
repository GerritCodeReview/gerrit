{
  "comments": [
    {
      "key": {
        "uuid": "f4a04285_9d11b12f",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "Using abstract classes for tests is a bad practice and introduces many issues (remember my talk about AbstractDaemonTest ;-) ). We do have such abstract test classes within Gerrit but I am actually trying to get rid of them. For this reason, I\u0027m not very excited if we introduce another abstract test class with this change.\n\nIsn\u0027t there a way to rewrite this class to be a JUnit rule? We probably can\u0027t use LocalDiskRepositoryTestCase then but there should be another way to achieve the same.",
      "range": {
        "startLine": 34,
        "startChar": 22,
        "endLine": 34,
        "endChar": 41
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42c1b8d2_7c6e3ee1",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "f4a04285_9d11b12f",
      "range": {
        "startLine": 34,
        "startChar": 22,
        "endLine": 34,
        "endChar": 41
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b109d5ad_4f872c04",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "I know that other Gerrit developers prefer to use single-letter variable names but it\u0027s actually discouraged in Java (in general and also in our internal best practices for most cases - there are some valid exception but this isn\u0027t one of them).",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02432311_8521e995",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b109d5ad_4f872c04",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 10
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c1346f8_c21f1ae8",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "This assertion doesn\u0027t do anything. Is maybe an isTrue() or isFalse() missing?",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 65
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f975f323_5fe74a61",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done, nice catch!",
      "parentUuid": "7c1346f8_c21f1ae8",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 65
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6549dd9_9de3c84f",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "Isn\u0027t the save() call missing here?",
      "range": {
        "startLine": 47,
        "startChar": 4,
        "endLine": 48,
        "endChar": 71
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8f9badf_0f494470",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done\nThe save call wasn\u0027t missing: I pushed the responsibility of calling \"save\" to the tests. Tests depending on initSite require the site to be new, and creating the configuration here invalidates this hypothesis.\n(This sounds like a bad idea, and is no more)",
      "parentUuid": "e6549dd9_9de3c84f",
      "range": {
        "startLine": 47,
        "startChar": 4,
        "endLine": 48,
        "endChar": 71
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09ac794f_b57c80af",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "It\u0027s a bit confusing to have this method. As we both use site.site_path and site.site_path.toString() in tests, it\u0027s not obvious what this method returns. By the way, I don\u0027t think we need this method. There are only a few usages and they could easily just inline site.site_path.toString(). ReindexIT currently even has some usages of site.site_path.toString() and those occurrences don\u0027t negatively affect readability in my opinion.",
      "range": {
        "startLine": 51,
        "startChar": 19,
        "endLine": 51,
        "endChar": 32
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "382313b2_9b2fe7a4",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "09ac794f_b57c80af",
      "range": {
        "startLine": 51,
        "startChar": 19,
        "endLine": 51,
        "endChar": 32
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12a146ad_5432e8ce",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "To be honest, I see no reason for having this method (and the class ConfigBuilder) in this class. It\u0027s a different concern than the setup of the test environment. Hence, I would move ConfigBuilder outside of this class and make it a top-level class.\n\nIf we simply do so, I currently see not much benefit of having it compared to directly using FileBasedConfig. Maybe we should change the constructor to accept an object of type SitePaths instead. Thus, the class would facilitate the modification of the Gerrit config of a site in general. (If we do so, we should probably also reconsider the name of the class.)\n\nOn the other hand, the class ConfigBuilder has the disadvantage that it only allows to set string values and hides all additional methods available on FileBasedConfig. The more I think about it, the more I think that we should use FileBasedConfig directly. If the construction of the FileBasedConfig turns out to negatively impact readability, we can introduce a helper (outside of this class) which returns a FileBasedConfig for a SitePaths instance.",
      "range": {
        "startLine": 55,
        "startChar": 25,
        "endLine": 55,
        "endChar": 39
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e313fb64_5b081e12",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done - removed",
      "parentUuid": "12a146ad_5432e8ce",
      "range": {
        "startLine": 55,
        "startChar": 25,
        "endLine": 55,
        "endChar": 39
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59aeb18c_db7228be",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "Why do we need an assertion here?",
      "range": {
        "startLine": 63,
        "startChar": 4,
        "endLine": 63,
        "endChar": 66
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "436082a4_caf25124",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "The assertion is not needed, but I prefer to check the exit code: if a test depends on this method, it\u0027s good to know what can be expected. I think I\u0027ve seen other helper methods do this\n\nDo you think I should remove the assertion?",
      "parentUuid": "59aeb18c_db7228be",
      "range": {
        "startLine": 63,
        "startChar": 4,
        "endLine": 63,
        "endChar": 66
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3812dfc_b90dff37",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "ConfigBuilder",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 16
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "186a5a68_7c76c3b3",
        "filename": "javatests/com/google/gerrit/pgm/AbstractProgramTest.java",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Gone",
      "parentUuid": "d3812dfc_b90dff37",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 16
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fd94af2_3374acb8",
        "filename": "javatests/com/google/gerrit/pgm/BUILD",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "What do we need this dependency for?",
      "range": {
        "startLine": 14,
        "startChar": 8,
        "endLine": 14,
        "endChar": 44
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d766b22_22ba8d3c",
        "filename": "javatests/com/google/gerrit/pgm/BUILD",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Gone",
      "parentUuid": "1fd94af2_3374acb8",
      "range": {
        "startLine": 14,
        "startChar": 8,
        "endLine": 14,
        "endChar": 44
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbe19965_116ee89a",
        "filename": "javatests/com/google/gerrit/pgm/DaemonTest.java",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "It\u0027s creative to stop the infinite execution by throwing an exception but having the necessity to run RuntimeShutdown.manualShutdown() is a bit too much insider knowledge for my tastes. In addition, using exceptions for flow control isn\u0027t ideal either.\n\nMy suggestion would be to start the daemon in another thread and to stop it with --stop-only. Thus, we can also retrieve the exit code from the main() method (e.g. pack it in a CompletableFuture) and really verify that the daemon was started successfully. To be absolutely on the safe side, we could additionally stop the daemon with --stop-only in a tearDown() method.",
      "range": {
        "startLine": 34,
        "startChar": 14,
        "endLine": 35,
        "endChar": 87
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3cc17d0_b9096368",
        "filename": "javatests/com/google/gerrit/pgm/DaemonTest.java",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "I wasn\u0027t able to get a clean code using --stop-only :-(\nMeanwhile I have cleaned it up a bit, removing the need for the exception and chekcing the exit code.",
      "parentUuid": "cbe19965_116ee89a",
      "range": {
        "startLine": 34,
        "startChar": 14,
        "endLine": 35,
        "endChar": 87
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a08aa4a1_e0266505",
        "filename": "javatests/com/google/gerrit/pgm/DaemonTest.java",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-06-06T14:41:44Z",
      "side": 1,
      "message": "Different suggestion: Introduce this method\n\n private void stopDaemon() {\n    Daemon daemon \u003d new Daemon(() -\u003e {}, siteRule.getSitePaths().site_path);\n    try {\n      daemon.main(new String[] {\"--stop-only\"});\n    } catch (Exception e) {\n      throw new IllegalStateException(e);\n    }\n  }\n\nand use it instead of RuntimeShutdown.manualShutdown(). Thus, it would be more obvious what is happening, we wouldn\u0027t depend on insider knowledge, and we wouldn\u0027t need the dependency on //java/com/google/gerrit/acceptance:lib.\n\nSince you got the verification of the exit codes working, I think we can also remove the AtomicBoolean.",
      "parentUuid": "f3cc17d0_b9096368",
      "range": {
        "startLine": 34,
        "startChar": 14,
        "endLine": 35,
        "endChar": 87
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "181c10ed_808720a0",
        "filename": "javatests/com/google/gerrit/pgm/DaemonTest.java",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "Isn\u0027t it a bit risky that we rely on the implementation of Daemon to work correctly? If the implementation didn\u0027t die as we expect, we would have an infinite execution here which is only stopped by Bazel due to a timeout after quite some time. My suggestion above (with the --stop-only option) would ensure that we always stop the daemon but can still verify whether the exit code is the expected one.",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 70,
        "endChar": 66
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8b83b47_99b58c5d",
        "filename": "javatests/com/google/gerrit/pgm/DaemonTest.java",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "I agree that it is a bit risky to rely on the implementation of Daemon for this test to \"finish\".\n\nI\u0027ve added a call to RuntimeShutdown.manualShutdown() and a JUnit timeout of 15 (more than plenty here, I think).",
      "parentUuid": "181c10ed_808720a0",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 70,
        "endChar": 66
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d7b7c48_86039a93",
        "filename": "javatests/com/google/gerrit/pgm/DaemonTest.java",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-06-06T14:41:44Z",
      "side": 1,
      "message": "Since you added RuntimeShutdown::manualShutdown, we ensure that we stop the Daemon if it doesn\u0027t automatically fail as expected. Theoretically, we wouldn\u0027t need the timeout anymore.",
      "parentUuid": "b8b83b47_99b58c5d",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 70,
        "endChar": 66
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "842be578_156d9712",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "Without the ConfigBuilder#save in AbstractProgramTest#setUpSiteData, this file is not created at the moment. In general, I think it might be a good idea to have two different setup variants. If AbstractProgramTest was a JUnit rule as I suggested, we could have two different factory methods: one which sets up the etc directory and gerrit_config file and one which doesn\u0027t.",
      "range": {
        "startLine": 26,
        "startChar": 87,
        "endLine": 26,
        "endChar": 100
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "885b720a_b99bcf9c",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "842be578_156d9712",
      "range": {
        "startLine": 26,
        "startChar": 87,
        "endLine": 26,
        "endChar": 100
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f832efd1_724a1c98",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "This test tests two different aspects:\n1) running init succeeds\n2) init creates the directories/files\n\nIn my opinion, we should have different tests for those aspects.\n\nActually, each of the checks for the creation of the directories/files would also be a separate test, either written by hand or as part of a ParameterizedTest.",
      "range": {
        "startLine": 30,
        "startChar": 14,
        "endLine": 30,
        "endChar": 34
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82f12c02_88756a30",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "I don\u0027t think running the Init program 11 times to check that a directory \"did not exist and was created\" is worth the cost (slower tests).\nAlso, using a ParameterizedTest requires duplicating the list of directory/file names. Do you think it\u0027s a good idea, and should be done?\nI thought of using a @BeforeClass method, but then the TestRule and LocalDiskRepositoryTestCase classes can\u0027t be used.\n\nI have separated the two aspects you mentioned in two separate methods.",
      "parentUuid": "f832efd1_724a1c98",
      "range": {
        "startLine": 30,
        "startChar": 14,
        "endLine": 30,
        "endChar": 34
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84ca8ae1_9f7118f5",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-06-06T14:41:44Z",
      "side": 1,
      "message": "Okay. Let\u0027s leave it this way.",
      "parentUuid": "82f12c02_88756a30",
      "range": {
        "startLine": 30,
        "startChar": 14,
        "endLine": 30,
        "endChar": 34
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69ac5286_1d763b86",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "Why not use ImmutableList here?",
      "range": {
        "startLine": 31,
        "startChar": 4,
        "endLine": 31,
        "endChar": 14
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1cab996_506dd610",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69ac5286_1d763b86",
      "range": {
        "startLine": 31,
        "startChar": 4,
        "endLine": 31,
        "endChar": 14
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97282efb_91da35b5",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "Wouldn\u0027t ImmutableList#of be clearer here?",
      "range": {
        "startLine": 32,
        "startChar": 8,
        "endLine": 32,
        "endChar": 37
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7a9e01c_f03522de",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97282efb_91da35b5",
      "range": {
        "startLine": 32,
        "startChar": 8,
        "endLine": 32,
        "endChar": 37
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "349d5a77_e1ce1a02",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "Here, below, and in other files: Why not use Files#exists instead of converting to the old API?",
      "range": {
        "startLine": 48,
        "startChar": 17,
        "endLine": 48,
        "endChar": 39
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90a032f1_0dd43db5",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "349d5a77_e1ce1a02",
      "range": {
        "startLine": 48,
        "startChar": 17,
        "endLine": 48,
        "endChar": 39
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7a5da01_2fa1c213",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "Here and below: Path#getFileName() only takes the last element in the path. Hence, relativization of the path is wasted effort.",
      "range": {
        "startLine": 49,
        "startChar": 17,
        "endLine": 49,
        "endChar": 62
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc64833b_34313b59",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7a5da01_2fa1c213",
      "range": {
        "startLine": 49,
        "startChar": 17,
        "endLine": 49,
        "endChar": 62
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dce98ba5_90110a18",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "Copy-paste typo?",
      "range": {
        "startLine": 53,
        "startChar": 9,
        "endLine": 53,
        "endChar": 11
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a67f279a_f5beb97b",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dce98ba5_90110a18",
      "range": {
        "startLine": 53,
        "startChar": 9,
        "endLine": 53,
        "endChar": 11
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40a1e100_27fc8e09",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "Here and in AbstractProgramTest: Using \u0027--batch\u0027 would be more readable in my opinion.",
      "range": {
        "startLine": 54,
        "startChar": 42,
        "endLine": 54,
        "endChar": 44
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2428bd68_f04d96e6",
        "filename": "javatests/com/google/gerrit/pgm/InitTest.java",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40a1e100_27fc8e09",
      "range": {
        "startLine": 54,
        "startChar": 42,
        "endLine": 54,
        "endChar": 44
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9e6eb43_7340c274",
        "filename": "javatests/com/google/gerrit/pgm/LsTest.java",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "Here and in other files: In the past, we decided to drop \u0027test\u0027 from such test methods. Ideally, they would describe what they are testing and what the expectation is (e.g. like RevisionDiffIT#modifiedBinaryFileIsIncludedInDiff). For test methods, it\u0027s acceptable if their name is longer but more descriptive.",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 23,
        "endChar": 32
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb52067b_89195298",
        "filename": "javatests/com/google/gerrit/pgm/LsTest.java",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9e6eb43_7340c274",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 23,
        "endChar": 32
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d0b4472_153ea931",
        "filename": "javatests/com/google/gerrit/pgm/LsTest.java",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "A lot of the new tests verify exit codes. Would it make sense to introduce a Truth subject for them?",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 60
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f51f5cdf_888f6dfb",
        "filename": "javatests/com/google/gerrit/pgm/LsTest.java",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d0b4472_153ea931",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 60
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd951562_9215d42f",
        "filename": "javatests/com/google/gerrit/pgm/PasswdTest.java",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "This tests two aspects:\n1) Passwd succeeds\n2) password is stored\n\nWe should have two separate tests.",
      "range": {
        "startLine": 24,
        "startChar": 14,
        "endLine": 24,
        "endChar": 37
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf4b8ec4_d5fcff7b",
        "filename": "javatests/com/google/gerrit/pgm/PasswdTest.java",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd951562_9215d42f",
      "range": {
        "startLine": 24,
        "startChar": 14,
        "endLine": 24,
        "endChar": 37
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ff3bbe9_4fdeec3e",
        "filename": "javatests/com/google/gerrit/pgm/PasswdTest.java",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "Why cat?",
      "range": {
        "startLine": 25,
        "startChar": 11,
        "endLine": 25,
        "endChar": 14
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8165a3ad_1e917f1c",
        "filename": "javatests/com/google/gerrit/pgm/PasswdTest.java",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ff3bbe9_4fdeec3e",
      "range": {
        "startLine": 25,
        "startChar": 11,
        "endLine": 25,
        "endChar": 14
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1768ee21_d506d2be",
        "filename": "javatests/com/google/gerrit/pgm/PasswdTest.java",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2018-05-30T15:21:18Z",
      "side": 1,
      "message": "--site-path might be more readable.",
      "range": {
        "startLine": 26,
        "startChar": 43,
        "endLine": 26,
        "endChar": 45
      },
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bf2d306_b2910820",
        "filename": "javatests/com/google/gerrit/pgm/PasswdTest.java",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1061517
      },
      "writtenOn": "2018-06-01T13:29:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1768ee21_d506d2be",
      "range": {
        "startLine": 26,
        "startChar": 43,
        "endLine": 26,
        "endChar": 45
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "f61fc7f410c48b4145a0f654be11a3d7a77b9e9c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}