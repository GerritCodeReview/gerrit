{
  "comments": [
    {
      "key": {
        "uuid": "7cc449d2_c467fe23",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 2
      },
      "lineNbr": 727,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-03-11T05:27:41Z",
      "side": 1,
      "message": "I think we should combine the two diff thread pools into a single pool. There is no reason to run 3 * CPUs of threads out of the box idling just in case a diff request is made.",
      "revId": "f65de952ca2d86de5439f6a0412ffeeb76a87000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66f758e2_e3ba3205",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 2
      },
      "lineNbr": 727,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2015-03-19T15:05:17Z",
      "side": 1,
      "message": "I am working on combining the 2 diff thread pools into a single pool and the pool will be a standard ExecutorService now that we can interrupt MyersDiff. \n\nDo we really need to keep idle threads, can I use a common CachedThreadPool instead (corePoolSize\u003d0 and keepAliveTime\u003d60sec)?",
      "parentUuid": "7cc449d2_c467fe23",
      "revId": "f65de952ca2d86de5439f6a0412ffeeb76a87000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2637206d_e1ba6605",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 2
      },
      "lineNbr": 727,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-03-19T16:29:57Z",
      "side": 1,
      "message": "No, I think we can safely use a CachedThreadPool instead. Which would be much simpler code to write.",
      "parentUuid": "66f758e2_e3ba3205",
      "revId": "f65de952ca2d86de5439f6a0412ffeeb76a87000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d76190bc_772a5079",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/Daemon.java",
        "patchSetId": 2
      },
      "lineNbr": 324,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-03-11T05:27:41Z",
      "side": 1,
      "message": "Any binding added here must also be in the WebAppInitializer.\n\nBut I think this should be combined with the IntralineWorkerPool.",
      "revId": "f65de952ca2d86de5439f6a0412ffeeb76a87000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d76190bc_97c36437",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/DiffWorkerPool.java",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-03-11T05:27:41Z",
      "side": 1,
      "message": "I ... am unsure you can do this safely.\n\nstop() throws ThreadDeath which nobody catches. Locks are released on the way out but the state of any object is unknown and unpredictable.\n\ntoFileHeader is going to dig deep around inside JGit to load the blobs into memory. That pack file accessing can be unsafe.\n\nNote that IntraLineWorkerPool tries harder to prevent this problem by shipping over the full file contents for either side so that no JGit locks need to be acquired during the (possibly broken) computation.",
      "revId": "f65de952ca2d86de5439f6a0412ffeeb76a87000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d76190bc_37a37880",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/DiffWorkerPool.java",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2015-03-11T15:29:20Z",
      "side": 1,
      "message": "Do you have a suggestion how I could do it but easier than extracting the files to pass to the worker (this would involve a lot of changes which I am not confident putting on our production to be able to upgrade to gerrit 2.10)? \n\nI think it would be easier to modify jgit MyersDiff to be interruptible, WDYT?",
      "parentUuid": "d76190bc_97c36437",
      "revId": "f65de952ca2d86de5439f6a0412ffeeb76a87000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7cc449d2_c4037e0c",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/DiffWorkerPool.java",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-03-11T16:59:49Z",
      "side": 1,
      "message": "Yes. It would be easier to make MyersDiff interruptible, then we can eliminate these dangerous thread kills.",
      "parentUuid": "d76190bc_37a37880",
      "revId": "f65de952ca2d86de5439f6a0412ffeeb76a87000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d76190bc_b7c86852",
        "filename": "gerrit-server/src/main/java/com/google/gerrit/server/patch/PatchListLoader.java",
        "patchSetId": 2
      },
      "lineNbr": 189,
      "author": {
        "id": 1001240
      },
      "writtenOn": "2015-03-11T05:27:41Z",
      "side": 1,
      "message": "nit: indentation is wrong here.",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 189,
        "endChar": 87
      },
      "revId": "f65de952ca2d86de5439f6a0412ffeeb76a87000",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}