{
  "comments": [
    {
      "key": {
        "uuid": "ff960353_fa84254a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-18T20:14:36Z",
      "side": 1,
      "message": "Gerrit master or slave?",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 17
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc110526_2319ed4a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-06-18T21:19:28Z",
      "side": 1,
      "message": "Wouldn\u0027t matter in this case, but I tested with 8081 being master (non-slave). Note: we should start no longer using such terms; cf. Issue 12945.",
      "parentUuid": "ff960353_fa84254a",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 17
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "598c39fb_7afdbcf1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-18T21:57:14Z",
      "side": 1,
      "message": "Yes, I am following the Git community discussion.\nThanks for the pointer: I\u0027ve added my comments there.",
      "parentUuid": "fc110526_2319ed4a",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 17
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c7a6995_83140d82",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-18T22:25:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "598c39fb_7afdbcf1",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 17
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7312f22c_ac4ccceb",
        "filename": "e2e-tests/src/test/resources/data/com/google/gerrit/scenarios/CheckMasterBranchReplica1.json",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-18T20:14:36Z",
      "side": 1,
      "message": "HOSTNAME1?",
      "range": {
        "startLine": 3,
        "startChar": 19,
        "endLine": 3,
        "endChar": 27
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eadeef79_9bebd5e1",
        "filename": "e2e-tests/src/test/resources/data/com/google/gerrit/scenarios/CheckMasterBranchReplica1.json",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-06-18T21:19:28Z",
      "side": 1,
      "message": "No, as this specific test is based on a locahost-only setup. The port is 8081 though. Such tests can be used as examples to come up with other test cases or scenarios, as usual with these.",
      "parentUuid": "7312f22c_ac4ccceb",
      "range": {
        "startLine": 3,
        "startChar": 19,
        "endLine": 3,
        "endChar": 27
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e972d0e_3e8fdad4",
        "filename": "e2e-tests/src/test/resources/data/com/google/gerrit/scenarios/CheckMasterBranchReplica1.json",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-18T21:57:14Z",
      "side": 1,
      "message": "One Gerrit server with two listeners then?",
      "parentUuid": "eadeef79_9bebd5e1",
      "range": {
        "startLine": 3,
        "startChar": 19,
        "endLine": 3,
        "endChar": 27
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7be63b51_0668cdf9",
        "filename": "e2e-tests/src/test/resources/data/com/google/gerrit/scenarios/CheckMasterBranchReplica1.json",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-06-19T01:15:29Z",
      "side": 1,
      "message": "Two gerrit server instances. One listening on port 8080 or default (the \"replicator\"), and the other operating on port 8081 (the replica). Both also have differing ssh ports of course.",
      "parentUuid": "0e972d0e_3e8fdad4",
      "range": {
        "startLine": 3,
        "startChar": 19,
        "endLine": 3,
        "endChar": 27
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09392677_3a77d34c",
        "filename": "e2e-tests/src/test/resources/data/com/google/gerrit/scenarios/CheckMasterBranchReplica1.json",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-19T22:04:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7be63b51_0668cdf9",
      "range": {
        "startLine": 3,
        "startChar": 19,
        "endLine": 3,
        "endChar": 27
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aca9ae75_cc07232f",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckMasterBranchReplica1.scala",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-18T20:14:36Z",
      "side": 1,
      "message": "isn\u0027t this all caps? HTTP_PORT1?",
      "range": {
        "startLine": 29,
        "startChar": 32,
        "endLine": 29,
        "endChar": 42
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fa4b039_c0018631",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckMasterBranchReplica1.scala",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-06-18T21:19:28Z",
      "side": 1,
      "message": "No, as the core framework (super-parent GerritSimulation) converts these terms to properties internally.",
      "parentUuid": "aca9ae75_cc07232f",
      "range": {
        "startLine": 29,
        "startChar": 32,
        "endLine": 29,
        "endChar": 42
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff7f68b7_792b37c3",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckMasterBranchReplica1.scala",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-18T21:57:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0fa4b039_c0018631",
      "range": {
        "startLine": 29,
        "startChar": 32,
        "endLine": 29,
        "endChar": 42
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea5f3c55_8b249c05",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckMasterBranchReplica1.scala",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-18T20:14:36Z",
      "side": 1,
      "message": "This would actually just get the timing of the get branch operation, whilst here we are testing replication, correct? I would expect to get the replication time as a timing result.",
      "range": {
        "startLine": 47,
        "startChar": 12,
        "endLine": 47,
        "endChar": 37
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f80f7a0b_72d02756",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckMasterBranchReplica1.scala",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-06-18T21:19:28Z",
      "side": 1,
      "message": "This gets the replica\u0027s master branch revision [5] as per CheckMasterBranchReplica1.json. The lines below compare that revision with the one from the replication-initiating node. If they match, then the test passes, as the expected commit was actually replicated.\n\n[5] https://gerrit-documentation.storage.googleapis.com/Documentation/3.0.11/rest-api-projects.html#get-branch",
      "parentUuid": "ea5f3c55_8b249c05",
      "range": {
        "startLine": 47,
        "startChar": 12,
        "endLine": 47,
        "endChar": 37
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6d8f0a6_e69c1b05",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckMasterBranchReplica1.scala",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-18T21:57:14Z",
      "side": 1,
      "message": "Gotcha, my question was on the timing that Gatling reports as the performance of the execution. Gatling is a tool per measuring performance and scalability: knowing that the replication works for sure but also if it is fast or slow, scalable or not scalable.",
      "parentUuid": "f80f7a0b_72d02756",
      "range": {
        "startLine": 47,
        "startChar": 12,
        "endLine": 47,
        "endChar": 37
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b700e64d_7f50c699",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckMasterBranchReplica1.scala",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-06-19T01:15:29Z",
      "side": 1,
      "message": "However the scope of this showcase test scenario is simpler. This is just the beginning, a basic replication e2e test scenario for a simple localhost setup. And again, functional and not load or performance oriented. But it may serve as an example to help develop more complex or intense scenarios.\n\nWe need to start somewhere I think. This should feed the cause of iteratively sharing otherwise internal (duplicated, expensive) smoke and load test suites. Automating those e2e suites come with the price of repeating frameworks over and over. Plus, a second level of reuse is reached when the same framework resources get used not only for functional but also load purposes (and vice-versa). The gc-conductor case I previously mentioned is a good example of doing just that.",
      "parentUuid": "a6d8f0a6_e69c1b05",
      "range": {
        "startLine": 47,
        "startChar": 12,
        "endLine": 47,
        "endChar": 37
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "def7a85e_03ad6b30",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckMasterBranchReplica1.scala",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-19T22:04:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b700e64d_7f50c699",
      "range": {
        "startLine": 47,
        "startChar": 12,
        "endLine": 47,
        "endChar": 37
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "865051b3_8f371e24",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckMasterBranchReplica1.scala",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-18T20:14:36Z",
      "side": 1,
      "message": "Should this be set as a variable? So that it can be then executed with more users and test the performance of the replication?",
      "range": {
        "startLine": 54,
        "startChar": 18,
        "endLine": 54,
        "endChar": 19
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "031ab661_067d84d2",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckMasterBranchReplica1.scala",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-06-18T21:19:28Z",
      "side": 1,
      "message": "Not in this specific test case, but it could be done to come up with another test or scenario. This kind of e2e scenario is more functional than load or performance. But it does reuse the same Gatling core framework in Gerrit. This approach has been introduced at the beginning of [6] (below).\n\nBeside core, the high-availability and multi-site plugins started having such scenarios too. And gc-conductor (more recently) started having hybrid scenarios, i.e., testing e2e functionality using some load ([7]\u0027s topmost commits). Functional e2e then met load, hence this vision of reusing the same Gatling framework in Gerrit.\n\n[6] https://gerrit-documentation.storage.googleapis.com/Documentation/3.0.11/dev-e2e-tests.html\n[7] https://gerrit.googlesource.com/plugins/gc-conductor/+log/refs/heads/stable-3.0",
      "parentUuid": "865051b3_8f371e24",
      "range": {
        "startLine": 54,
        "startChar": 18,
        "endLine": 54,
        "endChar": 19
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6999d1e5_7b6ae463",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckMasterBranchReplica1.scala",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-18T21:57:14Z",
      "side": 1,
      "message": "I am wondering if then the test could be rewritten simpler without Gatling then? If we are not using Gatling for load testing, I am not sure is the right tool.\n\nE2E testing is cool and Gatling allows you to create scenarios. But the scenarios should be parametrised with variables to scale up users and demonstrate that the scenarios are scalable.\n\nIn the home page of Gatling you see \"load test as code\", where \"load\" is important.\n\nWe can definitely start with E2E tests but the \"load\" factor should be parametrised so that the scenarios can be replicated for load.\n\nExample: introduce variables for the number of users, for the project names, etc.\n\nHaving more users on different projects, each scenarios can work in isolation and not interfere between each other.  That allows later on to scale the users and projects and make sure that the timings are flat and the system is scalable.",
      "parentUuid": "031ab661_067d84d2",
      "range": {
        "startLine": 54,
        "startChar": 18,
        "endLine": 54,
        "endChar": 19
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "711c8f46_8dafdde3",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckMasterBranchReplica1.scala",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1012732
      },
      "writtenOn": "2020-06-19T01:15:29Z",
      "side": 1,
      "message": "Agree. Now, that is not exactly the scope or goal of this specific change, as previously discussed. But we should definitely continue growing the core framework and surrounding core or plugin scenarios, for load yes but also functional e2e reuse. That goal is why I\u0027ve been spending a lot of Ericsson\u0027s time (and my own), on iterating over humble steps that way.",
      "parentUuid": "6999d1e5_7b6ae463",
      "range": {
        "startLine": 54,
        "startChar": 18,
        "endLine": 54,
        "endChar": 19
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70330cd0_007c6443",
        "filename": "e2e-tests/src/test/scala/com/google/gerrit/scenarios/CheckMasterBranchReplica1.scala",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-06-19T22:04:56Z",
      "side": 1,
      "message": "Gotcha, however, replacing a \"magic value\" of 1 with a variable doesn\u0027t look like a big effort and could be included in this change.\n\nAlso, this part of the setup should be part of the scenario IMHO: setup is typically preparing more the environment while the scenario is executing the actions of the test case.",
      "parentUuid": "711c8f46_8dafdde3",
      "range": {
        "startLine": 54,
        "startChar": 18,
        "endLine": 54,
        "endChar": 19
      },
      "revId": "f66981a2e27df2267ce4c69f8f6d857107d4795f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}