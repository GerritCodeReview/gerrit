{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6cf50ffc_6d09f7e2",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-bulk-vote-flow/gr-change-list-bulk-vote-flow.ts",
        "patchSetId": 23
      },
      "lineNbr": 54,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-03-18T13:21:56Z",
      "side": 1,
      "message": "can you filter `labels` in line 100 to skip unrendered rows instead of rendering and hiding? Hard to tell since this class is not used, but I\u0027d guess the label access level would never change during the dialog",
      "revId": "f6c82218ca9d935b201a8aa75b9dbb5f014f7e3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8566ecaa_2928dcef",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-bulk-vote-flow/gr-change-list-bulk-vote-flow.ts",
        "patchSetId": 23
      },
      "lineNbr": 57,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-03-18T13:21:56Z",
      "side": 1,
      "message": "consider just selecting h3 by tag directly if you don\u0027t want/need to use a semantic class name.\n\nexamples: https://css-tricks.com/semantic-class-names/",
      "range": {
        "startLine": 57,
        "startChar": 8,
        "endLine": 57,
        "endChar": 18
      },
      "revId": "f6c82218ca9d935b201a8aa75b9dbb5f014f7e3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb4e9674_695e304d",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-bulk-vote-flow/gr-change-list-bulk-vote-flow.ts",
        "patchSetId": 23
      },
      "lineNbr": 63,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-03-18T13:23:38Z",
      "side": 1,
      "message": "there is only one of this type, right? Then the styles can be merged above",
      "range": {
        "startLine": 63,
        "startChar": 19,
        "endLine": 63,
        "endChar": 32
      },
      "revId": "f6c82218ca9d935b201a8aa75b9dbb5f014f7e3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7756d3e_b31ffe17",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-bulk-vote-flow/gr-change-list-bulk-vote-flow.ts",
        "patchSetId": 23
      },
      "lineNbr": 89,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-03-18T13:21:56Z",
      "side": 1,
      "message": "not used",
      "range": {
        "startLine": 89,
        "startChar": 21,
        "endLine": 89,
        "endChar": 25
      },
      "revId": "f6c82218ca9d935b201a8aa75b9dbb5f014f7e3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a34bb3ad_ead457c6",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-bulk-vote-flow/gr-change-list-bulk-vote-flow.ts",
        "patchSetId": 23
      },
      "lineNbr": 107,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-03-18T13:21:56Z",
      "side": 1,
      "message": "you can query the score rows and assert these properties instead of exposing your private methods to tests",
      "range": {
        "startLine": 103,
        "startChar": 18,
        "endLine": 107,
        "endChar": 47
      },
      "revId": "f6c82218ca9d935b201a8aa75b9dbb5f014f7e3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c316849d_3ba2597a",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-bulk-vote-flow/gr-change-list-bulk-vote-flow.ts",
        "patchSetId": 23
      },
      "lineNbr": 142,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-03-21T09:15:31Z",
      "side": 1,
      "message": "If you write this as a for-loop instead of a reduce, you could just keep your set and wouldn\u0027t constantly have to parse out \u0027previous\u0027 from the map into the set and then back.\n\n```\nconst allLabels \u003d this.selectedChanges.filter(changes \u003d\u003e !!changes.permitted_labels).map(changes \u003d\u003e changes.permitted_labels)\n\nif (allLabels.length \u003d\u003d\u003d 0) return {};\nlet labelSet \u003d labelsToSets(allLabels[0]);\n\nfor (let i \u003d 1; i \u003c allLabels.length; ++i) {\n  const currentLabelSet \u003d labelsToSets(allLabels[i]);\n  labelSet \u003d mergeLabelSets(labelSet, currentLabels);\n}\n\nreturn setsToLabels(labelSet);\n}\n```\n\nOr if you really want to map-reduce:\n\n```\n    return setsToLabels(\n      this.selectedChanges\n        .filter(changes \u003d\u003e !!changes.permitted_labels)\n        .map(changes \u003d\u003e changes.permitted_labels)\n        .map(labelsToSets)\n        .reduce(mergeLabelSets));\n```\n\nAnd then make some nice helper functions that convert labelsToSets in a way that\u0027s easily usable for mergeLabelSets.\n\nThat way you can test those functions individually.\n\nOne potential easy format is `Map\u003cstring, Set\u003cnumber\u003e\u003e`\n\nI would move those helper functions to label-util.ts and test them there.",
      "revId": "f6c82218ca9d935b201a8aa75b9dbb5f014f7e3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c77060a_f4dfd345",
        "filename": "polygerrit-ui/app/elements/change-list/gr-change-list-bulk-vote-flow/gr-change-list-bulk-vote-flow_test.ts",
        "patchSetId": 23
      },
      "lineNbr": 115,
      "author": {
        "id": 1119195
      },
      "writtenOn": "2022-03-18T13:21:56Z",
      "side": 1,
      "message": "why does this small method need to be exposed and mocked instead of running its real code? Can the test data be improved so that we can run the utils directly without a stub?",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 115,
        "endChar": 76
      },
      "revId": "f6c82218ca9d935b201a8aa75b9dbb5f014f7e3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0517a5f4_b406b899",
        "filename": "polygerrit-ui/app/utils/label-util.ts",
        "patchSetId": 23
      },
      "lineNbr": 39,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-03-21T09:15:31Z",
      "side": 1,
      "message": "Don\u0027t import code from elements into util libraries. Elements code should depend on utils, not the other way around.",
      "revId": "f6c82218ca9d935b201a8aa75b9dbb5f014f7e3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2f9d2f0_352e13ad",
        "filename": "polygerrit-ui/app/utils/label-util.ts",
        "patchSetId": 23
      },
      "lineNbr": 340,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-03-21T09:15:31Z",
      "side": 1,
      "message": "Please add tests for this in label-util_test.ts",
      "revId": "f6c82218ca9d935b201a8aa75b9dbb5f014f7e3a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}