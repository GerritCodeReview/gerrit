{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e6f34510_b628afc0",
        "filename": "java/com/google/gerrit/server/notedb/RepoSequence.java",
        "patchSetId": 8
      },
      "lineNbr": 345,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2022-05-26T00:28:54Z",
      "side": 1,
      "message": "Should we also mention that this method is meant for use-cases where we only need to read the last sequence number and don\u0027t intend to use the returned value to update the sequence?",
      "range": {
        "startLine": 345,
        "startChar": 48,
        "endLine": 345,
        "endChar": 49
      },
      "revId": "f7520655665dcd7aac7d47c297f868443a02bff1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "deedf981_ea971de1",
        "filename": "java/com/google/gerrit/server/notedb/RepoSequence.java",
        "patchSetId": 8
      },
      "lineNbr": 345,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2022-05-26T00:47:44Z",
      "side": 1,
      "message": "\u003e Should we also mention that this method is meant for use-cases where we only need to read the last sequence number and don\u0027t intend to use the returned value to update the sequence?\n\nI don\u0027t think that is necessary. No getter of global data could ever be used that way safely in a threaded environment.\n\ni.e. even the \"current\" one above can\u0027t be used that way (and it is actually a waste for it to have a lock around it).",
      "parentUuid": "e6f34510_b628afc0",
      "range": {
        "startLine": 345,
        "startChar": 48,
        "endLine": 345,
        "endChar": 49
      },
      "revId": "f7520655665dcd7aac7d47c297f868443a02bff1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f98c9451_4a8098fe",
        "filename": "java/com/google/gerrit/server/notedb/RepoSequence.java",
        "patchSetId": 8
      },
      "lineNbr": 345,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2022-05-26T16:31:39Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "deedf981_ea971de1",
      "range": {
        "startLine": 345,
        "startChar": 48,
        "endLine": 345,
        "endChar": 49
      },
      "revId": "f7520655665dcd7aac7d47c297f868443a02bff1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc39e424_9492f347",
        "filename": "java/com/google/gerrit/server/query/account/AccountQueryProcessor.java",
        "patchSetId": 8
      },
      "lineNbr": 89,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-10-16T11:49:25Z",
      "side": 1,
      "message": "this has a side effect of incrementing the sequence, i.e. it a performs a write operation on a supposedly read path.\n\nAlso QueryProcessor#getIndexSize is not used in the codebase. Can we remove it? (or otherwise annotate with @UsedAt(Project.\u003cprojectName\u003e).",
      "range": {
        "startLine": 89,
        "startChar": 21,
        "endLine": 89,
        "endChar": 34
      },
      "revId": "f7520655665dcd7aac7d47c297f868443a02bff1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48f4a308_6d4e1e82",
        "filename": "java/com/google/gerrit/server/query/account/AccountQueryProcessor.java",
        "patchSetId": 8
      },
      "lineNbr": 89,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2023-10-16T20:24:51Z",
      "side": 1,
      "message": "\u003e this has a side effect of incrementing the sequence, i.e. it a performs a write operation on a supposedly read path.\n\nIt only does that if the sequence hasn\u0027t been initialized yet, correct? Otherwise it uses the current in-memory value.\n\n\u003e \n\u003e Also QueryProcessor#getIndexSize is not used in the codebase. Can we remove it? (or otherwise annotate with @UsedAt(Project.\u003cprojectName\u003e).\n\nIt was used, but then usage was removed in Ifb1f6f5411140c430f2520fb252e688b67d5333c. I would be fine with removing it. @kaushik.lingarkar@linaro.org do you have any concerns with that?",
      "parentUuid": "cc39e424_9492f347",
      "range": {
        "startLine": 89,
        "startChar": 21,
        "endLine": 89,
        "endChar": 34
      },
      "revId": "f7520655665dcd7aac7d47c297f868443a02bff1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cb70d6c_eddcc951",
        "filename": "java/com/google/gerrit/server/query/account/AccountQueryProcessor.java",
        "patchSetId": 8
      },
      "lineNbr": 89,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2023-10-17T18:58:53Z",
      "side": 1,
      "message": "\u003e \u003e this has a side effect of incrementing the sequence, i.e. it a performs a write operation on a supposedly read path.\n\u003e \n\u003e It only does that if the sequence hasn\u0027t been initialized yet, correct? Otherwise it uses the current in-memory value.\n\u003e \n\u003e \u003e \n\u003e \u003e Also QueryProcessor#getIndexSize is not used in the codebase. Can we remove it? (or otherwise annotate with @UsedAt(Project.\u003cprojectName\u003e).\n\u003e \n\u003e It was used, but then usage was removed in Ifb1f6f5411140c430f2520fb252e688b67d5333c. I would be fine with removing it. @kaushik.lingarkar@linaro.org do you have any concerns with that?\n\nI think it can be removed. QueryProcessor#getBatchSize can be removed too.",
      "parentUuid": "48f4a308_6d4e1e82",
      "range": {
        "startLine": 89,
        "startChar": 21,
        "endLine": 89,
        "endChar": 34
      },
      "revId": "f7520655665dcd7aac7d47c297f868443a02bff1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "174fc913_060d0035",
        "filename": "java/com/google/gerrit/server/query/account/AccountQueryProcessor.java",
        "patchSetId": 8
      },
      "lineNbr": 89,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2023-11-21T08:26:50Z",
      "side": 1,
      "message": "Thanks for explaining. removed in https://gerrit-review.googlesource.com/c/gerrit/+/393874",
      "parentUuid": "6cb70d6c_eddcc951",
      "range": {
        "startLine": 89,
        "startChar": 21,
        "endLine": 89,
        "endChar": 34
      },
      "revId": "f7520655665dcd7aac7d47c297f868443a02bff1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f7520655665dcd7aac7d47c297f868443a02bff1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Style",
        "description": {
          "value": "Code has correct style and format"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Style\u003dMAX AND -label:Code-Style\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Style=MAX AND -label:Code-Style=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Style=MAX"],"failingAtoms":["label:Code-Style=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f7520655665dcd7aac7d47c297f868443a02bff1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Library-Compliance",
        "description": {
          "value": "Changes to specific library/metadata files require additional approval"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Library-Compliance\u003dMAX,user\u003dnon_uploader AND -label:Library-Compliance\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^lib/.*\"","file:\"^WORKSPACE$\"","file:\"^.gitmodule$\"","file:\"^tools/deps.bzl$\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Library-Compliance=MAX,user=non_uploader AND -label:Library-Compliance=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f7520655665dcd7aac7d47c297f868443a02bff1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Release-Notes",
        "description": {
          "value": "Changes must include a \u0027Release-Notes\u0027 footer with a single sentence to mention in the release notes. Changes not worth mentioning in the release notes should put \u0027Release-Notes: skip\u0027"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "hasfooter:\"Release-Notes\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hasfooter:\"Release-Notes\""},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["hasfooter:\"Release-Notes\""],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f7520655665dcd7aac7d47c297f868443a02bff1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "f7520655665dcd7aac7d47c297f868443a02bff1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f7520655665dcd7aac7d47c297f868443a02bff1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}