{
  "comments": [
    {
      "key": {
        "uuid": "1a91cc0d_3fe1c7d5",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/account/WatchedProjectsIT.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-07-08T11:29:36Z",
      "side": 1,
      "message": "When the item is added to the list, does the list make a copy of it?  I assume it must do, otherwise re-allocating the existing variable wouldn\u0027t work?\n\nI would probably have done this with a separate instance of ProjectWatchInfo just to make sure.",
      "range": {
        "startLine": 110,
        "startChar": 4,
        "endLine": 110,
        "endChar": 33
      },
      "revId": "f7a22511a66b04e71355123404b2101960af2d27",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a8488cc_02d90afc",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/account/WatchedProjectsIT.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-07-08T12:14:25Z",
      "side": 1,
      "message": "\u003e When the item is added to the list, does the list make a  \n \u003e copy of it?\n\nNot a copy, it just has a reference to this object.\nWhen we assign a new value to pwi, pwi will point to the new object, but since the list keeps a reference to the old object, the old object is not garbage collected.\n\nThis should work, the other tests below do the same.",
      "parentUuid": "1a91cc0d_3fe1c7d5",
      "range": {
        "startLine": 110,
        "startChar": 4,
        "endLine": 110,
        "endChar": 33
      },
      "revId": "f7a22511a66b04e71355123404b2101960af2d27",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a91cc0d_5ffb6b7e",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/account/WatchedProjectsIT.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2016-07-08T12:38:41Z",
      "side": 1,
      "message": "OK.",
      "parentUuid": "7a8488cc_02d90afc",
      "range": {
        "startLine": 110,
        "startChar": 4,
        "endLine": 110,
        "endChar": 33
      },
      "revId": "f7a22511a66b04e71355123404b2101960af2d27",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "faaeb864_869d2a72",
        "filename": "gerrit-acceptance-tests/src/test/java/com/google/gerrit/acceptance/rest/account/WatchedProjectsIT.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-07-08T12:41:41Z",
      "side": 1,
      "message": "All objects in Java are pointers. On line 103 pwi is initialized to be a pointer to a new ProjectWatchInfo instance (call it A) on the heap. On line 108 we pass the pointer to add(), which copies the pointer, and now has its own pointer to A. On line 110 we initialize a new ProjectWatchInfo instance (B) and make pwi point to B instead of to A. A still exists and is still referenced by projectsToWatch, so it doesn\u0027t get GC\u0027ed.",
      "parentUuid": "7a8488cc_02d90afc",
      "revId": "f7a22511a66b04e71355123404b2101960af2d27",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}