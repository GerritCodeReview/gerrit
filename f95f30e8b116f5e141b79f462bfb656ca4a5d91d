{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e607f434_4a5ee502",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-02-11T14:59:43Z",
      "side": 1,
      "message": "is there a way to quantify the difference?",
      "range": {
        "startLine": 7,
        "startChar": 51,
        "endLine": 7,
        "endChar": 62
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b9c546e_5587ddc1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-11T15:22:01Z",
      "side": 1,
      "message": "The previous code caused an issue when it was used in FileCountValidator. The new code has AFAIK not caused any problems. Beyond that, I\u0027d have to do a benchmark.",
      "parentUuid": "e607f434_4a5ee502",
      "range": {
        "startLine": 7,
        "startChar": 51,
        "endLine": 7,
        "endChar": 62
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6bfcd52_a951368e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-02-11T15:55:22Z",
      "side": 1,
      "message": "hmm. if you can\u0027t quantify, maybe qualify?\n\n\"We observe X minute timeouts in changes with a Y Gb binaries add/remove. The same problems was fixed in change xyz by using DiffFormatter.\"",
      "parentUuid": "8b9c546e_5587ddc1",
      "range": {
        "startLine": 7,
        "startChar": 51,
        "endLine": 7,
        "endChar": 62
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a073d18b_e19d5638",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-11T17:33:37Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "d6bfcd52_a951368e",
      "range": {
        "startLine": 7,
        "startChar": 51,
        "endLine": 7,
        "endChar": 62
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a05e1568_8c030c02",
        "filename": "Documentation/prolog-change-facts.txt",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-02-11T14:59:43Z",
      "side": 1,
      "message": "how would manual readers see this?",
      "range": {
        "startLine": 94,
        "startChar": 4,
        "endLine": 94,
        "endChar": 19
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfe04af0_60d0fab6",
        "filename": "Documentation/prolog-change-facts.txt",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-11T15:22:01Z",
      "side": 1,
      "message": "I\u0027m not sure I understand the question. If you\u0027re writing prolog rules I assume you can also look up the source code?",
      "parentUuid": "a05e1568_8c030c02",
      "range": {
        "startLine": 94,
        "startChar": 4,
        "endLine": 94,
        "endChar": 19
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ec85496_88161e1e",
        "filename": "Documentation/prolog-change-facts.txt",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-02-11T15:55:22Z",
      "side": 1,
      "message": "it\u0027s open source, so everyone can, but is it admin-friendly? The docs look like this https://gerrit-review.googlesource.com/Documentation/prolog-change-facts.html ; most entries have some description. Maybe you could you copy the relevant bits of doc into here?",
      "parentUuid": "dfe04af0_60d0fab6",
      "range": {
        "startLine": 94,
        "startChar": 4,
        "endLine": 94,
        "endChar": 19
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcc407c8_f069b012",
        "filename": "Documentation/prolog-change-facts.txt",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-11T17:33:37Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "2ec85496_88161e1e",
      "range": {
        "startLine": 94,
        "startChar": 4,
        "endLine": 94,
        "endChar": 19
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a1dbdc6_86abd877",
        "filename": "Documentation/prolog-change-facts.txt",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-02-11T17:42:25Z",
      "side": 1,
      "message": "forgot to upload?",
      "parentUuid": "bcc407c8_f069b012",
      "range": {
        "startLine": 94,
        "startChar": 4,
        "endLine": 94,
        "endChar": 19
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16f1bf2c_2e1fece1",
        "filename": "Documentation/prolog-change-facts.txt",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-11T18:15:42Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "9a1dbdc6_86abd877",
      "range": {
        "startLine": 94,
        "startChar": 4,
        "endLine": 94,
        "endChar": 19
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bf455cc_cde168e1",
        "filename": "Documentation/prolog-change-facts.txt",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-02-11T14:59:43Z",
      "side": 1,
      "message": "huh? paths never start with \u0027/\u0027 - how could you have /dev/null ?\n\n\u003cedit\u003e - looks like this happens for deletions? Maybe rephrase? \"For deletions, nil is returned\"\n\nthe docs are changed. Are you clarifying behavior, or is this introducing subtle semantic changes?",
      "range": {
        "startLine": 95,
        "startChar": 5,
        "endLine": 95,
        "endChar": 15
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "918e7f08_a4b9cd4f",
        "filename": "Documentation/prolog-change-facts.txt",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-11T15:22:01Z",
      "side": 1,
      "message": "\u003e huh? paths never start with \u0027/\u0027 - how could you have /dev/null ?\n\u003e \n\u003e \u003cedit\u003e - looks like this happens for deletions? Maybe rephrase? \"For deletions, nil is returned\"\n\nYes, and done.\n\n\u003e the docs are changed. Are you clarifying behavior, or is this introducing subtle semantic changes?\n\nI\u0027m trying to clarify the documentation, but the semantics have also changed, e.g. DiffFormatter uses rename detection. Given that we want to deprecate Prolog, and that this rule is, AFAICT, only ever used with a single argument, I think we shouldn\u0027t spend too many cycles on it. It\u0027s more important to ensure compatibility for the one use case we currently have.",
      "parentUuid": "7bf455cc_cde168e1",
      "range": {
        "startLine": 95,
        "startChar": 5,
        "endLine": 95,
        "endChar": 15
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8533e19e_5f6e54fb",
        "filename": "Documentation/prolog-change-facts.txt",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-02-11T15:55:22Z",
      "side": 1,
      "message": "Patrick collected a list of internal prolog uses somewhere. You could double check against this.\n\n\u003e I\u0027m trying to clarify the documentation, but the semantics have also changed, e.g. DiffFormatter uses rename detection\n\nI think the change is justified on the basis of the performance impact, but the commit message could call out the incompatible change explicitly. Maybe also add a note to our current release docs.",
      "parentUuid": "918e7f08_a4b9cd4f",
      "range": {
        "startLine": 95,
        "startChar": 5,
        "endLine": 95,
        "endChar": 15
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35c09a2e_880ae352",
        "filename": "Documentation/prolog-change-facts.txt",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-11T16:03:26Z",
      "side": 1,
      "message": "\u003e Patrick collected a list of internal prolog uses somewhere. You could double check against this.\n\nLink in go/gerrit-composable-submit-requirements",
      "parentUuid": "8533e19e_5f6e54fb",
      "range": {
        "startLine": 95,
        "startChar": 5,
        "endLine": 95,
        "endChar": 15
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04e4df52_24eefb0e",
        "filename": "Documentation/prolog-change-facts.txt",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-11T17:33:37Z",
      "side": 1,
      "message": "Here\u0027s why I think the current docs need clarification:\n\n\"if the change type is `rename`, it also returns the old path. If the change type is `rename`, it returns a delete for old path and an add for new path.\"\n\nThe first statement is implied by the second, more comprehensive statement. Also, the docs fail to mention that in the case of deletions the file name is returned as the new path. Maybe that\u0027s fortunate because this way it\u0027s unlikely anyone relies on this :-)\n\nThanks for the link. Of the 36 occurrences I found two that use \u003e1 arguments:\n\nhas_non_markdown :-\n  gerrit:commit_delta(\u0027.*\u0027, _, F, _),\n  \\+ regex_matches(\u0027.+\\\\.md$\u0027, F),\n  !.\n\nno_approval_required(In, Out) :-\n    forall(\n        gerrit:commit_delta(\u0027.*\u0027, Type, Path),\n        regex_matches(\u0027^experimental/.*\u0027, Path)\n    ), !,\n    gerrit:commit_author(Author),\n    Out \u003d [label(\u0027Experimental\u0027, ok(Author)) | In].\n\nThese usages seem to be OK with the new semantics.\n\nMentioned in release notes: https://gerrit-review.googlesource.com/c/homepage/+/296644",
      "parentUuid": "35c09a2e_880ae352",
      "range": {
        "startLine": 95,
        "startChar": 5,
        "endLine": 95,
        "endChar": 15
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0a331df_345ff352",
        "filename": "java/gerrit/PRED_commit_delta_4.java",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-11T16:03:26Z",
      "side": 1,
      "message": "This should be 1? For merge commit commit.getParentCount() will be 2 or more.",
      "range": {
        "startLine": 96,
        "startChar": 40,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08f09681_6ffe757f",
        "filename": "java/gerrit/PRED_commit_delta_4.java",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-11T17:33:37Z",
      "side": 1,
      "message": "Alice informed me the convention is to use the first parent. Why should it be 1?",
      "parentUuid": "b0a331df_345ff352",
      "range": {
        "startLine": 96,
        "startChar": 40,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91d4a815_68780a37",
        "filename": "java/gerrit/PRED_commit_delta_4.java",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-11T17:49:27Z",
      "side": 1,
      "message": "Oh, that\u0027s not what I meant.\n\nI mean the condition should be: commit.getParentCount() \u003e 1",
      "parentUuid": "08f09681_6ffe757f",
      "range": {
        "startLine": 96,
        "startChar": 40,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "161d588d_41feed37",
        "filename": "java/gerrit/PRED_commit_delta_4.java",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-11T18:15:42Z",
      "side": 1,
      "message": "Can you explain why?",
      "parentUuid": "91d4a815_68780a37",
      "range": {
        "startLine": 96,
        "startChar": 40,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "607de91a_1f937f44",
        "filename": "java/gerrit/PRED_commit_delta_4.java",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-11T18:41:56Z",
      "side": 1,
      "message": "Sure. Comment is saying:\n \u003e // For merge commits, i.e. \u003e1 parents, we use parent #0\n\nTo check that the commit has more than one parent, should be:\n  * commit.getParentCount() \u003e 1 ? commit.getParent(0) : null, commit\n\ninstead of\n  * commit.getParentCount() \u003e 0 ? commit.getParent(0) : null, commit\n\ngetParentCount() will return 1 if the commit has one parent, 2 for two parents, etc...",
      "parentUuid": "161d588d_41feed37",
      "range": {
        "startLine": 96,
        "startChar": 40,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59c0417b_bed593ec",
        "filename": "java/gerrit/PRED_commit_delta_4.java",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1083042
      },
      "writtenOn": "2021-02-18T16:50:11Z",
      "side": 1,
      "message": "I think we were talking past each other. I\u0027ve updated the comment to clarify.",
      "parentUuid": "607de91a_1f937f44",
      "range": {
        "startLine": 96,
        "startChar": 40,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e106987d_ac91ac1c",
        "filename": "java/gerrit/PRED_commit_delta_4.java",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1091982
      },
      "writtenOn": "2021-02-19T13:14:46Z",
      "side": 1,
      "message": "Ah, I see. Thanks for the clarifying comment.\n\nSo the only case where we\u0027ll pick null if the commit has no parents, i.e. if it is a root commit.",
      "parentUuid": "59c0417b_bed593ec",
      "range": {
        "startLine": 96,
        "startChar": 40,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "f95f30e8b116f5e141b79f462bfb656ca4a5d91d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}