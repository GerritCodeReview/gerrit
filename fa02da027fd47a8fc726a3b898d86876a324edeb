{
  "comments": [
    {
      "key": {
        "uuid": "9084cb25_2a5b9f26",
        "filename": "Documentation/config-gerrit.txt",
        "patchSetId": 65
      },
      "lineNbr": 2541,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Add a warning that ES support is incomplete.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_4a60d3d6",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/AbstractElasticIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 55,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Nit: Logger should be static and the first member in the class. Also, long line.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b091cf63_cb2135b0",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/AbstractElasticIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 60,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Should be final. Instead of reassigning in the constructor, either use ?: or a non-final local variable.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_6a6597e5",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/AbstractElasticIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 73,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Optional: firstNonNull(cfg..., DEFAULT_INDEX_NAME)",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_ea50a7fd",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/AbstractElasticIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 150,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Generally it\u0027s not necessary to log before throwing an exception, as the callers will probably log at a high level.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_2a847f77",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/AbstractElasticIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 186,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "I think this can just be Iterables.getOnlyElement(values).",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_0a7fbb6f",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/AbstractElasticIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 187,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Long line",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_aa6f8fba",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticChangeIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 113,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "JsonArray is an Iterable, so you could replace this all with:\n\n return FluentIterable.from(doc.getAsJsonArray(fieldName))\n     .transform(i -\u003e codec.decode(decodeBase64(i.toString())))\n     .toList();\n\n(I will refrain from making too many more suggestions to use lambdas in this change :)",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b091cf63_eb37d1e6",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticChangeIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 124,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Constructing JSON by hand is a little crazy: it\u0027s hard to read, type-free, and error-prone. For example, while it\u0027s a pretty safe bet that index field names won\u0027t require escaping for JSON strings, it is not a guarantee.\n\nIs there not already some Java type you can use, and then use Gson to convert to JSON at the very end.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_ca6cc3c8",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticChangeIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 131,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "If you must construct the JS, us a StringBuilder rather than repeatedly concatenating to a string.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_ea6987b5",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticChangeIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 144,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Why is dateOptionalTime preferred to epochMillis or similar?\n\nAlso based on https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-date-format.html should this be lower_with_underscores instead of camelCase?",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_0aa09bff",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticChangeIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 331,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Long line here and below.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_2aa55f10",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticChangeIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 365,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "aId",
      "range": {
        "startLine": 365,
        "startChar": 16,
        "endLine": 365,
        "endChar": 20
      },
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_6aaf57ee",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticChangeIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 381,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": ".transform(JsonElement::getAsString)",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b091cf63_4b60e5d6",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticIndexModule.java",
        "patchSetId": 65
      },
      "lineNbr": 51,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Not just to make tests pass but to make the server work at all ;)",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_8ab3ab56",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticQueryBuilder.java",
        "patchSetId": 65
      },
      "lineNbr": 152,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "I think as long as open-ended range queries are supported, you don\u0027t have to justify it by saying that the endpoint is out of the supported range. It\u0027s clear and readable to see AfterPredicate -\u003e gte with no lte.\n\nAlong the same lines, I would use an open-ended range for BeforePredicate as well.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b091cf63_6b65a1e5",
        "filename": "gerrit-elasticsearch/src/main/java/com/google/gerrit/elasticsearch/ElasticQueryBuilder.java",
        "patchSetId": 65
      },
      "lineNbr": 176,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "I guess you\u0027re copying Lucene here but this seems like an incorrect heuristic. Ending with \"x\\\\\\$\" means the final $ is escaped.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_eaba6726",
        "filename": "gerrit-elasticsearch/src/test/java/com/google/gerrit/elasticsearch/ElasticQueryChangesTest.java",
        "patchSetId": 65
      },
      "lineNbr": 90,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Long line.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_2a8e3f88",
        "filename": "gerrit-elasticsearch/src/test/java/com/google/gerrit/elasticsearch/ElasticQueryChangesTest.java",
        "patchSetId": 65
      },
      "lineNbr": 111,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Using a hard-coded port means you can\u0027t have two instances of the test running at once. There should be some way of either a) picking an unused port in advance or b) using :0 to get a randomly assigned unused port and finding out after the fact what it was.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_6a883779",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/Reindex.java",
        "patchSetId": 65
      },
      "lineNbr": 172,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Indentation.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_4a83735f",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/init/InitIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 65,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "For databases we prompt for this information, see DatabaseConfigInitializer implementations.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b091cf63_eb50b1fd",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/init/InitIndex.java",
        "patchSetId": 65
      },
      "lineNbr": 69,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "What does this do, considering there is no account index in ES?",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_0af25bff",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 65
      },
      "lineNbr": 158,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "You want to restart the server on each test method invocation? That seems like it would be slow.\n\nFor our googlesource.com index implementation, starting the index server is extremely slow (tens of seconds). What we do is start up the index server in a @ClassRule, and pre-create one index on the server for each of the N test methods that we plan to execute. That way we get data isolation without having to start/top the server N times.\n\nI\u0027m not saying you have to do that now, but if this becomes too slow (say, slower than all the other acceptance test suites :) then it\u0027s something to consider.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b091cf63_cb6cd5c8",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/testutil/InMemoryModule.java",
        "patchSetId": 65
      },
      "lineNbr": 228,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Long line.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b091cf63_eb6991b5",
        "filename": "gerrit-server/src/test/java/com/google/gerrit/testutil/InMemoryModule.java",
        "patchSetId": 65
      },
      "lineNbr": 230,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Please do the same reflection-based construction that we do in luceneIndexModule below. The goal is to not have to compile against Lucene/ES when building these tests to run against our custom backend.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b091cf63_6b13e164",
        "filename": "lib/commons/BUCK",
        "patchSetId": 65
      },
      "lineNbr": 49,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Is it ok to have both this and the 2.6 version in the same classpath? Do they use the same package names? Would it be better to upgrade the rest of Gerrit to the version used by ES?",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b091cf63_8b172d4f",
        "filename": "lib/elasticsearch/BUCK",
        "patchSetId": 65
      },
      "lineNbr": 99,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Why do we have a separate copy of Lucene here? I thought David Pursehouse had been trying to ensure we upgrade Gerrit to the same version of Lucene used by ES, to avoid exactly this scenario.",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9084cb25_ea37c7e6",
        "filename": "lib/httpcomponents/BUCK",
        "patchSetId": 65
      },
      "lineNbr": 45,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-09-21T11:22:39Z",
      "side": 1,
      "message": "Are there not 4.4.1 versions of all of these? Or is it just these versions that are used by ES? Is ES not compatible with the later, non-alpha versions?",
      "revId": "fa02da027fd47a8fc726a3b898d86876a324edeb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}