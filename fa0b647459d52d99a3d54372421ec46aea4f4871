{
  "comments": [
    {
      "key": {
        "uuid": "7c0c6ea2_c24afe8e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-03T10:03:20Z",
      "side": 1,
      "message": "Can we make clearer that this is about user errors, not server errors?",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2d10c0a_8c6bd0a4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-07-03T10:06:06Z",
      "side": 1,
      "message": "\u003e Can we make clearer that this is about user errors, not server errors?\n\nIt\u0027s about both: when there was a server error, nothing was logged either :-(\nI\u0027ll make then a follow-up change where I raise the level to warning in case of server errors.",
      "parentUuid": "7c0c6ea2_c24afe8e",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7511ddde_1bc78caa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-03T10:10:05Z",
      "side": 1,
      "message": "\u003e It\u0027s about both: when there was a server error, nothing was logged either :-(\n\nBut that\u0027s already fixed in master, cherry-pick [1] for this?\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/223978",
      "parentUuid": "b2d10c0a_8c6bd0a4",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d704b225_668925ba",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-07-03T10:16:30Z",
      "side": 1,
      "message": "On [1] at the same corresponding line I see:\n\n  logger.atFinest().log(\"REST call failed: %d\", statusCode);\n\nLooks like the error is there on master also: we don\u0027t trace the exception.",
      "parentUuid": "7511ddde_1bc78caa",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92b010ef_bd7c94cd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-03T10:21:25Z",
      "side": 1,
      "message": "I\u0027m not following, handleExceptions already logs the exception for 500s, why would it need to be logged here again if it\u0027s a 500?",
      "parentUuid": "d704b225_668925ba",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "118ca2aa_d88e9b4a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-07-03T10:25:54Z",
      "side": 1,
      "message": "\u003e I\u0027m not following, handleExceptions already logs the exception for 500s, why would it need to be logged here again if it\u0027s a 500?\n\nBecause not all internal errors are resulting in a 5xx and by swallowing what caused the non-5xx error you would never realize what\u0027s going on and fixing it.",
      "parentUuid": "92b010ef_bd7c94cd",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bdd838e_60f9419c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-03T10:55:08Z",
      "side": 1,
      "message": "Internal server error \u003d 500\n400s mean that the server behaved correctly, but the user request couldn\u0027t be fulfilled due to some preconditions or user errors. It\u0027s intended to not log stacktraces in this case.",
      "parentUuid": "118ca2aa_d88e9b4a",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "232af81f_f473ec6f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-07-03T11:04:23Z",
      "side": 1,
      "message": "\u003e Internal server error \u003d 500\n\u003e 400s mean that the server behaved correctly, but the user request couldn\u0027t be fulfilled due to some preconditions or user errors. It\u0027s intended to not log stacktraces in this case.\n\nYes, however, if you get random 4xx because there is an error in Gerrit that you need to investigate and, eventually, fix to make it a 5xx ... you need to know what\u0027s going on and *thus* you need to know what was the exception that caused the (unexpected) 4xx, correct?\n\nIf we just swallow completely the exception, we will never have any way to understand or troubleshoot what\u0027s going on.\n\nExample: user X call the same API 100 times, 2% of the times he gets a 4xx without any clue on why that happened.\n\nHope the (real-life) use case of the change makes sense.",
      "parentUuid": "8bdd838e_60f9419c",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acca0b74_062556cc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-03T11:14:34Z",
      "side": 1,
      "message": "\u003e Yes, however, if you get random 4xx because there is an error in Gerrit that you need\n\u003e to investigate and, eventually, fix to make it a 5xx ... you need to know what\u0027s going on\n\u003e and *thus* you need to know what was the exception that caused the (unexpected) 4xx, correct?\n\nFor me this is no different than any other bug that we might have. You can use tracing, debugging and increasing of log levels and so on to understand it. In my opinion it is wrong to permanently log stacks for all 400s, just to catch one bug such a bug. This means 99.9% of the logs are false positives and just spam the log. With the same reason you could switch one tracing for all requests, saying that we need to have them just in case one of them fails due to a bug.\n\n\u003e Example: user X call the same API 100 times, 2% of the times he gets a 4xx without any\n\u003e clue on why that happened.\n\nTracing 100 requests for this seems totally feasible.\n\nWe could also implement advanced tracing, e.g. allow to configure a set of users for which requests should be always traced. I had plans about this, but don\u0027t have time to implement them.",
      "parentUuid": "232af81f_f473ec6f",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe7726af_edb7adf7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-07-03T11:20:29Z",
      "side": 1,
      "message": "\u003e For me this is no different than any other bug that we might have. You can use tracing, debugging and increasing of log levels and so on to understand it. In my opinion it is wrong to permanently log stacks for all 400s, just to catch one bug such a bug. This means 99.9% of the logs are false positives and just spam the log. With the same reason you could switch one tracing for all requests, saying that we need to have them just in case one of them fails due to a bug.\n\nYes, but we need to trace the exceptions that are happening to understand what\u0027s going on, that\u0027s exactly the purpose of this change.\nAt the moment, the exception is just swallowed and not traced at all.\n\n\u003e Tracing 100 requests for this seems totally feasible.\n\nThat was an example: the real case has tens of millions of requests daily with a % of error rates of 40x. Tracing all of them isn\u0027t feasible and, without this change, wouldn\u0027t help either because the exceptions are swallowed.\n\n\u003e We could also implement advanced tracing, e.g. allow to configure a set of users for which requests should be always traced. I had plans about this, but don\u0027t have time to implement them.\n\nThe failures are randomly distributed to all users and all requests, which suggests some internal concurrency issue or similar. But, again, without any clue on what was the exception that caused the error, it\u0027s like shooting in the dark.\n\nThanks for your feedback and reviews, and hope that would have clarified the use-case.",
      "parentUuid": "acca0b74_062556cc",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8fc43bd_ea396280",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-03T11:23:21Z",
      "side": 1,
      "message": "For this concrete case I would do:\n\n- change the code to log the stacktrace on fine level\n- set the logging for this class temporarily to FINE, e.g. at the moment when you see this happening, or for an hour where the issue is likely to happen",
      "parentUuid": "fe7726af_edb7adf7",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae89fecb_01ff9508",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-03T11:24:44Z",
      "side": 1,
      "message": "If you really need to log the stacks for all 400s as warnings, can you do this as a custom patch that is rolled back once you have understood the issue?",
      "parentUuid": "e8fc43bd_ea396280",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92dcd6e2_ca5162b7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-07-03T11:30:31Z",
      "side": 1,
      "message": "\u003e For this concrete case I would do:\n\u003e change the code to log the stacktrace on fine level\n\nThat wouldn\u0027t work because we just swallow the exception and you won\u0027t have any stacktrace in the logs.\n\n\u003e set the logging for this class temporarily to FINE, e.g. at the moment when you see this happening, or for an hour where the issue is likely to happen\n\nYou would need *a lot* of disk space though because the issue happens randomly during the week, that means for 7 days x 20M \u003d 140M calls.\n\n\u003e If you really need to log the stacks for all 400s as warnings\n\nNot the purpose of this change, we still log them as FINER at the moment.\n\n\u003e can you do this as a custom patch that is rolled back once you have understood the issue?\n\nOf course, I can fork :-) but I typically think about that other people may have the same problem and may benefit from my work. That\u0027s the karma and business model of our Company and that\u0027s why we share everything for discussion and review.\n\nHowever, the scope of this change is just to log the exception without changing it to WARN.",
      "parentUuid": "ae89fecb_01ff9508",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64404ed0_e8de8899",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-03T11:42:26Z",
      "side": 1,
      "message": "\u003e\u003e For this concrete case I would do:\n\u003e\u003e change the code to log the stacktrace on fine level\n\u003e\n\u003e That wouldn\u0027t work because we just swallow the exception and you won\u0027t have any stacktrace\n\u003e in the logs.\n\nI don\u0027t understand. Isn\u0027t this exactly what PS7 of this change implements? Why is it not possible?\n\n\u003e You would need *a lot* of disk space though because the issue happens randomly during the\n\u003e week, that means for 7 days x 20M \u003d 140M calls.\n\n...and we would also need a lot of log space for logging unneeded stacktraces for 4XXs, if you turn this on permanently.\n\nWhat about this:\nLog the stacktrace on INFO level and then set your log level for this class to INFO? Then you get the logs you want and it doesn\u0027t effect everyone else.",
      "parentUuid": "92dcd6e2_ca5162b7",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85a5070d_4216c1ff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-07-03T11:47:28Z",
      "side": 1,
      "message": "\u003e \u003e\u003e For this concrete case I would do:\n\u003e \u003e\u003e change the code to log the stacktrace on fine level\n\u003e \u003e\n\u003e \u003e That wouldn\u0027t work because we just swallow the exception and you won\u0027t have any stacktrace\n\u003e \u003e in the logs.\n\u003e \n\u003e I don\u0027t understand. Isn\u0027t this exactly what PS7 of this change implements? Why is it not possible?\n\nYes, with *this* change it is possible, but *without it* it isn\u0027t :-)\nThat\u0027s why we are discussing the usefulness of this change after all.\n\n\u003e \n\u003e \u003e You would need *a lot* of disk space though because the issue happens randomly during the\n\u003e \u003e week, that means for 7 days x 20M \u003d 140M calls.\n\u003e \n\u003e ...and we would also need a lot of log space for logging unneeded stacktraces for 4XXs, if you turn this on permanently.\n\nSure, that\u0027s why the follow-up change I am planning to upload will have to be \"clever\" to trace only when there is a real clue that the exception isn\u0027t a generic \"permission denied\".\n\n\u003e What about this:\n\u003e Log the stacktrace on INFO level and then set your log level for this class to INFO?\n\u003e Then you get the logs you want and it doesn\u0027t effect everyone else.\n\nINFO sounds good to me. However, I\u0027d do in a follow-up change, the scope of this is just to include also the stack-trace.",
      "parentUuid": "64404ed0_e8de8899",
      "range": {
        "startLine": 7,
        "startChar": 36,
        "endLine": 7,
        "endChar": 49
      },
      "revId": "fa0b647459d52d99a3d54372421ec46aea4f4871",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}