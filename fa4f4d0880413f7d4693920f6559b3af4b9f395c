{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ec502436_07eef0ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2022-02-02T16:53:49Z",
      "side": 1,
      "message": "+ly",
      "range": {
        "startLine": 9,
        "startChar": 8,
        "endLine": 9,
        "endChar": 9
      },
      "revId": "fa4f4d0880413f7d4693920f6559b3af4b9f395c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6c70b64_a3d522d6",
        "filename": "polygerrit-ui/app/embed/diff/gr-diff-builder/token-highlight-layer.ts",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-02-02T14:45:46Z",
      "side": 1,
      "message": "Can this cause issues with text that contains characters that are not valid css-name-characters?",
      "revId": "fa4f4d0880413f7d4693920f6559b3af4b9f395c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16a5c2dd_4778632c",
        "filename": "polygerrit-ui/app/embed/diff/gr-diff-builder/token-highlight-layer.ts",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1088862
      },
      "writtenOn": "2022-02-02T15:56:57Z",
      "side": 1,
      "message": "Right now we have a very strict regex identifying tokens (https://gerrit-review.googlesource.com/c/gerrit/+/329659/1/polygerrit-ui/app/embed/diff/gr-diff-builder/token-highlight-layer.ts#30) where this it is very unlikely to have a token that is an invalid css class.\n\nNevertheless I completely agree this should not be a css class - it was just the previous behavior before my code that I didn\u0027t want to change. The best solution here IMO is to use data attributes instead.\n\nHowever, since this was already the existing situation we are not adding any new bug in this area and I would rather create a new change in order to shift to data attributes - independent of this one. What do you think?",
      "parentUuid": "e6c70b64_a3d522d6",
      "revId": "fa4f4d0880413f7d4693920f6559b3af4b9f395c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05af9207_27b53abc",
        "filename": "polygerrit-ui/app/embed/diff/gr-diff-builder/token-highlight-layer.ts",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1139611
      },
      "writtenOn": "2022-02-02T15:59:40Z",
      "side": 1,
      "message": "That\u0027s a fair point that it\u0027s not adding this as it was already an issue.\nSounds good for splitting into two.",
      "parentUuid": "16a5c2dd_4778632c",
      "revId": "fa4f4d0880413f7d4693920f6559b3af4b9f395c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]},
      "overrideExpressionResult": {},
      "patchSetCommitId": "fa4f4d0880413f7d4693920f6559b3af4b9f395c",
      "legacy": {
        "value": false
      },
      "forced": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Style",
        "description": {
          "value": "Code has correct style and format"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Style\u003dMAX AND -label:Code-Style\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {"expression":{"expressionString":"label:Code-Style=MAX AND -label:Code-Style=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Style=MAX"],"failingAtoms":["label:Code-Style=MIN"]},
      "overrideExpressionResult": {},
      "patchSetCommitId": "fa4f4d0880413f7d4693920f6559b3af4b9f395c",
      "legacy": {
        "value": false
      },
      "forced": {}
    },
    {
      "submitRequirement": {
        "name": "Library-Compliance",
        "description": {
          "value": "Changes to specific library/metadata files require additional approval"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Library-Compliance\u003dMAX,user\u003dnon_uploader AND -label:Library-Compliance\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config AND (file:\"^lib/.*\" OR file:\"^WORKSPACE$\" OR file:\"^.gitmodule$\" OR file:\"^tools/deps.bzl$\")"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","file:\"^lib/.*\"","file:\"^WORKSPACE$\"","file:\"^.gitmodule$\"","file:\"^tools/deps.bzl$\""]}
      },
      "submittabilityExpressionResult": {"expression":{"expressionString":"label:Library-Compliance=MAX,user=non_uploader AND -label:Library-Compliance=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Library-Compliance=MAX,user=non_uploader","label:Library-Compliance=MIN"]},
      "overrideExpressionResult": {},
      "patchSetCommitId": "fa4f4d0880413f7d4693920f6559b3af4b9f395c",
      "legacy": {
        "value": false
      },
      "forced": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]},
      "overrideExpressionResult": {},
      "patchSetCommitId": "fa4f4d0880413f7d4693920f6559b3af4b9f395c",
      "legacy": {
        "value": false
      },
      "forced": {}
    }
  ]
}