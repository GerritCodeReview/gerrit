{
  "comments": [
    {
      "key": {
        "uuid": "502200bb_ec78c50a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 16,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2019-07-24T06:42:37Z",
      "side": 1,
      "message": "this seems like the wrong approach to me. instead of creating clunky namespaced names to avoid collisions, there should be a central registry of plugins and namespace resources they claim. then you can use short and handy names to start with, and have consistency across gerrit installations.\n\nthis obviously would not cover internal plugins, but your approach just shifts the problem, too: you\u0027ll still need to change your aliases if upstream introduces a collision - unless you remap the new upstream names, but that would border on sadism.",
      "revId": "fa773402ae274e8515382b3afdbc2b5e8f1092d6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3df1fb49_64af3e2d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 16,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2019-07-24T17:05:18Z",
      "side": 1,
      "message": "\u003e this seems like the wrong approach to me. instead of creating clunky namespaced names to avoid collisions, there should be a central registry of plugins and namespace resources they claim. then you can use short and handy names to start with, and have consistency across gerrit installations.\n\u003e \n\u003e this obviously would not cover internal plugins, but your approach just shifts the problem, too: you\u0027ll still need to change your aliases if upstream introduces a collision - unless you remap the new upstream names, but that would border on sadism.\n\nAs you might expect, our use cases here do involve internal plugins. The onus is on the admins picking the alias names to pick ones they don\u0027t think they\u0027ll need to rename later.\n\nThis feature is valuable to us and we don\u0027t believe it harms anyone else\u0027s use cases. Please let me know if you have technical reasons against this approach.",
      "parentUuid": "502200bb_ec78c50a",
      "revId": "fa773402ae274e8515382b3afdbc2b5e8f1092d6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c817745_a5e55c51",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 16,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2019-07-24T17:44:38Z",
      "side": 1,
      "message": "that doesn\u0027t answer the question: why do you make it an admin task while it could be hard-coded without apparent downsides? the limitation to internal scope presses this question even harder, as you have even more control in that context.\n\nthe harm is that once this feature is available, people will unthinkingly use it \"to provide convenience\" and thereby make different gerrit installations have incompatible user interfaces (and thus terrible usability) for no good reason whatsoever. i already pointed that out in my first comment on this change.",
      "parentUuid": "3df1fb49_64af3e2d",
      "revId": "fa773402ae274e8515382b3afdbc2b5e8f1092d6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d30dc22_af8044de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 16,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2019-07-24T23:22:43Z",
      "side": 1,
      "message": "I don\u0027t think hard coding would do what you\u0027re implying, or I\u0027m not following you. We use this feature from plugins and since plugin operators always include the plugin name, there\u0027s no way for a plugin to alias its operators to not include the name (i.e. alias \u0027customplugin_bugnumber:\u0027 to \u0027bugnumber:\u0027).\n\nAs you haven\u0027t given any technical reasons against this, please either provide helpful review feedback or stop commenting.",
      "parentUuid": "6c817745_a5e55c51",
      "revId": "fa773402ae274e8515382b3afdbc2b5e8f1092d6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5c6a7c2_08d8edfb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 16,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2019-07-24T23:55:59Z",
      "side": 1,
      "message": "\u003e since plugin operators always include the plugin name, there\u0027s no way for a plugin to alias its operators to not include the name\n\nwouldn\u0027t it make more sense to address this limitation directly instead of working around it?",
      "parentUuid": "6d30dc22_af8044de",
      "revId": "fa773402ae274e8515382b3afdbc2b5e8f1092d6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b5189e3_57cc385d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 16,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2019-07-25T16:58:05Z",
      "side": 1,
      "message": "\u003e \u003e since plugin operators always include the plugin name, there\u0027s no way for a plugin to alias its operators to not include the name\n\u003e\n\u003e wouldn\u0027t it make more sense to address this limitation directly instead of working around it?\n\nThis limitation is by design. This is a name-spacing design specifically intended to avoid operator name collisions. While name-spacing can make some things more wordy, its strength is to provide a more expandable system. The plan when this was introduced was to follow this up someday with support for aliasing so that admins could install the plugins they like, and then alias the operators from those that they really like to shorter names if desired while avoid name collisions. This change is the follow up for that original intent. Think of the approach as being similar to python\u0027s \"import X as Y\" feature, a feature which I think make python\u0027s name-spacing a bit friendlier than java\u0027s name-spacing.\n\nThis approach is consistent with other features enabled by plugins, for example, currently plugins cannot provide top level ssh commands, they must prefix the commands with the plugin name. If admins want to currently promote any plugin command to a top level gerrit command, they can do that by defining an alias for the command. Other name-spaced domains for plugins include \"has:...\" operands, and I plan to upload a solution for \"is:...\" operands soon also (we just finally needed that one internally). Plugins switches \"--plugin-switch\" that are added to other commands are also name-spaced by the plugin. \n\nAt first some of this seems a bit odd, however we have found that with internal plugins that work together this name-spacing quickly becomes an advantage, it ends up creating more object oriented APIs (for us the plugin names tend to represent objects), and it makes it intuitive to make the plugins work together. I suspect that we have pushed plugin interactions further than most, so I understand if it is not obvious to everyone what advantages name-spacing brings. We have plugins that add switches to commands from other plugins, and our system would likely be pretty messy without the name-spacing. That being said, we have some very common operators that we would like to promote to being first class citizens (something we do not want to do for most operators, especially if they are mainly building blocks for other operators), and aliases would help here. I hope we can soon add aliases for the other name-spacing features also (I have a change for has:... operand aliasing too).\n\nThat being said, removing plugins name-spacing would not prevent different installations of Gerrit from having different operators, this simply isn\u0027t possible.  Each admin can install different plugins, and any admin can recompile any of the plugins, and/or Gerrit itself to alter things. I personally think this is a moot point.\n\nAs a maintainer, I strongly believe that Gerrit\u0027s configurability, while often seen as a downside for new adopters, is its strength with its current customers. If we attempt to dumb Gerrit down, we are unlikely to take the hords of users away from the easier simpler less powerful solutions out there, and we are very likely to loose the customers that we have. An aliasing feature need not be used by those who don\u0027t want it, and I will generally favor adding new features that provide more power to Gerrit and plugins, it is likely how we will stay ahead of, or differentiate ourselves from the competition.\n\nIf the community in general would like to make it possible to make plugins provide non name-spaced operators, then it would make sense to revisit this. If you think that is the case, then please bring this up with the ESC. However, let\u0027s please focus any more review of this feature on the code, and not whether plugins should be name-spaced or not.",
      "parentUuid": "d5c6a7c2_08d8edfb",
      "revId": "fa773402ae274e8515382b3afdbc2b5e8f1092d6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d066eeb_c55d6add",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 16,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2019-07-25T20:23:40Z",
      "side": 1,
      "message": "i understand the thinking behind namespacing from an engineering pov, but for users it is clearly counterproductive - they don\u0027t care whether any particular function is provided by a plugin or not. and rather than adding a layer to paper over counterproductive namespacing, it is arguably better to avoid it in relevant places to start with.\n\ni don\u0027t understand how your internal case is in any way special; it\u0027s all an organizational problem to maintain a namespace registry.\n\nof course, i mean to avoid syntax fragmentation regarding some particular functionality, so disjoint sets of plugins are of no concern.\nthe argument about being able to patch gerrit makes no sense, because it takes the matter ad absurdum. the question is what upstream can reasonably do to provide a consistent UX.\n\ni think it\u0027s very pertinent to discuss the assumptions before adding even more code that goes into the wrong direction. ;)\nif you think you need ESC input for that, add the missing relevant people to the review.",
      "parentUuid": "3b5189e3_57cc385d",
      "revId": "fa773402ae274e8515382b3afdbc2b5e8f1092d6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c64454f_8385e6da",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 16,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-26T11:14:56Z",
      "side": 1,
      "message": "Since we already support aliases for other things (SSH commands [1], URLs [2]) I think having aliases for query operators is consistent and a natural next step. I agree that aliases can be confusing and hence should be used with care. But as long as defining aliases is limited to admins I have no big concerns regarding this.\n\n[1] https://gerrit-review.googlesource.com/Documentation/config-gerrit.html#ssh-alias\n[2] https://gerrit-review.googlesource.com/Documentation/config-gerrit.html#urlAlias",
      "parentUuid": "5d066eeb_c55d6add",
      "revId": "fa773402ae274e8515382b3afdbc2b5e8f1092d6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e67131d_48b876a7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 16,
      "author": {
        "id": 1013267
      },
      "writtenOn": "2019-07-26T15:34:12Z",
      "side": 1,
      "message": "\u003e having aliases for query operators is consistent ...\n\nobviously\n\n\u003e ... and a natural next step\n\nnot necessarily. if the consensus were that the previous approach was misguided, the natural next step would be to implement a better solution, deprecate the existing functionality, and definitely *not* add instantly deprecated functionality just for consistency.\n\na psychological argument against accepting the patch is that it is likely to remove the incentive for the contributors to even consider implementing alternatives.\n\n\u003e as long as defining aliases is limited to admins I have no big concerns\n\nthat is in fact the more critical case, as users are confronted with a situation they cannot do anything about.\nallowing users to define aliases which override global settings would alleviate the problem to a degree. however, i still maintain that it\u0027s a problem that users shouldn\u0027t have to face to start with. you have UX experts on the team - what do they say?",
      "parentUuid": "4c64454f_8385e6da",
      "revId": "fa773402ae274e8515382b3afdbc2b5e8f1092d6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01bc59ec_a6b3581e",
        "filename": "java/com/google/gerrit/acceptance/GerritServer.java",
        "patchSetId": 8
      },
      "lineNbr": 441,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2019-07-23T19:57:30Z",
      "side": 1,
      "message": "Turns out we were previously relying on a lifecycle starting to create the schema in our tests. That doesn\u0027t work when everything injects a CQB and it needs All-Projects created when the constructor runs.\n\nI need to go back and see if the lifecycle listener can be removed now (assuming no one sees a problem with this approach).",
      "revId": "fa773402ae274e8515382b3afdbc2b5e8f1092d6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d97b8fd9_b0629aa5",
        "filename": "java/com/google/gerrit/acceptance/GerritServer.java",
        "patchSetId": 8
      },
      "lineNbr": 441,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2019-07-24T23:22:43Z",
      "side": 1,
      "message": "Looks like it works when the listener is removed. Done.",
      "parentUuid": "01bc59ec_a6b3581e",
      "revId": "fa773402ae274e8515382b3afdbc2b5e8f1092d6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c505a175_cb49548d",
        "filename": "javatests/com/google/gerrit/server/query/change/AbstractQueryChangesTest.java",
        "patchSetId": 8
      },
      "lineNbr": 214,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2019-07-23T19:57:30Z",
      "side": 1,
      "message": "schema has to be created before we do injection otherwise All-Projects doesn\u0027t exist and we can\u0027t create a CQB.",
      "revId": "fa773402ae274e8515382b3afdbc2b5e8f1092d6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}