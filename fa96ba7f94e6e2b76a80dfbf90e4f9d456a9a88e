{
  "comments": [
    {
      "key": {
        "uuid": "de20b469_b4b6df90",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-content/gr-editable-content.js",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-01-03T21:24:28Z",
      "side": 1,
      "message": "Indentation is off.",
      "revId": "fa96ba7f94e6e2b76a80dfbf90e4f9d456a9a88e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f9b896d_fb8ca14d",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-content/gr-editable-content.js",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2018-01-03T21:36:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de20b469_b4b6df90",
      "tag": "autogenerated:gerrit:newWipPatchSet",
      "revId": "fa96ba7f94e6e2b76a80dfbf90e4f9d456a9a88e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68440aa1_f880d032",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-content/gr-editable-content_test.html",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-01-03T21:24:28Z",
      "side": 1,
      "message": "A bit better might be to add event listener instead of stubbing dispatchEvent.",
      "revId": "fa96ba7f94e6e2b76a80dfbf90e4f9d456a9a88e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ba4d9df_e54aa3b7",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-content/gr-editable-content_test.html",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2018-01-03T21:36:31Z",
      "side": 1,
      "message": "That actually won\u0027t work as well.\n\nIn one test, I need to ensure an event _isn\u0027t_ fired. The event listener approach is only valid for the first test in this suite.\n\nThis also allows me to write these tests synchronously instead of adding the listener.",
      "parentUuid": "68440aa1_f880d032",
      "tag": "autogenerated:gerrit:newWipPatchSet",
      "revId": "fa96ba7f94e6e2b76a80dfbf90e4f9d456a9a88e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab602e4e_68bd46a3",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-content/gr-editable-content_test.html",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1024777
      },
      "writtenOn": "2018-01-03T23:07:39Z",
      "side": 1,
      "message": "\u003e In one test, I need to ensure an event _isn\u0027t_ fired\n\nDoes this suffice?\n\nconst stub \u003d sandbox.stub();\nelement.addEventListener(\u0027show-alert\u0027, stub);\n// do the thing\nassert.isFalse(stub.called);\n\n\u003e This also allows me to write these tests synchronously instead of adding the listener.\n\nThat\u0027s a valid point, but this adds an implicit dependency.\nIf later sending alerts is refactored into child component, this test would break while nothing actually changes.\n\nNot a big deal, just some room for improvement.",
      "parentUuid": "3ba4d9df_e54aa3b7",
      "revId": "fa96ba7f94e6e2b76a80dfbf90e4f9d456a9a88e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bea369d0_28652a3e",
        "filename": "polygerrit-ui/app/elements/shared/gr-editable-content/gr-editable-content_test.html",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2018-01-03T23:23:10Z",
      "side": 1,
      "message": "I don\u0027t think so.\n\nTraditionally, when we add an event listener for a test, we have to do the test asynchronously to ensure there are no false negatives.\n\n    test(\u0027the thing\u0027, done \u003d\u003e {\n      const listener \u003d () \u003d\u003e {\n        done();\n      };\n      element.addEventListener(\u0027event\u0027, listener);\n      // Do the thing to fire the event.\n    })\n\n...but with this methodology, we can\u0027t do the thing to _not_ fire the event, and call done() when the event is _not_ fired.",
      "parentUuid": "ab602e4e_68bd46a3",
      "revId": "fa96ba7f94e6e2b76a80dfbf90e4f9d456a9a88e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}