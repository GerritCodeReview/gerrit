{
  "comments": [
    {
      "key": {
        "uuid": "5d688870_c7e4fefb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-16T22:28:19Z",
      "side": 1,
      "message": "This is not the behavior of the GWT UI. It just assumes that submit_type is always present; see ChangeScreen.java:1248. Why does that work for GWT and not for PolyGerrit?",
      "revId": "fa9a228dfafbb82f03dabf6fe894d0cdf86e49c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd342467_e5b7d04e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-02-16T22:39:49Z",
      "side": 1,
      "message": "\u003e This is not the behavior of the GWT UI. It just assumes that submit_type is always present;\n\nThe condition on line 1248 queries the change status, not the presence of submit_type:\n\n  if (current \u0026\u0026 info.status().isOpen()) {\n      quickApprove.set(info, revision, replyAction);\n      renderSubmitType(info.status(), isSubmittable(info), info.submitType());\n    } else {\n      quickApprove.setVisible(false);\n    }\n\nAnd as the matter of fact, on merged changes, the submit type is not get rendered, e.g.: [1].\n\n* [1] https://gerrit-review.googlesource.com/#/c/57781",
      "parentUuid": "5d688870_c7e4fefb",
      "revId": "fa9a228dfafbb82f03dabf6fe894d0cdf86e49c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d654c95_2847eb1c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1013702
      },
      "writtenOn": "2016-02-17T19:49:06Z",
      "side": 1,
      "message": "It\u0027s really strange. I have a setup where \u0027Cherry Pick\u0027 is used  and there is no \u0027submit_type\u0027 available in the change-info (in REST-response). But still, the GWT UI shows \u0027Cherry Pick\u0027 as strategy. Do you have any idea which code does this?",
      "parentUuid": "5d688870_c7e4fefb",
      "revId": "fa9a228dfafbb82f03dabf6fe894d0cdf86e49c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d654c95_a8919bce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-02-17T20:32:47Z",
      "side": 1,
      "message": "I misread Dave\u0027s comment. He meant not the merged status, but open. I just rechecked, it\u0027s always there (in Change Info) for open changes. The only way, it\u0027s not there, if something went wrong on the server side, ChangeJson.java:401\n\n  if (in.getStatus() !\u003d Change.Status.MERGED) {\n      SubmitTypeRecord str \u003d cd.submitTypeRecord();\n      if (str.isOk()) {\n        out.submitType \u003d str.type;\n      }\n      out.mergeable \u003d cd.isMergeable();\n    }\n\nin which case the client wouldn\u0027t render it either.",
      "parentUuid": "7d654c95_2847eb1c",
      "revId": "fa9a228dfafbb82f03dabf6fe894d0cdf86e49c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd342467_48e013df",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1013702
      },
      "writtenOn": "2016-02-17T20:46:24Z",
      "side": 1,
      "message": "Okay, now I see a difference: In my test setup, the \u0027submit_type\u0027 is not included in the change-info, but an extra REST resource to \u0027/changes/x/revisions/xxx/submit_type\u0027 is issued... Do you have any idea where this call is issued? This extra call is not issued on gerrit-review.googlesource.com where \u0027submit_type\u0027 is included in the change-info.",
      "parentUuid": "7d654c95_a8919bce",
      "revId": "fa9a228dfafbb82f03dabf6fe894d0cdf86e49c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9de3e049_41abf29f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2016-02-17T20:48:32Z",
      "side": 1,
      "message": "We should mimic GWT UI behavior in both the open and closed cases.\n\nIn the open case, no submit_type means there was an error computing it (bad prolog rule or something).\n\nIn the closed case, we don\u0027t know what submit_type was at the time the submit button was clicked, because the project config may have changed. So we bail and show nothing rather than showing something that was possibly wrong. (We could in theory try to reconstruct this from the git history, or stamp it at submit time like we do with approvals, but we don\u0027t currently.)\n\nIn neither case is it correct to read from the project config.",
      "parentUuid": "7d654c95_a8919bce",
      "revId": "fa9a228dfafbb82f03dabf6fe894d0cdf86e49c2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}