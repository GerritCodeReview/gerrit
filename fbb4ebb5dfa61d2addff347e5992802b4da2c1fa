{
  "comments": [
    {
      "key": {
        "uuid": "99174bd6_c17b5d2d",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 1
      },
      "lineNbr": 480,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2018-10-22T19:29:03Z",
      "side": 1,
      "message": "I think I\u0027d prefer if these were explicitly declared properties that themselves had reflectToAttribute: true.",
      "range": {
        "startLine": 463,
        "startChar": 0,
        "endLine": 480,
        "endChar": 6
      },
      "revId": "fbb4ebb5dfa61d2addff347e5992802b4da2c1fa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21c16a5d_46190b17",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 1
      },
      "lineNbr": 480,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2018-10-22T19:33:37Z",
      "side": 1,
      "message": "Okay, I will give it a try. I was trying to not change the API of the thread component since it\u0027s used in a couple of places. But might not be so hard to change after all...",
      "parentUuid": "99174bd6_c17b5d2d",
      "range": {
        "startLine": 463,
        "startChar": 0,
        "endLine": 480,
        "endChar": 6
      },
      "revId": "fbb4ebb5dfa61d2addff347e5992802b4da2c1fa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cc9bc24_dfdda72c",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 1
      },
      "lineNbr": 480,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2018-10-23T08:11:46Z",
      "side": 1,
      "message": "Thinking about this some more, I want to challenge this suggestion. My concern is that splitting this into multiple attribute kind of requires us to handle all the cases where only a subset of the range dimensions are set, whereas the way it is right now a compiler could enforce that it\u0027s either all or none. Do you have any specific concern with my solution?",
      "parentUuid": "21c16a5d_46190b17",
      "range": {
        "startLine": 463,
        "startChar": 0,
        "endLine": 480,
        "endChar": 6
      },
      "revId": "fbb4ebb5dfa61d2addff347e5992802b4da2c1fa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dab6ec5f_f962bfb3",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 1
      },
      "lineNbr": 480,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2018-10-23T16:26:44Z",
      "side": 1,
      "message": "I\u0027m not a fan of how the existence of these attributes isn\u0027t explicitly documented, declared, or laid out anywhere except in the implementation.\n\nI actually don\u0027t see how your point in the last comment about the compiler holds -- could you explain further?",
      "parentUuid": "5cc9bc24_dfdda72c",
      "range": {
        "startLine": 463,
        "startChar": 0,
        "endLine": 480,
        "endChar": 6
      },
      "revId": "fbb4ebb5dfa61d2addff347e5992802b4da2c1fa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51a2d260_92f26821",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 1
      },
      "lineNbr": 480,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2018-10-23T17:03:49Z",
      "side": 1,
      "message": "Sure. It\u0027s not valid to provide partial ranges, but it is valid to not have a range set at all. With individual properties, I can only either type them each required, or each optional, but not express that they either have to be all undefined, or all defined. With a single range property, I can express this by giving it the type \n/** @type {({beforeLine: number, afterLine: number, beforeChar: number, afterChar: number}|undefined)} */\n\nNow, I am not sure how much of this the current setup with Fried Twinkie can enforce. But in principle it could, and in Angular/TS world it definitely would enforce that.\n\nI understand and agree with the concern of not having these properties at the top. Can one declare attributes in some way without allowing others to set them? I could add four individual properties, set those in the computed function for range, and make them reflect to attributes, but nothing would keep people from providing those then, no?",
      "parentUuid": "dab6ec5f_f962bfb3",
      "range": {
        "startLine": 463,
        "startChar": 0,
        "endLine": 480,
        "endChar": 6
      },
      "revId": "fbb4ebb5dfa61d2addff347e5992802b4da2c1fa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f34213c_6ff5f35f",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 1
      },
      "lineNbr": 480,
      "author": {
        "id": 1029297
      },
      "writtenOn": "2018-10-23T18:53:40Z",
      "side": 1,
      "message": "Hmm. Good question.\n\nI think you could _probably_ make them individually computed properties that all observe range.*....\n\n      rangeStartLine: {\n        type: Number,\n        computed: \u0027_computeRangeStartLine(range.*)\u0027,\n        reflectToAttribute: true,\n      },\n\n...but I\u0027m not sure how the compiler would treat that. Alternately, if you add a comment to the top of the file or something describing this behavior, that\u0027d work.",
      "parentUuid": "51a2d260_92f26821",
      "range": {
        "startLine": 463,
        "startChar": 0,
        "endLine": 480,
        "endChar": 6
      },
      "revId": "fbb4ebb5dfa61d2addff347e5992802b4da2c1fa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82bab2cf_5260a86f",
        "filename": "polygerrit-ui/app/elements/diff/gr-diff-comment-thread/gr-diff-comment-thread.js",
        "patchSetId": 1
      },
      "lineNbr": 480,
      "author": {
        "id": 1070860
      },
      "writtenOn": "2018-10-24T14:24:05Z",
      "side": 1,
      "message": "I think comments are actually a good solution to this. I have added an API comment next to the events the component fires with the attribute it sets. I only listed the ones that are needed for the positioning because I don\u0027t know enough about why the others are set, but this could be added at a later point. Let me know what you think.",
      "parentUuid": "5f34213c_6ff5f35f",
      "range": {
        "startLine": 463,
        "startChar": 0,
        "endLine": 480,
        "endChar": 6
      },
      "revId": "fbb4ebb5dfa61d2addff347e5992802b4da2c1fa",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}