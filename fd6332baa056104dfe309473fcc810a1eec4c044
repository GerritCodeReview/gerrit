{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b5f8a6ff_b16c19cb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-09-06T15:28:45Z",
      "side": 1,
      "message": "I think it\u0027s good as you did it. Instead of doing injections into the Predicate classes we have the Arguments class in ChangeQueryBuilder and then we just pass the args into the Predicate class if any of the args is needed there.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 22,
        "endChar": 37
      },
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cab20d32_f4e72017",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-09-06T12:02:40Z",
      "side": 1,
      "message": "Sasa for SAP concerns.",
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbdf7727_3ca1962e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-08T01:06:59Z",
      "side": 1,
      "message": "@Jacek could you evaluate the performance of this change *after* having applied your fix to the caching of All-Users\u0027s refs?",
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bad295a7_c0a52906",
        "filename": "java/com/google/gerrit/server/CommentsUtil.java",
        "patchSetId": 6
      },
      "lineNbr": 455,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-08T22:46:09Z",
      "side": 1,
      "message": "for future: probably can clean up some of the comments in this file like this where it implies there\u0027s a non-NoteDb variant.",
      "range": {
        "startLine": 455,
        "startChar": 8,
        "endLine": 455,
        "endChar": 75
      },
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "310d01f4_22fd1844",
        "filename": "java/com/google/gerrit/server/CommentsUtil.java",
        "patchSetId": 6
      },
      "lineNbr": 478,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-09-06T12:02:14Z",
      "side": 1,
      "message": "AFAIK, Youssef wrote a schema migration to fix these, those the zombies shouldn\u0027t concern anyone anymore.",
      "range": {
        "startLine": 477,
        "startChar": 0,
        "endLine": 478,
        "endChar": 62
      },
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c93b9da_cf7c1a5f",
        "filename": "java/com/google/gerrit/server/CommentsUtil.java",
        "patchSetId": 6
      },
      "lineNbr": 478,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-09-06T15:28:45Z",
      "side": 1,
      "message": "Must be https://gerrit-review.googlesource.com/c/gerrit/+/252282",
      "parentUuid": "310d01f4_22fd1844",
      "range": {
        "startLine": 477,
        "startChar": 0,
        "endLine": 478,
        "endChar": 62
      },
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d97063f_1c133d64",
        "filename": "java/com/google/gerrit/server/CommentsUtil.java",
        "patchSetId": 6
      },
      "lineNbr": 495,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-09-06T12:02:14Z",
      "side": 1,
      "message": "I know we did an analysis that shows that this is not an issue for googlesource deployments, but it would be interesting to know from folks at SAP, QC and Gerritforge how much time this operation takes for them, as they are typically on NFS with packed/loose ref storage. They also tend to have a single host for all of their users, ie. more users and more drafts.\n\nIf this turns out to be an issue for them, we\u0027d want to know well before we cut the next stable release, to be able to setup a schema migration.",
      "range": {
        "startLine": 494,
        "startChar": 45,
        "endLine": 495,
        "endChar": 89
      },
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "756eb2f8_1901e5ec",
        "filename": "java/com/google/gerrit/server/CommentsUtil.java",
        "patchSetId": 6
      },
      "lineNbr": 495,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-08T22:46:09Z",
      "side": 1,
      "message": "\u003e I know we did an analysis that shows that this is not an issue for googlesource deployments, but it would be interesting to know from folks at SAP, QC and Gerritforge how much time this operation takes for them, as they are typically on NFS with packed/loose ref storage. They also tend to have a single host for all of their users, ie. more users and more drafts.\n\nI think there\u0027s no prefix search optimization possible with ref files-backend (non-reftable), so this is going to be relatively slow on a site with many users. It\u0027s going to be even slower if using NFS and setting core.trustFolderStat\u003dfalse since then packed-refs will be fully re-read every time this method is called.\n\nIf I\u0027m reading the code right, it should be just as slow as getDraftRefs(), so depending on where that\u0027s used, there could be some real data available from a site like gerrithub.io. @Luca?\n\n\u003e \n\u003e If this turns out to be an issue for them, we\u0027d want to know well before we cut the next stable release, to be able to setup a schema migration.\n\nNot following this. How would a schema migration help?",
      "parentUuid": "4d97063f_1c133d64",
      "range": {
        "startLine": 494,
        "startChar": 45,
        "endLine": 495,
        "endChar": 89
      },
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b94a33d1_afb0bea7",
        "filename": "java/com/google/gerrit/server/CommentsUtil.java",
        "patchSetId": 6
      },
      "lineNbr": 495,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-09-08T22:51:12Z",
      "side": 1,
      "message": "\u003e I think there\u0027s no prefix search optimization possible with ref files-backend (non-reftable), so this is going to be relatively slow on a site with many users. It\u0027s going to be even slower if using NFS and setting core.trustFolderStat\u003dfalse since then packed-refs will be fully re-read every time this method is called.\n\nThat is *very true*: reading refs with open-source JGit (pre-reftable) is a real pain and is very slow.\n\n\u003e If I\u0027m reading the code right, it should be just as slow as getDraftRefs(), so depending on where that\u0027s used, there could be some real data available from a site like gerrithub.io. @Luca?\n\nJacek is gathering some data and will give an update on the timings.",
      "parentUuid": "756eb2f8_1901e5ec",
      "range": {
        "startLine": 494,
        "startChar": 45,
        "endLine": 495,
        "endChar": 89
      },
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eab6f798_17794ad4",
        "filename": "java/com/google/gerrit/server/CommentsUtil.java",
        "patchSetId": 6
      },
      "lineNbr": 495,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-09-09T13:28:19Z",
      "side": 1,
      "message": "Thanks!\nI will wait for Jacek\u0027s input before I continue working on this change, then.",
      "parentUuid": "b94a33d1_afb0bea7",
      "range": {
        "startLine": 494,
        "startChar": 45,
        "endLine": 495,
        "endChar": 89
      },
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01e078e4_7485d757",
        "filename": "java/com/google/gerrit/server/CommentsUtil.java",
        "patchSetId": 6
      },
      "lineNbr": 495,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-09-09T13:35:14Z",
      "side": 1,
      "message": "\u003e\u003e If this turns out to be an issue for them, we\u0027d want to know well before we cut the next stable release, to be able to setup a schema migration.\n\n\u003e Not following this. How would a schema migration help?\n\nif you invert the ordering, you can do a prefix scan for \"refs/users/${USERID}\" to find drafts for a single user. In the files backend, this only has to do a read everything under \"refs/users/${USERID}/*\" from the filesystem. That will make it O(#drafts-per-user) rather than O(#users * #drafts-per-user).\n\nif you\u0027re on NFS, that might still be slow, but an NFS filer is like ~1ms per operation, so in total ~25ms  might still be attainable?",
      "parentUuid": "eab6f798_17794ad4",
      "range": {
        "startLine": 494,
        "startChar": 45,
        "endLine": 495,
        "endChar": 89
      },
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1971feb9_80000b20",
        "filename": "java/com/google/gerrit/server/CommentsUtil.java",
        "patchSetId": 6
      },
      "lineNbr": 495,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-09-09T13:42:52Z",
      "side": 1,
      "message": "come to think of it, to know that the refs exist, you only have to do opendir + readdir + closedir, but I\u0027m not sure if JGit lets you do that; it might want to try reading the files as well to get the SHA1s.",
      "parentUuid": "01e078e4_7485d757",
      "range": {
        "startLine": 494,
        "startChar": 45,
        "endLine": 495,
        "endChar": 89
      },
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca4e27c4_f47785b6",
        "filename": "java/com/google/gerrit/server/CommentsUtil.java",
        "patchSetId": 6
      },
      "lineNbr": 495,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-09-09T15:31:26Z",
      "side": 1,
      "message": "Ok, so the schema migration would rename the refs from \u0027refs/draft-comments/\u003csharded change\u003e/\u003caccount-id\u003e\u0027 to something like \u0027refs/\u003caccount-id\u003e/draft-comments/\u003csharded change\u003e\u0027?\n\nUnfortunately I don\u0027t think that helps because it still relies on a prefix search. Unless I\u0027m misremembering the JGit code, it has no optimizations for prefix searching with the files backend, and while it could have tricks to speed things up with loose refs, I think you\u0027re missing the case where the refs are packed. You\u0027re not looking at only files in a subdir then, you\u0027re also opening and reading the entire packed-refs file. That\u0027s about 12MB for us and I suspect larger for sites with more users/drafts. I think that\u0027s the real cost/overhead here for files backend.",
      "parentUuid": "1971feb9_80000b20",
      "range": {
        "startLine": 494,
        "startChar": 45,
        "endLine": 495,
        "endChar": 89
      },
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bed776a_48c0f847",
        "filename": "java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 6
      },
      "lineNbr": 1068,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-09-06T15:28:45Z",
      "side": 1,
      "message": "[optional] I think for other predicates we always just pass in the whole args, you may do here the same.",
      "range": {
        "startLine": 1068,
        "startChar": 36,
        "endLine": 1068,
        "endChar": 53
      },
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22f6c531_697a545f",
        "filename": "java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 6
      },
      "lineNbr": 1068,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2021-09-06T16:15:22Z",
      "side": 1,
      "message": "This method is used in 2 places which have different args, so that doesn\u0027t work.",
      "parentUuid": "9bed776a_48c0f847",
      "range": {
        "startLine": 1068,
        "startChar": 36,
        "endLine": 1068,
        "endChar": 53
      },
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e527bebf_c305cf71",
        "filename": "java/com/google/gerrit/server/query/change/ChangeQueryBuilder.java",
        "patchSetId": 6
      },
      "lineNbr": 1068,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2021-09-07T06:23:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "22f6c531_697a545f",
      "range": {
        "startLine": 1068,
        "startChar": 36,
        "endLine": 1068,
        "endChar": 53
      },
      "revId": "fd6332baa056104dfe309473fcc810a1eec4c044",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}