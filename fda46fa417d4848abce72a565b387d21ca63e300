{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4e709f18_0cb2d8ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2022-01-06T10:14:49Z",
      "side": 1,
      "message": "Building this change on MacOS 12.1 works with both JDK 11 and JDK 17.\nRunning the tests on JDK 11 also succeeds.\n\nThough for running the tests on Java 17 there is still some way to go. \n\nI got this result when running the tests:\n$ bazelisk test --config java17 //...\n...\nExecuted 195 out of 195 tests: 165 tests pass and 30 fail locally.\n\nThere are a lot of errors with gson on Java 17 which no longer supports hacking private fields using reflection.\nIt looks like on Java 17 we can\u0027t use ReflectiveTypeAdapterFactory anymore\n\nhttps://blogs.oracle.com/javamagazine/post/a-peek-into-java-17-continuing-the-drive-to-encapsulate-the-java-runtime-internals\nhttps://github.com/google/gson/issues/1979\n\nExecuting tests from //javatests/com/google/gerrit/acceptance/api/change:ChangeIT\n2) submitRequirement_retrievedFromNoteDbForAbandonedChanges(com.google.gerrit.acceptance.api.change.ChangeIT)\njava.lang.reflect.InaccessibleObjectException: Unable to make field private final java.lang.Object java.util.Optional.value accessible: module java.base does not \"opens java.util\" to unnamed module @7825f19b\n\tat java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:354)\n\tat java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297)\n\tat java.base/java.lang.reflect.Field.checkCanSetAccessible(Field.java:178)\n\tat java.base/java.lang.reflect.Field.setAccessible(Field.java:172)\n\tat com.google.gson.internal.reflect.UnsafeReflectionAccessor.makeAccessible(UnsafeReflectionAccessor.java:44)\n\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:159)\n\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:102)\n\tat com.google.gson.Gson.getAdapter(Gson.java:458)\n\nthere are many java.util.IllegalFormatArgumentIndexExceptions:\n\nExecuting tests from //javatests/com/google/gerrit/acceptance/api/change:CreateMergePatchSetIT\n1) createMergePatchSet_ConflictAllowed(com.google.gerrit.acceptance.api.change.CreateMergePatchSetIT)\njava.util.IllegalFormatArgumentIndexException: Illegal format argument index \u003d 0\n\tat java.base/java.util.Formatter$FormatSpecifier.index(Formatter.java:2808)\n\tat java.base/java.util.Formatter$FormatSpecifier.\u003cinit\u003e(Formatter.java:2879)\n\tat java.base/java.util.Formatter.parse(Formatter.java:2747)\n\tat java.base/java.util.Formatter.format(Formatter.java:2671)\n\tat java.base/java.util.Formatter.format(Formatter.java:2625)\n\tat java.base/java.lang.String.format(String.java:4140)\n\nalso some others, e.g.\n\nExecuting tests from //javatests/com/google/gerrit/server/query/change:LuceneQueryChangesPreviousIndexVersionTest\n1) fullTextWithSpecialChars(com.google.gerrit.server.query.change.LuceneQueryChangesPreviousIndexVersionTest)\njava.lang.NullPointerException\n\tat java.base/java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1011)\n\tat java.base/java.util.concurrent.ConcurrentHashMap.put(ConcurrentHashMap.java:1006)\n\tat java.base/java.util.Properties.put(Properties.java:1301)\n\tat java.base/java.util.Properties.setProperty(Properties.java:229)\n\tat java.base/java.lang.System.setProperty(System.java:999)\n\tat com.google.gerrit.server.query.change.AbstractQueryChangesTest.resetTime(AbstractQueryChangesTest.java:283)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)\n\tat com.google.gerrit.testing.GerritServerTests$1.evaluate(GerritServerTests.java:44)",
      "revId": "fda46fa417d4848abce72a565b387d21ca63e300",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}