{
  "comments": [
    {
      "key": {
        "uuid": "43d5c277_27bc1aef",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/Reindex.java",
        "patchSetId": 7
      },
      "lineNbr": 210,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-12-10T20:39:54Z",
      "side": 1,
      "message": "Deadlock is interessting, seems to have something todo with H2 based caches \u0026 H2 database. On my laptop threads \u003d 8.\n\nStack dump:\n\nThread numero 1\n\nThread [MergeabilityChecks-1] (Suspended)\t\n\towns: LocalCache$StrongAccessEntry\u003cK,V\u003e  (id\u003d96)\t\n\towns: LocalCache$StrongAccessEntry\u003cK,V\u003e  (id\u003d97)\t\n\twaiting for: GenericObjectPool$Latch  (id\u003d98)\t\n\tObject.wait(long) line: not available [native method]\t\n\tGenericObjectPool.borrowObject() line: 1112\t\n\tPoolingDataSource.getConnection() line: 106\t\n\tBasicDataSource.getConnection() line: 1044\t\n\tDatabase\u003cT\u003e.newConnection() line: 127\t\n\tReviewDb_Schema_GwtOrm$$22(JdbcSchema).\u003cinit\u003e(Database\u003c?\u003e) line: 41\t\n\tReviewDb_Schema_GwtOrm$$22.\u003cinit\u003e(Database) line: not available\t\n\tReviewDb_Schema_GwtOrm$$22_Factory_GwtOrm$$23.open() line: not available [local variables unavailable]\t\n\tDatabase\u003cT\u003e.open() line: 121\t\n\tGroupCacheImpl$ByIdLoader.load(Id) line: 190\t\n\tGroupCacheImpl$ByIdLoader.load(Object) line: 1\t\n\tLocalCache$LoadingValueReference\u003cK,V\u003e.loadFuture(K, CacheLoader\u003c? super K,V\u003e) line: 3522\t\n\tLocalCache$Segment\u003cK,V\u003e.loadSync(K, int, LoadingValueReference\u003cK,V\u003e, CacheLoader\u003c? super K,V\u003e) line: 2315\t\n\tLocalCache$Segment\u003cK,V\u003e.lockedGetOrLoad(K, int, CacheLoader\u003c? super K,V\u003e) line: 2278\t\n\tLocalCache$Segment\u003cK,V\u003e.get(K, int, CacheLoader\u003c? super K,V\u003e) line: 2193\t\n\tLocalCache\u003cK,V\u003e.get(K, CacheLoader\u003c? super K,V\u003e) line: 3932\t\n\tLocalCache\u003cK,V\u003e.getOrLoad(K) line: 3936\t\n\tLocalCache$LocalLoadingCache\u003cK,V\u003e.get(K) line: 4806\t\n\tGroupCacheImpl.get(AccountGroup$Id) line: 95\t\n\tAccountCacheImpl$ByIdLoader.load(ReviewDb, Account$Id) line: 169\t\n\tAccountCacheImpl$ByIdLoader.load(Account$Id) line: 142\t\n\tAccountCacheImpl$ByIdLoader.load(Object) line: 1\t\n\tLocalCache$LoadingValueReference\u003cK,V\u003e.loadFuture(K, CacheLoader\u003c? super K,V\u003e) line: 3522\t\n\tLocalCache$Segment\u003cK,V\u003e.loadSync(K, int, LoadingValueReference\u003cK,V\u003e, CacheLoader\u003c? super K,V\u003e) line: 2315\t\n\tLocalCache$Segment\u003cK,V\u003e.lockedGetOrLoad(K, int, CacheLoader\u003c? super K,V\u003e) line: 2278\t\n\tLocalCache$Segment\u003cK,V\u003e.get(K, int, CacheLoader\u003c? super K,V\u003e) line: 2193\t\n\tLocalCache\u003cK,V\u003e.get(K, CacheLoader\u003c? super K,V\u003e) line: 3932\t\n\tLocalCache\u003cK,V\u003e.getOrLoad(K) line: 3936\t\n\tLocalCache$LocalLoadingCache\u003cK,V\u003e.get(K) line: 4806\t\n\tAccountCacheImpl.get(Account$Id) line: 84\t\n\tIdentifiedUser.state() line: 233\t\n\tIdentifiedUser.getUserName() line: 246\t\n\tProjectControl.controlForRef(String) line: 195\t\n\tProjectControl.controlForRef(Branch$NameKey) line: 185\t\n\tProjectControl.controlFor(Change) line: 181\t\n\tChangeControl$GenericFactory.controlFor(Change, CurrentUser) line: 74\t\n\tMergeabilityChecker$ChangeUpdateTask.call() line: 277\t\n\tMergeabilityChecker$ChangeUpdateTask.call() line: 1\t\n\tListenableFutureTask\u003cV\u003e(FutureTask\u003cV\u003e).run() line: 262\t\n\tExecutors$RunnableAdapter\u003cT\u003e.call() line: 471\t\n\tScheduledThreadPoolExecutor$ScheduledFutureTask\u003cV\u003e(FutureTask\u003cV\u003e).run() line: 262\t\n\tScheduledThreadPoolExecutor$ScheduledFutureTask\u003cV\u003e.access$201(ScheduledThreadPoolExecutor$ScheduledFutureTask) line: 178\t\n\tScheduledThreadPoolExecutor$ScheduledFutureTask\u003cV\u003e.run() line: 292\t\n\tWorkQueue$Task\u003cV\u003e.run() line: 360\t\n\tWorkQueue$Executor(ThreadPoolExecutor).runWorker(ThreadPoolExecutor$Worker) line: 1145\t\n\tThreadPoolExecutor$Worker.run() line: 615\t\n\tThread.run() line: 744\t\n\n\nThread numero 2:\n\nThread [MergeabilityChecks-2] (Suspended)\t\n\tUnsafe.park(boolean, long) line: not available [native method]\t\n\tLockSupport.park(Object) line: 186\t\n\tAbstractFuture$Sync\u003cV\u003e(AbstractQueuedSynchronizer).parkAndCheckInterrupt() line: 834\t\n\tAbstractFuture$Sync\u003cV\u003e(AbstractQueuedSynchronizer).doAcquireSharedInterruptibly(int) line: 994\t\n\tAbstractFuture$Sync\u003cV\u003e(AbstractQueuedSynchronizer).acquireSharedInterruptibly(int) line: 1303\t\n\tAbstractFuture$Sync\u003cV\u003e.get() line: 285\t\n\tSettableFuture\u003cV\u003e(AbstractFuture\u003cV\u003e).get() line: 116\t\n\tUninterruptibles.getUninterruptibly(Future\u003cV\u003e) line: 135\t\n\tLocalCache$LoadingValueReference\u003cK,V\u003e.waitForValue() line: 3552\t\n\tLocalCache$Segment\u003cK,V\u003e.waitForLoadingValue(ReferenceEntry\u003cK,V\u003e, K, ValueReference\u003cK,V\u003e) line: 2298\t\n\tLocalCache$Segment\u003cK,V\u003e.lockedGetOrLoad(K, int, CacheLoader\u003c? super K,V\u003e) line: 2285\t\n\tLocalCache$Segment\u003cK,V\u003e.get(K, int, CacheLoader\u003c? super K,V\u003e) line: 2193\t\n\tLocalCache\u003cK,V\u003e.get(K, CacheLoader\u003c? super K,V\u003e) line: 3932\t\n\tLocalCache\u003cK,V\u003e.getOrLoad(K) line: 3936\t\n\tLocalCache$LocalLoadingCache\u003cK,V\u003e.get(K) line: 4806\t\n\tAccountCacheImpl.get(Account$Id) line: 84\t\n\tIdentifiedUser.state() line: 233\t\n\tIdentifiedUser.getUserName() line: 246\t\n\tProjectControl.controlForRef(String) line: 195\t\n\tProjectControl.controlForRef(Branch$NameKey) line: 185\t\n\tProjectControl.controlFor(Change) line: 181\t\n\tChangeControl$GenericFactory.controlFor(Change, CurrentUser) line: 74\t\n\tMergeabilityChecker$ChangeUpdateTask.call() line: 277\t\n\tMergeabilityChecker$ChangeUpdateTask.call() line: 1\t\n\tListenableFutureTask\u003cV\u003e(FutureTask\u003cV\u003e).run() line: 262\t\n\tExecutors$RunnableAdapter\u003cT\u003e.call() line: 471\t\n\tScheduledThreadPoolExecutor$ScheduledFutureTask\u003cV\u003e(FutureTask\u003cV\u003e).run() line: 262\t\n\tScheduledThreadPoolExecutor$ScheduledFutureTask\u003cV\u003e.access$201(ScheduledThreadPoolExecutor$ScheduledFutureTask) line: 178\t\n\tScheduledThreadPoolExecutor$ScheduledFutureTask\u003cV\u003e.run() line: 292\t\n\tWorkQueue$Task\u003cV\u003e.run() line: 360\t\n\tWorkQueue$Executor(ThreadPoolExecutor).runWorker(ThreadPoolExecutor$Worker) line: 1145\t\n\tThreadPoolExecutor$Worker.run() line: 615\t\n\tThread.run() line: 744\t\n\n\nThread numero 3:\n\nThread [MergeabilityChecks-3] (Suspended)\t\n\tUnsafe.park(boolean, long) line: not available [native method]\t\n\tLockSupport.park(Object) line: 186\t\n\tAbstractFuture$Sync\u003cV\u003e(AbstractQueuedSynchronizer).parkAndCheckInterrupt() line: 834\t\n\tAbstractFuture$Sync\u003cV\u003e(AbstractQueuedSynchronizer).doAcquireSharedInterruptibly(int) line: 994\t\n\tAbstractFuture$Sync\u003cV\u003e(AbstractQueuedSynchronizer).acquireSharedInterruptibly(int) line: 1303\t\n\tAbstractFuture$Sync\u003cV\u003e.get() line: 285\t\n\tSettableFuture\u003cV\u003e(AbstractFuture\u003cV\u003e).get() line: 116\t\n\tUninterruptibles.getUninterruptibly(Future\u003cV\u003e) line: 135\t\n\tLocalCache$LoadingValueReference\u003cK,V\u003e.waitForValue() line: 3552\t\n\tLocalCache$Segment\u003cK,V\u003e.waitForLoadingValue(ReferenceEntry\u003cK,V\u003e, K, ValueReference\u003cK,V\u003e) line: 2298\t\n\tLocalCache$Segment\u003cK,V\u003e.lockedGetOrLoad(K, int, CacheLoader\u003c? super K,V\u003e) line: 2285\t\n\tLocalCache$Segment\u003cK,V\u003e.get(K, int, CacheLoader\u003c? super K,V\u003e) line: 2193\t\n\tLocalCache\u003cK,V\u003e.get(K, CacheLoader\u003c? super K,V\u003e) line: 3932\t\n\tLocalCache\u003cK,V\u003e.getOrLoad(K) line: 3936\t\n\tLocalCache$LocalLoadingCache\u003cK,V\u003e.get(K) line: 4806\t\n\tAccountCacheImpl.get(Account$Id) line: 84\t\n\tIdentifiedUser.state() line: 233\t\n\tIdentifiedUser.getUserName() line: 246\t\n\tProjectControl.controlForRef(String) line: 195\t\n\tProjectControl.controlForRef(Branch$NameKey) line: 185\t\n\tProjectControl.controlFor(Change) line: 181\t\n\tChangeControl$GenericFactory.controlFor(Change, CurrentUser) line: 74\t\n\tMergeabilityChecker$ChangeUpdateTask.call() line: 277\t\n\tMergeabilityChecker$ChangeUpdateTask.call() line: 1\t\n\tListenableFutureTask\u003cV\u003e(FutureTask\u003cV\u003e).run() line: 262\t\n\tExecutors$RunnableAdapter\u003cT\u003e.call() line: 471\t\n\tScheduledThreadPoolExecutor$ScheduledFutureTask\u003cV\u003e(FutureTask\u003cV\u003e).run() line: 262\t\n\tScheduledThreadPoolExecutor$ScheduledFutureTask\u003cV\u003e.access$201(ScheduledThreadPoolExecutor$ScheduledFutureTask) line: 178\t\n\tScheduledThreadPoolExecutor$ScheduledFutureTask\u003cV\u003e.run() line: 292\t\n\tWorkQueue$Task\u003cV\u003e.run() line: 360\t\n\tWorkQueue$Executor(ThreadPoolExecutor).runWorker(ThreadPoolExecutor$Worker) line: 1145\t\n\tThreadPoolExecutor$Worker.run() line: 615\t\n\tThread.run() line: 744\t\n\n\nThread numero 4:\n\nThread [MergeabilityChecks-4] (Suspended)\t\n\twaiting for: GenericObjectPool$Latch  (id\u003d118)\t\n\tObject.wait(long) line: not available [native method]\t\n\tGenericObjectPool.borrowObject() line: 1112\t\n\tPoolingDataSource.getConnection() line: 106\t\n\tBasicDataSource.getConnection() line: 1044\t\n\tDatabase\u003cT\u003e.newConnection() line: 127\t\n\tReviewDb_Schema_GwtOrm$$22(JdbcSchema).\u003cinit\u003e(Database\u003c?\u003e) line: 41\t\n\tReviewDb_Schema_GwtOrm$$22.\u003cinit\u003e(Database) line: not available\t\n\tReviewDb_Schema_GwtOrm$$22_Factory_GwtOrm$$23.open() line: not available\t\n\tDatabase\u003cT\u003e.open() line: 121\t\n\tReindex$ReviewDbModule$2.get() line: 232\t\n\tReindex$ReviewDbModule$2.get() line: 1\t\n\tInternalFactoryToInitializableAdapter\u003cT\u003e(ProviderInternalFactory\u003cT\u003e).provision(Provider\u003c? extends T\u003e, Errors, Dependency\u003c?\u003e, ConstructionContext\u003cT\u003e) line: 86\t\n\tInternalFactoryToInitializableAdapter\u003cT\u003e.provision(Provider\u003c? extends T\u003e, Errors, Dependency\u003c?\u003e, ConstructionContext\u003cT\u003e) line: 55\t\n\tInternalFactoryToInitializableAdapter\u003cT\u003e(ProviderInternalFactory\u003cT\u003e).circularGet(Provider\u003c? extends T\u003e, Errors, InternalContext, Dependency\u003c?\u003e, boolean, ProvisionListenerStackCallback\u003cT\u003e) line: 66\t\n\tInternalFactoryToInitializableAdapter\u003cT\u003e.get(Errors, InternalContext, Dependency\u003c?\u003e, boolean) line: 47\t\n\tSingleParameterInjector\u003cT\u003e.inject(Errors, InternalContext) line: 38\t\n\tSingleParameterInjector\u003cT\u003e.getAll(Errors, InternalContext, SingleParameterInjector\u003c?\u003e[]) line: 62\t\n\tConstructorInjector\u003cT\u003e.provision(Errors, InternalContext, ConstructionContext\u003cT\u003e) line: 107\t\n\tConstructorInjector\u003cT\u003e.construct(Errors, InternalContext, Class\u003c?\u003e, boolean, ProvisionListenerStackCallback\u003cT\u003e) line: 88\t\n\tConstructorBindingImpl$Factory\u003cT\u003e.get(Errors, InternalContext, Dependency\u003c?\u003e, boolean) line: 269\t\n\tSingleParameterInjector\u003cT\u003e.inject(Errors, InternalContext) line: 38\t\n\tSingleParameterInjector\u003cT\u003e.getAll(Errors, InternalContext, SingleParameterInjector\u003c?\u003e[]) line: 62\t\n\tConstructorInjector\u003cT\u003e.provision(Errors, InternalContext, ConstructionContext\u003cT\u003e) line: 107\t\n\tConstructorInjector\u003cT\u003e.construct(Errors, InternalContext, Class\u003c?\u003e, boolean, ProvisionListenerStackCallback\u003cT\u003e) line: 88\t\n\tConstructorBindingImpl$Factory\u003cT\u003e.get(Errors, InternalContext, Dependency\u003c?\u003e, boolean) line: 269\t\n\tSingleParameterInjector\u003cT\u003e.inject(Errors, InternalContext) line: 38\t\n\tSingleParameterInjector\u003cT\u003e.getAll(Errors, InternalContext, SingleParameterInjector\u003c?\u003e[]) line: 62\t\n\tConstructorInjector\u003cT\u003e.provision(Errors, InternalContext, ConstructionContext\u003cT\u003e) line: 107\t\n\tConstructorInjector\u003cT\u003e.construct(Errors, InternalContext, Class\u003c?\u003e, boolean, ProvisionListenerStackCallback\u003cT\u003e) line: 88\t\n\tConstructorBindingImpl$Factory\u003cT\u003e.get(Errors, InternalContext, Dependency\u003c?\u003e, boolean) line: 269\t\n\tInjectorImpl$3$1.call(InternalContext) line: 1005\t\n\tInjectorImpl.callInContext(ContextualCallable\u003cT\u003e) line: 1051\t\n\tInjectorImpl$3.get() line: 1001\t\n\tMergeabilityChecker$ChangeUpdateTask.call() line: 274\t\n\tMergeabilityChecker$ChangeUpdateTask.call() line: 1\t\n\tListenableFutureTask\u003cV\u003e(FutureTask\u003cV\u003e).run() line: 262\t\n\tExecutors$RunnableAdapter\u003cT\u003e.call() line: 471\t\n\tScheduledThreadPoolExecutor$ScheduledFutureTask\u003cV\u003e(FutureTask\u003cV\u003e).run() line: 262\t\n\tScheduledThreadPoolExecutor$ScheduledFutureTask\u003cV\u003e.access$201(ScheduledThreadPoolExecutor$ScheduledFutureTask) line: 178\t\n\tScheduledThreadPoolExecutor$ScheduledFutureTask\u003cV\u003e.run() line: 292\t\n\tWorkQueue$Task\u003cV\u003e.run() line: 360\t\n\tWorkQueue$Executor(ThreadPoolExecutor).runWorker(ThreadPoolExecutor$Worker) line: 1145\t\n\tThreadPoolExecutor$Worker.run() line: 615\t\n\tThread.run() line: 744",
      "revId": "fdd0fe528a165d465b6c1d7d1fa6411c12690629",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d027d8d_8686ea4c",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/Reindex.java",
        "patchSetId": 7
      },
      "lineNbr": 210,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-01-10T09:48:18Z",
      "side": 1,
      "message": "Is the deadlock fixed by [1]?\n\n[1] https://gerrit-review.googlesource.com/#/c/53611/",
      "parentUuid": "43d5c277_27bc1aef",
      "revId": "fdd0fe528a165d465b6c1d7d1fa6411c12690629",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edfb05cc_e456ba1e",
        "filename": "gerrit-pgm/src/main/java/com/google/gerrit/pgm/Reindex.java",
        "patchSetId": 7
      },
      "lineNbr": 210,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-01-10T09:59:56Z",
      "side": 1,
      "message": "Good catch! Also thought about it, but havn\u0027t verified it yet.",
      "parentUuid": "2d027d8d_8686ea4c",
      "revId": "fdd0fe528a165d465b6c1d7d1fa6411c12690629",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}