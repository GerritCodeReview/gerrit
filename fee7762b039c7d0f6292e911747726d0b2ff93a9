{
  "comments": [
    {
      "key": {
        "uuid": "QcpDMtLQ",
        "filename": "ReleaseNotes/ReleaseNotes-2.6.txt",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-02-28T20:10:38Z",
      "side": 1,
      "message": "Can you link here to the description how to enable it in a submit rule?",
      "revId": "fee7762b039c7d0f6292e911747726d0b2ff93a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "QYGJHdmE",
        "filename": "ReleaseNotes/ReleaseNotes-2.6.txt",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-02-28T20:20:48Z",
      "side": 1,
      "message": "Done. Note that nothing has changed about how you write submit rules; you could always write submit rules with arbitrary labels, only up till now it was impossible to vote on those labels.",
      "parentUuid": "QcpDMtLQ",
      "revId": "fee7762b039c7d0f6292e911747726d0b2ff93a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "QclDjLCg",
        "filename": "ReleaseNotes/ReleaseNotes-2.6.txt",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-02-28T20:10:38Z",
      "side": 1,
      "message": "Can you please clarify, if there is a compatibility mode to the old database based labels? For example our tool chain currently relies that the default approval categories are presented in the system, by looking for their Label-Id, i. e. that VRIF and CRVW do exist. It is not clear to me from that description if we should adjust our tooling once we migrate to 2.6 GA.",
      "revId": "fee7762b039c7d0f6292e911747726d0b2ff93a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "QYIJMeoU",
        "filename": "ReleaseNotes/ReleaseNotes-2.6.txt",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-02-28T20:20:48Z",
      "side": 1,
      "message": "What do you mean by \"are presented in the system\"? What does your tooling actually do?\n\nThe correct way to get label information for a change is now with the REST API either through /changes/\u003cid\u003e/detail or /changes/?q\u003dquery\u0026o\u003dDETAILED_LABELS\n\nI\u0027m happy to explain all this in the release notes I just need a better sense of all the ways people are using it currently.",
      "parentUuid": "QclDjLCg",
      "revId": "fee7762b039c7d0f6292e911747726d0b2ff93a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "QctDWPEI",
        "filename": "ReleaseNotes/ReleaseNotes-2.6.txt",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2013-02-28T20:56:01Z",
      "side": 1,
      "message": "In our gerrit-buildbot-plugin we vote programatically from plugin\u0027s ssh command, by looking for ApprovalType VRIF and creating the approval for that category by using\n\n PublishComments.Factory\n\nI am aware that it was replaced; i already migrated it on master branch, i just would like to understand if we have a further problem here or not:\n\n https://github.com/davido/gerrit-buildbot-plugin/blob/buildbot-2.5-plugin/src/main/java/org/libreoffice/ci/gerrit/buildbot/commands/PutCommand.java",
      "parentUuid": "QYIJMeoU",
      "revId": "fee7762b039c7d0f6292e911747726d0b2ff93a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "QYMItops",
        "filename": "ReleaseNotes/ReleaseNotes-2.6.txt",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-02-28T21:54:18Z",
      "side": 1,
      "message": "Well, your 2.5 version is broken and not going to compile or run against 2.6. So I looked at what was in master.\n\nThe assumption your code is making is that there is such a thing as a global list of approval categories that applies to all projects. This is no longer the case: projects can add new labels, change labels inherited from All-Projects, or even remove inherited labels. You should treat the list of labels as being completely dynamic at the per-project level.\n\nSo the loops where you populate the verified and reviewed ApprovalTypes should go away, and you should just use the string \"Verified\" or \"Code-Review\" to refer to those labels. You don\u0027t need any additional information about the label other than its name just to vote on that label.\n\nIt is up to you what the behavior of your plugin should be when a project owner has removed one of those labels from the project. Right now it looks like it NPEs if the server administrator has removed one of those labels.\n\nCurrently I think we are planning to silently ignore unknown labels when you post a review but I could probably be convinced to fail loudly.",
      "parentUuid": "QctDWPEI",
      "revId": "fee7762b039c7d0f6292e911747726d0b2ff93a9",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}