{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2ff5c67d_8009c4eb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-01-11T18:49:24Z",
      "side": 1,
      "message": "\"that, that\" doesn\u0027t read right.",
      "range": {
        "startLine": 10,
        "startChar": 28,
        "endLine": 10,
        "endChar": 38
      },
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d29bbc7_3594e3c5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-01-11T18:49:24Z",
      "side": 1,
      "message": "The word \"outside\" feels to me like \"not in Gerrit or its plugins\", but that isn\u0027t quite what you mean here.",
      "range": {
        "startLine": 11,
        "startChar": 45,
        "endLine": 11,
        "endChar": 53
      },
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa767e7c_d4fea196",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-01-11T18:49:24Z",
      "side": 1,
      "message": "I would add a \"by\" to the end of this sentence and then continue into much of the next paragraph.",
      "range": {
        "startLine": 13,
        "startChar": 40,
        "endLine": 13,
        "endChar": 41
      },
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "555e5c15_dacf84de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-01-12T13:27:44Z",
      "side": 1,
      "message": "It seems to be the least intrusive implementation of inter plugins API call :) Can you guys give some practical implementation example that you have in mind (or point to it if it is available somewhere)? I would like to make sure that I understand it correct :D Some slack-based meeting with walk through and Q\u0026A session (max 30mins) wouldn\u0027t hurt either ;)",
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c5acc1d_d0f6c7d5",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 1
      },
      "lineNbr": 1476,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-01-11T18:49:24Z",
      "side": 1,
      "message": "It might be worth mentioning here the fact that the registered API class will be implemented by a class loaded in the implementing plugin\u0027s classloader which is why you are using a proxy on line 1512.",
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94c07ec9_da3dab38",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 1
      },
      "lineNbr": 1498,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-01-12T13:27:44Z",
      "side": 1,
      "message": "how is the order of plugin load important in this case? IOW do we have to assume that plugin that exposes MyApi is loaded prior plugin that uses it? Or it matters only when used - IOW when the first call to MyApi is performed from the dependent plugin?\n\nIf/when order matters it would be good to explain it here ;)",
      "range": {
        "startLine": 1497,
        "startChar": 0,
        "endLine": 1498,
        "endChar": 53
      },
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "114f6e34_f8d81f53",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 1
      },
      "lineNbr": 1511,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-01-11T19:24:33Z",
      "side": 1,
      "message": "This is the only reference to \"my-api-plugin\". Clarify that the above registration needs to be done from a plugin installed with this name?",
      "range": {
        "startLine": 1511,
        "startChar": 65,
        "endLine": 1511,
        "endChar": 78
      },
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b45a33e_891baf45",
        "filename": "Documentation/dev-plugins.txt",
        "patchSetId": 1
      },
      "lineNbr": 1512,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-01-11T19:24:33Z",
      "side": 1,
      "message": "Unless getProxyInstance is provided in core, it seems strange to reference it here. Maybe it would make sense to provide in core?",
      "range": {
        "startLine": 1512,
        "startChar": 18,
        "endLine": 1512,
        "endChar": 34
      },
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1c22df5_f5236b43",
        "filename": "java/com/google/gerrit/acceptance/AbstractPluginProvidedApiTest.java",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-01-11T18:49:24Z",
      "side": 1,
      "message": "PLUGIN_PROVIDING_API?",
      "range": {
        "startLine": 35,
        "startChar": 32,
        "endLine": 35,
        "endChar": 43
      },
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44b2d11d_a23339f3",
        "filename": "java/com/google/gerrit/acceptance/AbstractPluginProvidedApiTest.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-01-11T18:49:24Z",
      "side": 1,
      "message": "PLUGIN_USING_API?\n\n(Adjust other references like above also)",
      "range": {
        "startLine": 36,
        "startChar": 32,
        "endLine": 36,
        "endChar": 43
      },
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37765fe4_40f513ea",
        "filename": "java/com/google/gerrit/acceptance/AbstractPluginProvidedApiTest.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-01-11T18:49:24Z",
      "side": 1,
      "message": "Make variable plural?",
      "range": {
        "startLine": 57,
        "startChar": 44,
        "endLine": 57,
        "endChar": 61
      },
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e5bf86b_1d42ec75",
        "filename": "java/com/google/gerrit/acceptance/AbstractPluginProvidedApiTest.java",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-01-12T13:27:44Z",
      "side": 1,
      "message": "that means that MyApi class needs to be shared between these two plugins right? Maybe it should be documented? Ignore if it already is ;)",
      "range": {
        "startLine": 74,
        "startChar": 21,
        "endLine": 74,
        "endChar": 26
      },
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cec36eb0_6b746900",
        "filename": "java/com/google/gerrit/acceptance/AbstractPluginProvidedApiTest.java",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-01-12T13:27:44Z",
      "side": 1,
      "message": "oh so it is all using reflection... I hoped for guice-based approach when classes from providing plugin are injected to using plugin, I guess that it is not that easy and requires way more changes in core though ;) that would also impose plugin load order that is not necessarily based on the plugin names ;) (another puzzle to solve ;))",
      "range": {
        "startLine": 76,
        "startChar": 10,
        "endLine": 85,
        "endChar": 17
      },
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3ffd044_7b4bd9a2",
        "filename": "java/com/google/gerrit/extensions/registration/PluginProvidedApi.java",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-01-11T18:49:24Z",
      "side": 1,
      "message": "Maybe remove the word \"extension\" since that has a specific meaning in Gerrit.",
      "range": {
        "startLine": 18,
        "startChar": 27,
        "endLine": 18,
        "endChar": 37
      },
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70bd7622_233da734",
        "filename": "java/com/google/gerrit/extensions/registration/PluginProvidedApi.java",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2021-01-11T18:49:24Z",
      "side": 1,
      "message": "s/to/for/",
      "range": {
        "startLine": 18,
        "startChar": 37,
        "endLine": 18,
        "endChar": 40
      },
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ec305e0_b8fb1aa0",
        "filename": "java/com/google/gerrit/extensions/registration/PluginProvidedApi.java",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2021-01-12T13:27:44Z",
      "side": 1,
      "message": "Would it make sense to add getProxyInstance method to the Gerrit core so that it is not written over and over again by each plugin consumer?",
      "range": {
        "startLine": 58,
        "startChar": 23,
        "endLine": 58,
        "endChar": 39
      },
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f9bb2f7_b3b6f9e9",
        "filename": "javatests/com/google/gerrit/acceptance/ssh/PluginProvidedApiIT.java",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2021-01-11T19:24:33Z",
      "side": 1,
      "message": "Add REST equivalent?",
      "revId": "ff88712a0e201ebd31b6d3b62b6ecfb4c37246c0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}