{
  "comments": [
    {
      "key": {
        "uuid": "de4eb6d0_bb68842e",
        "filename": "java/com/google/gerrit/json/EnumTypeAdapterFactory.java",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-07-31T23:44:54Z",
      "side": 1,
      "message": "Can this exception message include the name of the enum, and the invalid value that was given? I.e. something like:\n\n Invalid value \u0027THREE\u0027 for enum TestEnum",
      "range": {
        "startLine": 65,
        "startChar": 8,
        "endLine": 65,
        "endChar": 74
      },
      "revId": "ffc612d9b9852267b2de55e629569b787423e266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "369c506f_4743f4f0",
        "filename": "java/com/google/gerrit/json/EnumTypeAdapterFactory.java",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-08-01T12:09:14Z",
      "side": 1,
      "message": "Unfortunately, including the invalid value is not possible (as the JsonReader doesn\u0027t allow to peek the next string value). We would need to copy the whole implementation of the original EnumTypeAdapter and I didn\u0027t want to do this.\n\nThe full name of the enum is included now (in the logged string).",
      "parentUuid": "de4eb6d0_bb68842e",
      "range": {
        "startLine": 65,
        "startChar": 8,
        "endLine": 65,
        "endChar": 74
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "ffc612d9b9852267b2de55e629569b787423e266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d2b5927_8e121b98",
        "filename": "javatests/com/google/gerrit/json/JsonEnumMappingTest.java",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2019-07-31T23:44:54Z",
      "side": 1,
      "message": "Also add a test that lower or mixed case values are accepted?",
      "range": {
        "startLine": 46,
        "startChar": 48,
        "endLine": 46,
        "endChar": 51
      },
      "revId": "ffc612d9b9852267b2de55e629569b787423e266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c2f83cb_e77279c6",
        "filename": "javatests/com/google/gerrit/json/JsonEnumMappingTest.java",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-08-01T12:09:14Z",
      "side": 1,
      "message": "Done. As the tests show, lower and mixed case values are ignored with the default enum handler.",
      "parentUuid": "9d2b5927_8e121b98",
      "range": {
        "startLine": 46,
        "startChar": 48,
        "endLine": 46,
        "endChar": 51
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "ffc612d9b9852267b2de55e629569b787423e266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f10380f7_2cd774f2",
        "filename": "javatests/com/google/gerrit/json/JsonEnumMappingTest.java",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2019-07-31T17:26:13Z",
      "side": 1,
      "message": "What happens to our existing traffic if this starts triggering? Is this 500?\n\nI\u0027m worried that might trigger a fire drill and rollback.\n\nCould we start with logging and make sure there aren\u0027t too many misbehaving customers?",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 59,
        "endChar": 27
      },
      "revId": "ffc612d9b9852267b2de55e629569b787423e266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc5f9c0a_6a5993bf",
        "filename": "javatests/com/google/gerrit/json/JsonEnumMappingTest.java",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-31T18:30:16Z",
      "side": 1,
      "message": "It would be a 400 (bad request) saying \"Invalid application/json in request\". We can also start with logging first but I could only log that this happens and not what the malformed input would be. The latter would only be possible if I copied some of the internal implementation of Gson\u0027s enum type adapter. I could do this temporary, though, to better identify misbehaving customers. Any preference?",
      "parentUuid": "f10380f7_2cd774f2",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 59,
        "endChar": 27
      },
      "revId": "ffc612d9b9852267b2de55e629569b787423e266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f22e6e6e_bdebb2b5",
        "filename": "javatests/com/google/gerrit/json/JsonEnumMappingTest.java",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-08-01T12:09:14Z",
      "side": 1,
      "message": "I switched to logging now. The rejections will be enabled in a follow-up change which we\u0027ll submit at a later point in time.",
      "parentUuid": "fc5f9c0a_6a5993bf",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 59,
        "endChar": 27
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "ffc612d9b9852267b2de55e629569b787423e266",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}