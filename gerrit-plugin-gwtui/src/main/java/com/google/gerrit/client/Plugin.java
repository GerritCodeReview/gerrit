// Copyright (C) 2013 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package com.google.gerrit.client;

import com.google.gerrit.plugin.client.extension.Panel;

import com.google.gwt.core.client.GWT;
import com.google.gwt.core.client.JavaScriptObject;

/**
 * Wrapper around the plugin instance exposed by Gerrit.
 *
 * Listeners for events generated by the main UI must be registered
 * through this instance.
 */
public final class Plugin extends JavaScriptObject {
  private static final Plugin self = install(
      GWT.getModuleBaseURL() + GWT.getModuleName() + ".nocache.js");

  /** Obtain the plugin instance wrapper. */
  public static Plugin get() {
    return self;
  }

  /** Installed name of the plugin. */
  public final String getName() {
    return getPluginName();
  }

  /** Installed name of the plugin. */
  public final native String getPluginName()
  /*-{ return this.getPluginName() }-*/;

  /** Navigate the UI to the screen identified by the token. */
  public final native void go(String token)
  /*-{ return this.go(token) }-*/;

  /** Refresh the current UI. */
  public final native void refresh()
  /*-{ return this.refresh() }-*/;

  /**
   * Register an Info Row panel for a UI extension point.
   *
   * @param name name of the UI extension point for which the panel should be
   *        registered.
   * @param entry callback function invoked to create the panel widgets.
   */
  public final void infoRow(String name, String header, Panel.EntryPoint entry) {
    infoRow(name, header, wrap(entry));
  }

  private final native void infoRow(String i, String h, JavaScriptObject e)
  /*-{ this.infoRow(i, h, e) }-*/;

  protected Plugin() {
  }

  public native void _initialized() /*-{ this._success = true }-*/;
  public native void _loaded() /*-{ this._loadedGwt() }-*/;
  private static native final Plugin install(String u)
  /*-{ return $wnd.Gerrit.installGwt(u) }-*/;

  private static final native JavaScriptObject wrap(Panel.EntryPoint b) /*-{
    return $entry(function(c){
      b.@com.google.gerrit.plugin.client.extension.Panel.EntryPoint::onLoad(Lcom/google/gerrit/plugin/client/extension/Panel;)(
        @com.google.gerrit.plugin.client.extension.Panel::new(Lcom/google/gerrit/plugin/client/extension/Panel$Context;)(c));
    });
  }-*/;
}
