package com.google.gerrit.server;

import com.google.common.annotations.VisibleForTesting;
import com.google.gerrit.server.notedb.NotesMigration;
import com.google.inject.Inject;
import com.google.inject.Singleton;

/**
 * TODO: Insert description here. (generated by yyonas)
 */
@Singleton
public class ChangeMessagesUtil {
  private final NotesMigration migration;

  @VisibleForTesting
  @Inject
  public ChangeMessagesUtil(NotesMigration migration) {
    this.migration = migration;
  }

  /*
   * methods to do:
   *
   * **no need to do get? why don't they replace all methods
   * 1) byChange(Change.Id id) check I can do that
   * 2) all() check I can do that
   * how can we store byPatchSet when we lose state
   * by just saving a list of Strings?
   *
   * solution? I think we should make a map in the change notes to take into
   * account the patch set id and store a mapping on that end because there is
   * no need to change on the update side since there can only be one patchset
   * id per
   *
   * */

}
