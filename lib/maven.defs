GERRIT = 'http://gerrit-maven.commondatastorage.googleapis.com'
MAVEN_CENTRAL = 'http://repo1.maven.org/maven2'

def maven_jar(
    name,
    group, artifact, version,
    license,
    exclude = [],
    exclude_java_sources = False,
    deps = [],
    sha1 = '',
    classifier = None,
    repository = MAVEN_CENTRAL,
    visibility = ['PUBLIC']):
  url = '/'.join([
    repository,
    group.replace('.', '/'),
    artifact,
    version,
    artifact + '-' + version])
  if classifier:
    url += '-' + classifier
  third_party_jar(
    name = name,
    version = version,
    url = url + '.jar',
    license = license,
    exclude = exclude,
    exclude_java_sources = exclude_java_sources,
    deps = deps,
    sha1 = sha1,
    visibility = visibility,
  )

def third_party_jar(
    name,
    version,
    url,
    license,
    exclude = [],
    exclude_java_sources = False,
    deps = [],
    sha1 = '',
    visibility = ['PUBLIC']):
  jar = name + '.jar'
  cmd = '$DEPS "$OUT" \'%s\' \'%s\'' % (url, sha1)
  if exclude or exclude_java_sources:
    cmd = cmd + ' ; zip -d "$OUT"'
    if exclude:
      cmd = cmd + " '" + "' '".join(exclude) + "'"
    if exclude_java_sources:
      cmd = cmd + ' $(jar tf "$OUT"|grep .java)'
  genrule(
    name = name + '.download',
    cmd = cmd,
    deps = ['//tools:download_jar.sh'],
    srcs = [],
    out = jar,
  )
  prebuilt_jar(
    name = name,
    deps = deps + [
      ':' + name + '.download',
      '//lib:LICENSE-' + license,
    ],
    binary_jar = genfile(jar),
    visibility = visibility,
  )

def define_license(name):
  n = 'LICENSE-' + name
  genrule(
    name = n,
    cmd = 'ln -f $SRCS $OUT',
    srcs = [n],
    out = n + '.txt',
    visibility = ['PUBLIC'],
  )
