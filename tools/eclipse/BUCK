include_defs('//tools/build.defs')

genrule(
  name = 'eclipse',
  cmd = '',
  deps = [
    ':_classpath',
    ':_project',
    '//tools:buck.properties',
  ],
  out = '__fake.eclipse__',
)

genrule(
  name = 'eclipse_project',
  cmd = '',
  deps = [
    ':_classpath_nocompile',
    ':_project',
    '//tools:buck.properties',
  ],
  out = '__fake.eclipse__',
)

java_library(
  name = 'classpath',
  deps = LIBS + PGMLIBS + [
    '//gerrit-acceptance-tests:lib',
    '//gerrit-gwtdebug:gwtdebug',
    '//gerrit-gwtui:ui_module',
    '//gerrit-gwtui:ui_tests',
    '//gerrit-httpd:httpd_tests',
    '//gerrit-main:main_lib',
    '//gerrit-server:server__compile',
    '//lib/prolog:compiler_lib',
  ] + scan_plugins(),
)

genrule(
  name = '_project',
  cmd = '$(exe :gen_project) $OUT',
  deps = [':gen_project'],
  out = 'project',
)

genrule(
  name = '_classpath',
  cmd = '$(exe :gen_classpath) $OUT $DEPS',
  deps = [
    ':classpath',
    ':gen_classpath',
  ],
  out = 'classpath',
)

genrule(
  name = '_classpath_nocompile',
  cmd = '$(exe :gen_classpath)',
  deps = [':gen_classpath'],
  out = '__fake.eclipse__',
)

python_binary(
  name = 'gen_classpath',
  main = 'gen_classpath.py',
)

python_binary(
  name = 'gen_project',
  main = 'gen_project.py',
)
