# Copyright (C) 2013 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

def git_describe(plugin = None):
  import subprocess
  import os
  cmd = ['git', 'describe', '--always', '--match', 'v[0-9].*', '--dirty']
  if not plugin or plugin == '${pluginName}':
    p = subprocess.Popen(cmd, stdout = subprocess.PIPE)
  else:
    dir = os.path.join('plugins', plugin)
    # For projects having more than one gerrit_plugin (e.g.: The javamelody
    # plugin defines both the 'javamelody' and the 'javamelody-nodep'
    # plugin), the above choice for dir need not yield a suitable directory
    # (e.g.: 'plugins/javamelody-nodep' would not exist). Hence, as fallback
    # heuristic, we try chopping off '-$SOMETHING' from the right until we
    # get a good directory name.
    while not os.path.isdir(dir):
      dir, _, chopped_off = dir.rpartition('-')
      if os.sep in chopped_off:
        # Chopping off path separator is a sign that we've gone too far.
        raise RuntimeError("Could not find directory to describe plugin %s"
          % (plugin))
    p = subprocess.Popen(cmd, stdout = subprocess.PIPE, cwd = dir)
  v = p.communicate()[0].strip()
  r = p.returncode
  if r != 0:
    raise subprocess.CalledProcessError(r, ' '.join(cmd))
  return v
