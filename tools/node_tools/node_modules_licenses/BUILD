load("@npm_bazel_typescript//:index.bzl", "ts_config", "ts_library")
load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary", "npm_package_bin")
load("@npm//typescript:index.bzl", "tsc")
load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")

package(default_visibility = ["//visibility:public"])

ts_library(
    name = "config-types",
    srcs = ["package-license-info.ts", "base-types.ts"],
    node_modules = "@tools_npm//:node_modules",
    tsconfig = "tsconfig-types.json",
    deps = [
        "@tools_npm//@types/node",
    ],
)

ts_library(
    name = "licenses-map",
    srcs = glob(["*.ts"], exclude=["package-license-info.ts", "base-types.ts"]),
    node_modules = "@tools_npm//:node_modules",
    tsconfig = "tsconfig.json",
    deps = [
        "@tools_npm//@types/node",
        ":config-types"
    ],
)

#rollup_bundle - workaround for ttps://github.com/bazelbuild/rules_nodejs/issues/1522
rollup_bundle(
    name = "license-map-generator-bundle",
    #srcs = ["//tools/node_tools:licenses-map-generator"],
    entry_point = "license-map-generator.ts",
    format = "cjs",
    rollup_bin = "@tools_npm//rollup/bin:rollup",
    config_file = "rollup.config.js",
    deps = [
        ":licenses-map",
        ":config-types",
        "@tools_npm//rollup-plugin-node-resolve"
    ],
)

nodejs_binary(
    name = "license-map-generator-bin",
    entry_point = "license-map-generator-bundle.js",
)

# Workaround for bazel intellij plugin's bug. This rule is referenced by .bazelproject file
genrule(
    name = "tsconfig_editor",
    srcs = [":tsconfig.json"],
    outs = ["tsconfig_editor.json"],
    cmd = "cp $< $@",
)

genrule(
    name = "tsconfig-types_editor",
    srcs = [":tsconfig-types.json"],
    outs = ["tsconfig-types_editor.json"],
    cmd = "cp $< $@",
)
